{
  "openapi": "3.0.1",
  "info": {
    "title": "ASC.Files",
    "version": "v2"
  },
  "servers": [
    {
      "url": "http://localhost:8092",
      "description": "Local server"
    }
  ],
  "paths": {
    "/api/2.0/files/file/{fileid}/saveediting": {
      "put": {
        "tags": [
          "Files / Files"
        ],
        "summary": "Save file edits",
        "operationId": "saveEditingFromForm",
        "parameters": [
          {
            "name": "fileId",
            "in": "path",
            "description": "File ID",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32",
              "example": 9057
            }
          }
        ],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "properties": {
                  "FileExtension": {
                    "type": "string",
                    "description": "File extension",
                    "example": ".txt"
                  },
                  "DownloadUri": {
                    "type": "string",
                    "description": "URI to download a file",
                    "example": "some text"
                  },
                  "File": {
                    "type": "string",
                    "description": "Request file stream",
                    "format": "binary"
                  },
                  "Forcesave": {
                    "type": "boolean",
                    "description": "Specifies whether to force save a file or not",
                    "example": true
                  }
                }
              },
              "encoding": {
                "FileExtension": {
                  "style": "form"
                },
                "DownloadUri": {
                  "style": "form"
                },
                "File": {
                  "style": "form"
                },
                "Forcesave": {
                  "style": "form"
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Saved file parameters",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.ResponseDto.FileDto.System.Int32"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.ResponseDto.FileDto.System.Int32"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.ResponseDto.FileDto.System.Int32"
                }
              }
            }
          },
          "400": {
            "description": "No file id or folder id toFolderId determine provider"
          },
          "403": {
            "description": "You do not have enough permissions to edit the file"
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "security": [
          {
            "asc_auth_key": [
              "read",
              "write"
            ]
          }
        ],
        "description": "Saves edits to a file with the ID specified in the request."
      }
    },
    "/api/2.0/files/file/{fileid}/startedit": {
      "post": {
        "tags": [
          "Files / Files"
        ],
        "summary": "Start file editing",
        "operationId": "startEdit",
        "parameters": [
          {
            "name": "fileId",
            "in": "path",
            "description": "File ID",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32",
              "example": 9768
            }
          }
        ],
        "requestBody": {
          "description": "Parameters for starting file editing",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.RequestDto.StartEdit"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.RequestDto.StartEdit"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.RequestDto.StartEdit"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "File key for Document Service",
            "content": {
              "text/plain": {
                "schema": {}
              },
              "application/json": {
                "schema": {}
              },
              "text/json": {
                "schema": {}
              }
            }
          },
          "403": {
            "description": "You don't have enough permission to view the file"
          }
        },
        "description": "Informs about opening a file with the ID specified in the request for editing, locking it from being deleted or moved (this method is called by the mobile editors)."
      }
    },
    "/api/2.0/files/file/{fileid}/startfilling": {
      "put": {
        "tags": [
          "Files / Files"
        ],
        "summary": "Starts filling",
        "operationId": "startFilling",
        "parameters": [
          {
            "name": "fileId",
            "in": "path",
            "description": "File ID",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32",
              "example": 7184
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Ok"
          },
          "403": {
            "description": "You do not have enough permissions to edit the file"
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "security": [
          {
            "asc_auth_key": [
              "read",
              "write"
            ]
          }
        ],
        "description": "Starts filling a file with the ID specified in the request."
      }
    },
    "/api/2.0/files/file/{fileid}/trackeditfile": {
      "get": {
        "tags": [
          "Files / Files"
        ],
        "summary": "Track file editing",
        "operationId": "trackEditFile",
        "parameters": [
          {
            "name": "fileId",
            "in": "path",
            "description": "File ID",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32",
              "example": 1695
            }
          },
          {
            "name": "tabId",
            "in": "query",
            "description": "Tab ID",
            "schema": {
              "type": "string",
              "format": "uuid",
              "example": "75a5f745-f697-4418-b38d-0fe0d277e258"
            }
          },
          {
            "name": "docKeyForTrack",
            "in": "query",
            "description": "Document key for tracking",
            "schema": {
              "type": "string",
              "example": "some text"
            }
          },
          {
            "name": "isFinish",
            "in": "query",
            "description": "Specifies whether to finish file tracking or not",
            "schema": {
              "type": "boolean",
              "example": true
            }
          }
        ],
        "responses": {
          "200": {
            "description": "File changes",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/System.Collections.Generic.KeyValuePair.System.Boolean.System.String"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/System.Collections.Generic.KeyValuePair.System.Boolean.System.String"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/System.Collections.Generic.KeyValuePair.System.Boolean.System.String"
                }
              }
            }
          },
          "403": {
            "description": "You don't have enough permission to perform the operation"
          }
        },
        "description": "Tracks file changes when editing."
      }
    },
    "/api/2.0/files/file/{fileid}/openedit": {
      "get": {
        "tags": [
          "Files / Files"
        ],
        "summary": "Open a file",
        "operationId": "openEdit",
        "parameters": [
          {
            "name": "fileId",
            "in": "path",
            "description": "File ID",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32",
              "example": 6898
            }
          },
          {
            "name": "version",
            "in": "query",
            "description": "File version",
            "schema": {
              "type": "integer",
              "format": "int32",
              "example": 1234
            }
          },
          {
            "name": "view",
            "in": "query",
            "description": "Specifies if a document will be opened for viewing only or not",
            "schema": {
              "type": "boolean",
              "example": true
            }
          },
          {
            "name": "editorType",
            "in": "query",
            "description": "Editor type",
            "schema": {
              "$ref": "#/components/schemas/ASC.Web.Files.Services.DocumentService.EditorType"
            }
          },
          {
            "name": "edit",
            "in": "query",
            "description": "Edit",
            "schema": {
              "type": "boolean",
              "example": true
            }
          },
          {
            "name": "fill",
            "in": "query",
            "description": "Fill",
            "schema": {
              "type": "boolean",
              "example": true
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Configuration parameters",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.ResponseDto.ConfigurationDto.System.Int32"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.ResponseDto.ConfigurationDto.System.Int32"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.ResponseDto.ConfigurationDto.System.Int32"
                }
              }
            }
          },
          "403": {
            "description": "You don't have enough permission to view the file"
          }
        },
        "description": "Returns the initialization configuration of a file to open it in the editor."
      }
    },
    "/api/2.0/files/file/{fileid}/presigned": {
      "get": {
        "tags": [
          "Files / Files"
        ],
        "summary": "Get file download link asynchronously",
        "operationId": "getPresignedFileUri",
        "parameters": [
          {
            "name": "fileId",
            "in": "path",
            "description": "File ID",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32",
              "example": 633
            }
          }
        ],
        "responses": {
          "200": {
            "description": "File download link",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.Files.Core.Helpers.DocumentService_FileLink"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.Files.Core.Helpers.DocumentService_FileLink"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.Files.Core.Helpers.DocumentService_FileLink"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "security": [
          {
            "asc_auth_key": [
              "read",
              "write"
            ]
          }
        ],
        "description": "Returns a link to download a file with the ID specified in the request asynchronously."
      }
    },
    "/api/2.0/files/file/referencedata": {
      "post": {
        "tags": [
          "Files / Files"
        ],
        "summary": "Get reference data",
        "operationId": "getReferenceData",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.RequestDto.GetReferenceDataDto.System.Int32"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.RequestDto.GetReferenceDataDto.System.Int32"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.RequestDto.GetReferenceDataDto.System.Int32"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "File reference data",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.Web.Files.Services.DocumentService.FileReference"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.Web.Files.Services.DocumentService.FileReference"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.Web.Files.Services.DocumentService.FileReference"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "security": [
          {
            "asc_auth_key": [
              "read",
              "write"
            ]
          }
        ],
        "description": "Returns the reference data to uniquely identify a file in its system and check the availability of insering data into the destination spreadsheet by the external link."
      }
    },
    "/api/2.0/files/file/{fileid}/protectusers": {
      "get": {
        "tags": [
          "Files / Files"
        ],
        "summary": "Get users with the access to the protected file",
        "operationId": "protectUsers",
        "parameters": [
          {
            "name": "fileId",
            "in": "path",
            "description": "File ID",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32",
              "example": 6133
            }
          }
        ],
        "responses": {
          "200": {
            "description": "List of users with their access rights to the protected file",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ASC.Web.Files.Services.WCFService.MentionWrapper"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ASC.Web.Files.Services.WCFService.MentionWrapper"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ASC.Web.Files.Services.WCFService.MentionWrapper"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "security": [
          {
            "asc_auth_key": [
              "read",
              "write"
            ]
          }
        ],
        "description": "Returns a list of users with their access rights to the protected file with the ID specified in the request."
      }
    },
    "/api/2.0/files/file/{fileid}/log": {
      "get": {
        "tags": [
          "Files / Files"
        ],
        "summary": "Get file history",
        "operationId": "getHistory",
        "parameters": [
          {
            "name": "fileId",
            "in": "path",
            "description": "File ID",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32",
              "example": 5106
            }
          },
          {
            "name": "fromDate",
            "in": "query",
            "description": "Start date",
            "schema": {
              "$ref": "#/components/schemas/ASC.Api.Core.ApiDateTime"
            }
          },
          {
            "name": "toDate",
            "in": "query",
            "description": "End date",
            "schema": {
              "$ref": "#/components/schemas/ASC.Api.Core.ApiDateTime"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "List of actions performed on the file",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.ResponseDto.HistoryDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.ResponseDto.HistoryDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.ResponseDto.HistoryDto"
                }
              }
            }
          },
          "403": {
            "description": "You don't have enough permission to perform the operation"
          },
          "404": {
            "description": "The required file was not found"
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "security": [
          {
            "asc_auth_key": [
              "read",
              "write"
            ]
          }
        ],
        "description": "Get the list of actions performed on the file with the specified identifier"
      }
    },
    "/api/2.0/files/file/{fileid}/history": {
      "put": {
        "tags": [
          "Files / Files"
        ],
        "summary": "Change version history",
        "operationId": "changeHistory",
        "parameters": [
          {
            "name": "fileId",
            "in": "path",
            "description": "File Id",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32",
              "example": 1905
            }
          }
        ],
        "requestBody": {
          "description": "File",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.RequestDto.ChangeHistory"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.RequestDto.ChangeHistory"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.RequestDto.ChangeHistory"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Updated information about file versions",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.ResponseDto.FileDto.System.Int32"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.ResponseDto.FileDto.System.Int32"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.ResponseDto.FileDto.System.Int32"
                }
              }
            }
          },
          "403": {
            "description": "You do not have enough permissions to edit the file"
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "security": [
          {
            "asc_auth_key": [
              "read",
              "write"
            ]
          }
        ],
        "description": "Changes the version history of a file with the ID specified in the request."
      },
      "get": {
        "tags": [
          "Files / Files"
        ],
        "summary": "Get file versions",
        "operationId": "getFileVersionInfo",
        "parameters": [
          {
            "name": "fileId",
            "in": "path",
            "description": "File ID",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32",
              "example": 6953
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Information about file versions: folder ID, version, version group, content length, pure content length, file status, URL to view a file, web URL, file type, file extension, comment, encrypted or not, thumbnail URL, thumbnail status, locked or not, user ID who locked a file, denies file downloading or not, denies file sharing or not, file accessibility",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.ResponseDto.FileDto.System.Int32"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.ResponseDto.FileDto.System.Int32"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.ResponseDto.FileDto.System.Int32"
                }
              }
            }
          }
        },
        "description": "Returns the detailed information about all the available file versions with the ID specified in the request."
      }
    },
    "/api/2.0/files/file/{fileid}/presigneduri": {
      "get": {
        "tags": [
          "Files / Files"
        ],
        "summary": "Get file download link",
        "operationId": "getPresignedUri",
        "parameters": [
          {
            "name": "fileId",
            "in": "path",
            "description": "File ID",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32",
              "example": 9299
            }
          }
        ],
        "responses": {
          "200": {
            "description": "File download link",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string"
                }
              },
              "application/json": {
                "schema": {
                  "type": "string"
                }
              },
              "text/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "security": [
          {
            "asc_auth_key": [
              "read",
              "write"
            ]
          }
        ],
        "description": "Returns a link to download a file with the ID specified in the request."
      }
    },
    "/api/2.0/files/file/{fileid}/isformpdf": {
      "get": {
        "tags": [
          "Files / Files"
        ],
        "summary": "Check the PDF file",
        "operationId": "isFormPDF",
        "parameters": [
          {
            "name": "fileId",
            "in": "path",
            "description": "File ID",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32",
              "example": 5993
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Boolean value: true - the PDF file is form, false - the PDF file is not a form",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "boolean"
                }
              },
              "application/json": {
                "schema": {
                  "type": "boolean"
                }
              },
              "text/json": {
                "schema": {
                  "type": "boolean"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "security": [
          {
            "asc_auth_key": [
              "read",
              "write"
            ]
          }
        ],
        "description": "Checks if the PDF file is form or not."
      }
    },
    "/api/2.0/files/file/{fileid}/copyas": {
      "post": {
        "tags": [
          "Files / Files"
        ],
        "summary": "Copy a file",
        "operationId": "copyFileAs",
        "parameters": [
          {
            "name": "fileId",
            "in": "path",
            "description": "File id",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32",
              "example": 1218
            }
          }
        ],
        "requestBody": {
          "description": "File",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.RequestDto.CopyAs.System.Text.Json.JsonElement"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.RequestDto.CopyAs.System.Text.Json.JsonElement"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.RequestDto.CopyAs.System.Text.Json.JsonElement"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Copied file entry information",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.ResponseDto.FileEntryDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.ResponseDto.FileEntryDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.ResponseDto.FileEntryDto"
                }
              }
            }
          },
          "400": {
            "description": "No file id or folder id toFolderId determine provider"
          },
          "403": {
            "description": "You don't have enough permission to create"
          },
          "404": {
            "description": "File not found"
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "security": [
          {
            "asc_auth_key": [
              "read",
              "write"
            ]
          }
        ],
        "description": "Copies (and converts if possible) an existing file to the specified folder."
      }
    },
    "/api/2.0/files/{folderid}/file": {
      "post": {
        "tags": [
          "Files / Files"
        ],
        "summary": "Create a file",
        "description": "Creates a new file in the specified folder with the title specified in the request.\n\n **Note**: If a file extension is different from DOCX/XLSX/PPTX and refers to one of the known text, spreadsheet, or presentation formats, it will be changed to DOCX/XLSX/PPTX accordingly. If the file extension is not specified or is unknown, the DOCX extension will be added to the file title.",
        "operationId": "createFile",
        "parameters": [
          {
            "name": "folderId",
            "in": "path",
            "description": "Folder ID",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32",
              "example": 4454
            }
          }
        ],
        "requestBody": {
          "description": "File",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.RequestDto.CreateFile.System.Text.Json.JsonElement"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.RequestDto.CreateFile.System.Text.Json.JsonElement"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.RequestDto.CreateFile.System.Text.Json.JsonElement"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "New file information",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.ResponseDto.FileDto.System.Int32"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.ResponseDto.FileDto.System.Int32"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.ResponseDto.FileDto.System.Int32"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "security": [
          {
            "asc_auth_key": [
              "read",
              "write"
            ]
          }
        ]
      }
    },
    "/api/2.0/files/{folderid}/html": {
      "post": {
        "tags": [
          "Files / Files"
        ],
        "summary": "Create an HTML file",
        "operationId": "createHtmlFile",
        "parameters": [
          {
            "name": "folderId",
            "in": "path",
            "description": "Folder ID",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32",
              "example": 5413
            }
          }
        ],
        "requestBody": {
          "description": "File",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.RequestDto.CreateTextOrHtmlFile"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.RequestDto.CreateTextOrHtmlFile"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.RequestDto.CreateTextOrHtmlFile"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "New file information",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.ResponseDto.FileDto.System.Int32"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.ResponseDto.FileDto.System.Int32"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.ResponseDto.FileDto.System.Int32"
                }
              }
            }
          },
          "403": {
            "description": "You don't have enough permission to create"
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "security": [
          {
            "asc_auth_key": [
              "read",
              "write"
            ]
          }
        ],
        "description": "Creates an HTML (.html) file in the selected folder with the title and contents specified in the request."
      }
    },
    "/api/2.0/files/{folderid}/text": {
      "post": {
        "tags": [
          "Files / Files"
        ],
        "summary": "Create a txt file",
        "operationId": "createTextFile",
        "parameters": [
          {
            "name": "folderId",
            "in": "path",
            "description": "Folder ID",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32",
              "example": 330
            }
          }
        ],
        "requestBody": {
          "description": "File",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.RequestDto.CreateTextOrHtmlFile"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.RequestDto.CreateTextOrHtmlFile"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.RequestDto.CreateTextOrHtmlFile"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "New file information",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.ResponseDto.FileDto.System.Int32"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.ResponseDto.FileDto.System.Int32"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.ResponseDto.FileDto.System.Int32"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "security": [
          {
            "asc_auth_key": [
              "read",
              "write"
            ]
          }
        ],
        "description": "Creates a text (.txt) file in the selected folder with the title and contents specified in the request."
      }
    },
    "/api/2.0/files/file/{fileid}": {
      "delete": {
        "tags": [
          "Files / Files"
        ],
        "summary": "Delete a file",
        "operationId": "deleteFile",
        "parameters": [
          {
            "name": "fileId",
            "in": "path",
            "description": "File ID",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32",
              "example": 4013
            }
          }
        ],
        "requestBody": {
          "description": "File",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.RequestDto.Delete"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.RequestDto.Delete"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.RequestDto.Delete"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "List of file operations",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.ResponseDto.FileOperationDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.ResponseDto.FileOperationDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.ResponseDto.FileOperationDto"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "security": [
          {
            "asc_auth_key": [
              "read",
              "write"
            ]
          }
        ],
        "description": "Deletes a file with the ID specified in the request."
      },
      "get": {
        "tags": [
          "Files / Files"
        ],
        "summary": "Get file information",
        "operationId": "getFileInfo",
        "parameters": [
          {
            "name": "fileId",
            "in": "path",
            "description": "File ID",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32",
              "example": 483
            }
          },
          {
            "name": "version",
            "in": "query",
            "description": "File version",
            "schema": {
              "type": "integer",
              "format": "int32",
              "example": 1234
            }
          }
        ],
        "responses": {
          "200": {
            "description": "File information",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.ResponseDto.FileDto.System.Int32"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.ResponseDto.FileDto.System.Int32"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.ResponseDto.FileDto.System.Int32"
                }
              }
            }
          }
        },
        "description": "Returns the detailed information about a file with the ID specified in the request."
      },
      "put": {
        "tags": [
          "Files / Files"
        ],
        "summary": "Update a file",
        "operationId": "updateFile",
        "parameters": [
          {
            "name": "fileId",
            "in": "path",
            "description": "File ID",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32",
              "example": 2869
            }
          }
        ],
        "requestBody": {
          "description": "File",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.RequestDto.UpdateFile"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.RequestDto.UpdateFile"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.RequestDto.UpdateFile"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Updated file information",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.ResponseDto.FileDto.System.Int32"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.ResponseDto.FileDto.System.Int32"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.ResponseDto.FileDto.System.Int32"
                }
              }
            }
          },
          "403": {
            "description": "You do not have enough permissions to edit the file"
          }
        },
        "description": "Updates the information of the selected file with the parameters specified in the request."
      }
    },
    "/api/2.0/files/file/fillresult": {
      "get": {
        "tags": [
          "Files / Files"
        ],
        "summary": "Gets fill result",
        "operationId": "getFillResult",
        "parameters": [
          {
            "name": "fillingSessionId",
            "in": "query",
            "description": "Filling session id",
            "schema": {
              "type": "string",
              "example": "some text"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Ok",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.ResponseDto.FillingFormResultDto.System.Int32"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.ResponseDto.FillingFormResultDto.System.Int32"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.ResponseDto.FillingFormResultDto.System.Int32"
                }
              }
            }
          }
        },
        "description": "Gets fill result"
      }
    },
    "/api/2.0/files/file/{fileid}/edit/diff": {
      "get": {
        "tags": [
          "Files / Files"
        ],
        "summary": "Get changes URL",
        "operationId": "getEditDiffUrl",
        "parameters": [
          {
            "name": "fileId",
            "in": "path",
            "description": "File ID",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32",
              "example": 4583
            }
          },
          {
            "name": "version",
            "in": "query",
            "description": "File version",
            "schema": {
              "type": "integer",
              "format": "int32",
              "example": 1234
            }
          }
        ],
        "responses": {
          "200": {
            "description": "File version history data",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.Files.Core.EditHistoryDataDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.Files.Core.EditHistoryDataDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.Files.Core.EditHistoryDataDto"
                }
              }
            }
          }
        },
        "description": "Returns a URL to the changes of a file version specified in the request."
      }
    },
    "/api/2.0/files/file/{fileid}/edit/history": {
      "get": {
        "tags": [
          "Files / Files"
        ],
        "summary": "Get version history",
        "operationId": "getEditHistory",
        "parameters": [
          {
            "name": "fileId",
            "in": "path",
            "description": "File ID",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32",
              "example": 9806
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Version history data",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.ResponseDto.EditHistoryDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.ResponseDto.EditHistoryDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.ResponseDto.EditHistoryDto"
                }
              }
            }
          }
        },
        "description": "Returns the version history of a file with the ID specified in the request."
      }
    },
    "/api/2.0/files/file/{fileid}/lock": {
      "put": {
        "tags": [
          "Files / Files"
        ],
        "summary": "Lock a file",
        "operationId": "lockFile",
        "parameters": [
          {
            "name": "fileId",
            "in": "path",
            "description": "File ID",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32",
              "example": 2275
            }
          }
        ],
        "requestBody": {
          "description": "Parameters for locking a file",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.RequestDto.LockFileParameters"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.RequestDto.LockFileParameters"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.RequestDto.LockFileParameters"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Locked file information",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.ResponseDto.FileDto.System.Int32"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.ResponseDto.FileDto.System.Int32"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.ResponseDto.FileDto.System.Int32"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "security": [
          {
            "asc_auth_key": [
              "read",
              "write"
            ]
          }
        ],
        "description": "Locks a file with the ID specified in the request."
      }
    },
    "/api/2.0/files/file/{fileid}/restoreversion": {
      "get": {
        "tags": [
          "Files / Files"
        ],
        "summary": "Restore a file version",
        "operationId": "restoreVersion",
        "parameters": [
          {
            "name": "fileId",
            "in": "path",
            "description": "File ID",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32",
              "example": 7080
            }
          },
          {
            "name": "version",
            "in": "query",
            "description": "File version",
            "schema": {
              "type": "integer",
              "format": "int32",
              "example": 1234
            }
          },
          {
            "name": "url",
            "in": "query",
            "description": "File version URL",
            "schema": {
              "type": "string",
              "example": "some text"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Version history data: file ID, key, file version, version group, a user who updated a file, creation time, history changes in the string format, list of history changes, server version",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.ResponseDto.EditHistoryDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.ResponseDto.EditHistoryDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.ResponseDto.EditHistoryDto"
                }
              }
            }
          },
          "400": {
            "description": "No file id or folder id toFolderId determine provider"
          },
          "403": {
            "description": "You do not have enough permissions to edit the file"
          }
        },
        "description": "Restores a file version specified in the request."
      }
    },
    "/api/2.0/files/file/{id}/link": {
      "post": {
        "tags": [
          "Files / Files"
        ],
        "summary": "Create primary external link",
        "operationId": "createPrimaryExternalLink",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "File ID",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32",
              "example": 4804
            }
          }
        ],
        "requestBody": {
          "description": "External link parameters",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.RequestDto.FileLinkRequest"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.RequestDto.FileLinkRequest"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.RequestDto.FileLinkRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "File security information",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.ResponseDto.FileShareDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.ResponseDto.FileShareDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.ResponseDto.FileShareDto"
                }
              }
            }
          },
          "404": {
            "description": "Not Found"
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "security": [
          {
            "asc_auth_key": [
              "read",
              "write"
            ]
          }
        ],
        "description": "Creates a primary external link by the identifier specified in the request."
      },
      "get": {
        "tags": [
          "Files / Files"
        ],
        "summary": "Get primary external link",
        "operationId": "getFilePrimaryExternalLink",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "File ID",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32",
              "example": 6547
            }
          }
        ],
        "responses": {
          "200": {
            "description": "File security information",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.ResponseDto.FileShareDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.ResponseDto.FileShareDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.ResponseDto.FileShareDto"
                }
              }
            }
          },
          "404": {
            "description": "Not Found"
          }
        },
        "description": "Returns the primary external link by the identifier specified in the request."
      }
    },
    "/api/2.0/files/{fileid}/order": {
      "put": {
        "tags": [
          "Files / Files"
        ],
        "summary": "Sets order of a file with ID specified in the request",
        "operationId": "setOrder",
        "parameters": [
          {
            "name": "fileId",
            "in": "path",
            "description": "File ID",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32",
              "example": 1732
            }
          }
        ],
        "requestBody": {
          "description": "Order",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.RequestDto.OrderRequestDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.RequestDto.OrderRequestDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.RequestDto.OrderRequestDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Order is set"
          },
          "403": {
            "description": "You don't have enough permission to perform the operation"
          },
          "404": {
            "description": "Not Found"
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "security": [
          {
            "asc_auth_key": [
              "read",
              "write"
            ]
          }
        ],
        "description": "Sets order of a file with ID specified in the request"
      }
    },
    "/api/2.0/files/order": {
      "put": {
        "tags": [
          "Files / Files"
        ],
        "summary": "Sets order",
        "operationId": "setOrder",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.RequestDto.OrdersRequestDto.System.Int32"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.RequestDto.OrdersRequestDto.System.Int32"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.RequestDto.OrdersRequestDto.System.Int32"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Order is set"
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "security": [
          {
            "asc_auth_key": [
              "read",
              "write"
            ]
          }
        ],
        "description": "Sets order"
      }
    },
    "/api/2.0/files/file/{id}/links": {
      "get": {
        "tags": [
          "Files / Files"
        ],
        "summary": "Get file external links",
        "operationId": "getLinks",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "File ID",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32",
              "example": 2178
            }
          }
        ],
        "responses": {
          "200": {
            "description": "File security information",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.ResponseDto.FileShareDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.ResponseDto.FileShareDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.ResponseDto.FileShareDto"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "security": [
          {
            "asc_auth_key": [
              "read",
              "write"
            ]
          }
        ],
        "description": "Returns the external links of a file with the ID specified in the request."
      },
      "put": {
        "tags": [
          "Files / Files"
        ],
        "summary": "Set an external link",
        "operationId": "setExternalLink",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "File ID",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32",
              "example": 73
            }
          }
        ],
        "requestBody": {
          "description": "External link parameters",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.RequestDto.FileLinkRequest"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.RequestDto.FileLinkRequest"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.RequestDto.FileLinkRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "File security information",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.ResponseDto.FileShareDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.ResponseDto.FileShareDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.ResponseDto.FileShareDto"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "security": [
          {
            "asc_auth_key": [
              "read",
              "write"
            ]
          }
        ],
        "description": "Sets an external link to a file with the ID specified in the request."
      }
    },
    "/api/2.0/files/file/{id}/saveaspdf": {
      "post": {
        "tags": [
          "Files / Files"
        ],
        "summary": "Save as pdf",
        "operationId": "saveAsPdf",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "File ID",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32",
              "example": 7725
            }
          }
        ],
        "requestBody": {
          "description": "Parameters for saving file as pdf",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.RequestDto.SaveAsPdf.System.Int32"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.RequestDto.SaveAsPdf.System.Int32"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.RequestDto.SaveAsPdf.System.Int32"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "New file information",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.ResponseDto.FileDto.System.Int32"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.ResponseDto.FileDto.System.Int32"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.ResponseDto.FileDto.System.Int32"
                }
              }
            }
          },
          "404": {
            "description": "File not found"
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "security": [
          {
            "asc_auth_key": [
              "read",
              "write"
            ]
          }
        ],
        "description": "Saves a file with the identifier specified in the request as a PDF document"
      }
    },
    "/api/2.0/files/@my/file": {
      "post": {
        "tags": [
          "Files / Files"
        ],
        "summary": "Create a file in the \"My documents\" section",
        "description": "Creates a new file in the \"My documents\" section with the title specified in the request.\n\n **Note**: If a file extension is different from DOCX/XLSX/PPTX and refers to one of the known text, spreadsheet, or presentation formats, it will be changed to DOCX/XLSX/PPTX accordingly. If the file extension is not specified or is unknown, the DOCX extension will be added to the file title.",
        "operationId": "createFileMyDocuments",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.RequestDto.CreateFile.System.Text.Json.JsonElement"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.RequestDto.CreateFile.System.Text.Json.JsonElement"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.RequestDto.CreateFile.System.Text.Json.JsonElement"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "New file information",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.ResponseDto.FileDto.System.Int32"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.ResponseDto.FileDto.System.Int32"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.ResponseDto.FileDto.System.Int32"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "security": [
          {
            "asc_auth_key": [
              "read",
              "write"
            ]
          }
        ]
      }
    },
    "/api/2.0/files/@my/html": {
      "post": {
        "tags": [
          "Files / Files"
        ],
        "summary": "Create an HTML file in the \"My documents\" section",
        "operationId": "createHtmlFileInMy",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.RequestDto.CreateTextOrHtmlFile"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.RequestDto.CreateTextOrHtmlFile"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.RequestDto.CreateTextOrHtmlFile"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "New file information",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.ResponseDto.FileDto.System.Int32"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.ResponseDto.FileDto.System.Int32"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.ResponseDto.FileDto.System.Int32"
                }
              }
            }
          },
          "403": {
            "description": "You don't have enough permission to create"
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "security": [
          {
            "asc_auth_key": [
              "read",
              "write"
            ]
          }
        ],
        "description": "Creates an HTML (.html) file in the \"My documents\" section with the title and contents specified in the request."
      }
    },
    "/api/2.0/files/@my/text": {
      "post": {
        "tags": [
          "Files / Files"
        ],
        "summary": "Create a text file in the \"My documents\" section",
        "operationId": "createTextFileInMy",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.RequestDto.CreateTextOrHtmlFile"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.RequestDto.CreateTextOrHtmlFile"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.RequestDto.CreateTextOrHtmlFile"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "New file information",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.ResponseDto.FileDto.System.Int32"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.ResponseDto.FileDto.System.Int32"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.ResponseDto.FileDto.System.Int32"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "security": [
          {
            "asc_auth_key": [
              "read",
              "write"
            ]
          }
        ],
        "description": "Creates a text (.txt) file in the \"My documents\" section with the title and contents specified in the request."
      }
    },
    "/api/2.0/files/thumbnails": {
      "post": {
        "tags": [
          "Files / Files"
        ],
        "summary": "Create thumbnails",
        "operationId": "createThumbnails",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.RequestDto.BaseBatchRequestDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.RequestDto.BaseBatchRequestDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.RequestDto.BaseBatchRequestDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "List of file IDs",
            "content": {
              "text/plain": {
                "schema": {}
              },
              "application/json": {
                "schema": {}
              },
              "text/json": {
                "schema": {}
              }
            }
          }
        },
        "description": "Creates thumbnails for the files with the IDs specified in the request."
      }
    },
    "/api/2.0/files/masterform/{fileid}/checkfillformdraft": {
      "post": {
        "tags": [
          "Files / Files"
        ],
        "summary": "Check the form draft",
        "operationId": "checkFillFormDraft",
        "parameters": [
          {
            "name": "fileId",
            "in": "path",
            "description": "File ID",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32",
              "example": 9290
            }
          }
        ],
        "requestBody": {
          "description": "File",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.RequestDto.CheckFillFormDraft"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.RequestDto.CheckFillFormDraft"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.RequestDto.CheckFillFormDraft"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Link to the form",
            "content": {
              "text/plain": {
                "schema": {}
              },
              "application/json": {
                "schema": {}
              },
              "text/json": {
                "schema": {}
              }
            }
          },
          "403": {
            "description": "You don't have enough permission to view the file"
          }
        },
        "description": "Checks if the current file is a form draft which can be filled out."
      }
    },
    "/api/2.0/files/templates": {
      "post": {
        "tags": [
          "Files / Files"
        ],
        "summary": "Add template files",
        "operationId": "addTemplates",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.RequestDto.TemplatesRequestDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.RequestDto.TemplatesRequestDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.RequestDto.TemplatesRequestDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Boolean value: true if the operation is successful",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "boolean"
                }
              },
              "application/json": {
                "schema": {
                  "type": "boolean"
                }
              },
              "text/json": {
                "schema": {
                  "type": "boolean"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "security": [
          {
            "asc_auth_key": [
              "read",
              "write"
            ]
          }
        ],
        "description": "Adds files with the IDs specified in the request to the template list."
      },
      "delete": {
        "tags": [
          "Files / Files"
        ],
        "summary": "Delete template files",
        "operationId": "deleteTemplates",
        "requestBody": {
          "description": "File IDs",
          "content": {
            "application/json": {
              "schema": {
                "type": "array",
                "items": {
                  "type": "integer",
                  "format": "int32"
                },
                "description": "File IDs",
                "example": [
                  1234
                ]
              }
            },
            "text/json": {
              "schema": {
                "type": "array",
                "items": {
                  "type": "integer",
                  "format": "int32"
                },
                "description": "File IDs",
                "example": [
                  1234
                ]
              }
            },
            "application/*+json": {
              "schema": {
                "type": "array",
                "items": {
                  "type": "integer",
                  "format": "int32"
                },
                "description": "File IDs",
                "example": [
                  1234
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Boolean value: true if the operation is successful",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "boolean"
                }
              },
              "application/json": {
                "schema": {
                  "type": "boolean"
                }
              },
              "text/json": {
                "schema": {
                  "type": "boolean"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "security": [
          {
            "asc_auth_key": [
              "read",
              "write"
            ]
          }
        ],
        "description": "Removes files with the IDs specified in the request from the template list."
      }
    },
    "/api/2.0/files/recent": {
      "delete": {
        "tags": [
          "Files / Files"
        ],
        "summary": "Delete recent files",
        "operationId": "deleteRecent",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.RequestDto.BaseBatchRequestDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.RequestDto.BaseBatchRequestDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.RequestDto.BaseBatchRequestDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "No content",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.NoContentResult"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.NoContentResult"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.NoContentResult"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "security": [
          {
            "asc_auth_key": [
              "read",
              "write"
            ]
          }
        ],
        "description": "Removes files with the IDs specified in the request from the \"Recent\" section."
      }
    },
    "/api/2.0/files/file/{fileid}/edit_session": {
      "post": {
        "tags": [
          "Files / Files"
        ],
        "summary": "Create the editing session",
        "operationId": "createEditSession",
        "parameters": [
          {
            "name": "fileId",
            "in": "path",
            "description": "File ID",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32",
              "example": 1358
            }
          },
          {
            "name": "fileSize",
            "in": "query",
            "description": "File size in bytes",
            "schema": {
              "type": "integer",
              "format": "int64",
              "example": 1234
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Information about created session",
            "content": {
              "text/plain": {
                "schema": {}
              },
              "application/json": {
                "schema": {}
              },
              "text/json": {
                "schema": {}
              }
            }
          },
          "403": {
            "description": "You don't have enough permission to edit the file"
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "security": [
          {
            "asc_auth_key": [
              "read",
              "write"
            ]
          }
        ],
        "description": "Creates a session to edit the existing file with multiple chunks (needed for WebDAV)."
      }
    },
    "/api/2.0/files/folder/{folderid}/log": {
      "get": {
        "tags": [
          "Files / Folders"
        ],
        "summary": "Get folder history",
        "operationId": "getHistory",
        "parameters": [
          {
            "name": "folderId",
            "in": "path",
            "description": "File ID",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32",
              "example": 9325
            }
          },
          {
            "name": "fromDate",
            "in": "query",
            "description": "Start date",
            "schema": {
              "$ref": "#/components/schemas/ASC.Api.Core.ApiDateTime"
            }
          },
          {
            "name": "toDate",
            "in": "query",
            "description": "End date",
            "schema": {
              "$ref": "#/components/schemas/ASC.Api.Core.ApiDateTime"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "List of actions in the folder",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.ResponseDto.HistoryDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.ResponseDto.HistoryDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.ResponseDto.HistoryDto"
                }
              }
            }
          },
          "403": {
            "description": "You don't have enough permission to perform the operation"
          },
          "404": {
            "description": "The required folder was not found"
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "security": [
          {
            "asc_auth_key": [
              "read",
              "write"
            ]
          }
        ],
        "description": "Get the activity history of a folder with a specified identifier"
      }
    },
    "/api/2.0/files/folder/{folderid}": {
      "post": {
        "tags": [
          "Files / Folders"
        ],
        "summary": "Create a folder",
        "operationId": "createFolder",
        "parameters": [
          {
            "name": "folderId",
            "in": "path",
            "description": "Folder ID",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32",
              "example": 6917
            }
          }
        ],
        "requestBody": {
          "description": "Folder",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.RequestDto.CreateFolder"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.RequestDto.CreateFolder"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.RequestDto.CreateFolder"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "New folder parameters",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.ResponseDto.FolderDto.System.Int32"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.ResponseDto.FolderDto.System.Int32"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.ResponseDto.FolderDto.System.Int32"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "security": [
          {
            "asc_auth_key": [
              "read",
              "write"
            ]
          }
        ],
        "description": "Creates a new folder with the title specified in the request. The parent folder ID can be also specified."
      },
      "delete": {
        "tags": [
          "Files / Folders"
        ],
        "summary": "Delete a folder",
        "operationId": "deleteFolder",
        "parameters": [
          {
            "name": "folderId",
            "in": "path",
            "description": "Folder ID",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32",
              "example": 2180
            }
          }
        ],
        "requestBody": {
          "description": "Parameters for deleting a folder",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.RequestDto.DeleteFolder"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.RequestDto.DeleteFolder"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.RequestDto.DeleteFolder"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "List of file operations",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.ResponseDto.FileOperationDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.ResponseDto.FileOperationDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.ResponseDto.FileOperationDto"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "security": [
          {
            "asc_auth_key": [
              "read",
              "write"
            ]
          }
        ],
        "description": "Deletes a folder with the ID specified in the request."
      },
      "get": {
        "tags": [
          "Files / Folders"
        ],
        "summary": "Get folder information",
        "operationId": "getFolderInfo",
        "parameters": [
          {
            "name": "folderId",
            "in": "path",
            "description": "Folder ID",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32",
              "example": 7765
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Folder parameters",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.ResponseDto.FolderDto.System.Int32"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.ResponseDto.FolderDto.System.Int32"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.ResponseDto.FolderDto.System.Int32"
                }
              }
            }
          }
        },
        "description": "Returns the detailed information about a folder with the ID specified in the request."
      },
      "put": {
        "tags": [
          "Files / Folders"
        ],
        "summary": "Rename a folder",
        "operationId": "renameFolder",
        "parameters": [
          {
            "name": "folderId",
            "in": "path",
            "description": "Folder ID",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32",
              "example": 282
            }
          }
        ],
        "requestBody": {
          "description": "Folder",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.RequestDto.CreateFolder"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.RequestDto.CreateFolder"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.RequestDto.CreateFolder"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Folder parameters",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.ResponseDto.FolderDto.System.Int32"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.ResponseDto.FolderDto.System.Int32"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.ResponseDto.FolderDto.System.Int32"
                }
              }
            }
          },
          "403": {
            "description": "You don't have enough permission to rename the folder"
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "security": [
          {
            "asc_auth_key": [
              "read",
              "write"
            ]
          }
        ],
        "description": "Renames the selected folder with a new title specified in the request."
      }
    },
    "/api/2.0/files/folder/{folderid}/order": {
      "put": {
        "tags": [
          "Files / Folders"
        ],
        "summary": "Sets file order in the folder with ID specified in the request",
        "operationId": "setFileOrder",
        "parameters": [
          {
            "name": "folderId",
            "in": "path",
            "description": "Folder ID",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32",
              "example": 1533
            }
          }
        ],
        "requestBody": {
          "description": "Order",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.RequestDto.OrderRequestDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.RequestDto.OrderRequestDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.RequestDto.OrderRequestDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "security": [
          {
            "asc_auth_key": [
              "read",
              "write"
            ]
          }
        ],
        "description": "Sets file order in the folder with ID specified in the request"
      }
    },
    "/api/2.0/files/{folderid}": {
      "get": {
        "tags": [
          "Files / Folders"
        ],
        "summary": "Get a folder by ID",
        "operationId": "getFolder",
        "parameters": [
          {
            "name": "folderId",
            "in": "path",
            "description": "Folder ID",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32",
              "example": 2644
            }
          },
          {
            "name": "userIdOrGroupId",
            "in": "query",
            "description": "User or group ID",
            "schema": {
              "type": "string",
              "format": "uuid",
              "example": "75a5f745-f697-4418-b38d-0fe0d277e258"
            }
          },
          {
            "name": "filterType",
            "in": "query",
            "description": "Filter type",
            "schema": {
              "$ref": "#/components/schemas/ASC.Files.Core.FilterType"
            }
          },
          {
            "name": "roomId",
            "in": "query",
            "description": "Room ID",
            "schema": {
              "type": "integer",
              "format": "int32",
              "example": 3137
            }
          },
          {
            "name": "searchInContent",
            "in": "query",
            "description": "Specifies whether to search within the section contents or not",
            "schema": {
              "type": "boolean",
              "example": true
            }
          },
          {
            "name": "withsubfolders",
            "in": "query",
            "description": "Specifies whether to return sections with or without subfolders",
            "schema": {
              "type": "boolean",
              "example": true
            }
          },
          {
            "name": "excludeSubject",
            "in": "query",
            "description": "Specifies whether to exclude a subject or not",
            "schema": {
              "type": "boolean",
              "example": true
            }
          },
          {
            "name": "applyFilterOption",
            "in": "query",
            "description": "Specifies whether to return only files, only folders or all elements from the specified folder",
            "schema": {
              "$ref": "#/components/schemas/ASC.Files.Core.Core.ApplyFilterOption"
            }
          },
          {
            "name": "extension",
            "in": "query",
            "description": "Specifies whether to search for a specific file extension",
            "schema": {
              "type": "string",
              "example": ".txt"
            }
          },
          {
            "name": "searchArea",
            "in": "query",
            "description": "Search area",
            "schema": {
              "$ref": "#/components/schemas/ASC.Files.Core.VirtualRooms.SearchArea"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Folder contents",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.ResponseDto.FolderContentDto.System.Int32"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.ResponseDto.FolderContentDto.System.Int32"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.ResponseDto.FolderContentDto.System.Int32"
                }
              }
            }
          },
          "403": {
            "description": "You don't have enough permission to view the folder content"
          },
          "404": {
            "description": "The required folder was not found"
          }
        },
        "description": "Returns the detailed list of files and folders located in the folder with the ID specified in the request."
      }
    },
    "/api/2.0/files/folder/{folderid}/path": {
      "get": {
        "tags": [
          "Files / Folders"
        ],
        "summary": "Get the folder path",
        "operationId": "getFolderPath",
        "parameters": [
          {
            "name": "folderId",
            "in": "path",
            "description": "Folder ID",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32",
              "example": 2812
            }
          }
        ],
        "responses": {
          "200": {
            "description": "List of file entry information",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.ResponseDto.FileEntryDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.ResponseDto.FileEntryDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.ResponseDto.FileEntryDto"
                }
              }
            }
          },
          "403": {
            "description": "You don't have enough permission to view the folder content"
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "security": [
          {
            "asc_auth_key": [
              "read",
              "write"
            ]
          }
        ],
        "description": "Returns a path to the folder with the ID specified in the request."
      }
    },
    "/api/2.0/files/{folderid}/subfolders": {
      "get": {
        "tags": [
          "Files / Folders"
        ],
        "summary": "Get subfolders",
        "operationId": "getFolders",
        "parameters": [
          {
            "name": "folderId",
            "in": "path",
            "description": "Folder ID",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32",
              "example": 2845
            }
          }
        ],
        "responses": {
          "200": {
            "description": "List of file entry information",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.ResponseDto.FileEntryDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.ResponseDto.FileEntryDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.ResponseDto.FileEntryDto"
                }
              }
            }
          },
          "403": {
            "description": "You don't have enough permission to view the folder content"
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "security": [
          {
            "asc_auth_key": [
              "read",
              "write"
            ]
          }
        ],
        "description": "Returns a list of all the subfolders from a folder with the ID specified in the request."
      }
    },
    "/api/2.0/files/{folderid}/news": {
      "get": {
        "tags": [
          "Files / Folders"
        ],
        "summary": "Get new folder items",
        "operationId": "getNewItems",
        "parameters": [
          {
            "name": "folderId",
            "in": "path",
            "description": "Folder ID",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32",
              "example": 1491
            }
          }
        ],
        "responses": {
          "200": {
            "description": "List of file entry information",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.ResponseDto.FileEntryDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.ResponseDto.FileEntryDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.ResponseDto.FileEntryDto"
                }
              }
            }
          },
          "403": {
            "description": "You don't have enough permission to view the folder content"
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "security": [
          {
            "asc_auth_key": [
              "read",
              "write"
            ]
          }
        ],
        "description": "Returns a list of all the new items from a folder with the ID specified in the request."
      }
    },
    "/api/2.0/files/filesusedspace": {
      "get": {
        "tags": [
          "Files / Folders"
        ],
        "summary": "Get used space of files",
        "operationId": "getFilesUsedSpace",
        "responses": {
          "200": {
            "description": "Used space of files in the root folders",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.ResponseDto.FilesStatisticsResultDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.ResponseDto.FilesStatisticsResultDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.ResponseDto.FilesStatisticsResultDto"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "security": [
          {
            "asc_auth_key": [
              "read",
              "write"
            ]
          }
        ],
        "description": "Returns the used space of files in the root folders."
      }
    },
    "/api/2.0/files/folder/{id}/link": {
      "get": {
        "tags": [
          "Files / Folders"
        ],
        "summary": "Get primary external link",
        "operationId": "getFolderPrimaryExternalLink",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Folder Id",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32",
              "example": 1789
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Folder security information",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.ResponseDto.FileShareDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.ResponseDto.FileShareDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.ResponseDto.FileShareDto"
                }
              }
            }
          },
          "404": {
            "description": "Not Found"
          }
        },
        "description": "Returns the primary external link by the identifier specified in the request."
      }
    },
    "/api/2.0/files/@my": {
      "get": {
        "tags": [
          "Files / Folders"
        ],
        "summary": "Get the \"My documents\" section",
        "operationId": "getMyFolder",
        "parameters": [
          {
            "name": "userIdOrGroupId",
            "in": "query",
            "description": "User or group ID",
            "schema": {
              "type": "string",
              "format": "uuid",
              "example": "75a5f745-f697-4418-b38d-0fe0d277e258"
            }
          },
          {
            "name": "filterType",
            "in": "query",
            "description": "Filter type",
            "schema": {
              "$ref": "#/components/schemas/ASC.Files.Core.FilterType"
            }
          },
          {
            "name": "searchInContent",
            "in": "query",
            "description": "Specifies whether to return sections with or without subfolders",
            "schema": {
              "type": "boolean",
              "example": true
            }
          },
          {
            "name": "withsubfolders",
            "in": "query",
            "description": "Specifies whether to return sections with or without subfolders",
            "schema": {
              "type": "boolean",
              "example": true
            }
          },
          {
            "name": "applyFilterOption",
            "in": "query",
            "description": "Specifies whether to return only files, only folders or all elements from the specified folder",
            "schema": {
              "$ref": "#/components/schemas/ASC.Files.Core.Core.ApplyFilterOption"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The \"My documents\" section contents",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.ResponseDto.FolderContentDto.System.Int32"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.ResponseDto.FolderContentDto.System.Int32"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.ResponseDto.FolderContentDto.System.Int32"
                }
              }
            }
          },
          "403": {
            "description": "You don't have enough permission to view the folder content"
          },
          "404": {
            "description": "The required folder was not found"
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "security": [
          {
            "asc_auth_key": [
              "read",
              "write"
            ]
          }
        ],
        "description": "Returns the detailed list of files and folders located in the \"My documents\" section."
      }
    },
    "/api/2.0/files/@privacy": {
      "get": {
        "tags": [
          "Files / Folders"
        ],
        "summary": "Get the \"Private Room\" section",
        "operationId": "getPrivacyFolder",
        "parameters": [
          {
            "name": "userIdOrGroupId",
            "in": "query",
            "description": "User or group ID",
            "schema": {
              "type": "string",
              "format": "uuid",
              "example": "75a5f745-f697-4418-b38d-0fe0d277e258"
            }
          },
          {
            "name": "filterType",
            "in": "query",
            "description": "Filter type",
            "schema": {
              "$ref": "#/components/schemas/ASC.Files.Core.FilterType"
            }
          },
          {
            "name": "searchInContent",
            "in": "query",
            "description": "Specifies whether to return sections with or without subfolders",
            "schema": {
              "type": "boolean",
              "example": true
            }
          },
          {
            "name": "withsubfolders",
            "in": "query",
            "description": "Specifies whether to return sections with or without subfolders",
            "schema": {
              "type": "boolean",
              "example": true
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The \"Private Room\" section contents",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.ResponseDto.FolderContentDto.System.Int32"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.ResponseDto.FolderContentDto.System.Int32"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.ResponseDto.FolderContentDto.System.Int32"
                }
              }
            }
          },
          "403": {
            "description": "You don't have enough permission to view the folder content"
          },
          "404": {
            "description": "The required folder was not found"
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "security": [
          {
            "asc_auth_key": [
              "read",
              "write"
            ]
          }
        ],
        "description": "Returns the detailed list of files and folders located in the \"Private Room\" section."
      }
    },
    "/api/2.0/files/@root": {
      "get": {
        "tags": [
          "Files / Folders"
        ],
        "summary": "Get filtered sections",
        "operationId": "getRootFolders",
        "parameters": [
          {
            "name": "userIdOrGroupId",
            "in": "query",
            "description": "User or group ID",
            "schema": {
              "type": "string",
              "format": "uuid",
              "example": "75a5f745-f697-4418-b38d-0fe0d277e258"
            }
          },
          {
            "name": "filterType",
            "in": "query",
            "description": "Filter type",
            "schema": {
              "$ref": "#/components/schemas/ASC.Files.Core.FilterType"
            }
          },
          {
            "name": "withsubfolders",
            "in": "query",
            "description": "Specifies whether to return sections with or without subfolders",
            "schema": {
              "type": "boolean",
              "example": true
            }
          },
          {
            "name": "withoutTrash",
            "in": "query",
            "description": "Specifies whether to return the \"Trash\" section or not",
            "schema": {
              "type": "boolean",
              "example": true
            }
          },
          {
            "name": "searchInContent",
            "in": "query",
            "description": "Specifies whether to return sections with or without subfolders",
            "schema": {
              "type": "boolean",
              "example": true
            }
          }
        ],
        "responses": {
          "200": {
            "description": "List of section contents with the following parameters",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.ResponseDto.FolderContentDto.System.Int32"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.ResponseDto.FolderContentDto.System.Int32"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.ResponseDto.FolderContentDto.System.Int32"
                }
              }
            }
          },
          "403": {
            "description": "You don't have enough permission to view the folder content"
          },
          "404": {
            "description": "The required folder was not found"
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "security": [
          {
            "asc_auth_key": [
              "read",
              "write"
            ]
          }
        ],
        "description": "Returns all the sections matching the parameters specified in the request."
      }
    },
    "/api/2.0/files/@trash": {
      "get": {
        "tags": [
          "Files / Folders"
        ],
        "summary": "Get the \"Trash\" section",
        "operationId": "getTrashFolder",
        "parameters": [
          {
            "name": "userIdOrGroupId",
            "in": "query",
            "description": "User or group ID",
            "schema": {
              "type": "string",
              "format": "uuid",
              "example": "75a5f745-f697-4418-b38d-0fe0d277e258"
            }
          },
          {
            "name": "filterType",
            "in": "query",
            "description": "Filter type",
            "schema": {
              "$ref": "#/components/schemas/ASC.Files.Core.FilterType"
            }
          },
          {
            "name": "searchInContent",
            "in": "query",
            "description": "Specifies whether to return sections with or without subfolders",
            "schema": {
              "type": "boolean",
              "example": true
            }
          },
          {
            "name": "withsubfolders",
            "in": "query",
            "description": "Specifies whether to return sections with or without subfolders",
            "schema": {
              "type": "boolean",
              "example": true
            }
          },
          {
            "name": "applyFilterOption",
            "in": "query",
            "description": "Specifies whether to return only files, only folders or all elements from the specified folder",
            "schema": {
              "$ref": "#/components/schemas/ASC.Files.Core.Core.ApplyFilterOption"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The \"Trash\" section contents",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.ResponseDto.FolderContentDto.System.Int32"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.ResponseDto.FolderContentDto.System.Int32"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.ResponseDto.FolderContentDto.System.Int32"
                }
              }
            }
          },
          "403": {
            "description": "You don't have enough permission to view the folder content"
          },
          "404": {
            "description": "The required folder was not found"
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "security": [
          {
            "asc_auth_key": [
              "read",
              "write"
            ]
          }
        ],
        "description": "Returns the detailed list of files and folders located in the \"Trash\" section."
      }
    },
    "/api/2.0/files/{folderid}/upload/check": {
      "post": {
        "tags": [
          "Files / Folders"
        ],
        "summary": "Checks upload",
        "operationId": "checkUpload",
        "parameters": [
          {
            "name": "folderId",
            "in": "path",
            "description": "Folder ID",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32",
              "example": 8755
            }
          }
        ],
        "requestBody": {
          "description": "Parameters for checking files uploading",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.RequestDto.CheckUploadRequest"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.RequestDto.CheckUploadRequest"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.RequestDto.CheckUploadRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Inserted file",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "security": [
          {
            "asc_auth_key": [
              "read",
              "write"
            ]
          }
        ],
        "description": "Checks upload"
      }
    },
    "/api/2.0/files/{folderid}/insert": {
      "post": {
        "tags": [
          "Files / Folders"
        ],
        "summary": "Insert a file",
        "operationId": "insertFile",
        "parameters": [
          {
            "name": "folderId",
            "in": "path",
            "description": "Folder ID",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32",
              "example": 616
            }
          }
        ],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "properties": {
                  "InsertFile.File": {
                    "type": "string",
                    "description": "File",
                    "format": "binary"
                  },
                  "InsertFile.Title": {
                    "type": "string",
                    "description": "File name",
                    "example": "transmitting"
                  },
                  "InsertFile.CreateNewIfExist": {
                    "type": "boolean",
                    "description": "Specifies whether to create a new file if it already exists or not",
                    "example": true
                  },
                  "InsertFile.KeepConvertStatus": {
                    "type": "boolean",
                    "description": "Specifies whether to keep the file converting status or not",
                    "example": true
                  },
                  "InsertFile.Stream.CanRead": {
                    "type": "boolean",
                    "example": true
                  },
                  "InsertFile.Stream.CanWrite": {
                    "type": "boolean",
                    "example": true
                  },
                  "InsertFile.Stream.CanSeek": {
                    "type": "boolean",
                    "example": true
                  },
                  "InsertFile.Stream.CanTimeout": {
                    "type": "boolean",
                    "example": true
                  },
                  "InsertFile.Stream.Length": {
                    "type": "integer",
                    "format": "int64",
                    "example": 1234
                  },
                  "InsertFile.Stream.Position": {
                    "type": "integer",
                    "format": "int64",
                    "example": 1234
                  },
                  "InsertFile.Stream.ReadTimeout": {
                    "type": "integer",
                    "format": "int32",
                    "example": 1234
                  },
                  "InsertFile.Stream.WriteTimeout": {
                    "type": "integer",
                    "format": "int32",
                    "example": 1234
                  }
                }
              },
              "encoding": {
                "InsertFile.File": {
                  "style": "form"
                },
                "InsertFile.Title": {
                  "style": "form"
                },
                "InsertFile.CreateNewIfExist": {
                  "style": "form"
                },
                "InsertFile.KeepConvertStatus": {
                  "style": "form"
                },
                "InsertFile.Stream.CanRead": {
                  "style": "form"
                },
                "InsertFile.Stream.CanWrite": {
                  "style": "form"
                },
                "InsertFile.Stream.CanSeek": {
                  "style": "form"
                },
                "InsertFile.Stream.CanTimeout": {
                  "style": "form"
                },
                "InsertFile.Stream.Length": {
                  "style": "form"
                },
                "InsertFile.Stream.Position": {
                  "style": "form"
                },
                "InsertFile.Stream.ReadTimeout": {
                  "style": "form"
                },
                "InsertFile.Stream.WriteTimeout": {
                  "style": "form"
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Inserted file",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.ResponseDto.FileDto.System.Int32"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.ResponseDto.FileDto.System.Int32"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.ResponseDto.FileDto.System.Int32"
                }
              }
            }
          },
          "403": {
            "description": "You don't have enough permission to create"
          },
          "404": {
            "description": "Folder not found"
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "security": [
          {
            "asc_auth_key": [
              "read",
              "write"
            ]
          }
        ],
        "description": "Inserts a file specified in the request to the selected folder by single file uploading."
      }
    },
    "/api/2.0/files/{folderid}/upload": {
      "post": {
        "tags": [
          "Files / Folders"
        ],
        "summary": "Upload a file",
        "description": "Uploads a file specified in the request to the selected folder by single file uploading or standart multipart/form-data method.\n\n **Note**:  You can upload files in two different ways:\r\n <ol>\r\n<li>Using single file upload. You should set the Content-Type and Content-Disposition headers to specify a file name and content type, and send the file to the request body.</li>\r\n<li>Using standart multipart/form-data method.</li>\r\n</ol>",
        "operationId": "uploadFile",
        "parameters": [
          {
            "name": "folderId",
            "in": "path",
            "description": "Folder ID",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32",
              "example": 7887
            }
          }
        ],
        "requestBody": {
          "description": "Upload data",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.RequestDto.UploadRequestDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.RequestDto.UploadRequestDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.RequestDto.UploadRequestDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Inserted file",
            "content": {
              "text/plain": {
                "schema": {}
              },
              "application/json": {
                "schema": {}
              },
              "text/json": {
                "schema": {}
              }
            }
          },
          "403": {
            "description": "You don't have enough permission to create"
          },
          "404": {
            "description": "Folder not found"
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "security": [
          {
            "asc_auth_key": [
              "read",
              "write"
            ]
          }
        ]
      }
    },
    "/api/2.0/files/@my/insert": {
      "post": {
        "tags": [
          "Files / Folders"
        ],
        "summary": "Insert a file to the \"My documents\" section",
        "operationId": "insertFileToMyFromBody",
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "properties": {
                  "File": {
                    "type": "string",
                    "description": "File",
                    "format": "binary"
                  },
                  "Title": {
                    "type": "string",
                    "description": "File name",
                    "example": "refined_metal_bacon_ram_specialist"
                  },
                  "CreateNewIfExist": {
                    "type": "boolean",
                    "description": "Specifies whether to create a new file if it already exists or not",
                    "example": true
                  },
                  "KeepConvertStatus": {
                    "type": "boolean",
                    "description": "Specifies whether to keep the file converting status or not",
                    "example": true
                  },
                  "Stream.CanRead": {
                    "type": "boolean",
                    "example": true
                  },
                  "Stream.CanWrite": {
                    "type": "boolean",
                    "example": true
                  },
                  "Stream.CanSeek": {
                    "type": "boolean",
                    "example": true
                  },
                  "Stream.CanTimeout": {
                    "type": "boolean",
                    "example": true
                  },
                  "Stream.Length": {
                    "type": "integer",
                    "format": "int64",
                    "example": 1234
                  },
                  "Stream.Position": {
                    "type": "integer",
                    "format": "int64",
                    "example": 1234
                  },
                  "Stream.ReadTimeout": {
                    "type": "integer",
                    "format": "int32",
                    "example": 1234
                  },
                  "Stream.WriteTimeout": {
                    "type": "integer",
                    "format": "int32",
                    "example": 1234
                  }
                }
              },
              "encoding": {
                "File": {
                  "style": "form"
                },
                "Title": {
                  "style": "form"
                },
                "CreateNewIfExist": {
                  "style": "form"
                },
                "KeepConvertStatus": {
                  "style": "form"
                },
                "Stream.CanRead": {
                  "style": "form"
                },
                "Stream.CanWrite": {
                  "style": "form"
                },
                "Stream.CanSeek": {
                  "style": "form"
                },
                "Stream.CanTimeout": {
                  "style": "form"
                },
                "Stream.Length": {
                  "style": "form"
                },
                "Stream.Position": {
                  "style": "form"
                },
                "Stream.ReadTimeout": {
                  "style": "form"
                },
                "Stream.WriteTimeout": {
                  "style": "form"
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Inserted file",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.ResponseDto.FileDto.System.Int32"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.ResponseDto.FileDto.System.Int32"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.ResponseDto.FileDto.System.Int32"
                }
              }
            }
          },
          "403": {
            "description": "You don't have enough permission to create"
          },
          "404": {
            "description": "Folder not found"
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "security": [
          {
            "asc_auth_key": [
              "read",
              "write"
            ]
          }
        ],
        "description": "Inserts a file specified in the request to the \"My documents\" section by single file uploading."
      }
    },
    "/api/2.0/files/@my/upload": {
      "post": {
        "tags": [
          "Files / Folders"
        ],
        "summary": "Upload a file to the \"My documents\" section",
        "description": "Uploads a file specified in the request to the \"My documents\" section by single file uploading or standart multipart/form-data method.\n\n **Note**:  You can upload files in two different ways:\r\n <ol>\r\n<li>Using single file upload. You should set the Content-Type and Content-Disposition headers to specify a file name and content type, and send the file to the request body.</li>\r\n<li>Using standart multipart/form-data method.</li>\r\n</ol>",
        "operationId": "uploadFileToMy",
        "parameters": [
          {
            "name": "inDto",
            "in": "query",
            "description": "Request parameters for uploading a file",
            "schema": {
              "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.RequestDto.UploadRequestDto"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Uploaded file(s)",
            "content": {
              "text/plain": {
                "schema": {}
              },
              "application/json": {
                "schema": {}
              },
              "text/json": {
                "schema": {}
              }
            }
          },
          "403": {
            "description": "You don't have enough permission to create"
          },
          "404": {
            "description": "File not found"
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "security": [
          {
            "asc_auth_key": [
              "read",
              "write"
            ]
          }
        ]
      }
    },
    "/api/2.0/files/file/{fileid}/checkconversion": {
      "get": {
        "tags": [
          "Files / Operations"
        ],
        "summary": "Get conversion status",
        "operationId": "checkConversion",
        "parameters": [
          {
            "name": "fileId",
            "in": "path",
            "description": "File ID",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32",
              "example": 5580
            }
          },
          {
            "name": "start",
            "in": "query",
            "description": "Specifies if a conversion operation is started or not",
            "schema": {
              "type": "boolean",
              "example": true
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Conversion result",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.ResponseDto.ConversationResultDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.ResponseDto.ConversationResultDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.ResponseDto.ConversationResultDto"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "security": [
          {
            "asc_auth_key": [
              "read",
              "write"
            ]
          }
        ],
        "description": "Checks the conversion status of a file with the ID specified in the request."
      },
      "put": {
        "tags": [
          "Files / Operations"
        ],
        "summary": "Start file conversion",
        "operationId": "startConversion",
        "parameters": [
          {
            "name": "fileId",
            "in": "path",
            "description": "File ID",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32",
              "example": 2265
            }
          }
        ],
        "requestBody": {
          "description": "Check conversion",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.RequestDto.CheckConversionRequestDto.System.Int32"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.RequestDto.CheckConversionRequestDto.System.Int32"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.RequestDto.CheckConversionRequestDto.System.Int32"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Conversion result",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.ResponseDto.ConversationResultDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.ResponseDto.ConversationResultDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.ResponseDto.ConversationResultDto"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "security": [
          {
            "asc_auth_key": [
              "read",
              "write"
            ]
          }
        ],
        "description": "Starts a conversion operation of a file with the ID specified in the request."
      }
    },
    "/api/2.0/files/file/{fileid}/comment": {
      "put": {
        "tags": [
          "Files / Operations"
        ],
        "summary": "Update a comment",
        "operationId": "updateComment",
        "parameters": [
          {
            "name": "fileId",
            "in": "path",
            "description": "File ID",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32",
              "example": 7895
            }
          }
        ],
        "requestBody": {
          "description": "Parameters for updating a comment",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.RequestDto.UpdateComment"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.RequestDto.UpdateComment"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.RequestDto.UpdateComment"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Updated comment",
            "content": {
              "text/plain": {
                "schema": {}
              },
              "application/json": {
                "schema": {}
              },
              "text/json": {
                "schema": {}
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "security": [
          {
            "asc_auth_key": [
              "read",
              "write"
            ]
          }
        ],
        "description": "Updates a comment in a file with the ID specified in the request."
      }
    },
    "/api/2.0/files/fileops/bulkdownload": {
      "put": {
        "tags": [
          "Files / Operations"
        ],
        "summary": "Bulk download",
        "operationId": "bulkDownload",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.RequestDto.DownloadRequestDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.RequestDto.DownloadRequestDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.RequestDto.DownloadRequestDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "List of file operations",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.ResponseDto.FileOperationDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.ResponseDto.FileOperationDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.ResponseDto.FileOperationDto"
                }
              }
            }
          },
          "403": {
            "description": "You don't have enough permission to download"
          }
        },
        "description": "Starts the download process of files and folders with the IDs specified in the request."
      }
    },
    "/api/2.0/files/fileops/copy": {
      "put": {
        "tags": [
          "Files / Operations"
        ],
        "summary": "Copy to a folder",
        "operationId": "copyBatchItems",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.RequestDto.BatchRequestDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.RequestDto.BatchRequestDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.RequestDto.BatchRequestDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "List of file operations",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.ResponseDto.FileOperationDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.ResponseDto.FileOperationDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.ResponseDto.FileOperationDto"
                }
              }
            }
          },
          "403": {
            "description": "You don't have enough permission to copy"
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "security": [
          {
            "asc_auth_key": [
              "read",
              "write"
            ]
          }
        ],
        "description": "Copies all the selected files and folders to the folder with the ID specified in the request."
      }
    },
    "/api/2.0/files/fileops/delete": {
      "put": {
        "tags": [
          "Files / Operations"
        ],
        "summary": "Delete files and folders",
        "operationId": "deleteBatchItems",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.RequestDto.DeleteBatchRequestDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.RequestDto.DeleteBatchRequestDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.RequestDto.DeleteBatchRequestDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "List of file operations",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.ResponseDto.FileOperationDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.ResponseDto.FileOperationDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.ResponseDto.FileOperationDto"
                }
              }
            }
          },
          "403": {
            "description": "You don't have enough permission to delete"
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "security": [
          {
            "asc_auth_key": [
              "read",
              "write"
            ]
          }
        ],
        "description": "Deletes the files and folders with the IDs specified in the request."
      }
    },
    "/api/2.0/files/fileops/emptytrash": {
      "put": {
        "tags": [
          "Files / Operations"
        ],
        "summary": "Empty the \"Trash\" folder",
        "operationId": "emptyTrash",
        "responses": {
          "200": {
            "description": "List of file operations",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.ResponseDto.FileOperationDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.ResponseDto.FileOperationDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.ResponseDto.FileOperationDto"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "security": [
          {
            "asc_auth_key": [
              "read",
              "write"
            ]
          }
        ],
        "description": "Deletes all the files and folders from the \"Trash\" folder."
      }
    },
    "/api/2.0/files/fileops": {
      "get": {
        "tags": [
          "Files / Operations"
        ],
        "summary": "Get active operations",
        "operationId": "getOperationStatuses",
        "responses": {
          "200": {
            "description": "List of file operations",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.ResponseDto.FileOperationDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.ResponseDto.FileOperationDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.ResponseDto.FileOperationDto"
                }
              }
            }
          }
        },
        "description": "Returns a list of all the active operations."
      }
    },
    "/api/2.0/files/fileops/markasread": {
      "put": {
        "tags": [
          "Files / Operations"
        ],
        "summary": "Mark as read",
        "operationId": "markAsRead",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.RequestDto.BaseBatchRequestDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.RequestDto.BaseBatchRequestDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.RequestDto.BaseBatchRequestDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "List of file operations",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.ResponseDto.FileOperationDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.ResponseDto.FileOperationDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.ResponseDto.FileOperationDto"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "security": [
          {
            "asc_auth_key": [
              "read",
              "write"
            ]
          }
        ],
        "description": "Marks the files and folders with the IDs specified in the request as read."
      }
    },
    "/api/2.0/files/fileops/move": {
      "put": {
        "tags": [
          "Files / Operations"
        ],
        "summary": "Move to a folder",
        "operationId": "moveBatchItems",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.RequestDto.BatchRequestDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.RequestDto.BatchRequestDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.RequestDto.BatchRequestDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "List of file operations",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.ResponseDto.FileOperationDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.ResponseDto.FileOperationDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.ResponseDto.FileOperationDto"
                }
              }
            }
          },
          "403": {
            "description": "You don't have enough permission to move"
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "security": [
          {
            "asc_auth_key": [
              "read",
              "write"
            ]
          }
        ],
        "description": "Moves all the selected files and folders to the folder with the ID specified in the request."
      },
      "get": {
        "tags": [
          "Files / Operations"
        ],
        "summary": "Check files and folders for conflicts",
        "operationId": "moveOrCopyBatchCheck",
        "parameters": [
          {
            "name": "inDto",
            "in": "query",
            "description": "Request parameters for copying/moving files",
            "schema": {
              "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.RequestDto.BatchRequestDto"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "List of file entry information",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.ResponseDto.FileEntryDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.ResponseDto.FileEntryDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.ResponseDto.FileEntryDto"
                }
              }
            }
          },
          "403": {
            "description": "You don't have enough permission to create"
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "security": [
          {
            "asc_auth_key": [
              "read",
              "write"
            ]
          }
        ],
        "description": "Checks a batch of files and folders for conflicts when moving or copying them to the folder with the ID specified in the request."
      }
    },
    "/api/2.0/files/fileops/duplicate": {
      "put": {
        "tags": [
          "Files / Operations"
        ],
        "summary": "Duplicates all the selected files and folders",
        "operationId": "duplicateBatchItems",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.RequestDto.DuplicateRequestDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.RequestDto.DuplicateRequestDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.RequestDto.DuplicateRequestDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "List of file operations",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.ResponseDto.FileOperationDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.ResponseDto.FileOperationDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.ResponseDto.FileOperationDto"
                }
              }
            }
          },
          "403": {
            "description": "You don't have enough permission to duplicate"
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "security": [
          {
            "asc_auth_key": [
              "read",
              "write"
            ]
          }
        ],
        "description": "Duplicates all the selected files and folders"
      }
    },
    "/api/2.0/files/fileops/checkdestfolder": {
      "get": {
        "tags": [
          "Files / Operations"
        ],
        "summary": "Moves or copies",
        "operationId": "moveOrCopyDestFolderCheck",
        "parameters": [
          {
            "name": "inDto",
            "in": "query",
            "description": "Request parameters for copying/moving files",
            "schema": {
              "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.RequestDto.BatchRequestDto"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Result",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.ResponseDto.CheckDestFolderDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.ResponseDto.CheckDestFolderDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.ResponseDto.CheckDestFolderDto"
                }
              }
            }
          },
          "403": {
            "description": "You don't have enough permission to create"
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "security": [
          {
            "asc_auth_key": [
              "read",
              "write"
            ]
          }
        ],
        "description": "Moves or copies"
      }
    },
    "/api/2.0/files/fileops/terminate/{id}": {
      "put": {
        "tags": [
          "Files / Operations"
        ],
        "summary": "Finish active operations",
        "operationId": "terminateTasks",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Operation ID",
            "required": true,
            "schema": {
              "type": "string",
              "example": "9250"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "List of file operations",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.ResponseDto.FileOperationDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.ResponseDto.FileOperationDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.ResponseDto.FileOperationDto"
                }
              }
            }
          }
        },
        "description": "Finishes an operation with the ID specified in the request or all the active operations."
      }
    },
    "/api/2.0/files/{folderid}/upload/create_session": {
      "post": {
        "tags": [
          "Files / Operations"
        ],
        "summary": "Chunked upload",
        "description": "Creates a session to upload large files in multiple chunks to the folder with the ID specified in the request.\n\n **Note**: Each chunk can have different length but the length should be multiple of <b>512</b> and greater or equal to <b>10 mb</b>. Last chunk can have any size.\r\nAfter the initial response to the request with the <b>200 OK</b> status, you must get the <em>location</em> field value from the response. Send all your chunks to this location.\r\nEach chunk must be sent in the exact order the chunks appear in the file.\r\nAfter receiving each chunk, the server will respond with the current information about the upload session if no errors occurred.\r\nWhen the number of bytes uploaded is equal to the number of bytes you sent in the initial request, the server responds with the <b>201 Created</b> status and sends you information about the uploaded file.",
        "operationId": "createUploadSession",
        "parameters": [
          {
            "name": "folderId",
            "in": "path",
            "description": "Folder ID",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32",
              "example": 4708
            }
          }
        ],
        "requestBody": {
          "description": "Session",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.RequestDto.SessionRequest"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.RequestDto.SessionRequest"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.RequestDto.SessionRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Information about created session",
            "content": {
              "text/plain": {
                "schema": {}
              },
              "application/json": {
                "schema": {}
              },
              "text/json": {
                "schema": {}
              }
            }
          },
          "403": {
            "description": "You don't have enough permission to create"
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "security": [
          {
            "asc_auth_key": [
              "read",
              "write"
            ]
          }
        ]
      }
    },
    "/api/2.0/files/rooms/roomquota": {
      "put": {
        "tags": [
          "Files / Quota"
        ],
        "summary": "Change a room quota limit",
        "operationId": "updateRoomsQuota",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.RequestDto.UpdateRoomsQuotaRequestDto.System.Int32"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.RequestDto.UpdateRoomsQuotaRequestDto.System.Int32"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.RequestDto.UpdateRoomsQuotaRequestDto.System.Int32"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "List of rooms with the detailed information",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.ResponseDto.FolderDto.System.Int32"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.ResponseDto.FolderDto.System.Int32"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.ResponseDto.FolderDto.System.Int32"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "security": [
          {
            "asc_auth_key": [
              "read",
              "write"
            ]
          }
        ],
        "description": "Changes a quota limit for the rooms with the IDs specified in the request."
      }
    },
    "/api/2.0/files/rooms/resetquota": {
      "put": {
        "tags": [
          "Files / Quota"
        ],
        "summary": "Reset a room quota limit",
        "operationId": "resetRoomQuota",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.RequestDto.UpdateRoomsRoomIdsRequestDto.System.Int32"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.RequestDto.UpdateRoomsRoomIdsRequestDto.System.Int32"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.RequestDto.UpdateRoomsRoomIdsRequestDto.System.Int32"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "List of rooms with the detailed information",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.ResponseDto.FolderDto.System.Int32"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.ResponseDto.FolderDto.System.Int32"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.ResponseDto.FolderDto.System.Int32"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "security": [
          {
            "asc_auth_key": [
              "read",
              "write"
            ]
          }
        ],
        "description": "Resets a quota limit for the rooms with the IDs specified in the request."
      }
    },
    "/api/2.0/files/rooms": {
      "post": {
        "tags": [
          "Files / Rooms"
        ],
        "summary": "Create a room",
        "operationId": "createRoom",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.RequestDto.CreateRoomRequestDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.RequestDto.CreateRoomRequestDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.RequestDto.CreateRoomRequestDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Room information",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.ResponseDto.FolderDto.System.Int32"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.ResponseDto.FolderDto.System.Int32"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.ResponseDto.FolderDto.System.Int32"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "security": [
          {
            "asc_auth_key": [
              "read",
              "write"
            ]
          }
        ],
        "description": "Creates a room in the \"Rooms\" section."
      },
      "get": {
        "tags": [
          "Files / Rooms"
        ],
        "summary": "Get rooms",
        "operationId": "getRoomsFolder",
        "parameters": [
          {
            "name": "type",
            "in": "query",
            "description": "Filter by room type",
            "style": "deepObject",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.RequestDto.RoomType"
              }
            }
          },
          {
            "name": "subjectId",
            "in": "query",
            "description": "Filter by user ID",
            "schema": {
              "type": "string",
              "example": "some text"
            }
          },
          {
            "name": "searchInContent",
            "in": "query",
            "description": "Specifies whether to search within the section contents or not",
            "schema": {
              "type": "boolean",
              "example": true
            }
          },
          {
            "name": "withSubfolders",
            "in": "query",
            "description": "Specifies whether to return sections with or without subfolders",
            "schema": {
              "type": "boolean",
              "example": true
            }
          },
          {
            "name": "searchArea",
            "in": "query",
            "description": "Room search area (Active, Archive, Any)",
            "schema": {
              "$ref": "#/components/schemas/ASC.Files.Core.VirtualRooms.SearchArea"
            }
          },
          {
            "name": "withoutTags",
            "in": "query",
            "description": "Specifies whether to search by tags or not",
            "schema": {
              "type": "boolean",
              "example": true
            }
          },
          {
            "name": "tags",
            "in": "query",
            "description": "Tags in the serialized format",
            "schema": {
              "type": "string",
              "example": "some text"
            }
          },
          {
            "name": "excludeSubject",
            "in": "query",
            "description": "Specifies whether to exclude a subject or not",
            "schema": {
              "type": "boolean",
              "example": true
            }
          },
          {
            "name": "provider",
            "in": "query",
            "description": "Filter by provider name (None, Box, DropBox, GoogleDrive, kDrive, OneDrive, WebDav)",
            "schema": {
              "$ref": "#/components/schemas/ASC.Files.Core.ProviderFilter"
            }
          },
          {
            "name": "subjectFilter",
            "in": "query",
            "description": "Filter by subject (Owner - 1, Member - 1)",
            "schema": {
              "$ref": "#/components/schemas/ASC.Files.Core.Core.SubjectFilter"
            }
          },
          {
            "name": "quotaFilter",
            "in": "query",
            "description": "Filter by quota (Default - 1, Custom - 2)",
            "schema": {
              "$ref": "#/components/schemas/ASC.Core.QuotaFilter"
            }
          },
          {
            "name": "storageFilter",
            "in": "query",
            "description": "Filter by storage (Internal - 1, ThirdParty - 2)",
            "schema": {
              "$ref": "#/components/schemas/ASC.Files.Core.Core.StorageFilter"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Returns the contents of the \"Rooms\" section",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.ResponseDto.FolderContentDto.System.Int32"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.ResponseDto.FolderContentDto.System.Int32"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.ResponseDto.FolderContentDto.System.Int32"
                }
              }
            }
          },
          "403": {
            "description": "You don't have enough permission to view the room content"
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "security": [
          {
            "asc_auth_key": [
              "read",
              "write"
            ]
          }
        ],
        "description": "Returns the contents of the \"Rooms\" section by the parameters specified in the request."
      }
    },
    "/api/2.0/files/rooms/{id}": {
      "get": {
        "tags": [
          "Files / Rooms"
        ],
        "summary": "Get room information",
        "operationId": "getRoomInfo",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Room Id",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32",
              "example": 2843
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Room information",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.ResponseDto.FolderDto.System.Int32"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.ResponseDto.FolderDto.System.Int32"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.ResponseDto.FolderDto.System.Int32"
                }
              }
            }
          }
        },
        "description": "Returns the room information."
      },
      "put": {
        "tags": [
          "Files / Rooms"
        ],
        "summary": "Rename a room",
        "operationId": "updateRoom",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Room ID",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32",
              "example": 9479
            }
          }
        ],
        "requestBody": {
          "description": "Update room",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.RequestDto.UpdateRoomRequest"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.RequestDto.UpdateRoomRequest"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.RequestDto.UpdateRoomRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Updated room information",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.ResponseDto.FolderDto.System.Int32"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.ResponseDto.FolderDto.System.Int32"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.ResponseDto.FolderDto.System.Int32"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "security": [
          {
            "asc_auth_key": [
              "read",
              "write"
            ]
          }
        ],
        "description": "Renames a room with the ID specified in  the request."
      },
      "delete": {
        "tags": [
          "Files / Rooms"
        ],
        "summary": "Remove a room",
        "operationId": "deleteRoom",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Room ID",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32",
              "example": 6359
            }
          }
        ],
        "requestBody": {
          "description": "Parameters for deleting a room",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.RequestDto.DeleteRoomRequest"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.RequestDto.DeleteRoomRequest"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.RequestDto.DeleteRoomRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "File operation",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.ResponseDto.FileOperationDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.ResponseDto.FileOperationDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.ResponseDto.FileOperationDto"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "security": [
          {
            "asc_auth_key": [
              "read",
              "write"
            ]
          }
        ],
        "description": "Removes a room with the ID specified in the request."
      }
    },
    "/api/2.0/files/rooms/{id}/archive": {
      "put": {
        "tags": [
          "Files / Rooms"
        ],
        "summary": "Archive a room",
        "operationId": "archiveRoom",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Room ID",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32",
              "example": 497
            }
          }
        ],
        "requestBody": {
          "description": "Parameters for archiving a room",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.RequestDto.ArchiveRoomRequest"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.RequestDto.ArchiveRoomRequest"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.RequestDto.ArchiveRoomRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "File operation",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.ResponseDto.FileOperationDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.ResponseDto.FileOperationDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.ResponseDto.FileOperationDto"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "security": [
          {
            "asc_auth_key": [
              "read",
              "write"
            ]
          }
        ],
        "description": "Moves a room with the ID specified in the request to the \"Archive\" section."
      }
    },
    "/api/2.0/files/rooms/{id}/unarchive": {
      "put": {
        "tags": [
          "Files / Rooms"
        ],
        "summary": "Unarchive a room",
        "operationId": "unarchiveRoom",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Room ID",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32",
              "example": 9085
            }
          }
        ],
        "requestBody": {
          "description": "Parameters for archiving a room",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.RequestDto.ArchiveRoomRequest"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.RequestDto.ArchiveRoomRequest"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.RequestDto.ArchiveRoomRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "File operation",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.ResponseDto.FileOperationDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.ResponseDto.FileOperationDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.ResponseDto.FileOperationDto"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "security": [
          {
            "asc_auth_key": [
              "read",
              "write"
            ]
          }
        ],
        "description": "Moves a room with the ID specified in the request from the \"Archive\" section to the \"Rooms\" section."
      }
    },
    "/api/2.0/files/rooms/{id}/share": {
      "put": {
        "tags": [
          "Files / Rooms"
        ],
        "summary": "Set room access rights",
        "operationId": "setRoomSecurity",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Room ID",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32",
              "example": 1673
            }
          }
        ],
        "requestBody": {
          "description": "Room invitation",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.RequestDto.RoomInvitationRequest"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.RequestDto.RoomInvitationRequest"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.RequestDto.RoomInvitationRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Room security information",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.ResponseDto.RoomSecurityDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.ResponseDto.RoomSecurityDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.ResponseDto.RoomSecurityDto"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "security": [
          {
            "asc_auth_key": [
              "read",
              "write"
            ]
          }
        ],
        "description": "Sets the access rights to a room with the ID specified in the request."
      },
      "get": {
        "tags": [
          "Files / Rooms"
        ],
        "summary": "Get room access rights",
        "operationId": "getRoomSecurityInfo",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Room ID",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32",
              "example": 8271
            }
          },
          {
            "name": "filterType",
            "in": "query",
            "description": "Share filter type",
            "schema": {
              "$ref": "#/components/schemas/ASC.Files.Core.Security.ShareFilterType"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Security information of room files",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.ResponseDto.FileShareDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.ResponseDto.FileShareDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.ResponseDto.FileShareDto"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "security": [
          {
            "asc_auth_key": [
              "read",
              "write"
            ]
          }
        ],
        "description": "Returns the access rights of a room with the ID specified in the request."
      }
    },
    "/api/2.0/files/rooms/{id}/links": {
      "put": {
        "tags": [
          "Files / Rooms"
        ],
        "summary": "Set an external or invitation link",
        "operationId": "setLink",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Room ID",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32",
              "example": 5997
            }
          }
        ],
        "requestBody": {
          "description": "Room link",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.RequestDto.RoomLinkRequest"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.RequestDto.RoomLinkRequest"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.RequestDto.RoomLinkRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Room security information",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.ResponseDto.FileShareDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.ResponseDto.FileShareDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.ResponseDto.FileShareDto"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "security": [
          {
            "asc_auth_key": [
              "read",
              "write"
            ]
          }
        ],
        "description": "Sets an external or invitation link with the ID specified in the request."
      },
      "get": {
        "tags": [
          "Files / Rooms"
        ],
        "summary": "Get room links",
        "operationId": "getRoomLinks",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Room ID",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32",
              "example": 9709
            }
          },
          {
            "name": "type",
            "in": "query",
            "description": "Link type",
            "schema": {
              "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.ResponseDto.LinkType"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Room security information",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.ResponseDto.FileShareDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.ResponseDto.FileShareDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.ResponseDto.FileShareDto"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "security": [
          {
            "asc_auth_key": [
              "read",
              "write"
            ]
          }
        ],
        "description": "Returns the links of a room with the ID specified in the request."
      }
    },
    "/api/2.0/files/rooms/{id}/link": {
      "get": {
        "tags": [
          "Files / Rooms"
        ],
        "summary": "Get primary external link",
        "operationId": "getRoomsPrimaryExternalLink",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Room Id",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32",
              "example": 2010
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Room security information",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.ResponseDto.FileShareDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.ResponseDto.FileShareDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.ResponseDto.FileShareDto"
                }
              }
            }
          },
          "404": {
            "description": "Not Found"
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "security": [
          {
            "asc_auth_key": [
              "read",
              "write"
            ]
          }
        ],
        "description": "Returns the primary external link of a room with the ID specified in the request."
      }
    },
    "/api/2.0/files/rooms/{id}/tags": {
      "put": {
        "tags": [
          "Files / Rooms"
        ],
        "summary": "Add room tags",
        "operationId": "addTags",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Room Id",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32",
              "example": 3037
            }
          }
        ],
        "requestBody": {
          "description": "Batch tags",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.RequestDto.BatchTagsRequestDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.RequestDto.BatchTagsRequestDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.RequestDto.BatchTagsRequestDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Room information",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.ResponseDto.FolderDto.System.Int32"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.ResponseDto.FolderDto.System.Int32"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.ResponseDto.FolderDto.System.Int32"
                }
              }
            }
          },
          "403": {
            "description": "You don't have permission to edit the room"
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "security": [
          {
            "asc_auth_key": [
              "read",
              "write"
            ]
          }
        ],
        "description": "Adds the tags to a room with the ID specified in the request."
      },
      "delete": {
        "tags": [
          "Files / Rooms"
        ],
        "summary": "Remove room tags",
        "operationId": "deleteTags",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Room Id",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32",
              "example": 7758
            }
          }
        ],
        "requestBody": {
          "description": "Batch tags",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.RequestDto.BatchTagsRequestDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.RequestDto.BatchTagsRequestDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.RequestDto.BatchTagsRequestDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Room information",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.ResponseDto.FolderDto.System.Int32"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.ResponseDto.FolderDto.System.Int32"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.ResponseDto.FolderDto.System.Int32"
                }
              }
            }
          },
          "403": {
            "description": "You don't have permission to edit the room"
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "security": [
          {
            "asc_auth_key": [
              "read",
              "write"
            ]
          }
        ],
        "description": "Removes the tags from a room with the ID specified in the request."
      }
    },
    "/api/2.0/files/rooms/{id}/logo": {
      "post": {
        "tags": [
          "Files / Rooms"
        ],
        "summary": "Create a room logo",
        "operationId": "createRoomLogo",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Room Id",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32",
              "example": 3792
            }
          }
        ],
        "requestBody": {
          "description": "Logo",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.RequestDto.LogoRequest"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.RequestDto.LogoRequest"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.RequestDto.LogoRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Room information",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.ResponseDto.FolderDto.System.Int32"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.ResponseDto.FolderDto.System.Int32"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.ResponseDto.FolderDto.System.Int32"
                }
              }
            }
          },
          "404": {
            "description": "The required room was not found"
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "security": [
          {
            "asc_auth_key": [
              "read",
              "write"
            ]
          }
        ],
        "description": "Creates a logo for a room with the ID specified in the request."
      },
      "delete": {
        "tags": [
          "Files / Rooms"
        ],
        "summary": "Remove a room logo",
        "operationId": "deleteRoomLogo",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Room Id",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32",
              "example": 3089
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Room information",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.ResponseDto.FolderDto.System.Int32"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.ResponseDto.FolderDto.System.Int32"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.ResponseDto.FolderDto.System.Int32"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "security": [
          {
            "asc_auth_key": [
              "read",
              "write"
            ]
          }
        ],
        "description": "Removes a logo from a room with the ID specified in the request."
      }
    },
    "/api/2.0/files/rooms/{id}/cover": {
      "post": {
        "tags": [
          "Files / Rooms"
        ],
        "summary": "Changes room cover",
        "operationId": "changeRoomCover",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Room ID",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32",
              "example": 8557
            }
          }
        ],
        "requestBody": {
          "description": "Parameters to change the room cover",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.RequestDto.CoverRequestDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.RequestDto.CoverRequestDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.RequestDto.CoverRequestDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Room cover",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.ResponseDto.FolderDto.System.Int32"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.ResponseDto.FolderDto.System.Int32"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.ResponseDto.FolderDto.System.Int32"
                }
              }
            }
          },
          "403": {
            "description": "You don't have permission to change cover"
          },
          "404": {
            "description": "The required room was not found"
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "security": [
          {
            "asc_auth_key": [
              "read",
              "write"
            ]
          }
        ],
        "description": "Changes room cover"
      }
    },
    "/api/2.0/files/rooms/covers": {
      "get": {
        "tags": [
          "Files / Rooms"
        ],
        "summary": "Gets covers",
        "operationId": "getCovers",
        "responses": {
          "200": {
            "description": "Gets room cover",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.ResponseDto.CoversResultDto"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.ResponseDto.CoversResultDto"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.ResponseDto.CoversResultDto"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "security": [
          {
            "asc_auth_key": [
              "read",
              "write"
            ]
          }
        ],
        "description": "Gets covers"
      }
    },
    "/api/2.0/files/rooms/{id}/pin": {
      "put": {
        "tags": [
          "Files / Rooms"
        ],
        "summary": "Pin a room",
        "operationId": "pinRoom",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Room Id",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32",
              "example": 3650
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Room information",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.ResponseDto.FolderDto.System.Int32"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.ResponseDto.FolderDto.System.Int32"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.ResponseDto.FolderDto.System.Int32"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "security": [
          {
            "asc_auth_key": [
              "read",
              "write"
            ]
          }
        ],
        "description": "Pins a room with the ID specified in the request to the top of the list."
      }
    },
    "/api/2.0/files/rooms/{id}/unpin": {
      "put": {
        "tags": [
          "Files / Rooms"
        ],
        "summary": "Unpin a room",
        "operationId": "unpinRoom",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Room Id",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32",
              "example": 9774
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Room information",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.ResponseDto.FolderDto.System.Int32"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.ResponseDto.FolderDto.System.Int32"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.ResponseDto.FolderDto.System.Int32"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "security": [
          {
            "asc_auth_key": [
              "read",
              "write"
            ]
          }
        ],
        "description": "Unpins a room with the ID specified in the request from the top of the list."
      }
    },
    "/api/2.0/files/rooms/{id}/resend": {
      "post": {
        "tags": [
          "Files / Rooms"
        ],
        "summary": "Resend room invitations",
        "operationId": "resendEmailInvitations",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Room Id",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32",
              "example": 6319
            }
          }
        ],
        "requestBody": {
          "description": "User invitation",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.RequestDto.UserInvitation"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.RequestDto.UserInvitation"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.RequestDto.UserInvitation"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "security": [
          {
            "asc_auth_key": [
              "read",
              "write"
            ]
          }
        ],
        "description": "Resends the email invitations to a room with the ID specified in the request to the selected users."
      }
    },
    "/api/2.0/files/rooms/{id}/reorder": {
      "put": {
        "tags": [
          "Files / Rooms"
        ],
        "summary": "Reorders to a room with ID specified in the request",
        "operationId": "reorder",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Room Id",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32",
              "example": 3963
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Room information",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.ResponseDto.FolderDto.System.Int32"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.ResponseDto.FolderDto.System.Int32"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.ResponseDto.FolderDto.System.Int32"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "security": [
          {
            "asc_auth_key": [
              "read",
              "write"
            ]
          }
        ],
        "description": "Reorders to a room with ID specified in the request"
      }
    },
    "/api/2.0/files/rooms/{id}/news": {
      "get": {
        "tags": [
          "Files / Rooms"
        ],
        "summary": "Get new room items",
        "operationId": "getNewItems",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Room Id",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32",
              "example": 1745
            }
          }
        ],
        "responses": {
          "200": {
            "description": "List of file entry information",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.ResponseDto.NewItemsDto.ASC.Files.Core.ApiModels.ResponseDto.FileEntryDto"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.ResponseDto.NewItemsDto.ASC.Files.Core.ApiModels.ResponseDto.FileEntryDto"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.ResponseDto.NewItemsDto.ASC.Files.Core.ApiModels.ResponseDto.FileEntryDto"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "security": [
          {
            "asc_auth_key": [
              "read",
              "write"
            ]
          }
        ],
        "description": "Returns a list of all the new items from a room with the ID specified in the request."
      }
    },
    "/api/2.0/files/rooms/thirdparty/{id}": {
      "post": {
        "tags": [
          "Files / Rooms"
        ],
        "summary": "Create a third-party room",
        "operationId": "createRoomThirdParty",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID of the folder in the third-party storage in which the contents of the room will be stored",
            "required": true,
            "schema": {
              "type": "string",
              "example": "6501"
            }
          }
        ],
        "requestBody": {
          "description": "ThirdParty room",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.RequestDto.CreateThirdPartyRoom"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.RequestDto.CreateThirdPartyRoom"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.RequestDto.CreateThirdPartyRoom"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Room information",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.ResponseDto.FolderDto.System.String"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.ResponseDto.FolderDto.System.String"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.ResponseDto.FolderDto.System.String"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "security": [
          {
            "asc_auth_key": [
              "read",
              "write"
            ]
          }
        ],
        "description": "Creates a room in the \"Rooms\" section stored in a third-party storage."
      }
    },
    "/api/2.0/files/tags": {
      "post": {
        "tags": [
          "Files / Rooms"
        ],
        "summary": "Create a tag",
        "operationId": "createTag",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.RequestDto.CreateTagRequestDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.RequestDto.CreateTagRequestDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.RequestDto.CreateTagRequestDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "New tag name",
            "content": {
              "text/plain": {
                "schema": {}
              },
              "application/json": {
                "schema": {}
              },
              "text/json": {
                "schema": {}
              }
            }
          },
          "403": {
            "description": "You don't have enough permission to perform the operation"
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "security": [
          {
            "asc_auth_key": [
              "read",
              "write"
            ]
          }
        ],
        "description": "Creates a custom tag with the parameters specified in the request."
      },
      "get": {
        "tags": [
          "Files / Rooms"
        ],
        "summary": "Get tags",
        "operationId": "getTagsInfo",
        "responses": {
          "200": {
            "description": "List of tag names",
            "content": {
              "text/plain": {
                "schema": {}
              },
              "application/json": {
                "schema": {}
              },
              "text/json": {
                "schema": {}
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "security": [
          {
            "asc_auth_key": [
              "read",
              "write"
            ]
          }
        ],
        "description": "Returns a list of custom tags."
      },
      "delete": {
        "tags": [
          "Files / Rooms"
        ],
        "summary": "Delete tags",
        "operationId": "deleteCustomTags",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.RequestDto.BatchTagsRequestDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.RequestDto.BatchTagsRequestDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.RequestDto.BatchTagsRequestDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Ok"
          },
          "403": {
            "description": "You don't have enough permission to perform the operation"
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "security": [
          {
            "asc_auth_key": [
              "read",
              "write"
            ]
          }
        ],
        "description": "Deletes a bunch of custom tags specified in the request."
      }
    },
    "/api/2.0/files/logos": {
      "post": {
        "tags": [
          "Files / Rooms"
        ],
        "summary": "Upload an image for room logo",
        "operationId": "uploadRoomLogo",
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "properties": {
                  "FormCollection": {
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/System.Collections.Generic.KeyValuePair.System.String.Microsoft.Extensions.Primitives.StringValues"
                    },
                    "description": "Image data"
                  }
                }
              },
              "encoding": {
                "FormCollection": {
                  "style": "form"
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Upload result",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.ResponseDto.UploadResultDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.ResponseDto.UploadResultDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.ResponseDto.UploadResultDto"
                }
              }
            }
          },
          "403": {
            "description": "No permissions to perform this action"
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "security": [
          {
            "asc_auth_key": [
              "read",
              "write"
            ]
          }
        ],
        "description": "Uploads a temporary image to create a room logo."
      }
    },
    "/api/2.0/files/rooms/{id}/indexexport": {
      "post": {
        "tags": [
          "Files / Rooms"
        ],
        "summary": "Starts room index export",
        "operationId": "startRoomIndexExport",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Room Id",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32",
              "example": 4754
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Ok",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.ResponseDto.DocumentBuilderTaskDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.ResponseDto.DocumentBuilderTaskDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.ResponseDto.DocumentBuilderTaskDto"
                }
              }
            }
          },
          "501": {
            "description": "Folder indexing is turned off"
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "security": [
          {
            "asc_auth_key": [
              "read",
              "write"
            ]
          }
        ],
        "description": "Starts room index export"
      }
    },
    "/api/2.0/files/rooms/indexexport": {
      "get": {
        "tags": [
          "Files / Rooms"
        ],
        "summary": "Gets room index export",
        "operationId": "getRoomIndexExport",
        "responses": {
          "200": {
            "description": "Ok",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.ResponseDto.DocumentBuilderTaskDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.ResponseDto.DocumentBuilderTaskDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.ResponseDto.DocumentBuilderTaskDto"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "security": [
          {
            "asc_auth_key": [
              "read",
              "write"
            ]
          }
        ],
        "description": "Gets room index export"
      },
      "delete": {
        "tags": [
          "Files / Rooms"
        ],
        "summary": "Terminates room index export",
        "operationId": "terminateRoomIndexExport",
        "responses": {
          "200": {
            "description": "Ok"
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "security": [
          {
            "asc_auth_key": [
              "read",
              "write"
            ]
          }
        ],
        "description": "Terminates room index export"
      }
    },
    "/api/2.0/files/rooms/news": {
      "get": {
        "tags": [
          "Files / Rooms"
        ],
        "summary": "Gets room new items",
        "operationId": "getRoomsNewItems",
        "responses": {
          "200": {
            "description": "List of new items",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.ResponseDto.NewItemsDto.ASC.Files.Core.ApiModels.ResponseDto.RoomNewItemsDto"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.ResponseDto.NewItemsDto.ASC.Files.Core.ApiModels.ResponseDto.RoomNewItemsDto"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.ResponseDto.NewItemsDto.ASC.Files.Core.ApiModels.ResponseDto.RoomNewItemsDto"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "security": [
          {
            "asc_auth_key": [
              "read",
              "write"
            ]
          }
        ],
        "description": "Gets room new items"
      }
    },
    "/api/2.0/files/docservice": {
      "put": {
        "tags": [
          "Files / Settings"
        ],
        "summary": "Check the document service URL",
        "operationId": "checkDocServiceUrl",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.RequestDto.CheckDocServiceUrlRequestDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.RequestDto.CheckDocServiceUrlRequestDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.RequestDto.CheckDocServiceUrlRequestDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Document service information: the Document Server address, the Document Server address in the local private network, the Community Server address",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.ResponseDto.DocServiceUrlDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.ResponseDto.DocServiceUrlDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.ResponseDto.DocServiceUrlDto"
                }
              }
            }
          },
          "400": {
            "description": "Invalid input urls/Mixed Active Content is not allowed. HTTPS address for Document Server is required"
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "security": [
          {
            "asc_auth_key": [
              "read",
              "write"
            ]
          }
        ],
        "description": "Checks the document service location."
      }
    },
    "/api/2.0/files/thirdparty": {
      "put": {
        "tags": [
          "Files / Settings"
        ],
        "summary": "Change the third-party settings access",
        "operationId": "changeAccessToThirdparty",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.RequestDto.SettingsRequestDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.RequestDto.SettingsRequestDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.RequestDto.SettingsRequestDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Boolean value: true if the operation is successful",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "boolean"
                }
              },
              "application/json": {
                "schema": {
                  "type": "boolean"
                }
              },
              "text/json": {
                "schema": {
                  "type": "boolean"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "security": [
          {
            "asc_auth_key": [
              "read",
              "write"
            ]
          }
        ],
        "description": "Changes the access to the third-party settings."
      },
      "get": {
        "tags": [
          "Files / Third-party integration"
        ],
        "summary": "Get third-party accounts",
        "operationId": "getThirdPartyAccounts",
        "responses": {
          "200": {
            "description": "List of connected providers information",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.Web.Files.Services.WCFService.ThirdPartyParams"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.Web.Files.Services.WCFService.ThirdPartyParams"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.Web.Files.Services.WCFService.ThirdPartyParams"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "security": [
          {
            "asc_auth_key": [
              "read",
              "write"
            ]
          }
        ],
        "description": "Returns a list of all the connected third-party accounts."
      },
      "post": {
        "tags": [
          "Files / Third-party integration"
        ],
        "summary": "Save a third-party account",
        "description": "Saves the third-party storage service account. For WebDav, Yandex, kDrive and SharePoint, the login and password are used for authentication. For other providers, the authentication is performed using a token received via OAuth 2.0.\n\n **Note**: List of provider keys: DropboxV2, Box, WebDav, Yandex, OneDrive, SharePoint, GoogleDrive, kDrive.",
        "operationId": "saveThirdParty",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.RequestDto.ThirdPartyRequestDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.RequestDto.ThirdPartyRequestDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.RequestDto.ThirdPartyRequestDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Connected provider folder",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.ResponseDto.FolderDto.System.String"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.ResponseDto.FolderDto.System.String"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.ResponseDto.FolderDto.System.String"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "security": [
          {
            "asc_auth_key": [
              "read",
              "write"
            ]
          }
        ]
      }
    },
    "/api/2.0/files/changedeleteconfrim": {
      "put": {
        "tags": [
          "Files / Settings"
        ],
        "summary": "Confirm the file deletion",
        "operationId": "changeDeleteConfirm",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.RequestDto.SettingsRequestDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.RequestDto.SettingsRequestDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.RequestDto.SettingsRequestDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Boolean value: true if the operation is successful",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "boolean"
                }
              },
              "application/json": {
                "schema": {
                  "type": "boolean"
                }
              },
              "text/json": {
                "schema": {
                  "type": "boolean"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "security": [
          {
            "asc_auth_key": [
              "read",
              "write"
            ]
          }
        ],
        "description": "Specifies whether to confirm the file deletion or not."
      }
    },
    "/api/2.0/files/settings/downloadtargz": {
      "put": {
        "tags": [
          "Files / Settings"
        ],
        "summary": "Change the archive format (using body parameters)",
        "operationId": "changeDownloadZipFromBody",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.RequestDto.DisplayRequestDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.RequestDto.DisplayRequestDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.RequestDto.DisplayRequestDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Archive",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.Web.Files.Core.Compress.ICompress"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.Web.Files.Core.Compress.ICompress"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.Web.Files.Core.Compress.ICompress"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "security": [
          {
            "asc_auth_key": [
              "read",
              "write"
            ]
          }
        ],
        "description": "Changes the format of the downloaded archive from .zip to .tar.gz. This method uses the body parameters."
      }
    },
    "/api/2.0/files/settings/external": {
      "put": {
        "tags": [
          "Files / Settings"
        ],
        "summary": "Change the external sharing ability",
        "operationId": "externalShare",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.RequestDto.DisplayRequestDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.RequestDto.DisplayRequestDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.RequestDto.DisplayRequestDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Boolean value: true if the parameter is enabled",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "boolean"
                }
              },
              "application/json": {
                "schema": {
                  "type": "boolean"
                }
              },
              "text/json": {
                "schema": {
                  "type": "boolean"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "security": [
          {
            "asc_auth_key": [
              "read",
              "write"
            ]
          }
        ],
        "description": "Changes the ability to share a file externally."
      }
    },
    "/api/2.0/files/settings/externalsocialmedia": {
      "put": {
        "tags": [
          "Files / Settings"
        ],
        "summary": "Change the external sharing ability on social networks",
        "operationId": "externalShareSocialMedia",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.RequestDto.DisplayRequestDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.RequestDto.DisplayRequestDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.RequestDto.DisplayRequestDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Boolean value: true if the parameter is enabled",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "boolean"
                }
              },
              "application/json": {
                "schema": {
                  "type": "boolean"
                }
              },
              "text/json": {
                "schema": {
                  "type": "boolean"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "security": [
          {
            "asc_auth_key": [
              "read",
              "write"
            ]
          }
        ],
        "description": "Changes the ability to share a file externally on social networks."
      }
    },
    "/api/2.0/files/forcesave": {
      "put": {
        "tags": [
          "Files / Settings"
        ],
        "summary": "Change the forcasaving ability",
        "operationId": "forcesave",
        "responses": {
          "200": {
            "description": "Boolean value: true if the parameter is enabled",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "boolean"
                }
              },
              "application/json": {
                "schema": {
                  "type": "boolean"
                }
              },
              "text/json": {
                "schema": {
                  "type": "boolean"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "security": [
          {
            "asc_auth_key": [
              "read",
              "write"
            ]
          }
        ],
        "description": "Changes the ability to force save a file."
      }
    },
    "/api/2.0/files/settings": {
      "get": {
        "tags": [
          "Files / Settings"
        ],
        "summary": "Get file settings",
        "operationId": "getFilesSettings",
        "responses": {
          "200": {
            "description": "File settings",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.ResponseDto.FilesSettingsDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.ResponseDto.FilesSettingsDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.ResponseDto.FilesSettingsDto"
                }
              }
            }
          }
        },
        "description": "Returns all the file settings."
      }
    },
    "/api/2.0/files/info": {
      "get": {
        "tags": [
          "Files / Settings"
        ],
        "summary": "Get the Documents information",
        "operationId": "getModule",
        "responses": {
          "200": {
            "description": "Module information: ID, product class name, title, description, icon URL, large icon URL, start URL, primary or nor, help URL",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.Api.Core.Module"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.Api.Core.Module"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.Api.Core.Module"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "security": [
          {
            "asc_auth_key": [
              "read",
              "write"
            ]
          }
        ],
        "description": "Returns the information about the Documents module."
      }
    },
    "/api/2.0/files/@privacy/available": {
      "get": {
        "tags": [
          "Files / Settings"
        ],
        "summary": "Check the Private Room availability",
        "operationId": "isAvailablePrivacyRoomSettings",
        "responses": {
          "200": {
            "description": "Boolean value: true if the Private Room settings are available",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "boolean"
                }
              },
              "application/json": {
                "schema": {
                  "type": "boolean"
                }
              },
              "text/json": {
                "schema": {
                  "type": "boolean"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "security": [
          {
            "asc_auth_key": [
              "read",
              "write"
            ]
          }
        ],
        "description": "Checks if the Private Room settings are available or not."
      }
    },
    "/api/2.0/files/storeforcesave": {
      "put": {
        "tags": [
          "Files / Settings"
        ],
        "summary": "Change the ability to store the forcesaved files",
        "operationId": "storeForcesave",
        "responses": {
          "200": {
            "description": "Boolean value: true if the operation is successful",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "boolean"
                }
              },
              "application/json": {
                "schema": {
                  "type": "boolean"
                }
              },
              "text/json": {
                "schema": {
                  "type": "boolean"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "security": [
          {
            "asc_auth_key": [
              "read",
              "write"
            ]
          }
        ],
        "description": "Changes the ability to store the forcesaved file versions."
      }
    },
    "/api/2.0/files/storeoriginal": {
      "put": {
        "tags": [
          "Files / Settings"
        ],
        "summary": "Change the ability to upload original formats",
        "operationId": "storeOriginal",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.RequestDto.SettingsRequestDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.RequestDto.SettingsRequestDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.RequestDto.SettingsRequestDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Boolean value: true if the operation is successful",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "boolean"
                }
              },
              "application/json": {
                "schema": {
                  "type": "boolean"
                }
              },
              "text/json": {
                "schema": {
                  "type": "boolean"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "security": [
          {
            "asc_auth_key": [
              "read",
              "write"
            ]
          }
        ],
        "description": "Changes the ability to upload documents in the original formats as well."
      }
    },
    "/api/2.0/files/keepnewfilename": {
      "put": {
        "tags": [
          "Files / Settings"
        ],
        "summary": "Ask a new file name",
        "operationId": "keepNewFileName",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.RequestDto.SettingsRequestDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.RequestDto.SettingsRequestDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.RequestDto.SettingsRequestDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Boolean value: true if the operation is successful",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "boolean"
                }
              },
              "application/json": {
                "schema": {
                  "type": "boolean"
                }
              },
              "text/json": {
                "schema": {
                  "type": "boolean"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "security": [
          {
            "asc_auth_key": [
              "read",
              "write"
            ]
          }
        ],
        "description": "Specifies whether to ask a user for a file name on creation or not."
      }
    },
    "/api/2.0/files/displayfileextension": {
      "put": {
        "tags": [
          "Files / Settings"
        ],
        "summary": "Display a file extension",
        "operationId": "displayFileExtension",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.RequestDto.SettingsRequestDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.RequestDto.SettingsRequestDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.RequestDto.SettingsRequestDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Boolean value: true if the parameter is enabled",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "boolean"
                }
              },
              "application/json": {
                "schema": {
                  "type": "boolean"
                }
              },
              "text/json": {
                "schema": {
                  "type": "boolean"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "security": [
          {
            "asc_auth_key": [
              "read",
              "write"
            ]
          }
        ],
        "description": "Specifies whether to display a file extension or not."
      }
    },
    "/api/2.0/files/updateifexist": {
      "put": {
        "tags": [
          "Files / Settings"
        ],
        "summary": "Update a file version if it exists",
        "operationId": "updateIfExist",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.RequestDto.SettingsRequestDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.RequestDto.SettingsRequestDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.RequestDto.SettingsRequestDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Boolean value: true if the operation is successful",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "boolean"
                }
              },
              "application/json": {
                "schema": {
                  "type": "boolean"
                }
              },
              "text/json": {
                "schema": {
                  "type": "boolean"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "security": [
          {
            "asc_auth_key": [
              "read",
              "write"
            ]
          }
        ],
        "description": "Updates a file version if a file with such a name already exists."
      }
    },
    "/api/2.0/files/settings/autocleanup": {
      "get": {
        "tags": [
          "Files / Settings"
        ],
        "summary": "Get the trash bin auto-clearing setting",
        "operationId": "getAutomaticallyCleanUp",
        "responses": {
          "200": {
            "description": "The auto-clearing setting properties: auto-clearing or not, a time interval when the auto-clearing will be performed",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.Files.Core.AutoCleanUpData"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.Files.Core.AutoCleanUpData"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.Files.Core.AutoCleanUpData"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "security": [
          {
            "asc_auth_key": [
              "read",
              "write"
            ]
          }
        ],
        "description": "Returns the trash bin auto-clearing setting."
      },
      "put": {
        "tags": [
          "Files / Settings"
        ],
        "summary": "Update the trash bin auto-clearing setting",
        "operationId": "changeAutomaticallyCleanUp",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.RequestDto.AutoCleanupRequestDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.RequestDto.AutoCleanupRequestDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.RequestDto.AutoCleanupRequestDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "The auto-clearing setting properties: auto-clearing or not, a time interval when the auto-clearing will be performed",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.Files.Core.AutoCleanUpData"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.Files.Core.AutoCleanUpData"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.Files.Core.AutoCleanUpData"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "security": [
          {
            "asc_auth_key": [
              "read",
              "write"
            ]
          }
        ],
        "description": "Updates the trash bin auto-clearing setting."
      }
    },
    "/api/2.0/files/settings/dafaultaccessrights": {
      "put": {
        "tags": [
          "Files / Settings"
        ],
        "summary": "Change the default access rights",
        "operationId": "changeDefaultAccessRights",
        "requestBody": {
          "description": "Sharing rights (None, ReadWrite, Read, Restrict, Varies, Review, Comment, FillForms, CustomFilter, RoomAdmin, Editing, Collaborator)",
          "content": {
            "application/json": {
              "schema": {
                "type": "array",
                "items": {
                  "anyOf": [
                    {
                      "enum": [
                        "None",
                        "ReadWrite",
                        "Read",
                        "Restrict",
                        "Varies",
                        "Review",
                        "Comment",
                        "FillForms",
                        "CustomFilter",
                        "RoomManager",
                        "Editing",
                        "ContentCreator"
                      ],
                      "type": "string",
                      "description": "[None - None, ReadWrite - Read and write, Read - Read, Restrict - Restrict, Varies - Varies, Review - Review, Comment - Comment, FillForms - Fill forms, CustomFilter - Custom filter, RoomManager - Room manager, Editing - Editing, ContentCreator - Content creator]",
                      "example": "None"
                    },
                    {
                      "enum": [
                        0,
                        1,
                        2,
                        3,
                        4,
                        5,
                        6,
                        7,
                        8,
                        9,
                        10,
                        11
                      ],
                      "type": "integer",
                      "description": "[0 - None, 1 - Read and write, 2 - Read, 3 - Restrict, 4 - Varies, 5 - Review, 6 - Comment, 7 - Fill forms, 8 - Custom filter, 9 - Room manager, 10 - Editing, 11 - Content creator]",
                      "example": 0
                    }
                  ]
                },
                "description": "Sharing rights (None, ReadWrite, Read, Restrict, Varies, Review, Comment, FillForms, CustomFilter, RoomAdmin, Editing, Collaborator)"
              }
            },
            "text/json": {
              "schema": {
                "type": "array",
                "items": {
                  "anyOf": [
                    {
                      "enum": [
                        "None",
                        "ReadWrite",
                        "Read",
                        "Restrict",
                        "Varies",
                        "Review",
                        "Comment",
                        "FillForms",
                        "CustomFilter",
                        "RoomManager",
                        "Editing",
                        "ContentCreator"
                      ],
                      "type": "string",
                      "description": "[None - None, ReadWrite - Read and write, Read - Read, Restrict - Restrict, Varies - Varies, Review - Review, Comment - Comment, FillForms - Fill forms, CustomFilter - Custom filter, RoomManager - Room manager, Editing - Editing, ContentCreator - Content creator]",
                      "example": "None"
                    },
                    {
                      "enum": [
                        0,
                        1,
                        2,
                        3,
                        4,
                        5,
                        6,
                        7,
                        8,
                        9,
                        10,
                        11
                      ],
                      "type": "integer",
                      "description": "[0 - None, 1 - Read and write, 2 - Read, 3 - Restrict, 4 - Varies, 5 - Review, 6 - Comment, 7 - Fill forms, 8 - Custom filter, 9 - Room manager, 10 - Editing, 11 - Content creator]",
                      "example": 0
                    }
                  ]
                },
                "description": "Sharing rights (None, ReadWrite, Read, Restrict, Varies, Review, Comment, FillForms, CustomFilter, RoomAdmin, Editing, Collaborator)"
              }
            },
            "application/*+json": {
              "schema": {
                "type": "array",
                "items": {
                  "anyOf": [
                    {
                      "enum": [
                        "None",
                        "ReadWrite",
                        "Read",
                        "Restrict",
                        "Varies",
                        "Review",
                        "Comment",
                        "FillForms",
                        "CustomFilter",
                        "RoomManager",
                        "Editing",
                        "ContentCreator"
                      ],
                      "type": "string",
                      "description": "[None - None, ReadWrite - Read and write, Read - Read, Restrict - Restrict, Varies - Varies, Review - Review, Comment - Comment, FillForms - Fill forms, CustomFilter - Custom filter, RoomManager - Room manager, Editing - Editing, ContentCreator - Content creator]",
                      "example": "None"
                    },
                    {
                      "enum": [
                        0,
                        1,
                        2,
                        3,
                        4,
                        5,
                        6,
                        7,
                        8,
                        9,
                        10,
                        11
                      ],
                      "type": "integer",
                      "description": "[0 - None, 1 - Read and write, 2 - Read, 3 - Restrict, 4 - Varies, 5 - Review, 6 - Comment, 7 - Fill forms, 8 - Custom filter, 9 - Room manager, 10 - Editing, 11 - Content creator]",
                      "example": 0
                    }
                  ]
                },
                "description": "Sharing rights (None, ReadWrite, Read, Restrict, Varies, Review, Comment, FillForms, CustomFilter, RoomAdmin, Editing, Collaborator)"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Updated sharing rights (None, ReadWrite, Read, Restrict, Varies, Review, Comment, FillForms, CustomFilter, RoomAdmin, Editing, Collaborator)",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ASC.Files.Core.Security.FileShare"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ASC.Files.Core.Security.FileShare"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ASC.Files.Core.Security.FileShare"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "security": [
          {
            "asc_auth_key": [
              "read",
              "write"
            ]
          }
        ],
        "description": "Changes the default access rights in the sharing settings."
      }
    },
    "/api/2.0/files/settings/openeditorinsametab": {
      "put": {
        "tags": [
          "Files / Settings"
        ],
        "summary": "Open document in same browser tab",
        "operationId": "setOpenEditorInSameTab",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.RequestDto.SettingsRequestDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.RequestDto.SettingsRequestDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.RequestDto.SettingsRequestDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Boolean value: true if the parameter is enabled",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "boolean"
                }
              },
              "application/json": {
                "schema": {
                  "type": "boolean"
                }
              },
              "text/json": {
                "schema": {
                  "type": "boolean"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "security": [
          {
            "asc_auth_key": [
              "read",
              "write"
            ]
          }
        ],
        "description": "Change the ability to open in a document in the same browser tab"
      }
    },
    "/api/2.0/files/thirdparty/capabilities": {
      "get": {
        "tags": [
          "Files / Third-party integration"
        ],
        "summary": "Get providers",
        "description": "Returns a list of the available providers.\n\n **Note**: Available provider keys: DropboxV2, Box, WebDav, Yandex, OneDrive, SharePoint, GoogleDrive, kDrive.",
        "operationId": "capabilities",
        "responses": {
          "200": {
            "description": "List of provider keys",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    }
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    }
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "security": [
          {
            "asc_auth_key": [
              "read",
              "write"
            ]
          }
        ]
      }
    },
    "/api/2.0/files/thirdparty/{providerid}": {
      "delete": {
        "tags": [
          "Files / Third-party integration"
        ],
        "summary": "Remove a third-party account",
        "operationId": "deleteThirdParty",
        "parameters": [
          {
            "name": "providerId",
            "in": "path",
            "description": "Provider ID",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32",
              "example": 1234
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Third-party folder ID",
            "content": {
              "text/plain": {
                "schema": {}
              },
              "application/json": {
                "schema": {}
              },
              "text/json": {
                "schema": {}
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "security": [
          {
            "asc_auth_key": [
              "read",
              "write"
            ]
          }
        ],
        "description": "Removes the third-party storage service account with the ID specified in the request."
      }
    },
    "/api/2.0/files/thirdparty/common": {
      "get": {
        "tags": [
          "Files / Third-party integration"
        ],
        "summary": "Get common third-party services",
        "operationId": "getCommonThirdPartyFolders",
        "responses": {
          "200": {
            "description": "List of common third-party folderst",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.ResponseDto.FolderDto.System.String"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.ResponseDto.FolderDto.System.String"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.ResponseDto.FolderDto.System.String"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "security": [
          {
            "asc_auth_key": [
              "read",
              "write"
            ]
          }
        ],
        "description": "Returns a list of the third-party services connected to the \"Common\" section."
      }
    },
    "/api/2.0/files/thirdparty/backup": {
      "get": {
        "tags": [
          "Files / Third-party integration"
        ],
        "summary": "Get a third-party account backup",
        "operationId": "getBackupThirdPartyAccount",
        "responses": {
          "200": {
            "description": "Folder for the third-party account backup",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.ResponseDto.FolderDto.System.String"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.ResponseDto.FolderDto.System.String"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.ResponseDto.FolderDto.System.String"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "security": [
          {
            "asc_auth_key": [
              "read",
              "write"
            ]
          }
        ],
        "description": "Return a backup of the connected third-party account."
      },
      "post": {
        "tags": [
          "Files / Third-party integration"
        ],
        "summary": "Save a third-party account backup",
        "description": "Saves a backup of the connected third-party account.\n\n **Note**: List of provider key: DropboxV2, Box, WebDav, Yandex, OneDrive, SharePoint, GoogleDrive, kDrive",
        "operationId": "saveThirdPartyBackup",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.RequestDto.ThirdPartyBackupRequestDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.RequestDto.ThirdPartyBackupRequestDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.RequestDto.ThirdPartyBackupRequestDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Folder for the third-party account backup",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.ResponseDto.FolderDto.System.String"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.ResponseDto.FolderDto.System.String"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.ResponseDto.FolderDto.System.String"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "security": [
          {
            "asc_auth_key": [
              "read",
              "write"
            ]
          }
        ]
      }
    },
    "/api/2.0/files/thirdparty/providers": {
      "get": {
        "tags": [
          "Files / Third-party integration"
        ],
        "summary": "Get all providers",
        "description": "Returns a list of the all providers.\n\n **Note**: Available provider keys: Dropbox, Box, WebDav, OneDrive, GoogleDrive, kDrive, ownCloud, Nextcloud",
        "operationId": "getAllProviders",
        "responses": {
          "200": {
            "description": "List of provider",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.ResponseDto.ProviderDto"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.ResponseDto.ProviderDto"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.ResponseDto.ProviderDto"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "security": [
          {
            "asc_auth_key": [
              "read",
              "write"
            ]
          }
        ]
      }
    }
  },
  "components": {
    "schemas": {
      "ASC.Api.Core.ApiDateTime": {
        "type": "object",
        "properties": {
          "utcTime": {
            "type": "string",
            "description": "UtcTime",
            "format": "date-time",
            "readOnly": true,
            "example": "2008-04-10T06:30:00.0000000+04:00"
          },
          "timeZoneOffset": {
            "type": "string",
            "description": "TimeZoneOffset",
            "format": "date-span",
            "readOnly": true,
            "example": "00:00:00"
          }
        },
        "additionalProperties": false
      },
      "ASC.Api.Core.Module": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "ID",
            "format": "uuid",
            "example": "b6e49c19-e197-4196-b90f-c00eb57c203c"
          },
          "appName": {
            "type": "string",
            "description": "Product class name",
            "nullable": true,
            "example": "some text"
          },
          "title": {
            "type": "string",
            "description": "Title",
            "nullable": true,
            "example": "investor_guarani_slovenia"
          },
          "link": {
            "type": "string",
            "description": "Start link",
            "nullable": true,
            "example": "some text"
          },
          "iconUrl": {
            "type": "string",
            "description": "Icon URL",
            "nullable": true,
            "example": "some text"
          },
          "imageUrl": {
            "type": "string",
            "description": "Large image URL",
            "nullable": true,
            "example": "some text"
          },
          "helpUrl": {
            "type": "string",
            "description": "Help URL",
            "nullable": true,
            "example": "some text"
          },
          "description": {
            "type": "string",
            "description": "Description",
            "nullable": true,
            "example": "some text"
          },
          "isPrimary": {
            "type": "boolean",
            "description": "Specifies if the module is primary or not",
            "example": true
          }
        },
        "additionalProperties": false
      },
      "ASC.Common.Threading.DistributedTaskStatus": {
        "oneOf": [
          {
            "enum": [
              "Created",
              "Running",
              "Completed",
              "Canceled",
              "Failted"
            ],
            "type": "string",
            "description": "[Created - Created, Running - Running, Completed - Completed, Canceled - Canceled, Failted - Failted]",
            "example": "Created"
          },
          {
            "enum": [
              0,
              1,
              2,
              3,
              4
            ],
            "type": "integer",
            "description": "[0 - Created, 1 - Running, 2 - Completed, 3 - Canceled, 4 - Failted]",
            "example": 0
          }
        ]
      },
      "ASC.Core.QuotaFilter": {
        "oneOf": [
          {
            "enum": [
              "All",
              "Default",
              "Custom"
            ],
            "type": "string",
            "description": "[All - All, Default - Default, Custom - Custom]",
            "example": "All"
          },
          {
            "enum": [
              0,
              1,
              2
            ],
            "type": "integer",
            "description": "[0 - All, 1 - Default, 2 - Custom]",
            "example": 0
          }
        ]
      },
      "ASC.Core.Users.EmployeeActivationStatus": {
        "oneOf": [
          {
            "enum": [
              "NotActivated",
              "Activated",
              "Pending",
              "AutoGenerated"
            ],
            "type": "string",
            "description": "[NotActivated - Not activated, Activated - Activated, Pending - Pending, AutoGenerated - Auto generated]",
            "example": "NotActivated"
          },
          {
            "enum": [
              0,
              1,
              2,
              4
            ],
            "type": "integer",
            "description": "[0 - Not activated, 1 - Activated, 2 - Pending, 4 - Auto generated]",
            "example": 0
          }
        ]
      },
      "ASC.Core.Users.EmployeeStatus": {
        "oneOf": [
          {
            "enum": [
              "Active",
              "Terminated",
              "Pending",
              "Default",
              "All"
            ],
            "type": "string",
            "description": "[Active - Active, Terminated - Terminated, Pending - Pending, Default - Default, All - All]",
            "example": "Active"
          },
          {
            "enum": [
              1,
              2,
              4,
              5,
              7
            ],
            "type": "integer",
            "description": "[1 - Active, 2 - Terminated, 4 - Pending, 5 - Default, 7 - All]",
            "example": 1
          }
        ]
      },
      "ASC.Core.Users.MobilePhoneActivationStatus": {
        "oneOf": [
          {
            "enum": [
              "NotActivated",
              "Activated"
            ],
            "type": "string",
            "description": "[NotActivated - Not activated, Activated - Activated]",
            "example": "NotActivated"
          },
          {
            "enum": [
              0,
              1
            ],
            "type": "integer",
            "description": "[0 - Not activated, 1 - Activated]",
            "example": 0
          }
        ]
      },
      "ASC.Core.Users.UserInfo": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "ID",
            "format": "uuid",
            "example": "1ade02de-1990-41d7-a2f3-d27b27016f3d"
          },
          "firstName": {
            "type": "string",
            "description": "First name",
            "nullable": true,
            "example": "Winona"
          },
          "lastName": {
            "type": "string",
            "description": "Last name",
            "nullable": true,
            "example": "Nader"
          },
          "userName": {
            "type": "string",
            "description": "Username",
            "nullable": true,
            "example": "some text"
          },
          "birthDate": {
            "type": "string",
            "description": "Birthday",
            "format": "date-time",
            "nullable": true,
            "example": "2008-04-10T06:30:00.0000000+04:00"
          },
          "sex": {
            "type": "boolean",
            "description": "Sex (male or female)",
            "nullable": true,
            "example": true
          },
          "status": {
            "$ref": "#/components/schemas/ASC.Core.Users.EmployeeStatus"
          },
          "activationStatus": {
            "$ref": "#/components/schemas/ASC.Core.Users.EmployeeActivationStatus"
          },
          "terminatedDate": {
            "type": "string",
            "description": "The date and time when the user account was terminated",
            "format": "date-time",
            "nullable": true,
            "example": "2008-04-10T06:30:00.0000000+04:00"
          },
          "title": {
            "type": "string",
            "description": "Title",
            "nullable": true,
            "example": "tcp"
          },
          "workFromDate": {
            "type": "string",
            "description": "Registration date",
            "format": "date-time",
            "nullable": true,
            "example": "2008-04-10T06:30:00.0000000+04:00"
          },
          "email": {
            "type": "string",
            "description": "Email",
            "format": "email",
            "nullable": true,
            "example": "Lila.Reichert72@yahoo.com"
          },
          "contacts": {
            "type": "string",
            "description": "List of contacts in the string format",
            "nullable": true,
            "example": "some text"
          },
          "contactsList": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "List of contacts",
            "nullable": true,
            "example": [
              "some text"
            ]
          },
          "location": {
            "type": "string",
            "description": "Location",
            "nullable": true,
            "example": "96784 Doyle Courts, Giovannimouth, Grenada"
          },
          "notes": {
            "type": "string",
            "description": "Notes",
            "nullable": true,
            "example": "some text"
          },
          "removed": {
            "type": "boolean",
            "description": "Specifies if the user account was removed or not",
            "example": true
          },
          "lastModified": {
            "type": "string",
            "description": "Last modified date",
            "format": "date-time",
            "example": "2008-04-10T06:30:00.0000000+04:00"
          },
          "tenantId": {
            "type": "integer",
            "description": "Tenant ID",
            "format": "int32",
            "example": 1234
          },
          "isActive": {
            "type": "boolean",
            "description": "Spceifies if the user is active or not",
            "readOnly": true,
            "example": true
          },
          "cultureName": {
            "type": "string",
            "description": "Language",
            "nullable": true,
            "example": "some text"
          },
          "mobilePhone": {
            "type": "string",
            "description": "Mobile phone",
            "nullable": true,
            "example": "some text"
          },
          "mobilePhoneActivationStatus": {
            "$ref": "#/components/schemas/ASC.Core.Users.MobilePhoneActivationStatus"
          },
          "sid": {
            "type": "string",
            "description": "LDAP user identificator",
            "nullable": true,
            "example": "some text"
          },
          "ldapQouta": {
            "type": "integer",
            "description": "LDAP user quota attribute",
            "format": "int64",
            "example": 1234
          },
          "ssoNameId": {
            "type": "string",
            "description": "SSO SAML user identificator",
            "nullable": true,
            "example": "some text"
          },
          "ssoSessionId": {
            "type": "string",
            "description": "SSO SAML user session identificator",
            "nullable": true,
            "example": "some text"
          },
          "createDate": {
            "type": "string",
            "description": "Creation date",
            "format": "date-time",
            "example": "2008-04-10T06:30:00.0000000+04:00"
          },
          "createdBy": {
            "type": "string",
            "format": "uuid",
            "nullable": true,
            "example": "75a5f745-f697-4418-b38d-0fe0d277e258"
          },
          "spam": {
            "type": "boolean",
            "nullable": true,
            "example": true
          },
          "checkActivation": {
            "type": "boolean",
            "readOnly": true,
            "example": true
          }
        },
        "additionalProperties": false
      },
      "ASC.FederatedLogin.OAuth20Token": {
        "type": "object",
        "properties": {
          "access_token": {
            "type": "string",
            "nullable": true,
            "example": "some text"
          },
          "refresh_token": {
            "type": "string",
            "nullable": true,
            "example": "some text"
          },
          "expires_in": {
            "type": "integer",
            "format": "int64",
            "example": 1234
          },
          "client_id": {
            "type": "string",
            "nullable": true,
            "example": "some text"
          },
          "client_secret": {
            "type": "string",
            "nullable": true,
            "example": "some text"
          },
          "redirect_uri": {
            "type": "string",
            "format": "uri",
            "nullable": true,
            "example": "some text"
          },
          "timestamp": {
            "type": "string",
            "format": "date-time",
            "example": "2008-04-10T06:30:00.0000000+04:00"
          },
          "isExpired": {
            "type": "boolean",
            "readOnly": true,
            "example": true
          }
        },
        "additionalProperties": false
      },
      "ASC.Files.Core.ApiModels.FileShareParams": {
        "type": "object",
        "properties": {
          "shareTo": {
            "type": "string",
            "description": "ID of the user with whom we want to share a file",
            "format": "uuid",
            "example": "75a5f745-f697-4418-b38d-0fe0d277e258"
          },
          "email": {
            "type": "string",
            "description": "User email address",
            "format": "email",
            "nullable": true,
            "example": "Freeda_Conn@yahoo.com"
          },
          "access": {
            "$ref": "#/components/schemas/ASC.Files.Core.Security.FileShare"
          }
        },
        "additionalProperties": false
      },
      "ASC.Files.Core.ApiModels.RequestDto.ArchiveRoomRequest": {
        "type": "object",
        "properties": {
          "deleteAfter": {
            "type": "boolean",
            "description": "Specifies whether to archive a room after the editing session is finished or not",
            "example": true
          }
        },
        "additionalProperties": false,
        "description": "Parameters for archiving a room"
      },
      "ASC.Files.Core.ApiModels.RequestDto.AutoCleanupRequestDto": {
        "type": "object",
        "properties": {
          "set": {
            "type": "boolean",
            "description": "Enables the auto-clearing or not",
            "example": true
          },
          "gap": {
            "$ref": "#/components/schemas/ASC.Files.Core.DateToAutoCleanUp"
          }
        },
        "additionalProperties": false,
        "description": "Auto-clearing request parameters"
      },
      "ASC.Files.Core.ApiModels.RequestDto.BaseBatchRequestDto": {
        "type": "object",
        "properties": {
          "folderIds": {
            "type": "array",
            "items": {
              "anyOf": [
                {
                  "type": "integer",
                  "example": 1234
                },
                {
                  "type": "string",
                  "example": "some text"
                }
              ]
            },
            "description": "List of folder IDs",
            "nullable": true
          },
          "fileIds": {
            "type": "array",
            "items": {
              "anyOf": [
                {
                  "type": "integer",
                  "example": 1234
                },
                {
                  "type": "string",
                  "example": "some text"
                }
              ]
            },
            "description": "List of file IDs",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "Base batch request parameters"
      },
      "ASC.Files.Core.ApiModels.RequestDto.BatchRequestDto": {
        "type": "object",
        "properties": {
          "folderIds": {
            "type": "array",
            "items": {
              "anyOf": [
                {
                  "type": "integer",
                  "example": 1234
                },
                {
                  "type": "string",
                  "example": "some text"
                }
              ]
            },
            "description": "List of folder IDs",
            "nullable": true
          },
          "fileIds": {
            "type": "array",
            "items": {
              "anyOf": [
                {
                  "type": "integer",
                  "example": 1234
                },
                {
                  "type": "string",
                  "example": "some text"
                }
              ]
            },
            "description": "List of file IDs",
            "nullable": true
          },
          "destFolderId": {
            "oneOf": [
              {
                "type": "integer",
                "example": 1234
              },
              {
                "type": "string",
                "example": "some text"
              }
            ],
            "description": "Destination folder ID"
          },
          "conflictResolveType": {
            "$ref": "#/components/schemas/ASC.Web.Files.Services.WCFService.FileOperations.FileConflictResolveType"
          },
          "deleteAfter": {
            "type": "boolean",
            "description": "Specifies whether to delete a folder after the editing session is finished or not",
            "example": true
          },
          "content": {
            "type": "boolean",
            "description": "Content",
            "example": true
          }
        },
        "additionalProperties": false,
        "description": "Request parameters for copying/moving files"
      },
      "ASC.Files.Core.ApiModels.RequestDto.BatchTagsRequestDto": {
        "type": "object",
        "properties": {
          "names": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Tag names",
            "nullable": true,
            "example": [
              "some text"
            ]
          }
        },
        "additionalProperties": false,
        "description": "Request parameters for adding tags"
      },
      "ASC.Files.Core.ApiModels.RequestDto.ChangeHistory": {
        "type": "object",
        "properties": {
          "version": {
            "type": "integer",
            "description": "File version",
            "format": "int32",
            "example": 1234
          },
          "continueVersion": {
            "type": "boolean",
            "description": "Marks as a version or revision",
            "example": true
          }
        },
        "additionalProperties": false,
        "description": "Parameters for changing version history"
      },
      "ASC.Files.Core.ApiModels.RequestDto.CheckConversionRequestDto.System.Int32": {
        "type": "object",
        "properties": {
          "fileId": {
            "type": "integer",
            "description": "File ID",
            "format": "int32",
            "example": 8843
          },
          "sync": {
            "type": "boolean",
            "description": "Specifies if the conversion process is synchronous or not",
            "example": true
          },
          "startConvert": {
            "type": "boolean",
            "description": "Specifies whether to start a conversion process or not",
            "example": true
          },
          "version": {
            "type": "integer",
            "description": "File version",
            "format": "int32",
            "example": 1234
          },
          "password": {
            "type": "string",
            "description": "Password",
            "nullable": true,
            "example": "ocOuDpFoZp"
          },
          "outputType": {
            "type": "string",
            "description": "Output type",
            "nullable": true,
            "example": "some text"
          },
          "createNewIfExist": {
            "type": "boolean",
            "description": "Create new if exists",
            "example": true
          }
        },
        "additionalProperties": false,
        "description": "Request parameters for starting file conversion"
      },
      "ASC.Files.Core.ApiModels.RequestDto.CheckDocServiceUrlRequestDto": {
        "type": "object",
        "properties": {
          "docServiceUrl": {
            "type": "string",
            "description": "The Document Server address",
            "nullable": true,
            "example": "some text"
          },
          "docServiceUrlInternal": {
            "type": "string",
            "description": "The Document Server address in the local private network",
            "nullable": true,
            "example": "some text"
          },
          "docServiceUrlPortal": {
            "type": "string",
            "description": "The Community Server address",
            "nullable": true,
            "example": "some text"
          }
        },
        "additionalProperties": false,
        "description": "Request parameters for checking the document service location"
      },
      "ASC.Files.Core.ApiModels.RequestDto.CheckFillFormDraft": {
        "type": "object",
        "properties": {
          "version": {
            "type": "integer",
            "description": "File version",
            "format": "int32",
            "example": 1234
          },
          "action": {
            "type": "string",
            "description": "Action with a form",
            "nullable": true,
            "example": "some text"
          },
          "requestView": {
            "type": "boolean",
            "description": "Specifies whether to request a form for viewing or not",
            "readOnly": true,
            "example": true
          },
          "requestEmbedded": {
            "type": "boolean",
            "description": "Specifies whether to request an embedded form or not",
            "readOnly": true,
            "example": true
          }
        },
        "additionalProperties": false,
        "description": "Parameters for checking a form draft"
      },
      "ASC.Files.Core.ApiModels.RequestDto.CheckUploadRequest": {
        "type": "object",
        "properties": {
          "filesTitle": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "File title",
            "nullable": true,
            "example": [
              "some text"
            ]
          }
        },
        "additionalProperties": false,
        "description": "Parameters for checking files uploading"
      },
      "ASC.Files.Core.ApiModels.RequestDto.CopyAs.System.Text.Json.JsonElement": {
        "type": "object",
        "properties": {
          "destTitle": {
            "type": "string",
            "description": "Destination file title",
            "nullable": true,
            "example": "some text"
          },
          "destFolderId": {
            "oneOf": [
              {
                "type": "integer",
                "example": 1234
              },
              {
                "type": "string",
                "example": "some text"
              }
            ],
            "description": "Destination folder ID"
          },
          "enableExternalExt": {
            "type": "boolean",
            "description": "Specifies whether to allow the creation of external extension files or not",
            "example": true
          },
          "password": {
            "type": "string",
            "description": "Password",
            "nullable": true,
            "example": "H9D5OJc8uO"
          },
          "toForm": {
            "type": "boolean",
            "description": "Convert to form",
            "example": true
          }
        },
        "additionalProperties": false,
        "description": "Parameters for copying a file"
      },
      "ASC.Files.Core.ApiModels.RequestDto.CoverRequestDto": {
        "type": "object",
        "properties": {
          "color": {
            "type": "string",
            "description": "Color",
            "nullable": true,
            "example": "some text"
          },
          "cover": {
            "type": "string",
            "description": "Cover",
            "nullable": true,
            "example": "some text"
          }
        },
        "additionalProperties": false,
        "description": "Parameters to change the room cover"
      },
      "ASC.Files.Core.ApiModels.RequestDto.CreateFile.System.Text.Json.JsonElement": {
        "type": "object",
        "properties": {
          "title": {
            "maxLength": 165,
            "minLength": 0,
            "type": "string",
            "description": "File title",
            "nullable": true,
            "example": "invoice_latvia"
          },
          "templateId": {
            "oneOf": [
              {
                "type": "integer",
                "example": 1234
              },
              {
                "type": "string",
                "example": "some text"
              }
            ],
            "description": "Template file ID"
          },
          "enableExternalExt": {
            "type": "boolean",
            "description": "Specifies whether to allow the creation of external extension files or not",
            "example": true
          },
          "formId": {
            "type": "integer",
            "description": "Form ID",
            "format": "int32",
            "example": 1234
          }
        },
        "additionalProperties": false,
        "description": "Parameters for creating a file"
      },
      "ASC.Files.Core.ApiModels.RequestDto.CreateFolder": {
        "type": "object",
        "properties": {
          "title": {
            "maxLength": 165,
            "minLength": 0,
            "type": "string",
            "description": "Folder title",
            "nullable": true,
            "example": "borders_program_hardware"
          }
        },
        "additionalProperties": false,
        "description": "Parameters for creating a folder: Title (string) - new folder title"
      },
      "ASC.Files.Core.ApiModels.RequestDto.CreateRoomRequestDto": {
        "type": "object",
        "properties": {
          "title": {
            "maxLength": 170,
            "minLength": 0,
            "type": "string",
            "description": "Room name",
            "nullable": true,
            "example": "ergonomic_concrete_mouse_ergonomic_soft_cheese_investment_account"
          },
          "quota": {
            "type": "integer",
            "description": "Room quota",
            "format": "int64",
            "nullable": true,
            "example": 1234
          },
          "indexing": {
            "type": "boolean",
            "description": "Indexing",
            "nullable": true,
            "example": true
          },
          "denyDownload": {
            "type": "boolean",
            "description": "Room quota",
            "nullable": true,
            "example": true
          },
          "lifetime": {
            "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.RoomDataLifetimeDto"
          },
          "watermark": {
            "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.RequestDto.WatermarkRequestDto"
          },
          "logo": {
            "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.RequestDto.LogoRequest"
          },
          "tags": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "List of tags",
            "nullable": true,
            "example": [
              "some text"
            ]
          },
          "color": {
            "maxLength": 6,
            "minLength": 0,
            "type": "string",
            "description": "Color",
            "nullable": true,
            "example": "some text"
          },
          "cover": {
            "maxLength": 50,
            "minLength": 0,
            "type": "string",
            "description": "Cover",
            "nullable": true,
            "example": "some text"
          },
          "roomType": {
            "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.RequestDto.RoomType"
          },
          "private": {
            "type": "boolean",
            "description": "Private",
            "example": true
          },
          "share": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.FileShareParams"
            },
            "description": "Collection of sharing parameters",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "Request parameters for creating a room"
      },
      "ASC.Files.Core.ApiModels.RequestDto.CreateTagRequestDto": {
        "type": "object",
        "properties": {
          "name": {
            "maxLength": 255,
            "minLength": 0,
            "type": "string",
            "description": "Tag name",
            "nullable": true,
            "example": "Norbert Nikolaus"
          }
        },
        "additionalProperties": false,
        "description": "Request parameters for creating a tag"
      },
      "ASC.Files.Core.ApiModels.RequestDto.CreateTextOrHtmlFile": {
        "required": [
          "title"
        ],
        "type": "object",
        "properties": {
          "title": {
            "maxLength": 165,
            "minLength": 0,
            "type": "string",
            "description": "File title",
            "example": "bedfordshire"
          },
          "content": {
            "type": "string",
            "description": "File contents",
            "nullable": true,
            "example": "some text"
          },
          "createNewIfExist": {
            "type": "boolean",
            "description": "Create new if exist",
            "example": true
          }
        },
        "additionalProperties": false,
        "description": "Parameters for creating an HTML file"
      },
      "ASC.Files.Core.ApiModels.RequestDto.CreateThirdPartyRoom": {
        "type": "object",
        "properties": {
          "createAsNewFolder": {
            "type": "boolean",
            "description": "Create as new folder",
            "example": true
          },
          "title": {
            "type": "string",
            "description": "Room name",
            "nullable": true,
            "example": "connect"
          },
          "roomType": {
            "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.RequestDto.RoomType"
          },
          "private": {
            "type": "boolean",
            "description": "Private",
            "example": true
          },
          "indexing": {
            "type": "boolean",
            "description": "Indexing",
            "example": true
          },
          "denyDownload": {
            "type": "boolean",
            "description": "Deny download",
            "example": true
          },
          "color": {
            "type": "string",
            "description": "Color",
            "nullable": true,
            "example": "some text"
          },
          "cover": {
            "type": "string",
            "description": "Cover",
            "nullable": true,
            "example": "some text"
          },
          "tags": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Tags",
            "nullable": true,
            "example": [
              "some text"
            ]
          },
          "logo": {
            "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.RequestDto.LogoRequest"
          }
        },
        "additionalProperties": false,
        "description": "Parameters for creating a room"
      },
      "ASC.Files.Core.ApiModels.RequestDto.Delete": {
        "type": "object",
        "properties": {
          "deleteAfter": {
            "type": "boolean",
            "description": "Specifies whether to delete a file after the editing session is finished or not",
            "example": true
          },
          "immediately": {
            "type": "boolean",
            "description": "Specifies whether to move a file to the \\\"Trash\\\" folder or delete it immediately",
            "example": true
          }
        },
        "additionalProperties": false,
        "description": "Parameters for deleting a file"
      },
      "ASC.Files.Core.ApiModels.RequestDto.DeleteBatchRequestDto": {
        "type": "object",
        "properties": {
          "folderIds": {
            "type": "array",
            "items": {
              "anyOf": [
                {
                  "type": "integer",
                  "example": 1234
                },
                {
                  "type": "string",
                  "example": "some text"
                }
              ]
            },
            "description": "List of folder IDs",
            "nullable": true
          },
          "fileIds": {
            "type": "array",
            "items": {
              "anyOf": [
                {
                  "type": "integer",
                  "example": 1234
                },
                {
                  "type": "string",
                  "example": "some text"
                }
              ]
            },
            "description": "List of file IDs",
            "nullable": true
          },
          "deleteAfter": {
            "type": "boolean",
            "description": "Specifies whether to delete a file after the editing session is finished or not",
            "example": true
          },
          "immediately": {
            "type": "boolean",
            "description": "Specifies whether to move a file to the \\\"Trash\\\" folder or delete it immediately",
            "example": true
          }
        },
        "additionalProperties": false,
        "description": "Request parameters for deleting files"
      },
      "ASC.Files.Core.ApiModels.RequestDto.DeleteFolder": {
        "type": "object",
        "properties": {
          "deleteAfter": {
            "type": "boolean",
            "description": "Specifies whether to delete a folder after the editing session is finished or not",
            "example": true
          },
          "immediately": {
            "type": "boolean",
            "description": "Specifies whether to move a folder to the \\\"Trash\\\" folder or delete it immediately",
            "example": true
          }
        },
        "additionalProperties": false,
        "description": "Parameters for deleting a folder"
      },
      "ASC.Files.Core.ApiModels.RequestDto.DeleteRoomRequest": {
        "type": "object",
        "properties": {
          "deleteAfter": {
            "type": "boolean",
            "description": "Specifies whether to delete a room after the editing session is finished or not",
            "example": true
          }
        },
        "additionalProperties": false,
        "description": "Parameters for deleting a room"
      },
      "ASC.Files.Core.ApiModels.RequestDto.DisplayRequestDto": {
        "type": "object",
        "properties": {
          "set": {
            "type": "boolean",
            "description": "Specifies whether to set the specified settings or not",
            "example": true
          }
        },
        "additionalProperties": false,
        "description": "Settings request parameters"
      },
      "ASC.Files.Core.ApiModels.RequestDto.DownloadRequestDto": {
        "type": "object",
        "properties": {
          "folderIds": {
            "type": "array",
            "items": {
              "anyOf": [
                {
                  "type": "integer",
                  "example": 1234
                },
                {
                  "type": "string",
                  "example": "some text"
                }
              ]
            },
            "description": "List of folder IDs",
            "nullable": true
          },
          "fileIds": {
            "type": "array",
            "items": {
              "anyOf": [
                {
                  "type": "integer",
                  "example": 1234
                },
                {
                  "type": "string",
                  "example": "some text"
                }
              ]
            },
            "description": "List of file IDs",
            "nullable": true
          },
          "fileConvertIds": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.RequestDto.DownloadRequestItemDto"
            },
            "description": "List of file IDs which will be converted",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "Request parameters for downloading files"
      },
      "ASC.Files.Core.ApiModels.RequestDto.DownloadRequestItemDto": {
        "type": "object",
        "properties": {
          "key": {
            "oneOf": [
              {
                "type": "integer",
                "example": 1234
              },
              {
                "type": "string",
                "example": "some text"
              }
            ]
          },
          "value": {
            "type": "string",
            "nullable": true,
            "example": "some text"
          },
          "password": {
            "type": "string",
            "nullable": true,
            "example": "sWUQQGBTzU"
          }
        },
        "additionalProperties": false
      },
      "ASC.Files.Core.ApiModels.RequestDto.DuplicateRequestDto": {
        "type": "object",
        "properties": {
          "folderIds": {
            "type": "array",
            "items": {
              "anyOf": [
                {
                  "type": "integer",
                  "example": 1234
                },
                {
                  "type": "string",
                  "example": "some text"
                }
              ]
            },
            "description": "List of folder IDs",
            "nullable": true
          },
          "fileIds": {
            "type": "array",
            "items": {
              "anyOf": [
                {
                  "type": "integer",
                  "example": 1234
                },
                {
                  "type": "string",
                  "example": "some text"
                }
              ]
            },
            "description": "List of file IDs",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ASC.Files.Core.ApiModels.RequestDto.FileLinkRequest": {
        "type": "object",
        "properties": {
          "linkId": {
            "type": "string",
            "description": "Link ID",
            "format": "uuid",
            "example": "75a5f745-f697-4418-b38d-0fe0d277e258"
          },
          "access": {
            "$ref": "#/components/schemas/ASC.Files.Core.Security.FileShare"
          },
          "expirationDate": {
            "$ref": "#/components/schemas/ASC.Api.Core.ApiDateTime"
          },
          "internal": {
            "type": "boolean",
            "description": "Link scope",
            "example": true
          },
          "primary": {
            "type": "boolean",
            "description": "Primary link flag",
            "example": true
          }
        },
        "additionalProperties": false,
        "description": "External link parameters"
      },
      "ASC.Files.Core.ApiModels.RequestDto.GetReferenceDataDto.System.Int32": {
        "type": "object",
        "properties": {
          "fileKey": {
            "type": "integer",
            "description": "The unique document identifier used by the service to get a link to the file",
            "format": "int32",
            "example": 1234
          },
          "instanceId": {
            "type": "string",
            "description": "The unique system identifier",
            "nullable": true,
            "example": "3536"
          },
          "sourceFileId": {
            "type": "integer",
            "description": "Source file ID",
            "format": "int32",
            "example": 1234
          },
          "path": {
            "type": "string",
            "description": "The file name or relative path for the formula editor",
            "nullable": true,
            "example": "some text"
          },
          "link": {
            "type": "string",
            "description": "Link to file",
            "nullable": true,
            "example": "some text"
          }
        },
        "additionalProperties": false,
        "description": "Request parameters for getting reference data"
      },
      "ASC.Files.Core.ApiModels.RequestDto.LockFileParameters": {
        "type": "object",
        "properties": {
          "lockFile": {
            "type": "boolean",
            "description": "Specifies whether to lock a file or not",
            "example": true
          }
        },
        "additionalProperties": false,
        "description": "Parameters for locking a file"
      },
      "ASC.Files.Core.ApiModels.RequestDto.LogoRequest": {
        "type": "object",
        "properties": {
          "tmpFile": {
            "type": "string",
            "description": "The path to the temporary image file",
            "nullable": true,
            "example": "some text"
          },
          "x": {
            "type": "integer",
            "description": "The X coordinate of the rectangle starting point",
            "format": "int32",
            "example": 1234
          },
          "y": {
            "type": "integer",
            "description": "The Y coordinate of the rectangle starting point",
            "format": "int32",
            "example": 1234
          },
          "width": {
            "type": "integer",
            "description": "The rectangle width",
            "format": "int32",
            "example": 1234
          },
          "height": {
            "type": "integer",
            "description": "The rectangle height",
            "format": "int32",
            "example": 1234
          }
        },
        "additionalProperties": false,
        "description": "Logo request parameters"
      },
      "ASC.Files.Core.ApiModels.RequestDto.OrderRequestDto": {
        "type": "object",
        "properties": {
          "order": {
            "maximum": 2147483647,
            "minimum": 1,
            "type": "integer",
            "description": "Order",
            "format": "int32",
            "example": 1234
          }
        },
        "additionalProperties": false,
        "description": "Order request parameters"
      },
      "ASC.Files.Core.ApiModels.RequestDto.OrdersItemRequestDto.System.Int32": {
        "type": "object",
        "properties": {
          "order": {
            "maximum": 2147483647,
            "minimum": 1,
            "type": "integer",
            "description": "Order",
            "format": "int32",
            "example": 1234
          },
          "entryId": {
            "type": "integer",
            "format": "int32",
            "example": 1234
          },
          "entryType": {
            "$ref": "#/components/schemas/ASC.Files.Core.FileEntryType"
          }
        },
        "additionalProperties": false
      },
      "ASC.Files.Core.ApiModels.RequestDto.OrdersRequestDto.System.Int32": {
        "type": "object",
        "properties": {
          "items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.RequestDto.OrdersItemRequestDto.System.Int32"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ASC.Files.Core.ApiModels.RequestDto.RoomInvitation": {
        "type": "object",
        "properties": {
          "email": {
            "type": "string",
            "description": "Email address",
            "format": "email",
            "nullable": true,
            "example": "Chet.Heller@yahoo.com"
          },
          "id": {
            "type": "string",
            "description": "ID of the user with whom we want to share a room",
            "format": "uuid",
            "example": "c78cc7de-d8c0-4b12-b57c-acdcc1cd4e0d"
          },
          "access": {
            "$ref": "#/components/schemas/ASC.Files.Core.Security.FileShare"
          }
        },
        "additionalProperties": false
      },
      "ASC.Files.Core.ApiModels.RequestDto.RoomInvitationRequest": {
        "type": "object",
        "properties": {
          "invitations": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.RequestDto.RoomInvitation"
            },
            "description": "Collection of invitation parameters",
            "nullable": true
          },
          "notify": {
            "type": "boolean",
            "description": "Notifies users about the shared room or not",
            "example": true
          },
          "message": {
            "type": "string",
            "description": "Message to send when notifying about the shared room",
            "nullable": true,
            "example": "some text"
          },
          "culture": {
            "type": "string",
            "description": "Culture",
            "nullable": true,
            "example": "some text"
          }
        },
        "additionalProperties": false,
        "description": "Request parameters for inviting users to a room"
      },
      "ASC.Files.Core.ApiModels.RequestDto.RoomLinkRequest": {
        "type": "object",
        "properties": {
          "linkId": {
            "type": "string",
            "description": "Link ID",
            "format": "uuid",
            "example": "75a5f745-f697-4418-b38d-0fe0d277e258"
          },
          "access": {
            "$ref": "#/components/schemas/ASC.Files.Core.Security.FileShare"
          },
          "expirationDate": {
            "$ref": "#/components/schemas/ASC.Api.Core.ApiDateTime"
          },
          "title": {
            "maxLength": 255,
            "minLength": 0,
            "type": "string",
            "description": "Link name",
            "nullable": true,
            "example": "integrated_avon_officer"
          },
          "linkType": {
            "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.ResponseDto.LinkType"
          },
          "password": {
            "maxLength": 255,
            "minLength": 0,
            "type": "string",
            "description": "Link password",
            "nullable": true,
            "example": "4ucvI6uBrq"
          },
          "denyDownload": {
            "type": "boolean",
            "description": "Specifies whether downloading a file from a link is disabled or not",
            "example": true
          }
        },
        "additionalProperties": false,
        "description": "Link parameters"
      },
      "ASC.Files.Core.ApiModels.RequestDto.RoomType": {
        "oneOf": [
          {
            "enum": [
              "FillingFormsRoom",
              "EditingRoom",
              "CustomRoom",
              "PublicRoom",
              "VirtualDataRoom"
            ],
            "type": "string",
            "description": "[FillingFormsRoom - Form filling room, EditingRoom - Collaboration room, CustomRoom - Custom room, PublicRoom - Public room, VirtualDataRoom - Virtual data room]",
            "example": "FillingFormsRoom"
          },
          {
            "enum": [
              1,
              2,
              5,
              6,
              8
            ],
            "type": "integer",
            "description": "[1 - Form filling room, 2 - Collaboration room, 5 - Custom room, 6 - Public room, 8 - Virtual data room]",
            "example": 1
          }
        ]
      },
      "ASC.Files.Core.ApiModels.RequestDto.SaveAsPdf.System.Int32": {
        "type": "object",
        "properties": {
          "folderId": {
            "type": "integer",
            "description": "Folder ID",
            "format": "int32",
            "example": 2795
          },
          "title": {
            "type": "string",
            "description": "File title",
            "nullable": true,
            "example": "css"
          }
        },
        "additionalProperties": false,
        "description": "Parameters for saving file as pdf"
      },
      "ASC.Files.Core.ApiModels.RequestDto.SessionRequest": {
        "type": "object",
        "properties": {
          "fileName": {
            "type": "string",
            "description": "File name",
            "nullable": true,
            "example": "some text"
          },
          "fileSize": {
            "type": "integer",
            "description": "File length in bytes",
            "format": "int64",
            "example": 1234
          },
          "relativePath": {
            "type": "string",
            "description": "Relative path to the folder",
            "nullable": true,
            "example": "some text"
          },
          "createOn": {
            "$ref": "#/components/schemas/ASC.Api.Core.ApiDateTime"
          },
          "encrypted": {
            "type": "boolean",
            "description": "Specifies whether to encrypt a file or not",
            "example": true
          },
          "createNewIfExist": {
            "type": "boolean",
            "description": "Create new if exists",
            "example": true
          }
        },
        "additionalProperties": false,
        "description": "Session parameters"
      },
      "ASC.Files.Core.ApiModels.RequestDto.SettingsRequestDto": {
        "type": "object",
        "properties": {
          "set": {
            "type": "boolean",
            "description": "Specifies whether to set the specified settings or not",
            "example": true
          }
        },
        "additionalProperties": false,
        "description": "Settings request parameters"
      },
      "ASC.Files.Core.ApiModels.RequestDto.StartEdit": {
        "type": "object",
        "properties": {
          "editingAlone": {
            "type": "boolean",
            "description": "Specifies whether to share a file with other users for editing or not",
            "example": true
          }
        },
        "additionalProperties": false,
        "description": "Parameters for starting file editing"
      },
      "ASC.Files.Core.ApiModels.RequestDto.TemplatesRequestDto": {
        "type": "object",
        "properties": {
          "fileIds": {
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int32"
            },
            "description": "List of file IDs",
            "nullable": true,
            "example": [
              1234
            ]
          }
        },
        "additionalProperties": false,
        "description": "Request parameters for adding files to the template list"
      },
      "ASC.Files.Core.ApiModels.RequestDto.ThirdPartyBackupRequestDto": {
        "type": "object",
        "properties": {
          "url": {
            "type": "string",
            "description": "Connection URL for the sharepoint",
            "nullable": true,
            "example": "some text"
          },
          "login": {
            "type": "string",
            "description": "Login",
            "nullable": true,
            "example": "some text"
          },
          "password": {
            "type": "string",
            "description": "Password",
            "nullable": true,
            "example": "iGLcv8Rajt"
          },
          "token": {
            "type": "string",
            "description": "Authentication token",
            "nullable": true,
            "example": "some text"
          },
          "customerTitle": {
            "type": "string",
            "description": "Customer title",
            "nullable": true,
            "example": "some text"
          },
          "providerKey": {
            "type": "string",
            "description": "Provider key",
            "nullable": true,
            "example": "some text"
          }
        },
        "additionalProperties": false,
        "description": "Third-party backup request parameters"
      },
      "ASC.Files.Core.ApiModels.RequestDto.ThirdPartyRequestDto": {
        "type": "object",
        "properties": {
          "url": {
            "type": "string",
            "description": "Connection URL for the sharepoint",
            "nullable": true,
            "example": "some text"
          },
          "login": {
            "type": "string",
            "description": "Login",
            "nullable": true,
            "example": "some text"
          },
          "password": {
            "type": "string",
            "description": "Password",
            "nullable": true,
            "example": "IgvJ5h9E01"
          },
          "token": {
            "type": "string",
            "description": "Authentication token",
            "nullable": true,
            "example": "some text"
          },
          "customerTitle": {
            "type": "string",
            "description": "Customer title",
            "nullable": true,
            "example": "some text"
          },
          "providerKey": {
            "type": "string",
            "description": "Provider key",
            "nullable": true,
            "example": "some text"
          },
          "providerId": {
            "type": "integer",
            "description": "Provider ID",
            "format": "int32",
            "nullable": true,
            "example": 1234
          }
        },
        "additionalProperties": false,
        "description": "Third-party request parameters"
      },
      "ASC.Files.Core.ApiModels.RequestDto.UpdateComment": {
        "type": "object",
        "properties": {
          "version": {
            "type": "integer",
            "description": "File version",
            "format": "int32",
            "example": 1234
          },
          "comment": {
            "type": "string",
            "description": "Comment text",
            "nullable": true,
            "example": "some text"
          }
        },
        "additionalProperties": false,
        "description": "Parameters for updating a comment"
      },
      "ASC.Files.Core.ApiModels.RequestDto.UpdateFile": {
        "type": "object",
        "properties": {
          "title": {
            "type": "string",
            "description": "File title",
            "nullable": true,
            "example": "wooden_web_readiness"
          },
          "lastVersion": {
            "type": "integer",
            "description": "Number of the latest file version",
            "format": "int32",
            "example": 1234
          }
        },
        "additionalProperties": false,
        "description": "Parameters for updating a file"
      },
      "ASC.Files.Core.ApiModels.RequestDto.UpdateRoomRequest": {
        "type": "object",
        "properties": {
          "title": {
            "maxLength": 170,
            "minLength": 0,
            "type": "string",
            "description": "Room name",
            "nullable": true,
            "example": "web"
          },
          "quota": {
            "type": "integer",
            "description": "Room quota",
            "format": "int64",
            "nullable": true,
            "example": 1234
          },
          "indexing": {
            "type": "boolean",
            "description": "Indexing",
            "nullable": true,
            "example": true
          },
          "denyDownload": {
            "type": "boolean",
            "description": "Room quota",
            "nullable": true,
            "example": true
          },
          "lifetime": {
            "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.RoomDataLifetimeDto"
          },
          "watermark": {
            "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.RequestDto.WatermarkRequestDto"
          },
          "logo": {
            "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.RequestDto.LogoRequest"
          },
          "tags": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "List of tags",
            "nullable": true,
            "example": [
              "some text"
            ]
          },
          "color": {
            "maxLength": 6,
            "minLength": 0,
            "type": "string",
            "description": "Color",
            "nullable": true,
            "example": "some text"
          },
          "cover": {
            "maxLength": 50,
            "minLength": 0,
            "type": "string",
            "description": "Cover",
            "nullable": true,
            "example": "some text"
          }
        },
        "additionalProperties": false,
        "description": "Parameters for updating a room"
      },
      "ASC.Files.Core.ApiModels.RequestDto.UpdateRoomsQuotaRequestDto.System.Int32": {
        "type": "object",
        "properties": {
          "roomIds": {
            "type": "array",
            "items": {
              "anyOf": [
                {
                  "type": "integer",
                  "example": 1234
                },
                {
                  "type": "string",
                  "example": "some text"
                }
              ]
            },
            "description": "List of room IDs",
            "nullable": true
          },
          "quota": {
            "type": "integer",
            "description": "Room quota",
            "format": "int64",
            "example": 1234
          }
        },
        "additionalProperties": false,
        "description": "Request parameters for updating room"
      },
      "ASC.Files.Core.ApiModels.RequestDto.UpdateRoomsRoomIdsRequestDto.System.Int32": {
        "type": "object",
        "properties": {
          "roomIds": {
            "type": "array",
            "items": {
              "anyOf": [
                {
                  "type": "integer",
                  "example": 1234
                },
                {
                  "type": "string",
                  "example": "some text"
                }
              ]
            },
            "description": "List of room IDs",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "Request parameters for updating room"
      },
      "ASC.Files.Core.ApiModels.RequestDto.UploadRequestDto": {
        "type": "object",
        "properties": {
          "file": {
            "type": "string",
            "description": "File",
            "format": "binary",
            "nullable": true
          },
          "contentType": {
            "$ref": "#/components/schemas/System.Net.Mime.ContentType"
          },
          "contentDisposition": {
            "$ref": "#/components/schemas/System.Net.Mime.ContentDisposition"
          },
          "files": {
            "type": "array",
            "items": {
              "type": "string",
              "format": "binary"
            },
            "description": "List of files when specified as multipart/form-data",
            "nullable": true
          },
          "createNewIfExist": {
            "type": "boolean",
            "description": "Specifies whether to create a new file if it already exists or not",
            "example": true
          },
          "storeOriginalFileFlag": {
            "type": "boolean",
            "description": "Specifies whether to upload documents in the original formats as well or not",
            "nullable": true,
            "example": true
          },
          "keepConvertStatus": {
            "type": "boolean",
            "description": "Specifies whether to keep the file converting status or not",
            "example": true
          },
          "stream": {
            "type": "string",
            "description": "Request input stream",
            "format": "binary",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "Request parameters for uploading a file"
      },
      "ASC.Files.Core.ApiModels.RequestDto.UserInvitation": {
        "type": "object",
        "properties": {
          "usersIds": {
            "type": "array",
            "items": {
              "type": "string",
              "format": "uuid"
            },
            "description": "List of user IDs",
            "nullable": true,
            "example": [
              "75a5f745-f697-4418-b38d-0fe0d277e258"
            ]
          },
          "resendAll": {
            "type": "boolean",
            "description": "Resend all",
            "example": true
          }
        },
        "additionalProperties": false,
        "description": "User invitation parameters"
      },
      "ASC.Files.Core.ApiModels.RequestDto.WatermarkRequestDto": {
        "type": "object",
        "properties": {
          "enabled": {
            "type": "boolean",
            "description": "Specifies whether watermarks are on or off",
            "nullable": true,
            "example": true
          },
          "additions": {
            "$ref": "#/components/schemas/ASC.Files.Core.VirtualRooms.WatermarkAdditions"
          },
          "text": {
            "maxLength": 255,
            "minLength": 0,
            "type": "string",
            "description": "Watermark Text",
            "nullable": true,
            "example": "some text"
          },
          "rotate": {
            "type": "integer",
            "description": "Watermark text and image rotate",
            "format": "int32",
            "example": 1234
          },
          "imageScale": {
            "type": "integer",
            "description": "Watermark image scale",
            "format": "int32",
            "example": 1234
          },
          "imageUrl": {
            "type": "string",
            "description": "The path to the temporary image file",
            "nullable": true,
            "example": "some text"
          },
          "imageHeight": {
            "type": "number",
            "description": "Watermark image height",
            "format": "double",
            "example": -8.5
          },
          "imageWidth": {
            "type": "number",
            "description": "Watermark image width",
            "format": "double",
            "example": -8.5
          }
        },
        "additionalProperties": false,
        "description": "Request parameters for adding watermarks"
      },
      "ASC.Files.Core.ApiModels.ResponseDto.AnonymousConfigDto": {
        "type": "object",
        "properties": {
          "request": {
            "type": "boolean",
            "description": "Request",
            "example": true
          }
        },
        "additionalProperties": false
      },
      "ASC.Files.Core.ApiModels.ResponseDto.CheckDestFolderDto": {
        "type": "object",
        "properties": {
          "result": {
            "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.ResponseDto.CheckDestFolderResult"
          },
          "files": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.ResponseDto.FileEntryDto"
            },
            "description": "Files",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ASC.Files.Core.ApiModels.ResponseDto.CheckDestFolderResult": {
        "oneOf": [
          {
            "enum": [
              "AllAllowed",
              "PartAllowed",
              "NoneAllowed"
            ],
            "type": "string",
            "description": "[AllAllowed - All allowed, PartAllowed - Part allowed, NoneAllowed - None allowed]",
            "example": "AllAllowed"
          },
          {
            "enum": [
              0,
              1,
              2
            ],
            "type": "integer",
            "description": "[0 - All allowed, 1 - Part allowed, 2 - None allowed]",
            "example": 0
          }
        ]
      },
      "ASC.Files.Core.ApiModels.ResponseDto.ConfigurationDto.System.Int32": {
        "type": "object",
        "properties": {
          "document": {
            "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.ResponseDto.DocumentConfigDto"
          },
          "documentType": {
            "type": "string",
            "description": "Document type",
            "nullable": true,
            "example": "some text"
          },
          "editorConfig": {
            "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.ResponseDto.EditorConfigurationDto"
          },
          "editorType": {
            "$ref": "#/components/schemas/ASC.Web.Files.Services.DocumentService.EditorType"
          },
          "editorUrl": {
            "type": "string",
            "description": "Editor URL",
            "format": "uri",
            "nullable": true,
            "example": "some text"
          },
          "token": {
            "type": "string",
            "description": "Token",
            "nullable": true,
            "example": "some text"
          },
          "type": {
            "type": "string",
            "description": "Platform type",
            "nullable": true,
            "example": "some text"
          },
          "file": {
            "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.ResponseDto.FileDto.System.Int32"
          },
          "errorMessage": {
            "type": "string",
            "description": "Error message",
            "nullable": true,
            "example": "some text"
          },
          "startFilling": {
            "type": "boolean",
            "description": "Specifies if the filling has started or not",
            "nullable": true,
            "example": true
          },
          "fillingSessionId": {
            "type": "string",
            "description": "Filling session Id",
            "nullable": true,
            "example": "some text"
          }
        },
        "additionalProperties": false
      },
      "ASC.Files.Core.ApiModels.ResponseDto.ConversationResultDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "Operation ID",
            "nullable": true,
            "example": "2226"
          },
          "Operation": {
            "$ref": "#/components/schemas/ASC.Web.Files.Services.WCFService.FileOperations.FileOperationType"
          },
          "progress": {
            "type": "integer",
            "description": "Operation progress",
            "format": "int32",
            "example": 1234
          },
          "source": {
            "type": "string",
            "description": "Source file",
            "nullable": true,
            "example": "some text"
          },
          "result": {
            "description": "Resulting file",
            "nullable": true,
            "example": {
              "int": 1234,
              "string": "some text",
              "boolean": true
            }
          },
          "error": {
            "type": "string",
            "description": "Error",
            "nullable": true,
            "example": "some text"
          },
          "processed": {
            "type": "string",
            "description": "Specifies if the operation is processed or not",
            "nullable": true,
            "example": "some text"
          }
        },
        "additionalProperties": false,
        "description": "Result of file conversation operation."
      },
      "ASC.Files.Core.ApiModels.ResponseDto.CoversResultDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "nullable": true,
            "example": "186"
          },
          "data": {
            "type": "string",
            "nullable": true,
            "example": "some text"
          }
        },
        "additionalProperties": false
      },
      "ASC.Files.Core.ApiModels.ResponseDto.CustomerConfigDto": {
        "type": "object",
        "properties": {
          "address": {
            "type": "string",
            "description": "Address",
            "nullable": true,
            "example": "some text"
          },
          "logo": {
            "type": "string",
            "description": "Logo",
            "nullable": true,
            "example": "some text"
          },
          "logoDark": {
            "type": "string",
            "description": "Dark logo",
            "nullable": true,
            "example": "some text"
          },
          "mail": {
            "type": "string",
            "description": "Mail",
            "nullable": true,
            "example": "some text"
          },
          "name": {
            "type": "string",
            "description": "Name",
            "nullable": true,
            "example": "Nellie Gottlieb"
          },
          "www": {
            "type": "string",
            "description": "Site",
            "nullable": true,
            "example": "some text"
          }
        },
        "additionalProperties": false
      },
      "ASC.Files.Core.ApiModels.ResponseDto.CustomizationConfigDto": {
        "type": "object",
        "properties": {
          "about": {
            "type": "boolean",
            "description": "About",
            "example": true
          },
          "customer": {
            "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.ResponseDto.CustomerConfigDto"
          },
          "anonymous": {
            "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.ResponseDto.AnonymousConfigDto"
          },
          "feedback": {
            "$ref": "#/components/schemas/ASC.Web.Files.Services.DocumentService.FeedbackConfig"
          },
          "forcesave": {
            "type": "boolean",
            "description": "Forcesave",
            "nullable": true,
            "example": true
          },
          "goback": {
            "$ref": "#/components/schemas/ASC.Web.Files.Services.DocumentService.GobackConfig"
          },
          "logo": {
            "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.ResponseDto.LogoConfigDto"
          },
          "mentionShare": {
            "type": "boolean",
            "description": "MentionShare",
            "example": true
          },
          "reviewDisplay": {
            "type": "string",
            "description": "Review display",
            "nullable": true,
            "example": "some text"
          },
          "submitForm": {
            "type": "boolean",
            "description": "Submit form",
            "example": true
          }
        },
        "additionalProperties": false
      },
      "ASC.Files.Core.ApiModels.ResponseDto.DocServiceUrlDto": {
        "required": [
          "docServicePortalUrl",
          "docServiceUrl",
          "docServiceUrlApi",
          "docServiceUrlInternal",
          "isDefault",
          "version"
        ],
        "type": "object",
        "properties": {
          "version": {
            "type": "string",
            "description": "Version",
            "nullable": true,
            "example": "some text"
          },
          "docServiceUrlApi": {
            "type": "string",
            "description": "Doc service url api",
            "nullable": true,
            "example": "some text"
          },
          "docServiceUrl": {
            "type": "string",
            "description": "Doc service url",
            "nullable": true,
            "example": "some text"
          },
          "docServiceUrlInternal": {
            "type": "string",
            "description": "Doc service url internal",
            "nullable": true,
            "example": "some text"
          },
          "docServicePortalUrl": {
            "type": "string",
            "description": "Doc service portal url",
            "nullable": true,
            "example": "some text"
          },
          "isDefault": {
            "type": "boolean",
            "description": "Is default",
            "example": true
          }
        },
        "additionalProperties": false
      },
      "ASC.Files.Core.ApiModels.ResponseDto.DocumentBuilderTaskDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "Id",
            "nullable": true,
            "example": "7081"
          },
          "error": {
            "type": "string",
            "description": "Error",
            "nullable": true,
            "example": "some text"
          },
          "percentage": {
            "type": "integer",
            "description": "Percentage",
            "format": "int32",
            "example": 1234
          },
          "isCompleted": {
            "type": "boolean",
            "description": "Is completed",
            "example": true
          },
          "status": {
            "$ref": "#/components/schemas/ASC.Common.Threading.DistributedTaskStatus"
          },
          "resultFileId": {
            "description": "Result file id",
            "nullable": true,
            "example": {
              "int": 1234,
              "string": "some text",
              "boolean": true
            }
          },
          "resultFileName": {
            "type": "string",
            "description": "Result file name",
            "nullable": true,
            "example": "some text"
          },
          "resultFileUrl": {
            "type": "string",
            "description": "Result file url",
            "nullable": true,
            "example": "some text"
          }
        },
        "additionalProperties": false
      },
      "ASC.Files.Core.ApiModels.ResponseDto.DocumentConfigDto": {
        "type": "object",
        "properties": {
          "fileType": {
            "type": "string",
            "description": "File type",
            "nullable": true,
            "example": "some text"
          },
          "info": {
            "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.ResponseDto.InfoConfigDto"
          },
          "isLinkedForMe": {
            "type": "boolean",
            "description": "Is linked for me",
            "example": true
          },
          "key": {
            "type": "string",
            "description": "Key",
            "nullable": true,
            "example": "some text"
          },
          "permissions": {
            "$ref": "#/components/schemas/ASC.Web.Files.Services.DocumentService.PermissionsConfig"
          },
          "sharedLinkParam": {
            "type": "string",
            "description": "Shared link param",
            "nullable": true,
            "example": "some text"
          },
          "sharedLinkKey": {
            "type": "string",
            "description": "Shared link key",
            "nullable": true,
            "example": "some text"
          },
          "referenceData": {
            "$ref": "#/components/schemas/ASC.Web.Files.Services.DocumentService.FileReferenceData"
          },
          "title": {
            "type": "string",
            "description": "Title",
            "nullable": true,
            "example": "application"
          },
          "url": {
            "type": "string",
            "description": "Url",
            "format": "uri",
            "nullable": true,
            "example": "some text"
          },
          "options": {
            "$ref": "#/components/schemas/ASC.Web.Files.Services.DocumentService.Options"
          }
        },
        "additionalProperties": false
      },
      "ASC.Files.Core.ApiModels.ResponseDto.DraftLocation.System.Int32": {
        "type": "object",
        "properties": {
          "folderId": {
            "type": "integer",
            "description": "InProcess folder ID",
            "format": "int32",
            "example": 1438
          },
          "folderTitle": {
            "type": "string",
            "description": "InProcess folder title",
            "nullable": true,
            "example": "some text"
          },
          "fileId": {
            "type": "integer",
            "description": "Draft ID",
            "format": "int32",
            "example": 2180
          },
          "fileTitle": {
            "type": "string",
            "description": "Draft title",
            "nullable": true,
            "example": "some text"
          }
        },
        "additionalProperties": false
      },
      "ASC.Files.Core.ApiModels.ResponseDto.EditHistoryChangesWrapper": {
        "type": "object",
        "properties": {
          "user": {
            "$ref": "#/components/schemas/ASC.Files.Core.EditHistoryAuthor"
          },
          "created": {
            "$ref": "#/components/schemas/ASC.Api.Core.ApiDateTime"
          }
        },
        "additionalProperties": false
      },
      "ASC.Files.Core.ApiModels.ResponseDto.EditHistoryDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "description": "File ID",
            "format": "int32",
            "example": 1234
          },
          "key": {
            "type": "string",
            "description": "Key",
            "nullable": true,
            "example": "some text"
          },
          "version": {
            "type": "integer",
            "description": "File version",
            "format": "int32",
            "example": 1234
          },
          "versionGroup": {
            "type": "integer",
            "description": "Version group",
            "format": "int32",
            "example": 1234
          },
          "user": {
            "$ref": "#/components/schemas/ASC.Files.Core.EditHistoryAuthor"
          },
          "created": {
            "$ref": "#/components/schemas/ASC.Api.Core.ApiDateTime"
          },
          "changesHistory": {
            "type": "string",
            "description": "History changes in the string format",
            "nullable": true,
            "example": "some text"
          },
          "changes": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.ResponseDto.EditHistoryChangesWrapper"
            },
            "description": "List of history changes",
            "nullable": true
          },
          "serverVersion": {
            "type": "string",
            "description": "Server version",
            "nullable": true,
            "example": "some text"
          }
        },
        "additionalProperties": false
      },
      "ASC.Files.Core.ApiModels.ResponseDto.EditorConfigurationDto": {
        "type": "object",
        "properties": {
          "callbackUrl": {
            "type": "string",
            "description": "Callback url",
            "format": "uri",
            "nullable": true,
            "example": "some text"
          },
          "coEditing": {
            "$ref": "#/components/schemas/ASC.Web.Files.Services.DocumentService.CoEditingConfig"
          },
          "createUrl": {
            "type": "string",
            "description": "Create url",
            "nullable": true,
            "example": "some text"
          },
          "customization": {
            "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.ResponseDto.CustomizationConfigDto"
          },
          "embedded": {
            "$ref": "#/components/schemas/ASC.Web.Files.Services.DocumentService.EmbeddedConfig"
          },
          "encryptionKeys": {
            "$ref": "#/components/schemas/ASC.Web.Files.Services.DocumentService.EncryptionKeysConfig"
          },
          "lang": {
            "type": "string",
            "description": "Lang",
            "nullable": true,
            "example": "some text"
          },
          "mode": {
            "type": "string",
            "description": "Mode",
            "nullable": true,
            "example": "some text"
          },
          "modeWrite": {
            "type": "boolean",
            "description": "Mode write",
            "example": true
          },
          "plugins": {
            "$ref": "#/components/schemas/ASC.Web.Files.Services.DocumentService.PluginsConfig"
          },
          "recent": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ASC.Web.Files.Services.DocumentService.RecentConfig"
            },
            "description": "Recent",
            "nullable": true
          },
          "templates": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ASC.Web.Files.Services.DocumentService.TemplatesConfig"
            },
            "description": "Templates",
            "nullable": true
          },
          "user": {
            "$ref": "#/components/schemas/ASC.Web.Files.Services.DocumentService.UserConfig"
          }
        },
        "additionalProperties": false
      },
      "ASC.Files.Core.ApiModels.ResponseDto.FileDto.System.Int32": {
        "type": "object",
        "properties": {
          "title": {
            "type": "string",
            "description": "Title",
            "nullable": true,
            "example": "Some titile.txt/ Some title"
          },
          "access": {
            "$ref": "#/components/schemas/ASC.Files.Core.Security.FileShare"
          },
          "shared": {
            "type": "boolean",
            "description": "Specifies if the file is shared or not",
            "example": false
          },
          "created": {
            "$ref": "#/components/schemas/ASC.Api.Core.ApiDateTime"
          },
          "createdBy": {
            "$ref": "#/components/schemas/ASC.Web.Api.Models.EmployeeDto"
          },
          "updated": {
            "$ref": "#/components/schemas/ASC.Api.Core.ApiDateTime"
          },
          "autoDelete": {
            "$ref": "#/components/schemas/ASC.Api.Core.ApiDateTime"
          },
          "rootFolderType": {
            "$ref": "#/components/schemas/ASC.Files.Core.FolderType"
          },
          "parentRoomType": {
            "$ref": "#/components/schemas/ASC.Files.Core.FolderType"
          },
          "updatedBy": {
            "$ref": "#/components/schemas/ASC.Web.Api.Models.EmployeeDto"
          },
          "providerItem": {
            "type": "boolean",
            "description": "Provider is specified or not",
            "nullable": true,
            "example": true
          },
          "providerKey": {
            "type": "string",
            "description": "Provider key",
            "nullable": true,
            "example": "some text"
          },
          "providerId": {
            "type": "integer",
            "description": "Provider ID",
            "format": "int32",
            "nullable": true,
            "example": 1234
          },
          "order": {
            "type": "string",
            "description": "Order",
            "nullable": true,
            "example": "some text"
          },
          "id": {
            "type": "integer",
            "description": "Id",
            "format": "int32",
            "example": 10
          },
          "rootFolderId": {
            "type": "integer",
            "description": "Root folder id",
            "format": "int32",
            "example": 1234
          },
          "originId": {
            "type": "integer",
            "description": "Origin id",
            "format": "int32",
            "example": 1234
          },
          "originRoomId": {
            "type": "integer",
            "description": "Origin room id",
            "format": "int32",
            "example": 1234
          },
          "originTitle": {
            "type": "string",
            "description": "Origin title",
            "nullable": true,
            "example": "some text"
          },
          "originRoomTitle": {
            "type": "string",
            "description": "Origin room title",
            "nullable": true,
            "example": "some text"
          },
          "canShare": {
            "type": "boolean",
            "description": "Can share",
            "example": true
          },
          "security": {
            "type": "object",
            "properties": {
              "Read": {
                "type": "boolean"
              },
              "Comment": {
                "type": "boolean"
              },
              "FillForms": {
                "type": "boolean"
              },
              "Review": {
                "type": "boolean"
              },
              "Create": {
                "type": "boolean"
              },
              "Edit": {
                "type": "boolean"
              },
              "Delete": {
                "type": "boolean"
              },
              "CustomFilter": {
                "type": "boolean"
              },
              "EditRoom": {
                "type": "boolean"
              },
              "Rename": {
                "type": "boolean"
              },
              "ReadHistory": {
                "type": "boolean"
              },
              "Lock": {
                "type": "boolean"
              },
              "EditHistory": {
                "type": "boolean"
              },
              "CopyTo": {
                "type": "boolean"
              },
              "Copy": {
                "type": "boolean"
              },
              "MoveTo": {
                "type": "boolean"
              },
              "Move": {
                "type": "boolean"
              },
              "Pin": {
                "type": "boolean"
              },
              "Mute": {
                "type": "boolean"
              },
              "EditAccess": {
                "type": "boolean"
              },
              "Duplicate": {
                "type": "boolean"
              },
              "SubmitToFormGallery": {
                "type": "boolean"
              },
              "Download": {
                "type": "boolean"
              },
              "Convert": {
                "type": "boolean"
              },
              "CopySharedLink": {
                "type": "boolean"
              },
              "ReadLinks": {
                "type": "boolean"
              },
              "Reconnect": {
                "type": "boolean"
              },
              "CreateRoomFrom": {
                "type": "boolean"
              },
              "CopyLink": {
                "type": "boolean"
              },
              "Embed": {
                "type": "boolean"
              },
              "ChangeOwner": {
                "type": "boolean"
              },
              "IndexExport": {
                "type": "boolean"
              }
            },
            "additionalProperties": false,
            "description": "Security",
            "nullable": true,
            "example": [
              {
                "value": true
              }
            ]
          },
          "requestToken": {
            "type": "string",
            "nullable": true,
            "example": "some text"
          },
          "folderId": {
            "type": "integer",
            "description": "Folder ID",
            "format": "int32",
            "example": 8650
          },
          "version": {
            "type": "integer",
            "description": "Version",
            "format": "int32",
            "example": 3
          },
          "versionGroup": {
            "type": "integer",
            "description": "Version group",
            "format": "int32",
            "example": 1
          },
          "contentLength": {
            "type": "string",
            "description": "Content length",
            "nullable": true,
            "example": "12345"
          },
          "pureContentLength": {
            "type": "integer",
            "description": "Pure content length",
            "format": "int64",
            "nullable": true,
            "example": 1234
          },
          "fileStatus": {
            "$ref": "#/components/schemas/ASC.Files.Core.FileStatus"
          },
          "mute": {
            "type": "boolean",
            "description": "Muted or not",
            "example": false
          },
          "viewUrl": {
            "type": "string",
            "description": "URL to view a file",
            "format": "uri",
            "nullable": true,
            "example": "https://www.onlyoffice.com/viewfile?fileid=2221"
          },
          "webUrl": {
            "type": "string",
            "description": "Web URL",
            "format": "uri",
            "nullable": true,
            "example": "some text"
          },
          "fileType": {
            "$ref": "#/components/schemas/ASC.Web.Core.Files.FileType"
          },
          "fileExst": {
            "type": "string",
            "description": "File extension",
            "nullable": true,
            "example": ".txt"
          },
          "comment": {
            "type": "string",
            "description": "Comment",
            "nullable": true,
            "example": "some text"
          },
          "encrypted": {
            "type": "boolean",
            "description": "Encrypted or not",
            "nullable": true,
            "example": false
          },
          "thumbnailUrl": {
            "type": "string",
            "description": "Thumbnail URL",
            "format": "uri",
            "nullable": true,
            "example": "some text"
          },
          "thumbnailStatus": {
            "$ref": "#/components/schemas/ASC.Files.Core.Thumbnail"
          },
          "locked": {
            "type": "boolean",
            "description": "Locked or not",
            "nullable": true,
            "example": true
          },
          "lockedBy": {
            "type": "string",
            "description": "User ID who locked a file",
            "nullable": true,
            "example": "some text"
          },
          "hasDraft": {
            "type": "boolean",
            "description": "Is there a draft or not",
            "nullable": true,
            "example": false
          },
          "isForm": {
            "type": "boolean",
            "description": "Is there a form or not",
            "nullable": true,
            "example": false
          },
          "startFilling": {
            "type": "boolean",
            "description": "Specifies if the filling has started or not",
            "nullable": true,
            "example": false
          },
          "inProcessFolderId": {
            "type": "integer",
            "description": "InProcess folder ID",
            "format": "int32",
            "nullable": true,
            "example": 1234
          },
          "inProcessFolderTitle": {
            "type": "string",
            "description": "InProcess folder title",
            "nullable": true,
            "example": "some text"
          },
          "draftLocation": {
            "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.ResponseDto.DraftLocation.System.Int32"
          },
          "viewAccessibility": {
            "type": "object",
            "properties": {
              "ImageView": {
                "type": "boolean"
              },
              "MediaView": {
                "type": "boolean"
              },
              "WebView": {
                "type": "boolean"
              },
              "WebEdit": {
                "type": "boolean"
              },
              "WebReview": {
                "type": "boolean"
              },
              "WebCustomFilterEditing": {
                "type": "boolean"
              },
              "WebRestrictedEditing": {
                "type": "boolean"
              },
              "WebComment": {
                "type": "boolean"
              },
              "CoAuhtoring": {
                "type": "boolean"
              },
              "CanConvert": {
                "type": "boolean"
              },
              "MustConvert": {
                "type": "boolean"
              }
            },
            "additionalProperties": false,
            "description": "File accessibility",
            "nullable": true,
            "example": [
              {
                "value": true
              }
            ]
          },
          "availableExternalRights": {
            "type": "object",
            "additionalProperties": {
              "type": "boolean"
            },
            "description": "Available external rights",
            "nullable": true,
            "example": [
              {
                "key": "some text",
                "value": true
              }
            ]
          },
          "lastOpened": {
            "$ref": "#/components/schemas/ASC.Api.Core.ApiDateTime"
          },
          "expired": {
            "$ref": "#/components/schemas/ASC.Api.Core.ApiDateTime"
          },
          "fileEntryType": {
            "$ref": "#/components/schemas/ASC.Files.Core.FileEntryType"
          }
        },
        "additionalProperties": false
      },
      "ASC.Files.Core.ApiModels.ResponseDto.FileEntryDto": {
        "type": "object",
        "properties": {
          "title": {
            "type": "string",
            "description": "Title",
            "nullable": true,
            "example": "Some titile.txt/ Some title"
          },
          "access": {
            "$ref": "#/components/schemas/ASC.Files.Core.Security.FileShare"
          },
          "shared": {
            "type": "boolean",
            "description": "Specifies if the file is shared or not",
            "example": false
          },
          "created": {
            "$ref": "#/components/schemas/ASC.Api.Core.ApiDateTime"
          },
          "createdBy": {
            "$ref": "#/components/schemas/ASC.Web.Api.Models.EmployeeDto"
          },
          "updated": {
            "$ref": "#/components/schemas/ASC.Api.Core.ApiDateTime"
          },
          "autoDelete": {
            "$ref": "#/components/schemas/ASC.Api.Core.ApiDateTime"
          },
          "rootFolderType": {
            "$ref": "#/components/schemas/ASC.Files.Core.FolderType"
          },
          "parentRoomType": {
            "$ref": "#/components/schemas/ASC.Files.Core.FolderType"
          },
          "updatedBy": {
            "$ref": "#/components/schemas/ASC.Web.Api.Models.EmployeeDto"
          },
          "providerItem": {
            "type": "boolean",
            "description": "Provider is specified or not",
            "nullable": true,
            "example": true
          },
          "providerKey": {
            "type": "string",
            "description": "Provider key",
            "nullable": true,
            "example": "some text"
          },
          "providerId": {
            "type": "integer",
            "description": "Provider ID",
            "format": "int32",
            "nullable": true,
            "example": 1234
          },
          "order": {
            "type": "string",
            "description": "Order",
            "nullable": true,
            "example": "some text"
          },
          "fileEntryType": {
            "$ref": "#/components/schemas/ASC.Files.Core.FileEntryType"
          }
        },
        "additionalProperties": false
      },
      "ASC.Files.Core.ApiModels.ResponseDto.FileOperationDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "Operation ID",
            "nullable": true,
            "example": "7780"
          },
          "Operation": {
            "$ref": "#/components/schemas/ASC.Web.Files.Services.WCFService.FileOperations.FileOperationType"
          },
          "progress": {
            "type": "integer",
            "description": "Operation progress",
            "format": "int32",
            "example": 100
          },
          "error": {
            "type": "string",
            "description": "Error",
            "nullable": true,
            "example": ""
          },
          "processed": {
            "type": "string",
            "description": "Processing status",
            "nullable": true,
            "example": "1"
          },
          "finished": {
            "type": "boolean",
            "description": "Specifies if the operation is finished or not",
            "example": true
          },
          "url": {
            "type": "string",
            "description": "URL",
            "format": "uri",
            "nullable": true,
            "example": "some text"
          },
          "files": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.ResponseDto.FileEntryDto"
            },
            "description": "List of files",
            "nullable": true
          },
          "folders": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.ResponseDto.FileEntryDto"
            },
            "description": "List of folders",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ASC.Files.Core.ApiModels.ResponseDto.FileShareDto": {
        "type": "object",
        "properties": {
          "access": {
            "$ref": "#/components/schemas/ASC.Files.Core.Security.FileShare"
          },
          "sharedTo": {
            "description": "A user who has the access to the specified file",
            "nullable": true,
            "example": {
              "int": 1234,
              "string": "some text",
              "boolean": true
            }
          },
          "isLocked": {
            "type": "boolean",
            "description": "Specifies if the file is locked by this user or not",
            "example": false
          },
          "isOwner": {
            "type": "boolean",
            "description": "Specifies if this user is an owner of the specified file or not",
            "example": true
          },
          "canEditAccess": {
            "type": "boolean",
            "description": "Spceifies if this user can edit the access to the specified file or not",
            "example": true
          },
          "subjectType": {
            "$ref": "#/components/schemas/ASC.Files.Core.Security.SubjectType"
          }
        },
        "additionalProperties": false
      },
      "ASC.Files.Core.ApiModels.ResponseDto.FilesSettingsDto": {
        "type": "object",
        "properties": {
          "extsImagePreviewed": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Exts image previewed",
            "nullable": true,
            "example": [
              "some text"
            ]
          },
          "extsMediaPreviewed": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Exts media previewed",
            "nullable": true,
            "example": [
              "some text"
            ]
          },
          "extsWebPreviewed": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Exts web previewed",
            "nullable": true,
            "example": [
              "some text"
            ]
          },
          "extsWebEdited": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Exts web edited",
            "nullable": true,
            "example": [
              "some text"
            ]
          },
          "extsWebEncrypt": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Exts web encrypt",
            "nullable": true,
            "example": [
              "some text"
            ]
          },
          "extsWebReviewed": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Exts web reviewed",
            "nullable": true,
            "example": [
              "some text"
            ]
          },
          "extsWebCustomFilterEditing": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Exts web custom filter editing",
            "nullable": true,
            "example": [
              "some text"
            ]
          },
          "extsWebRestrictedEditing": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Exts web restricted editing",
            "nullable": true,
            "example": [
              "some text"
            ]
          },
          "extsWebCommented": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Exts web commented",
            "nullable": true,
            "example": [
              "some text"
            ]
          },
          "extsWebTemplate": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Exts web template",
            "nullable": true,
            "example": [
              "some text"
            ]
          },
          "extsCoAuthoring": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Exts co authoring",
            "nullable": true,
            "example": [
              "some text"
            ]
          },
          "extsMustConvert": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Exts must convert",
            "nullable": true,
            "example": [
              "some text"
            ]
          },
          "extsConvertible": {
            "type": "object",
            "additionalProperties": {
              "type": "array",
              "items": {
                "type": "string"
              },
              "nullable": true
            },
            "description": "Exts convertible",
            "nullable": true,
            "example": [
              {
                "key": "some text",
                "value": [
                  "some text"
                ]
              }
            ]
          },
          "extsUploadable": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Exts uploadable",
            "nullable": true,
            "example": [
              "some text"
            ]
          },
          "extsArchive": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Exts archive",
            "nullable": true,
            "example": [
              "some text"
            ]
          },
          "extsVideo": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Exts video",
            "nullable": true,
            "example": [
              "some text"
            ]
          },
          "extsAudio": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Exts audio",
            "nullable": true,
            "example": [
              "some text"
            ]
          },
          "extsImage": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Exts image",
            "nullable": true,
            "example": [
              "some text"
            ]
          },
          "extsSpreadsheet": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Exts spreadsheet",
            "nullable": true,
            "example": [
              "some text"
            ]
          },
          "extsPresentation": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Exts presentation",
            "nullable": true,
            "example": [
              "some text"
            ]
          },
          "extsDocument": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Exts document",
            "nullable": true,
            "example": [
              "some text"
            ]
          },
          "internalFormats": {
            "type": "object",
            "properties": {
              "Unknown": {
                "type": "string"
              },
              "Archive": {
                "type": "string"
              },
              "Video": {
                "type": "string"
              },
              "Audio": {
                "type": "string"
              },
              "Image": {
                "type": "string"
              },
              "Spreadsheet": {
                "type": "string"
              },
              "Presentation": {
                "type": "string"
              },
              "Document": {
                "type": "string"
              },
              "Pdf": {
                "type": "string"
              }
            },
            "additionalProperties": false,
            "description": "Internal formats",
            "nullable": true,
            "example": [
              {
                "value": "some text"
              }
            ]
          },
          "masterFormExtension": {
            "type": "string",
            "description": "Master form extension",
            "nullable": true,
            "example": "some text"
          },
          "paramVersion": {
            "type": "string",
            "description": "Param version",
            "nullable": true,
            "example": "some text"
          },
          "paramOutType": {
            "type": "string",
            "description": "Param out type",
            "nullable": true,
            "example": "some text"
          },
          "fileDownloadUrlString": {
            "type": "string",
            "description": "File download url string",
            "format": "uri",
            "nullable": true,
            "example": "some text"
          },
          "fileWebViewerUrlString": {
            "type": "string",
            "description": "File web viewer url string",
            "nullable": true,
            "example": "some text"
          },
          "fileWebViewerExternalUrlString": {
            "type": "string",
            "description": "File web viewer external url string",
            "format": "uri",
            "nullable": true,
            "example": "some text"
          },
          "fileWebEditorUrlString": {
            "type": "string",
            "description": "File web editor url string",
            "nullable": true,
            "example": "some text"
          },
          "fileWebEditorExternalUrlString": {
            "type": "string",
            "description": "File web editor external url string",
            "format": "uri",
            "nullable": true,
            "example": "some text"
          },
          "fileRedirectPreviewUrlString": {
            "type": "string",
            "description": "File redirect preview url string",
            "format": "uri",
            "nullable": true,
            "example": "some text"
          },
          "fileThumbnailUrlString": {
            "type": "string",
            "description": "File thumbnail url string",
            "format": "uri",
            "nullable": true,
            "example": "some text"
          },
          "confirmDelete": {
            "type": "boolean",
            "description": "Confirm delete",
            "example": true
          },
          "enableThirdParty": {
            "type": "boolean",
            "description": "EnableT third party",
            "example": true
          },
          "externalShare": {
            "type": "boolean",
            "description": "External share",
            "example": true
          },
          "externalShareSocialMedia": {
            "type": "boolean",
            "description": "External share social media",
            "example": true
          },
          "storeOriginalFiles": {
            "type": "boolean",
            "description": "Store original files",
            "example": true
          },
          "keepNewFileName": {
            "type": "boolean",
            "description": "Keep new file name",
            "example": true
          },
          "displayFileExtension": {
            "type": "boolean",
            "description": "Display file extension",
            "example": true
          },
          "convertNotify": {
            "type": "boolean",
            "description": "Convert notify",
            "example": true
          },
          "hideConfirmConvertSave": {
            "type": "boolean",
            "description": "HideC confirm convert save",
            "example": true
          },
          "hideConfirmConvertOpen": {
            "type": "boolean",
            "description": "Hide confirm convert open",
            "example": true
          },
          "defaultOrder": {
            "$ref": "#/components/schemas/ASC.Files.Core.OrderBy"
          },
          "forcesave": {
            "type": "boolean",
            "description": "Forcesave",
            "example": true
          },
          "storeForcesave": {
            "type": "boolean",
            "description": "Store forcesave",
            "example": true
          },
          "recentSection": {
            "type": "boolean",
            "description": "Recent section",
            "example": true
          },
          "favoritesSection": {
            "type": "boolean",
            "description": "Favorites section",
            "example": true
          },
          "templatesSection": {
            "type": "boolean",
            "description": "Templates section",
            "example": true
          },
          "downloadTarGz": {
            "type": "boolean",
            "description": "Download tar gz",
            "example": true
          },
          "automaticallyCleanUp": {
            "$ref": "#/components/schemas/ASC.Files.Core.AutoCleanUpData"
          },
          "canSearchByContent": {
            "type": "boolean",
            "description": "Can search by content",
            "example": true
          },
          "defaultSharingAccessRights": {
            "type": "array",
            "items": {
              "anyOf": [
                {
                  "enum": [
                    "None",
                    "ReadWrite",
                    "Read",
                    "Restrict",
                    "Varies",
                    "Review",
                    "Comment",
                    "FillForms",
                    "CustomFilter",
                    "RoomManager",
                    "Editing",
                    "ContentCreator"
                  ],
                  "type": "string",
                  "description": "[None - None, ReadWrite - Read and write, Read - Read, Restrict - Restrict, Varies - Varies, Review - Review, Comment - Comment, FillForms - Fill forms, CustomFilter - Custom filter, RoomManager - Room manager, Editing - Editing, ContentCreator - Content creator]",
                  "example": "None"
                },
                {
                  "enum": [
                    0,
                    1,
                    2,
                    3,
                    4,
                    5,
                    6,
                    7,
                    8,
                    9,
                    10,
                    11
                  ],
                  "type": "integer",
                  "description": "[0 - None, 1 - Read and write, 2 - Read, 3 - Restrict, 4 - Varies, 5 - Review, 6 - Comment, 7 - Fill forms, 8 - Custom filter, 9 - Room manager, 10 - Editing, 11 - Content creator]",
                  "example": 0
                }
              ]
            },
            "description": "Default sharing access rights",
            "nullable": true
          },
          "maxUploadThreadCount": {
            "type": "integer",
            "description": "Max upload thread count",
            "format": "int32",
            "example": 1234
          },
          "chunkUploadSize": {
            "type": "integer",
            "description": "Chunk upload size",
            "format": "int64",
            "example": 1234
          },
          "openEditorInSameTab": {
            "type": "boolean",
            "description": "Open editor in same tab",
            "example": true
          }
        },
        "additionalProperties": false
      },
      "ASC.Files.Core.ApiModels.ResponseDto.FilesStatisticsFolder": {
        "type": "object",
        "properties": {
          "title": {
            "type": "string",
            "description": "Folder title",
            "nullable": true,
            "example": "unbranded_harness_feed"
          },
          "usedSpace": {
            "type": "integer",
            "description": "Used space",
            "format": "int64",
            "example": 1234
          }
        },
        "additionalProperties": false
      },
      "ASC.Files.Core.ApiModels.ResponseDto.FilesStatisticsResultDto": {
        "type": "object",
        "properties": {
          "myDocumentsUsedSpace": {
            "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.ResponseDto.FilesStatisticsFolder"
          },
          "trashUsedSpace": {
            "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.ResponseDto.FilesStatisticsFolder"
          },
          "archiveUsedSpace": {
            "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.ResponseDto.FilesStatisticsFolder"
          },
          "roomsUsedSpace": {
            "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.ResponseDto.FilesStatisticsFolder"
          }
        },
        "additionalProperties": false
      },
      "ASC.Files.Core.ApiModels.ResponseDto.FillingFormResultDto.System.Int32": {
        "type": "object",
        "properties": {
          "formNumber": {
            "type": "integer",
            "description": "Form number",
            "format": "int32",
            "example": 1234
          },
          "completedForm": {
            "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.ResponseDto.FileDto.System.Int32"
          },
          "originalForm": {
            "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.ResponseDto.FileDto.System.Int32"
          },
          "manager": {
            "$ref": "#/components/schemas/ASC.Web.Api.Models.EmployeeFullDto"
          },
          "roomId": {
            "type": "integer",
            "description": "Room Id",
            "format": "int32",
            "example": 5943
          },
          "isRoomMember": {
            "type": "boolean",
            "description": "Is room member",
            "example": true
          }
        },
        "additionalProperties": false
      },
      "ASC.Files.Core.ApiModels.ResponseDto.FolderContentDto.System.Int32": {
        "type": "object",
        "properties": {
          "files": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.ResponseDto.FileEntryDto"
            },
            "description": "List of files",
            "nullable": true
          },
          "folders": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.ResponseDto.FileEntryDto"
            },
            "description": "List of folders",
            "nullable": true
          },
          "current": {
            "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.ResponseDto.FolderDto.System.Int32"
          },
          "pathParts": {
            "description": "Folder path",
            "nullable": true,
            "example": "{key = \"Key\", path = \"//path//to//folder\"}"
          },
          "startIndex": {
            "type": "integer",
            "description": "Folder start index",
            "format": "int32",
            "example": 0
          },
          "count": {
            "type": "integer",
            "description": "Number of folder elements",
            "format": "int32",
            "example": 4
          },
          "total": {
            "type": "integer",
            "description": "Total number of elements in the folder",
            "format": "int32",
            "example": 4
          },
          "new": {
            "type": "integer",
            "description": "New element index",
            "format": "int32",
            "example": 1234
          }
        },
        "additionalProperties": false
      },
      "ASC.Files.Core.ApiModels.ResponseDto.FolderDto.System.Int32": {
        "type": "object",
        "properties": {
          "title": {
            "type": "string",
            "description": "Title",
            "nullable": true,
            "example": "Some titile.txt/ Some title"
          },
          "access": {
            "$ref": "#/components/schemas/ASC.Files.Core.Security.FileShare"
          },
          "shared": {
            "type": "boolean",
            "description": "Specifies if the file is shared or not",
            "example": false
          },
          "created": {
            "$ref": "#/components/schemas/ASC.Api.Core.ApiDateTime"
          },
          "createdBy": {
            "$ref": "#/components/schemas/ASC.Web.Api.Models.EmployeeDto"
          },
          "updated": {
            "$ref": "#/components/schemas/ASC.Api.Core.ApiDateTime"
          },
          "autoDelete": {
            "$ref": "#/components/schemas/ASC.Api.Core.ApiDateTime"
          },
          "rootFolderType": {
            "$ref": "#/components/schemas/ASC.Files.Core.FolderType"
          },
          "parentRoomType": {
            "$ref": "#/components/schemas/ASC.Files.Core.FolderType"
          },
          "updatedBy": {
            "$ref": "#/components/schemas/ASC.Web.Api.Models.EmployeeDto"
          },
          "providerItem": {
            "type": "boolean",
            "description": "Provider is specified or not",
            "nullable": true,
            "example": true
          },
          "providerKey": {
            "type": "string",
            "description": "Provider key",
            "nullable": true,
            "example": "some text"
          },
          "providerId": {
            "type": "integer",
            "description": "Provider ID",
            "format": "int32",
            "nullable": true,
            "example": 1234
          },
          "order": {
            "type": "string",
            "description": "Order",
            "nullable": true,
            "example": "some text"
          },
          "id": {
            "type": "integer",
            "description": "Id",
            "format": "int32",
            "example": 10
          },
          "rootFolderId": {
            "type": "integer",
            "description": "Root folder id",
            "format": "int32",
            "example": 1234
          },
          "originId": {
            "type": "integer",
            "description": "Origin id",
            "format": "int32",
            "example": 1234
          },
          "originRoomId": {
            "type": "integer",
            "description": "Origin room id",
            "format": "int32",
            "example": 1234
          },
          "originTitle": {
            "type": "string",
            "description": "Origin title",
            "nullable": true,
            "example": "some text"
          },
          "originRoomTitle": {
            "type": "string",
            "description": "Origin room title",
            "nullable": true,
            "example": "some text"
          },
          "canShare": {
            "type": "boolean",
            "description": "Can share",
            "example": true
          },
          "security": {
            "type": "object",
            "properties": {
              "Read": {
                "type": "boolean"
              },
              "Comment": {
                "type": "boolean"
              },
              "FillForms": {
                "type": "boolean"
              },
              "Review": {
                "type": "boolean"
              },
              "Create": {
                "type": "boolean"
              },
              "Edit": {
                "type": "boolean"
              },
              "Delete": {
                "type": "boolean"
              },
              "CustomFilter": {
                "type": "boolean"
              },
              "EditRoom": {
                "type": "boolean"
              },
              "Rename": {
                "type": "boolean"
              },
              "ReadHistory": {
                "type": "boolean"
              },
              "Lock": {
                "type": "boolean"
              },
              "EditHistory": {
                "type": "boolean"
              },
              "CopyTo": {
                "type": "boolean"
              },
              "Copy": {
                "type": "boolean"
              },
              "MoveTo": {
                "type": "boolean"
              },
              "Move": {
                "type": "boolean"
              },
              "Pin": {
                "type": "boolean"
              },
              "Mute": {
                "type": "boolean"
              },
              "EditAccess": {
                "type": "boolean"
              },
              "Duplicate": {
                "type": "boolean"
              },
              "SubmitToFormGallery": {
                "type": "boolean"
              },
              "Download": {
                "type": "boolean"
              },
              "Convert": {
                "type": "boolean"
              },
              "CopySharedLink": {
                "type": "boolean"
              },
              "ReadLinks": {
                "type": "boolean"
              },
              "Reconnect": {
                "type": "boolean"
              },
              "CreateRoomFrom": {
                "type": "boolean"
              },
              "CopyLink": {
                "type": "boolean"
              },
              "Embed": {
                "type": "boolean"
              },
              "ChangeOwner": {
                "type": "boolean"
              },
              "IndexExport": {
                "type": "boolean"
              }
            },
            "additionalProperties": false,
            "description": "Security",
            "nullable": true,
            "example": [
              {
                "value": true
              }
            ]
          },
          "requestToken": {
            "type": "string",
            "nullable": true,
            "example": "some text"
          },
          "parentId": {
            "type": "integer",
            "description": "Parent folder ID",
            "format": "int32",
            "example": 10
          },
          "filesCount": {
            "type": "integer",
            "description": "Number of files",
            "format": "int32",
            "example": 5
          },
          "foldersCount": {
            "type": "integer",
            "description": "Number of folders",
            "format": "int32",
            "example": 7
          },
          "isShareable": {
            "type": "boolean",
            "description": "Specifies if a folder is shareable or not",
            "nullable": true,
            "example": true
          },
          "isFavorite": {
            "type": "boolean",
            "description": "Specifies if a folder is favorite or not",
            "nullable": true,
            "example": true
          },
          "new": {
            "type": "integer",
            "description": "Number for a new folder",
            "format": "int32",
            "example": 1234
          },
          "mute": {
            "type": "boolean",
            "description": "Specifies if a folder is muted or not",
            "example": true
          },
          "tags": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "List of tags",
            "nullable": true,
            "example": [
              "some text"
            ]
          },
          "logo": {
            "$ref": "#/components/schemas/ASC.Files.Core.VirtualRooms.Logo"
          },
          "pinned": {
            "type": "boolean",
            "description": "Specifies if a folder is pinned or not",
            "example": true
          },
          "roomType": {
            "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.RequestDto.RoomType"
          },
          "private": {
            "type": "boolean",
            "description": "Specifies if a folder is private or not",
            "example": true
          },
          "indexing": {
            "type": "boolean",
            "description": "Indexing",
            "example": true
          },
          "denyDownload": {
            "type": "boolean",
            "description": "Deny download",
            "example": true
          },
          "lifetime": {
            "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.RoomDataLifetimeDto"
          },
          "watermark": {
            "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.ResponseDto.WatermarkDto"
          },
          "type": {
            "$ref": "#/components/schemas/ASC.Files.Core.FolderType"
          },
          "inRoom": {
            "type": "boolean",
            "description": "InRoom",
            "nullable": true,
            "example": true
          },
          "quotaLimit": {
            "type": "integer",
            "description": "Quota",
            "format": "int64",
            "nullable": true,
            "example": 1234
          },
          "isCustomQuota": {
            "type": "boolean",
            "description": "Specifies if the room has a custom quota or not",
            "nullable": true,
            "example": true
          },
          "usedSpace": {
            "type": "integer",
            "description": "Counter",
            "format": "int64",
            "nullable": true,
            "example": 1234
          },
          "external": {
            "type": "boolean",
            "description": "Specifies if the link external",
            "nullable": true,
            "example": true
          },
          "passwordProtected": {
            "type": "boolean",
            "description": "Specifies if the password protected",
            "nullable": true,
            "example": true
          },
          "expired": {
            "type": "boolean",
            "description": "Expired",
            "nullable": true,
            "example": true
          },
          "fileEntryType": {
            "$ref": "#/components/schemas/ASC.Files.Core.FileEntryType"
          }
        },
        "additionalProperties": false
      },
      "ASC.Files.Core.ApiModels.ResponseDto.FolderDto.System.String": {
        "type": "object",
        "properties": {
          "title": {
            "type": "string",
            "description": "Title",
            "nullable": true,
            "example": "Some titile.txt/ Some title"
          },
          "access": {
            "$ref": "#/components/schemas/ASC.Files.Core.Security.FileShare"
          },
          "shared": {
            "type": "boolean",
            "description": "Specifies if the file is shared or not",
            "example": false
          },
          "created": {
            "$ref": "#/components/schemas/ASC.Api.Core.ApiDateTime"
          },
          "createdBy": {
            "$ref": "#/components/schemas/ASC.Web.Api.Models.EmployeeDto"
          },
          "updated": {
            "$ref": "#/components/schemas/ASC.Api.Core.ApiDateTime"
          },
          "autoDelete": {
            "$ref": "#/components/schemas/ASC.Api.Core.ApiDateTime"
          },
          "rootFolderType": {
            "$ref": "#/components/schemas/ASC.Files.Core.FolderType"
          },
          "parentRoomType": {
            "$ref": "#/components/schemas/ASC.Files.Core.FolderType"
          },
          "updatedBy": {
            "$ref": "#/components/schemas/ASC.Web.Api.Models.EmployeeDto"
          },
          "providerItem": {
            "type": "boolean",
            "description": "Provider is specified or not",
            "nullable": true,
            "example": true
          },
          "providerKey": {
            "type": "string",
            "description": "Provider key",
            "nullable": true,
            "example": "some text"
          },
          "providerId": {
            "type": "integer",
            "description": "Provider ID",
            "format": "int32",
            "nullable": true,
            "example": 1234
          },
          "order": {
            "type": "string",
            "description": "Order",
            "nullable": true,
            "example": "some text"
          },
          "id": {
            "type": "string",
            "description": "Id",
            "nullable": true,
            "example": 10
          },
          "rootFolderId": {
            "type": "string",
            "description": "Root folder id",
            "nullable": true,
            "example": "some text"
          },
          "originId": {
            "type": "string",
            "description": "Origin id",
            "nullable": true,
            "example": "some text"
          },
          "originRoomId": {
            "type": "string",
            "description": "Origin room id",
            "nullable": true,
            "example": "some text"
          },
          "originTitle": {
            "type": "string",
            "description": "Origin title",
            "nullable": true,
            "example": "some text"
          },
          "originRoomTitle": {
            "type": "string",
            "description": "Origin room title",
            "nullable": true,
            "example": "some text"
          },
          "canShare": {
            "type": "boolean",
            "description": "Can share",
            "example": true
          },
          "security": {
            "type": "object",
            "properties": {
              "Read": {
                "type": "boolean"
              },
              "Comment": {
                "type": "boolean"
              },
              "FillForms": {
                "type": "boolean"
              },
              "Review": {
                "type": "boolean"
              },
              "Create": {
                "type": "boolean"
              },
              "Edit": {
                "type": "boolean"
              },
              "Delete": {
                "type": "boolean"
              },
              "CustomFilter": {
                "type": "boolean"
              },
              "EditRoom": {
                "type": "boolean"
              },
              "Rename": {
                "type": "boolean"
              },
              "ReadHistory": {
                "type": "boolean"
              },
              "Lock": {
                "type": "boolean"
              },
              "EditHistory": {
                "type": "boolean"
              },
              "CopyTo": {
                "type": "boolean"
              },
              "Copy": {
                "type": "boolean"
              },
              "MoveTo": {
                "type": "boolean"
              },
              "Move": {
                "type": "boolean"
              },
              "Pin": {
                "type": "boolean"
              },
              "Mute": {
                "type": "boolean"
              },
              "EditAccess": {
                "type": "boolean"
              },
              "Duplicate": {
                "type": "boolean"
              },
              "SubmitToFormGallery": {
                "type": "boolean"
              },
              "Download": {
                "type": "boolean"
              },
              "Convert": {
                "type": "boolean"
              },
              "CopySharedLink": {
                "type": "boolean"
              },
              "ReadLinks": {
                "type": "boolean"
              },
              "Reconnect": {
                "type": "boolean"
              },
              "CreateRoomFrom": {
                "type": "boolean"
              },
              "CopyLink": {
                "type": "boolean"
              },
              "Embed": {
                "type": "boolean"
              },
              "ChangeOwner": {
                "type": "boolean"
              },
              "IndexExport": {
                "type": "boolean"
              }
            },
            "additionalProperties": false,
            "description": "Security",
            "nullable": true,
            "example": [
              {
                "value": true
              }
            ]
          },
          "requestToken": {
            "type": "string",
            "nullable": true,
            "example": "some text"
          },
          "parentId": {
            "type": "string",
            "description": "Parent folder ID",
            "nullable": true,
            "example": 10
          },
          "filesCount": {
            "type": "integer",
            "description": "Number of files",
            "format": "int32",
            "example": 5
          },
          "foldersCount": {
            "type": "integer",
            "description": "Number of folders",
            "format": "int32",
            "example": 7
          },
          "isShareable": {
            "type": "boolean",
            "description": "Specifies if a folder is shareable or not",
            "nullable": true,
            "example": true
          },
          "isFavorite": {
            "type": "boolean",
            "description": "Specifies if a folder is favorite or not",
            "nullable": true,
            "example": true
          },
          "new": {
            "type": "integer",
            "description": "Number for a new folder",
            "format": "int32",
            "example": 1234
          },
          "mute": {
            "type": "boolean",
            "description": "Specifies if a folder is muted or not",
            "example": true
          },
          "tags": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "List of tags",
            "nullable": true,
            "example": [
              "some text"
            ]
          },
          "logo": {
            "$ref": "#/components/schemas/ASC.Files.Core.VirtualRooms.Logo"
          },
          "pinned": {
            "type": "boolean",
            "description": "Specifies if a folder is pinned or not",
            "example": true
          },
          "roomType": {
            "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.RequestDto.RoomType"
          },
          "private": {
            "type": "boolean",
            "description": "Specifies if a folder is private or not",
            "example": true
          },
          "indexing": {
            "type": "boolean",
            "description": "Indexing",
            "example": true
          },
          "denyDownload": {
            "type": "boolean",
            "description": "Deny download",
            "example": true
          },
          "lifetime": {
            "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.RoomDataLifetimeDto"
          },
          "watermark": {
            "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.ResponseDto.WatermarkDto"
          },
          "type": {
            "$ref": "#/components/schemas/ASC.Files.Core.FolderType"
          },
          "inRoom": {
            "type": "boolean",
            "description": "InRoom",
            "nullable": true,
            "example": true
          },
          "quotaLimit": {
            "type": "integer",
            "description": "Quota",
            "format": "int64",
            "nullable": true,
            "example": 1234
          },
          "isCustomQuota": {
            "type": "boolean",
            "description": "Specifies if the room has a custom quota or not",
            "nullable": true,
            "example": true
          },
          "usedSpace": {
            "type": "integer",
            "description": "Counter",
            "format": "int64",
            "nullable": true,
            "example": 1234
          },
          "external": {
            "type": "boolean",
            "description": "Specifies if the link external",
            "nullable": true,
            "example": true
          },
          "passwordProtected": {
            "type": "boolean",
            "description": "Specifies if the password protected",
            "nullable": true,
            "example": true
          },
          "expired": {
            "type": "boolean",
            "description": "Expired",
            "nullable": true,
            "example": true
          },
          "fileEntryType": {
            "$ref": "#/components/schemas/ASC.Files.Core.FileEntryType"
          }
        },
        "additionalProperties": false
      },
      "ASC.Files.Core.ApiModels.ResponseDto.HistoryDto": {
        "type": "object",
        "properties": {
          "action": {
            "$ref": "#/components/schemas/ASC.Files.Core.Core.Entries.HistoryAction"
          },
          "initiator": {
            "$ref": "#/components/schemas/ASC.Web.Api.Models.EmployeeDto"
          },
          "date": {
            "$ref": "#/components/schemas/ASC.Api.Core.ApiDateTime"
          },
          "data": {
            "$ref": "#/components/schemas/ASC.Files.Core.Core.Entries.HistoryData"
          },
          "related": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.ResponseDto.HistoryDto"
            },
            "description": "Related",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ASC.Files.Core.ApiModels.ResponseDto.InfoConfigDto": {
        "type": "object",
        "properties": {
          "favorite": {
            "type": "boolean",
            "description": "Favorite",
            "nullable": true,
            "example": true
          },
          "folder": {
            "type": "string",
            "description": "Folder",
            "nullable": true,
            "example": "some text"
          },
          "owner": {
            "type": "string",
            "description": "Owner",
            "nullable": true,
            "example": "some text"
          },
          "sharingSettings": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ASC.Web.Files.Services.WCFService.AceShortWrapper"
            },
            "description": "Sharing settings",
            "nullable": true
          },
          "type": {
            "$ref": "#/components/schemas/ASC.Web.Files.Services.DocumentService.EditorType"
          },
          "uploaded": {
            "type": "string",
            "description": "Uploaded",
            "nullable": true,
            "example": "some text"
          }
        },
        "additionalProperties": false
      },
      "ASC.Files.Core.ApiModels.ResponseDto.LinkType": {
        "oneOf": [
          {
            "enum": [
              "Invitation",
              "External"
            ],
            "type": "string",
            "description": "[Invitation - Invitation, External - External]",
            "example": "Invitation"
          },
          {
            "enum": [
              0,
              1
            ],
            "type": "integer",
            "description": "[0 - Invitation, 1 - External]",
            "example": 0
          }
        ]
      },
      "ASC.Files.Core.ApiModels.ResponseDto.LogoConfigDto": {
        "type": "object",
        "properties": {
          "image": {
            "type": "string",
            "description": "Image",
            "nullable": true,
            "example": "some text"
          },
          "imageDark": {
            "type": "string",
            "description": "Image dark",
            "nullable": true,
            "example": "some text"
          },
          "imageEmbedded": {
            "type": "string",
            "description": "Image embedded",
            "nullable": true,
            "example": "some text"
          },
          "url": {
            "type": "string",
            "description": "Url",
            "nullable": true,
            "example": "some text"
          },
          "visible": {
            "type": "boolean",
            "description": "Visible",
            "example": true
          }
        },
        "additionalProperties": false
      },
      "ASC.Files.Core.ApiModels.ResponseDto.NewItemsDto.ASC.Files.Core.ApiModels.ResponseDto.FileEntryDto": {
        "type": "object",
        "properties": {
          "date": {
            "$ref": "#/components/schemas/ASC.Api.Core.ApiDateTime"
          },
          "items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.ResponseDto.FileEntryDto"
            },
            "description": "Items",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ASC.Files.Core.ApiModels.ResponseDto.NewItemsDto.ASC.Files.Core.ApiModels.ResponseDto.RoomNewItemsDto": {
        "type": "object",
        "properties": {
          "date": {
            "$ref": "#/components/schemas/ASC.Api.Core.ApiDateTime"
          },
          "items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.ResponseDto.RoomNewItemsDto"
            },
            "description": "Items",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ASC.Files.Core.ApiModels.ResponseDto.ProviderDto": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "Provider name",
            "nullable": true,
            "example": "Mikayla Murazik"
          },
          "key": {
            "type": "string",
            "description": "Provider key",
            "nullable": true,
            "example": "some text"
          },
          "connected": {
            "type": "boolean",
            "description": "Connected flag",
            "example": true
          },
          "oauth": {
            "type": "boolean",
            "description": "Oauth flag",
            "example": true
          },
          "redirectUrl": {
            "type": "string",
            "description": "Redirect url",
            "nullable": true,
            "example": "some text"
          },
          "requiredConnectionUrl": {
            "type": "boolean",
            "description": "Required connection url flag",
            "example": true
          },
          "clientId": {
            "type": "string",
            "description": "Oauth client id",
            "nullable": true,
            "example": "some text"
          }
        },
        "additionalProperties": false
      },
      "ASC.Files.Core.ApiModels.ResponseDto.RoomNewItemsDto": {
        "type": "object",
        "properties": {
          "room": {
            "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.ResponseDto.FileEntryDto"
          },
          "items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.ResponseDto.FileEntryDto"
            },
            "description": "Items",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ASC.Files.Core.ApiModels.ResponseDto.RoomSecurityDto": {
        "type": "object",
        "properties": {
          "members": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.ResponseDto.FileShareDto"
            },
            "description": "List of room members",
            "nullable": true
          },
          "warning": {
            "type": "string",
            "description": "Warning",
            "nullable": true,
            "example": "some text"
          }
        },
        "additionalProperties": false
      },
      "ASC.Files.Core.ApiModels.ResponseDto.UploadResultDto": {
        "type": "object",
        "properties": {
          "success": {
            "type": "boolean",
            "description": "Specifies if the operation is successful or not",
            "example": true
          },
          "data": {
            "description": "Data",
            "nullable": true,
            "example": {
              "int": 1234,
              "string": "some text",
              "boolean": true
            }
          },
          "message": {
            "type": "string",
            "description": "Message",
            "nullable": true,
            "example": "some text"
          }
        },
        "additionalProperties": false
      },
      "ASC.Files.Core.ApiModels.ResponseDto.WatermarkDto": {
        "type": "object",
        "properties": {
          "additions": {
            "$ref": "#/components/schemas/ASC.Files.Core.VirtualRooms.WatermarkAdditions"
          },
          "text": {
            "type": "string",
            "description": "Watermark Text",
            "nullable": true,
            "example": "some text"
          },
          "rotate": {
            "type": "integer",
            "description": "Watermark text and image rotate",
            "format": "int32",
            "example": 1234
          },
          "imageScale": {
            "type": "integer",
            "description": "Watermark image scale",
            "format": "int32",
            "example": 1234
          },
          "imageUrl": {
            "type": "string",
            "description": "Watermark image url",
            "nullable": true,
            "example": "some text"
          },
          "imageHeight": {
            "type": "number",
            "description": "Watermark image height",
            "format": "double",
            "example": -8.5
          },
          "imageWidth": {
            "type": "number",
            "description": "Watermark image width",
            "format": "double",
            "example": -8.5
          }
        },
        "additionalProperties": false,
        "description": ""
      },
      "ASC.Files.Core.ApiModels.RoomDataLifetimeDto": {
        "type": "object",
        "properties": {
          "deletePermanently": {
            "type": "boolean",
            "description": "Specifies action",
            "example": true
          },
          "period": {
            "$ref": "#/components/schemas/ASC.Files.Core.VirtualRooms.RoomDataLifetimePeriod"
          },
          "value": {
            "maximum": 999,
            "minimum": 1,
            "type": "integer",
            "description": "Specifies time period value",
            "format": "int32",
            "nullable": true,
            "example": 1234
          },
          "enabled": {
            "type": "boolean",
            "description": "Enabled",
            "nullable": true,
            "example": true
          }
        },
        "additionalProperties": false,
        "description": ""
      },
      "ASC.Files.Core.AuthData": {
        "type": "object",
        "properties": {
          "login": {
            "type": "string",
            "description": "Login",
            "nullable": true,
            "example": "some text"
          },
          "password": {
            "type": "string",
            "description": "Password",
            "nullable": true,
            "example": "qwHlKK1rQu"
          },
          "rawToken": {
            "type": "string",
            "description": "Raw token",
            "nullable": true,
            "example": "some text"
          },
          "url": {
            "type": "string",
            "description": "Url",
            "format": "uri",
            "nullable": true,
            "example": "some text"
          },
          "provider": {
            "type": "string",
            "description": "Provider",
            "nullable": true,
            "example": "some text"
          },
          "token": {
            "$ref": "#/components/schemas/ASC.FederatedLogin.OAuth20Token"
          }
        },
        "additionalProperties": false
      },
      "ASC.Files.Core.AutoCleanUpData": {
        "type": "object",
        "properties": {
          "isAutoCleanUp": {
            "type": "boolean",
            "description": "Specifies if the auto-clearing setting is enabled or not",
            "example": true
          },
          "gap": {
            "$ref": "#/components/schemas/ASC.Files.Core.DateToAutoCleanUp"
          }
        },
        "additionalProperties": false
      },
      "ASC.Files.Core.Core.ApplyFilterOption": {
        "oneOf": [
          {
            "enum": [
              "All",
              "Files",
              "Folders"
            ],
            "type": "string",
            "description": "[All - All, Files - Files, Folders - Folders]",
            "example": "All"
          },
          {
            "enum": [
              0,
              1,
              2
            ],
            "type": "integer",
            "description": "[0 - All, 1 - Files, 2 - Folders]",
            "example": 0
          }
        ]
      },
      "ASC.Files.Core.Core.Entries.HistoryAction": {
        "type": "object",
        "properties": {
          "id": {
            "$ref": "#/components/schemas/ASC.MessagingSystem.Core.MessageAction"
          },
          "key": {
            "type": "string",
            "nullable": true,
            "example": "some text"
          }
        },
        "additionalProperties": false
      },
      "ASC.Files.Core.Core.Entries.HistoryData": {
        "type": "object",
        "properties": {
          "initiatorName": {
            "type": "string",
            "nullable": true,
            "readOnly": true,
            "example": "some text"
          }
        },
        "additionalProperties": false
      },
      "ASC.Files.Core.Core.StorageFilter": {
        "oneOf": [
          {
            "enum": [
              "None",
              "Internal",
              "ThirdParty"
            ],
            "type": "string",
            "description": "[None - None, Internal - Internal, ThirdParty - ThirdParty]",
            "example": "None"
          },
          {
            "enum": [
              0,
              1,
              2
            ],
            "type": "integer",
            "description": "[0 - None, 1 - Internal, 2 - ThirdParty]",
            "example": 0
          }
        ]
      },
      "ASC.Files.Core.Core.SubjectFilter": {
        "oneOf": [
          {
            "enum": [
              "Owner",
              "Member"
            ],
            "type": "string",
            "description": "[Owner - Owner, Member - Member]",
            "example": "Owner"
          },
          {
            "enum": [
              0,
              1
            ],
            "type": "integer",
            "description": "[0 - Owner, 1 - Member]",
            "example": 0
          }
        ]
      },
      "ASC.Files.Core.DateToAutoCleanUp": {
        "oneOf": [
          {
            "enum": [
              "OneWeek",
              "TwoWeeks",
              "OneMonth",
              "ThirtyDays",
              "TwoMonths",
              "ThreeMonths"
            ],
            "type": "string",
            "description": "[OneWeek - One week, TwoWeeks - Two weeks, OneMonth - One month, ThirtyDays - Thirty days, TwoMonths - Two months, ThreeMonths - Three months]",
            "example": "OneWeek"
          },
          {
            "enum": [
              1,
              2,
              3,
              4,
              5,
              6
            ],
            "type": "integer",
            "description": "[1 - One week, 2 - Two weeks, 3 - One month, 4 - Thirty days, 5 - Two months, 6 - Three months]",
            "example": 1
          }
        ]
      },
      "ASC.Files.Core.EditHistoryAuthor": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "Id",
            "nullable": true,
            "example": "6223"
          },
          "name": {
            "type": "string",
            "description": "Name",
            "nullable": true,
            "example": "Kaela Gerhold"
          }
        },
        "additionalProperties": false
      },
      "ASC.Files.Core.EditHistoryDataDto": {
        "type": "object",
        "properties": {
          "changesUrl": {
            "type": "string",
            "description": "URL to the file changes",
            "format": "uri",
            "nullable": true,
            "example": "some text"
          },
          "key": {
            "type": "string",
            "description": "Key",
            "nullable": true,
            "example": "some text"
          },
          "previous": {
            "$ref": "#/components/schemas/ASC.Files.Core.EditHistoryUrl"
          },
          "token": {
            "type": "string",
            "description": "Token",
            "nullable": true,
            "example": "some text"
          },
          "url": {
            "type": "string",
            "description": "File URL",
            "format": "uri",
            "nullable": true,
            "example": "some text"
          },
          "version": {
            "type": "integer",
            "description": "File version",
            "format": "int32",
            "example": 1234
          },
          "fileType": {
            "type": "string",
            "description": "File type",
            "nullable": true,
            "example": "some text"
          }
        },
        "additionalProperties": false
      },
      "ASC.Files.Core.EditHistoryUrl": {
        "type": "object",
        "properties": {
          "key": {
            "type": "string",
            "description": "Key",
            "nullable": true,
            "example": "some text"
          },
          "url": {
            "type": "string",
            "description": "Url",
            "format": "uri",
            "nullable": true,
            "example": "some text"
          },
          "fileType": {
            "type": "string",
            "description": "File type",
            "nullable": true,
            "example": "some text"
          }
        },
        "additionalProperties": false
      },
      "ASC.Files.Core.FileEntryType": {
        "enum": [
          1,
          2
        ],
        "type": "integer",
        "format": "int32"
      },
      "ASC.Files.Core.FileStatus": {
        "oneOf": [
          {
            "enum": [
              "None",
              "IsEditing",
              "IsNew",
              "IsConverting",
              "IsOriginal",
              "IsEditingAlone",
              "IsFavorite",
              "IsTemplate",
              "IsFillFormDraft"
            ],
            "type": "string",
            "description": "[None - None, IsEditing - Is editing, IsNew - Is new, IsConverting - Is converting, IsOriginal - Is original, IsEditingAlone - Is editing alone, IsFavorite - Is favorite, IsTemplate - Is template, IsFillFormDraft - Is fill form draft]",
            "example": "None"
          },
          {
            "enum": [
              0,
              1,
              2,
              4,
              8,
              16,
              32,
              64,
              128
            ],
            "type": "integer",
            "description": "[0 - None, 1 - Is editing, 2 - Is new, 4 - Is converting, 8 - Is original, 16 - Is editing alone, 32 - Is favorite, 64 - Is template, 128 - Is fill form draft]",
            "example": 0
          }
        ]
      },
      "ASC.Files.Core.FilterType": {
        "oneOf": [
          {
            "enum": [
              "None",
              "FilesOnly",
              "FoldersOnly",
              "DocumentsOnly",
              "PresentationsOnly",
              "SpreadsheetsOnly",
              "ImagesOnly",
              "ByUser",
              "ByDepartment",
              "ArchiveOnly",
              "ByExtension",
              "MediaOnly",
              "FillingFormsRooms",
              "EditingRooms",
              "CustomRooms",
              "PublicRooms",
              "Pdf",
              "PdfForm"
            ],
            "type": "string",
            "description": "[None - None, FilesOnly - Files  only, FoldersOnly - Folders only, DocumentsOnly - Documents only, PresentationsOnly - Presentations only, SpreadsheetsOnly - Spreadsheets only, ImagesOnly - Images only, ByUser - By user, ByDepartment - By department, ArchiveOnly - Archive only, ByExtension - By extension, MediaOnly - Media only, FillingFormsRooms - Filling forms rooms, EditingRooms - Editing rooms, CustomRooms - Custom rooms, PublicRooms - Public rooms, Pdf - Pdf, PdfForm - Pdf form]",
            "example": "None"
          },
          {
            "enum": [
              0,
              1,
              2,
              3,
              4,
              5,
              7,
              8,
              9,
              10,
              11,
              12,
              13,
              14,
              17,
              20,
              22,
              23
            ],
            "type": "integer",
            "description": "[0 - None, 1 - Files  only, 2 - Folders only, 3 - Documents only, 4 - Presentations only, 5 - Spreadsheets only, 7 - Images only, 8 - By user, 9 - By department, 10 - Archive only, 11 - By extension, 12 - Media only, 13 - Filling forms rooms, 14 - Editing rooms, 17 - Custom rooms, 20 - Public rooms, 22 - Pdf, 23 - Pdf form]",
            "example": 0
          }
        ]
      },
      "ASC.Files.Core.FolderType": {
        "oneOf": [
          {
            "enum": [
              "DEFAULT",
              "COMMON",
              "BUNCH",
              "TRASH",
              "USER",
              "SHARE",
              "Projects",
              "Favorites",
              "Recent",
              "Templates",
              "Privacy",
              "VirtualRooms",
              "FillingFormsRoom",
              "EditingRoom",
              "CustomRoom",
              "Archive",
              "ThirdpartyBackup",
              "PublicRoom",
              "ReadyFormFolder",
              "InProcessFormFolder",
              "FormFillingFolderDone",
              "FormFillingFolderInProgress",
              "VirtualDataRoom"
            ],
            "type": "string",
            "description": "[DEFAULT - Default, COMMON - Coomon, BUNCH - Bunch, TRASH - Trash, USER - User, SHARE - Share, Projects - Projects, Favorites - Favourites, Recent - Recent, Templates - Templates, Privacy - Privacy, VirtualRooms - Virtual rooms, FillingFormsRoom - Filling forms room, EditingRoom - Editing room, CustomRoom - Custom room, Archive - Archive, ThirdpartyBackup - Thirdparty backup, PublicRoom - Public room, ReadyFormFolder - Ready form folder, InProcessFormFolder - In process form folder, FormFillingFolderDone - Form filling folder done, FormFillingFolderInProgress - Form filling folder in progress, VirtualDataRoom - Virtual Data Room]",
            "example": "DEFAULT"
          },
          {
            "enum": [
              0,
              1,
              2,
              3,
              5,
              6,
              8,
              10,
              11,
              12,
              13,
              14,
              15,
              16,
              19,
              20,
              21,
              22,
              25,
              26,
              27,
              28,
              29
            ],
            "type": "integer",
            "description": "[0 - Default, 1 - Coomon, 2 - Bunch, 3 - Trash, 5 - User, 6 - Share, 8 - Projects, 10 - Favourites, 11 - Recent, 12 - Templates, 13 - Privacy, 14 - Virtual rooms, 15 - Filling forms room, 16 - Editing room, 19 - Custom room, 20 - Archive, 21 - Thirdparty backup, 22 - Public room, 25 - Ready form folder, 26 - In process form folder, 27 - Form filling folder done, 28 - Form filling folder in progress, 29 - Virtual Data Room]",
            "example": 0
          }
        ]
      },
      "ASC.Files.Core.Helpers.DocumentService_FileLink": {
        "type": "object",
        "properties": {
          "filetype": {
            "type": "string",
            "description": "File type",
            "nullable": true,
            "example": "some text"
          },
          "token": {
            "type": "string",
            "description": "Token",
            "nullable": true,
            "example": "some text"
          },
          "url": {
            "type": "string",
            "description": "Url",
            "format": "uri",
            "nullable": true,
            "example": "some text"
          }
        },
        "additionalProperties": false
      },
      "ASC.Files.Core.OrderBy": {
        "type": "object",
        "properties": {
          "is_asc": {
            "type": "boolean",
            "description": "Is asc",
            "example": true
          },
          "property": {
            "$ref": "#/components/schemas/ASC.Files.Core.SortedByType"
          }
        },
        "additionalProperties": false
      },
      "ASC.Files.Core.ProviderFilter": {
        "oneOf": [
          {
            "enum": [
              "None",
              "Box",
              "DropBox",
              "GoogleDrive",
              "kDrive",
              "OneDrive",
              "SharePoint",
              "WebDav",
              "Yandex",
              "Storage"
            ],
            "type": "string",
            "description": "[None - None, Box - Box, DropBox - DropBox, GoogleDrive - GoogleDrive, kDrive - kDrive, OneDrive - OneDrive, SharePoint - SharePoint, WebDav - WebDav, Yandex - Yandex, Storage - Storage]",
            "example": "None"
          },
          {
            "enum": [
              0,
              1,
              2,
              3,
              4,
              5,
              6,
              7,
              8,
              9
            ],
            "type": "integer",
            "description": "[0 - None, 1 - Box, 2 - DropBox, 3 - GoogleDrive, 4 - kDrive, 5 - OneDrive, 6 - SharePoint, 7 - WebDav, 8 - Yandex, 9 - Storage]",
            "example": 0
          }
        ]
      },
      "ASC.Files.Core.Security.FileShare": {
        "oneOf": [
          {
            "enum": [
              "None",
              "ReadWrite",
              "Read",
              "Restrict",
              "Varies",
              "Review",
              "Comment",
              "FillForms",
              "CustomFilter",
              "RoomManager",
              "Editing",
              "ContentCreator"
            ],
            "type": "string",
            "description": "[None - None, ReadWrite - Read and write, Read - Read, Restrict - Restrict, Varies - Varies, Review - Review, Comment - Comment, FillForms - Fill forms, CustomFilter - Custom filter, RoomManager - Room manager, Editing - Editing, ContentCreator - Content creator]",
            "example": "None"
          },
          {
            "enum": [
              0,
              1,
              2,
              3,
              4,
              5,
              6,
              7,
              8,
              9,
              10,
              11
            ],
            "type": "integer",
            "description": "[0 - None, 1 - Read and write, 2 - Read, 3 - Restrict, 4 - Varies, 5 - Review, 6 - Comment, 7 - Fill forms, 8 - Custom filter, 9 - Room manager, 10 - Editing, 11 - Content creator]",
            "example": 0
          }
        ]
      },
      "ASC.Files.Core.Security.ShareFilterType": {
        "oneOf": [
          {
            "enum": [
              "UserOrGroup",
              "InvitationLink",
              "ExternalLink",
              "AdditionalExternalLink",
              "PrimaryExternalLink",
              "User",
              "Group"
            ],
            "type": "string",
            "description": "[UserOrGroup - User or group, InvitationLink - Invitation link, ExternalLink - External link, AdditionalExternalLink - Additional external link, PrimaryExternalLink - Primary external link, User - User, Group - Group]",
            "example": "UserOrGroup"
          },
          {
            "enum": [
              0,
              1,
              2,
              4,
              8,
              16,
              32
            ],
            "type": "integer",
            "description": "[0 - User or group, 1 - Invitation link, 2 - External link, 4 - Additional external link, 8 - Primary external link, 16 - User, 32 - Group]",
            "example": 0
          }
        ]
      },
      "ASC.Files.Core.Security.SubjectType": {
        "oneOf": [
          {
            "enum": [
              "User",
              "ExternalLink",
              "Group",
              "InvitationLink",
              "PrimaryExternalLink"
            ],
            "type": "string",
            "description": "[User - User, ExternalLink - External link, Group - Group, InvitationLink - Invitation link, PrimaryExternalLink - Primary external link]",
            "example": "User"
          },
          {
            "enum": [
              0,
              1,
              2,
              3,
              4
            ],
            "type": "integer",
            "description": "[0 - User, 1 - External link, 2 - Group, 3 - Invitation link, 4 - Primary external link]",
            "example": 0
          }
        ]
      },
      "ASC.Files.Core.SortedByType": {
        "oneOf": [
          {
            "enum": [
              "DateAndTime",
              "AZ",
              "Size",
              "Author",
              "Type",
              "New",
              "DateAndTimeCreation",
              "RoomType",
              "Tags",
              "Room",
              "CustomOrder",
              "LastOpened",
              "UsedSpace"
            ],
            "type": "string",
            "description": "[DateAndTime - Date and time, AZ - AZ, Size - Size, Author - Author, Type - Type, New - New, DateAndTimeCreation - Date and time creation, RoomType - Room type, Tags - Tags, Room - Room, CustomOrder - Custom order, LastOpened - Last opened, UsedSpace - Used space]",
            "example": "DateAndTime"
          },
          {
            "enum": [
              0,
              1,
              2,
              3,
              4,
              5,
              6,
              7,
              8,
              9,
              10,
              11,
              12
            ],
            "type": "integer",
            "description": "[0 - Date and time, 1 - AZ, 2 - Size, 3 - Author, 4 - Type, 5 - New, 6 - Date and time creation, 7 - Room type, 8 - Tags, 9 - Room, 10 - Custom order, 11 - Last opened, 12 - Used space]",
            "example": 0
          }
        ]
      },
      "ASC.Files.Core.Thumbnail": {
        "oneOf": [
          {
            "enum": [
              "Waiting",
              "Created",
              "Error",
              "NotRequired",
              "Creating"
            ],
            "type": "string",
            "description": "[Waiting - Waiting, Created - Created, Error - Error, NotRequired - Not required, Creating - Creating]",
            "example": "Waiting"
          },
          {
            "enum": [
              0,
              1,
              2,
              3,
              4
            ],
            "type": "integer",
            "description": "[0 - Waiting, 1 - Created, 2 - Error, 3 - Not required, 4 - Creating]",
            "example": 0
          }
        ]
      },
      "ASC.Files.Core.VirtualRooms.Logo": {
        "type": "object",
        "properties": {
          "original": {
            "type": "string",
            "description": "Original",
            "nullable": true,
            "example": "some text"
          },
          "large": {
            "type": "string",
            "description": "Large",
            "nullable": true,
            "example": "some text"
          },
          "medium": {
            "type": "string",
            "description": "Medium",
            "nullable": true,
            "example": "some text"
          },
          "small": {
            "type": "string",
            "description": "Small",
            "nullable": true,
            "example": "some text"
          },
          "color": {
            "type": "string",
            "description": "Color",
            "nullable": true,
            "example": "some text"
          },
          "cover": {
            "$ref": "#/components/schemas/ASC.Files.Core.VirtualRooms.LogoCover"
          }
        },
        "additionalProperties": false
      },
      "ASC.Files.Core.VirtualRooms.LogoCover": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "nullable": true,
            "example": "9324"
          },
          "data": {
            "type": "string",
            "nullable": true,
            "example": "some text"
          }
        },
        "additionalProperties": false
      },
      "ASC.Files.Core.VirtualRooms.RoomDataLifetimePeriod": {
        "enum": [
          0,
          1,
          2
        ],
        "type": "integer",
        "format": "int32"
      },
      "ASC.Files.Core.VirtualRooms.SearchArea": {
        "oneOf": [
          {
            "enum": [
              "Active",
              "Archive",
              "Any",
              "RecentByLinks"
            ],
            "type": "string",
            "description": "[Active - Active, Archive - Archive, Any - Any, RecentByLinks - Recent by links]",
            "example": "Active"
          },
          {
            "enum": [
              0,
              1,
              2,
              3
            ],
            "type": "integer",
            "description": "[0 - Active, 1 - Archive, 2 - Any, 3 - Recent by links]",
            "example": 0
          }
        ]
      },
      "ASC.Files.Core.VirtualRooms.WatermarkAdditions": {
        "oneOf": [
          {
            "enum": [
              "UserName",
              "UserEmail",
              "UserIpAdress",
              "CurrentDate",
              "RoomName"
            ],
            "type": "string",
            "description": "[UserName - User name, UserEmail - User email, UserIpAdress - User ip adress, CurrentDate - Current date, RoomName - Room name]",
            "example": "UserName"
          },
          {
            "enum": [
              1,
              2,
              4,
              8,
              16
            ],
            "type": "integer",
            "description": "[1 - User name, 2 - User email, 4 - User ip adress, 8 - Current date, 16 - Room name]",
            "example": 1
          }
        ]
      },
      "ASC.MessagingSystem.Core.MessageAction": {
        "oneOf": [
          {
            "enum": [
              "LoginSuccess",
              "LoginSuccessViaSocialAccount",
              "LoginFailInvalidCombination",
              "LoginFailSocialAccountNotFound",
              "LoginFailDisabledProfile",
              "LoginFail",
              "Logout",
              "LoginSuccessViaSms",
              "LoginFailViaSms",
              "LoginFailIpSecurity",
              "LoginSuccessViaApi",
              "LoginSuccessViaSocialApp",
              "LoginSuccessViaApiSms",
              "LoginFailViaApi",
              "LoginFailViaApiSms",
              "LoginSuccessViaSSO",
              "SessionStarted",
              "SessionCompleted",
              "LoginFailViaSSO",
              "LoginSuccessViaApiSocialAccount",
              "LoginFailViaApiSocialAccount",
              "LoginSuccesViaTfaApp",
              "LoginFailViaTfaApp",
              "LoginFailBruteForce",
              "LoginSuccessViaApiTfa",
              "LoginFailViaApiTfa",
              "LoginFailRecaptcha",
              "UserCreated",
              "GuestCreated",
              "UserCreatedViaInvite",
              "GuestCreatedViaInvite",
              "UserActivated",
              "GuestActivated",
              "UserUpdated",
              "UserUpdatedLanguage",
              "UserAddedAvatar",
              "UserDeletedAvatar",
              "UserUpdatedAvatarThumbnails",
              "UserLinkedSocialAccount",
              "UserUnlinkedSocialAccount",
              "UserSentActivationInstructions",
              "UserSentEmailChangeInstructions",
              "UserSentPasswordChangeInstructions",
              "UserSentDeleteInstructions",
              "UserUpdatedPassword",
              "UserDeleted",
              "UsersUpdatedType",
              "UsersUpdatedStatus",
              "UsersSentActivationInstructions",
              "UsersDeleted",
              "SentInviteInstructions",
              "UserImported",
              "GuestImported",
              "GroupCreated",
              "GroupUpdated",
              "GroupDeleted",
              "UserUpdatedMobileNumber",
              "UserDataReassigns",
              "UserDataRemoving",
              "UserConnectedTfaApp",
              "UserDisconnectedTfaApp",
              "UserLogoutActiveConnections",
              "UserLogoutActiveConnection",
              "UserLogoutActiveConnectionsForUser",
              "SendJoinInvite",
              "FileCreated",
              "FileRenamed",
              "FileUpdated",
              "FileCreatedVersion",
              "FileDeletedVersion",
              "FileUpdatedRevisionComment",
              "FileLocked",
              "FileUnlocked",
              "FileUpdatedAccess",
              "FileDownloaded",
              "FileDownloadedAs",
              "FileUploaded",
              "FileImported",
              "FileCopied",
              "FileCopiedWithOverwriting",
              "FileMoved",
              "FileMovedWithOverwriting",
              "FileMovedToTrash",
              "FileDeleted",
              "FolderCreated",
              "FolderRenamed",
              "FolderUpdatedAccess",
              "FolderCopied",
              "FolderCopiedWithOverwriting",
              "FolderMoved",
              "FolderMovedWithOverwriting",
              "FolderMovedToTrash",
              "FolderDeleted",
              "ThirdPartyCreated",
              "ThirdPartyUpdated",
              "ThirdPartyDeleted",
              "DocumentsThirdPartySettingsUpdated",
              "DocumentsOverwritingSettingsUpdated",
              "DocumentsUploadingFormatsSettingsUpdated",
              "UserFileUpdated",
              "FileConverted",
              "FileSendAccessLink",
              "DocumentServiceLocationSetting",
              "AuthorizationKeysSetting",
              "FullTextSearchSetting",
              "StartTransferSetting",
              "StartBackupSetting",
              "LicenseKeyUploaded",
              "FileChangeOwner",
              "FileRestoreVersion",
              "DocumentSendToSign",
              "DocumentSignComplete",
              "UserUpdatedEmail",
              "DocumentsStoreForcesave",
              "DocumentsForcesave",
              "StartStorageEncryption",
              "PrivacyRoomEnable",
              "PrivacyRoomDisable",
              "StartStorageDecryption",
              "FileOpenedForChange",
              "FileMarkedAsFavorite",
              "FileRemovedFromFavorite",
              "FolderDownloaded",
              "FileRemovedFromList",
              "FolderRemovedFromList",
              "FileExternalLinkAccessUpdated",
              "TrashEmptied",
              "FileRevisionDownloaded",
              "FileMarkedAsRead",
              "FileReaded",
              "FolderMarkedAsRead",
              "FolderUpdatedAccessFor",
              "FileUpdatedAccessFor",
              "DocumentsExternalShareSettingsUpdated",
              "RoomCreated",
              "RoomRenamed",
              "RoomArchived",
              "RoomUnarchived",
              "RoomDeleted",
              "RoomUpdateAccessForUser",
              "TagCreated",
              "TagsDeleted",
              "AddedRoomTags",
              "DeletedRoomTags",
              "RoomLogoCreated",
              "RoomLogoDeleted",
              "RoomInvitationLinkUpdated",
              "DocumentsKeepNewFileNameSettingsUpdated",
              "RoomRemoveUser",
              "RoomCreateUser",
              "RoomInvitationLinkCreated",
              "RoomInvitationLinkDeleted",
              "RoomExternalLinkCreated",
              "RoomExternalLinkUpdated",
              "RoomExternalLinkDeleted",
              "FileExternalLinkCreated",
              "FileExternalLinkUpdated",
              "FileExternalLinkDeleted",
              "RoomGroupAdded",
              "RoomUpdateAccessForGroup",
              "RoomGroupRemove",
              "RoomExternalLinkRevoked",
              "RoomExternalLinkRenamed",
              "FileUploadedWithOverwriting",
              "RoomCopied",
              "DocumentsDisplayFileExtensionUpdated",
              "RoomColorChanged",
              "RoomCoverChanged",
              "RoomIndexingChanged",
              "RoomDenyDownloadChanged",
              "RoomIndexExportSaved",
              "FolderIndexChanged",
              "FolderIndexReordered",
              "RoomDenyDownloadEnabled",
              "RoomDenyDownloadDisabled",
              "FileIndexChanged",
              "RoomWatermarkSet",
              "RoomWatermarkDisabled",
              "RoomIndexingEnabled",
              "RoomIndexingDisabled",
              "RoomLifeTimeSet",
              "RoomLifeTimeDisabled",
              "RoomInviteResend",
              "LanguageSettingsUpdated",
              "TimeZoneSettingsUpdated",
              "DnsSettingsUpdated",
              "TrustedMailDomainSettingsUpdated",
              "PasswordStrengthSettingsUpdated",
              "TwoFactorAuthenticationSettingsUpdated",
              "AdministratorMessageSettingsUpdated",
              "DefaultStartPageSettingsUpdated",
              "ProductsListUpdated",
              "AdministratorAdded",
              "AdministratorOpenedFullAccess",
              "AdministratorDeleted",
              "UsersOpenedProductAccess",
              "GroupsOpenedProductAccess",
              "ProductAccessOpened",
              "ProductAccessRestricted",
              "ProductAddedAdministrator",
              "ProductDeletedAdministrator",
              "GreetingSettingsUpdated",
              "TeamTemplateChanged",
              "ColorThemeChanged",
              "OwnerSentChangeOwnerInstructions",
              "OwnerUpdated",
              "OwnerSentPortalDeactivationInstructions",
              "OwnerSentPortalDeleteInstructions",
              "PortalDeactivated",
              "PortalDeleted",
              "LoginHistoryReportDownloaded",
              "AuditTrailReportDownloaded",
              "SSOEnabled",
              "SSODisabled",
              "PortalAccessSettingsUpdated",
              "CookieSettingsUpdated",
              "MailServiceSettingsUpdated",
              "CustomNavigationSettingsUpdated",
              "AuditSettingsUpdated",
              "TwoFactorAuthenticationDisabled",
              "TwoFactorAuthenticationEnabledBySms",
              "TwoFactorAuthenticationEnabledByTfaApp",
              "PortalRenamed",
              "QuotaPerRoomChanged",
              "QuotaPerRoomDisabled",
              "QuotaPerUserChanged",
              "QuotaPerUserDisabled",
              "QuotaPerPortalChanged",
              "QuotaPerPortalDisabled",
              "FormSubmit",
              "FormOpenedForFilling",
              "CustomQuotaPerRoomDefault",
              "CustomQuotaPerRoomChanged",
              "CustomQuotaPerRoomDisabled",
              "CustomQuotaPerUserDefault",
              "CustomQuotaPerUserChanged",
              "CustomQuotaPerUserDisabled",
              "ContactAdminMailSent",
              "RoomInviteLinkUsed",
              "UserCreatedAndAddedToRoom",
              "GuestCreatedAndAddedToRoom",
              "ContactSalesMailSent",
              "CreateClient",
              "UpdateClient",
              "RegenerateSecret",
              "DeleteClient",
              "ChangeClientActivation",
              "ChangeClientVisibility",
              "RevokeUserClient",
              "GenerateAuthorizationCodeToken",
              "GeneratePersonalAccessToken",
              "None"
            ],
            "type": "string",
            "description": "[LoginSuccess - Login success, LoginSuccessViaSocialAccount - Login success via social account, LoginFailInvalidCombination - Login fail invalid combination, LoginFailSocialAccountNotFound - Login fail social account not found, LoginFailDisabledProfile - Login fail disabled profile, LoginFail - Login fail, Logout - Logout, LoginSuccessViaSms - Login success via sms, LoginFailViaSms - Login fail via sms, LoginFailIpSecurity - Login fail ip security, LoginSuccessViaApi - Login success via api, LoginSuccessViaSocialApp - Login success via social app, LoginSuccessViaApiSms - Login success via api sms, LoginFailViaApi - Login fail via api, LoginFailViaApiSms - Login fail via api sms, LoginSuccessViaSSO - Login success via SSO, SessionStarted - Session started, SessionCompleted - Session completed, LoginFailViaSSO - Login fail via SSO, LoginSuccessViaApiSocialAccount - Login success via api social account, LoginFailViaApiSocialAccount - Login fail via api social account, LoginSuccesViaTfaApp - Login succes via tfa app, LoginFailViaTfaApp - Login fail via Tfa app, LoginFailBruteForce - Login fail brute force, LoginSuccessViaApiTfa - Login success via api tfa, LoginFailViaApiTfa - Login fail via api tfa, LoginFailRecaptcha - Login fail recaptcha, UserCreated - User created, GuestCreated - Guest created, UserCreatedViaInvite - User created via invite, GuestCreatedViaInvite - Guest created via invite, UserActivated - User activated, GuestActivated - Guest activated, UserUpdated - User updated, UserUpdatedLanguage - User updated language, UserAddedAvatar - User added avatar, UserDeletedAvatar - User deleted avatar, UserUpdatedAvatarThumbnails - User updated avatar thumbnails, UserLinkedSocialAccount - User linked social account, UserUnlinkedSocialAccount - User unlinked social account, UserSentActivationInstructions - User sent activation instructions, UserSentEmailChangeInstructions - User sent email change instructions, UserSentPasswordChangeInstructions - User sent password change instructions, UserSentDeleteInstructions - User sent delete instructions, UserUpdatedPassword - User updated password, UserDeleted - User deleted, UsersUpdatedType - Users updated type, UsersUpdatedStatus - Users updated status, UsersSentActivationInstructions - Users sent activation instructions, UsersDeleted - Users deleted, SentInviteInstructions - Sent invite instructions, UserImported - User imported, GuestImported - Guest imported, GroupCreated - Group created, GroupUpdated - Group updated, GroupDeleted - Group deleted, UserUpdatedMobileNumber - User updated mobile number, UserDataReassigns - User data reassigns, UserDataRemoving - User data removing, UserConnectedTfaApp - User connected tfa app, UserDisconnectedTfaApp - User disconnected tfa app, UserLogoutActiveConnections - User logout active connections, UserLogoutActiveConnection - User logout active connection, UserLogoutActiveConnectionsForUser - User logout active connections for user, SendJoinInvite - Send join invite, FileCreated - File created, FileRenamed - File renamed, FileUpdated - File updated, FileCreatedVersion - File created version, FileDeletedVersion - File deleted version, FileUpdatedRevisionComment - File updated revision comment, FileLocked - File locked, FileUnlocked - File unlocked, FileUpdatedAccess - File updated access, FileDownloaded - File downloaded, FileDownloadedAs - File downloaded as, FileUploaded - File uploaded, FileImported - File imported, FileCopied - File copied, FileCopiedWithOverwriting - File copied with overwriting, FileMoved - File moved, FileMovedWithOverwriting - File moved with overwriting, FileMovedToTrash - File moved to trash, FileDeleted - File deleted, FolderCreated - Folder created, FolderRenamed - Folder renamed, FolderUpdatedAccess - Folder updated access, FolderCopied - Folder copied, FolderCopiedWithOverwriting - Folder copied with overwriting, FolderMoved - Folder moved, FolderMovedWithOverwriting - Folder moved with overwriting, FolderMovedToTrash - Folder moved to trash, FolderDeleted - Folder deleted, ThirdPartyCreated - ThirdParty created, ThirdPartyUpdated - ThirdParty updated, ThirdPartyDeleted - ThirdParty deleted, DocumentsThirdPartySettingsUpdated - Documents ThirdParty settings updated, DocumentsOverwritingSettingsUpdated - Documents overwriting settings updated, DocumentsUploadingFormatsSettingsUpdated - Documents uploading formats settings updated, UserFileUpdated - User file updated, FileConverted - File converted, FileSendAccessLink - File send access link, DocumentServiceLocationSetting - Document service location setting, AuthorizationKeysSetting - Authorization keys setting, FullTextSearchSetting - Full text search setting, StartTransferSetting - Start transfer setting, StartBackupSetting - Start backup setting, LicenseKeyUploaded - License key uploaded, FileChangeOwner - File change owner, FileRestoreVersion - File restore version, DocumentSendToSign - Document send to sign, DocumentSignComplete - Document sign complete, UserUpdatedEmail - User updated email, DocumentsStoreForcesave - Documents store forcesave, DocumentsForcesave - Documents forcesave, StartStorageEncryption - Start storage encryption, PrivacyRoomEnable - Privacy room enable, PrivacyRoomDisable - Privacy room disable, StartStorageDecryption - Start storage decryption, FileOpenedForChange - File opened for change, FileMarkedAsFavorite - File marked as favorite, FileRemovedFromFavorite - File removed from favorite, FolderDownloaded - Folder downloaded, FileRemovedFromList - File removed from list, FolderRemovedFromList - Folder removed from list, FileExternalLinkAccessUpdated - File external link access updated, TrashEmptied - Trash emptied, FileRevisionDownloaded - File revision downloaded, FileMarkedAsRead - File marked as read, FileReaded - File readed, FolderMarkedAsRead - Folder marked as read, FolderUpdatedAccessFor - Folder updated access for, FileUpdatedAccessFor - File updated access for, DocumentsExternalShareSettingsUpdated - Documents external share settings updated, RoomCreated - Room created, RoomRenamed - Room renamed, RoomArchived - Room archived, RoomUnarchived - Room unarchived, RoomDeleted - Room deleted, RoomUpdateAccessForUser - Room update access for user, TagCreated - Tag created, TagsDeleted - Tags deleted, AddedRoomTags - Added room tags, DeletedRoomTags - Deleted room tags, RoomLogoCreated - Room logo created, RoomLogoDeleted - Room logo deleted, RoomInvitationLinkUpdated - Room invitation link updated, DocumentsKeepNewFileNameSettingsUpdated - Documents keep new file name settings updated, RoomRemoveUser - Room remove user, RoomCreateUser - Room create user, RoomInvitationLinkCreated - Room invitation link created, RoomInvitationLinkDeleted - Room invitation link deleted, RoomExternalLinkCreated - Room external link created, RoomExternalLinkUpdated - Room external link updated, RoomExternalLinkDeleted - Room external link deleted, FileExternalLinkCreated - File external link created, FileExternalLinkUpdated - File external link updated, FileExternalLinkDeleted - File external link deleted, RoomGroupAdded - Room group added, RoomUpdateAccessForGroup - Room update access for group, RoomGroupRemove - Room group remove, RoomExternalLinkRevoked - Room external link revoked, RoomExternalLinkRenamed - Room external link renamed, FileUploadedWithOverwriting - File uploaded with overwriting, RoomCopied - Room copied, DocumentsDisplayFileExtensionUpdated - Documents display file extension updated, RoomColorChanged - Room color changed, RoomCoverChanged - Room cover changed, RoomIndexingChanged - Room indexing changed, RoomDenyDownloadChanged - Room deny download changed, RoomIndexExportSaved - Room index export saved, FolderIndexChanged - Folder index changed, FolderIndexReordered - Folder index reordered, RoomDenyDownloadEnabled - Room deny download enabled, RoomDenyDownloadDisabled - Room deny download disabled, FileIndexChanged - File index changed, RoomWatermarkSet - Room watermark set, RoomWatermarkDisabled - Room watermark disabled, RoomIndexingEnabled - Room index export saved, RoomIndexingDisabled - Room indexing disabled, RoomLifeTimeSet - Room life time set, RoomLifeTimeDisabled - Room life time disabled, RoomInviteResend - Room invite resend, LanguageSettingsUpdated - Language settings updated, TimeZoneSettingsUpdated - Time zone settings updated, DnsSettingsUpdated - Dns settings updated, TrustedMailDomainSettingsUpdated - Trusted mail domain settings updated, PasswordStrengthSettingsUpdated - Password strength settings updated, TwoFactorAuthenticationSettingsUpdated - Two factor authentication settings updated, AdministratorMessageSettingsUpdated - Administrator message settings updated, DefaultStartPageSettingsUpdated - Default start page settings updated, ProductsListUpdated - Products list updated, AdministratorAdded - Administrator added, AdministratorOpenedFullAccess - Administrator opened full access, AdministratorDeleted - Administrator deleted, UsersOpenedProductAccess - Users opened product access, GroupsOpenedProductAccess - Groups opened product access, ProductAccessOpened - Product access opened, ProductAccessRestricted - Product access restricted, ProductAddedAdministrator - Product added administrator, ProductDeletedAdministrator - Product deleted administrator, GreetingSettingsUpdated - Greeting settings updated, TeamTemplateChanged - Team template changed, ColorThemeChanged - Color theme changed, OwnerSentChangeOwnerInstructions - Owner sent change owner instructions, OwnerUpdated - Owner updated, OwnerSentPortalDeactivationInstructions - Owner sent portal deactivation instructions, OwnerSentPortalDeleteInstructions - Owner sent portal delete instructions, PortalDeactivated - Portal deactivated, PortalDeleted - Portal deleted, LoginHistoryReportDownloaded - Login history report downloaded, AuditTrailReportDownloaded - Audit trail report downloaded, SSOEnabled - SSO enabled, SSODisabled - SSO disabled, PortalAccessSettingsUpdated - Portal access settings updated, CookieSettingsUpdated - Cookie settings updated, MailServiceSettingsUpdated - Mail service settings updated, CustomNavigationSettingsUpdated - Custom navigation settings updated, AuditSettingsUpdated - Audit settings updated, TwoFactorAuthenticationDisabled - Two factor authentication disabled, TwoFactorAuthenticationEnabledBySms - Two factor authentication enabled by sms, TwoFactorAuthenticationEnabledByTfaApp - Two factor authentication enabled by tfa app, PortalRenamed - Portal renamed, QuotaPerRoomChanged - Quota per room changed, QuotaPerRoomDisabled - Quota per room disabled, QuotaPerUserChanged - Quota per user changed, QuotaPerUserDisabled - Quota per user disabled, QuotaPerPortalChanged - Quota per portal changed, QuotaPerPortalDisabled - Quota per portal disabled, FormSubmit - Form submit, FormOpenedForFilling - Form opened for filling, CustomQuotaPerRoomDefault - Custom quota per room default, CustomQuotaPerRoomChanged - Custom quota per room changed, CustomQuotaPerRoomDisabled - Custom quota per room disabled, CustomQuotaPerUserDefault - Custom quota per user default, CustomQuotaPerUserChanged - Custom quota per user changed, CustomQuotaPerUserDisabled - Custom quota per user disabled, ContactAdminMailSent - Contact admin mail sent, RoomInviteLinkUsed - Room invite link used, UserCreatedAndAddedToRoom - User created and added to room, GuestCreatedAndAddedToRoom - Guest created and added to room, ContactSalesMailSent - Contact sales mail sent, CreateClient - Create client, UpdateClient - Update client, RegenerateSecret - Regenerate secret, DeleteClient - Delete client, ChangeClientActivation - Change client activation, ChangeClientVisibility - Change client visibility, RevokeUserClient - Revoke user client, GenerateAuthorizationCodeToken - Generate authorization code token, GeneratePersonalAccessToken - Generate personal access token, None - None]",
            "example": "LoginSuccess"
          },
          {
            "enum": [
              1000,
              1001,
              1002,
              1003,
              1004,
              1005,
              1006,
              1007,
              1008,
              1009,
              1010,
              1011,
              1012,
              1013,
              1014,
              1015,
              1016,
              1017,
              1018,
              1019,
              1020,
              1021,
              1022,
              1023,
              1024,
              1025,
              1026,
              4000,
              4001,
              4002,
              4003,
              4004,
              4005,
              4006,
              4007,
              4008,
              4009,
              4010,
              4011,
              4012,
              4013,
              4014,
              4015,
              4016,
              4017,
              4018,
              4019,
              4020,
              4021,
              4022,
              4023,
              4024,
              4025,
              4026,
              4027,
              4028,
              4029,
              4030,
              4031,
              4032,
              4033,
              4034,
              4035,
              4036,
              4037,
              5000,
              5001,
              5002,
              5003,
              5004,
              5005,
              5006,
              5007,
              5008,
              5009,
              5010,
              5011,
              5012,
              5013,
              5014,
              5015,
              5016,
              5017,
              5018,
              5019,
              5020,
              5021,
              5022,
              5023,
              5024,
              5025,
              5026,
              5027,
              5028,
              5029,
              5030,
              5031,
              5032,
              5033,
              5034,
              5035,
              5036,
              5037,
              5038,
              5039,
              5040,
              5041,
              5042,
              5043,
              5044,
              5045,
              5046,
              5047,
              5048,
              5049,
              5050,
              5051,
              5052,
              5053,
              5054,
              5055,
              5056,
              5057,
              5058,
              5059,
              5060,
              5061,
              5062,
              5063,
              5064,
              5065,
              5066,
              5068,
              5069,
              5070,
              5071,
              5072,
              5073,
              5074,
              5075,
              5076,
              5077,
              5078,
              5079,
              5080,
              5081,
              5082,
              5083,
              5084,
              5085,
              5086,
              5087,
              5088,
              5089,
              5090,
              5091,
              5092,
              5093,
              5094,
              5095,
              5096,
              5097,
              5098,
              5099,
              5100,
              5101,
              5102,
              5103,
              5104,
              5105,
              5106,
              5107,
              5108,
              5109,
              5110,
              5111,
              5112,
              5113,
              5114,
              5115,
              5116,
              5117,
              5118,
              6000,
              6001,
              6002,
              6003,
              6004,
              6005,
              6006,
              6007,
              6008,
              6009,
              6010,
              6011,
              6012,
              6013,
              6014,
              6015,
              6016,
              6017,
              6018,
              6019,
              6020,
              6021,
              6022,
              6023,
              6024,
              6025,
              6026,
              6027,
              6028,
              6029,
              6030,
              6031,
              6032,
              6033,
              6034,
              6035,
              6036,
              6037,
              6038,
              6039,
              6040,
              6041,
              6042,
              6043,
              6044,
              6045,
              6046,
              6047,
              6048,
              6049,
              6050,
              6051,
              6052,
              6053,
              7000,
              7001,
              7002,
              7003,
              7004,
              9901,
              9902,
              9903,
              9904,
              9905,
              9906,
              9907,
              9908,
              9909,
              -1
            ],
            "type": "integer",
            "description": "[1000 - Login success, 1001 - Login success via social account, 1002 - Login fail invalid combination, 1003 - Login fail social account not found, 1004 - Login fail disabled profile, 1005 - Login fail, 1006 - Logout, 1007 - Login success via sms, 1008 - Login fail via sms, 1009 - Login fail ip security, 1010 - Login success via api, 1011 - Login success via social app, 1012 - Login success via api sms, 1013 - Login fail via api, 1014 - Login fail via api sms, 1015 - Login success via SSO, 1016 - Session started, 1017 - Session completed, 1018 - Login fail via SSO, 1019 - Login success via api social account, 1020 - Login fail via api social account, 1021 - Login succes via tfa app, 1022 - Login fail via Tfa app, 1023 - Login fail brute force, 1024 - Login success via api tfa, 1025 - Login fail via api tfa, 1026 - Login fail recaptcha, 4000 - User created, 4001 - Guest created, 4002 - User created via invite, 4003 - Guest created via invite, 4004 - User activated, 4005 - Guest activated, 4006 - User updated, 4007 - User updated language, 4008 - User added avatar, 4009 - User deleted avatar, 4010 - User updated avatar thumbnails, 4011 - User linked social account, 4012 - User unlinked social account, 4013 - User sent activation instructions, 4014 - User sent email change instructions, 4015 - User sent password change instructions, 4016 - User sent delete instructions, 4017 - User updated password, 4018 - User deleted, 4019 - Users updated type, 4020 - Users updated status, 4021 - Users sent activation instructions, 4022 - Users deleted, 4023 - Sent invite instructions, 4024 - User imported, 4025 - Guest imported, 4026 - Group created, 4027 - Group updated, 4028 - Group deleted, 4029 - User updated mobile number, 4030 - User data reassigns, 4031 - User data removing, 4032 - User connected tfa app, 4033 - User disconnected tfa app, 4034 - User logout active connections, 4035 - User logout active connection, 4036 - User logout active connections for user, 4037 - Send join invite, 5000 - File created, 5001 - File renamed, 5002 - File updated, 5003 - File created version, 5004 - File deleted version, 5005 - File updated revision comment, 5006 - File locked, 5007 - File unlocked, 5008 - File updated access, 5009 - File downloaded, 5010 - File downloaded as, 5011 - File uploaded, 5012 - File imported, 5013 - File copied, 5014 - File copied with overwriting, 5015 - File moved, 5016 - File moved with overwriting, 5017 - File moved to trash, 5018 - File deleted, 5019 - Folder created, 5020 - Folder renamed, 5021 - Folder updated access, 5022 - Folder copied, 5023 - Folder copied with overwriting, 5024 - Folder moved, 5025 - Folder moved with overwriting, 5026 - Folder moved to trash, 5027 - Folder deleted, 5028 - ThirdParty created, 5029 - ThirdParty updated, 5030 - ThirdParty deleted, 5031 - Documents ThirdParty settings updated, 5032 - Documents overwriting settings updated, 5033 - Documents uploading formats settings updated, 5034 - User file updated, 5035 - File converted, 5036 - File send access link, 5037 - Document service location setting, 5038 - Authorization keys setting, 5039 - Full text search setting, 5040 - Start transfer setting, 5041 - Start backup setting, 5042 - License key uploaded, 5043 - File change owner, 5044 - File restore version, 5045 - Document send to sign, 5046 - Document sign complete, 5047 - User updated email, 5048 - Documents store forcesave, 5049 - Documents forcesave, 5050 - Start storage encryption, 5051 - Privacy room enable, 5052 - Privacy room disable, 5053 - Start storage decryption, 5054 - File opened for change, 5055 - File marked as favorite, 5056 - File removed from favorite, 5057 - Folder downloaded, 5058 - File removed from list, 5059 - Folder removed from list, 5060 - File external link access updated, 5061 - Trash emptied, 5062 - File revision downloaded, 5063 - File marked as read, 5064 - File readed, 5065 - Folder marked as read, 5066 - Folder updated access for, 5068 - File updated access for, 5069 - Documents external share settings updated, 5070 - Room created, 5071 - Room renamed, 5072 - Room archived, 5073 - Room unarchived, 5074 - Room deleted, 5075 - Room update access for user, 5076 - Tag created, 5077 - Tags deleted, 5078 - Added room tags, 5079 - Deleted room tags, 5080 - Room logo created, 5081 - Room logo deleted, 5082 - Room invitation link updated, 5083 - Documents keep new file name settings updated, 5084 - Room remove user, 5085 - Room create user, 5086 - Room invitation link created, 5087 - Room invitation link deleted, 5088 - Room external link created, 5089 - Room external link updated, 5090 - Room external link deleted, 5091 - File external link created, 5092 - File external link updated, 5093 - File external link deleted, 5094 - Room group added, 5095 - Room update access for group, 5096 - Room group remove, 5097 - Room external link revoked, 5098 - Room external link renamed, 5099 - File uploaded with overwriting, 5100 - Room copied, 5101 - Documents display file extension updated, 5102 - Room color changed, 5103 - Room cover changed, 5104 - Room indexing changed, 5105 - Room deny download changed, 5106 - Room index export saved, 5107 - Folder index changed, 5108 - Folder index reordered, 5109 - Room deny download enabled, 5110 - Room deny download disabled, 5111 - File index changed, 5112 - Room watermark set, 5113 - Room watermark disabled, 5114 - Room index export saved, 5115 - Room indexing disabled, 5116 - Room life time set, 5117 - Room life time disabled, 5118 - Room invite resend, 6000 - Language settings updated, 6001 - Time zone settings updated, 6002 - Dns settings updated, 6003 - Trusted mail domain settings updated, 6004 - Password strength settings updated, 6005 - Two factor authentication settings updated, 6006 - Administrator message settings updated, 6007 - Default start page settings updated, 6008 - Products list updated, 6009 - Administrator added, 6010 - Administrator opened full access, 6011 - Administrator deleted, 6012 - Users opened product access, 6013 - Groups opened product access, 6014 - Product access opened, 6015 - Product access restricted, 6016 - Product added administrator, 6017 - Product deleted administrator, 6018 - Greeting settings updated, 6019 - Team template changed, 6020 - Color theme changed, 6021 - Owner sent change owner instructions, 6022 - Owner updated, 6023 - Owner sent portal deactivation instructions, 6024 - Owner sent portal delete instructions, 6025 - Portal deactivated, 6026 - Portal deleted, 6027 - Login history report downloaded, 6028 - Audit trail report downloaded, 6029 - SSO enabled, 6030 - SSO disabled, 6031 - Portal access settings updated, 6032 - Cookie settings updated, 6033 - Mail service settings updated, 6034 - Custom navigation settings updated, 6035 - Audit settings updated, 6036 - Two factor authentication disabled, 6037 - Two factor authentication enabled by sms, 6038 - Two factor authentication enabled by tfa app, 6039 - Portal renamed, 6040 - Quota per room changed, 6041 - Quota per room disabled, 6042 - Quota per user changed, 6043 - Quota per user disabled, 6044 - Quota per portal changed, 6045 - Quota per portal disabled, 6046 - Form submit, 6047 - Form opened for filling, 6048 - Custom quota per room default, 6049 - Custom quota per room changed, 6050 - Custom quota per room disabled, 6051 - Custom quota per user default, 6052 - Custom quota per user changed, 6053 - Custom quota per user disabled, 7000 - Contact admin mail sent, 7001 - Room invite link used, 7002 - User created and added to room, 7003 - Guest created and added to room, 7004 - Contact sales mail sent, 9901 - Create client, 9902 - Update client, 9903 - Regenerate secret, 9904 - Delete client, 9905 - Change client activation, 9906 - Change client visibility, 9907 - Revoke user client, 9908 - Generate authorization code token, 9909 - Generate personal access token, -1 - None]",
            "example": 1000
          }
        ]
      },
      "ASC.Web.Api.Models.Contact": {
        "type": "object",
        "properties": {
          "type": {
            "type": "string",
            "description": "Contact type",
            "nullable": true,
            "example": "GTalk"
          },
          "value": {
            "type": "string",
            "description": "Contact value",
            "nullable": true,
            "example": "my@gmail.com"
          }
        },
        "additionalProperties": false
      },
      "ASC.Web.Api.Models.EmployeeDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "ID",
            "format": "uuid",
            "example": "{00000000-0000-0000-0000-000000000000}"
          },
          "displayName": {
            "type": "string",
            "description": "Display name",
            "nullable": true,
            "example": "Mike Zanyatski"
          },
          "title": {
            "type": "string",
            "description": "Title",
            "nullable": true,
            "example": "Manager"
          },
          "avatar": {
            "type": "string",
            "description": "Avatar",
            "nullable": true,
            "example": "some text"
          },
          "avatarOriginal": {
            "type": "string",
            "description": "Original size avatar",
            "nullable": true,
            "example": "some text"
          },
          "avatarMax": {
            "type": "string",
            "description": "Maximum size avatar",
            "nullable": true,
            "example": "some text"
          },
          "avatarMedium": {
            "type": "string",
            "description": "Medium size avatar",
            "nullable": true,
            "example": "some text"
          },
          "avatarSmall": {
            "type": "string",
            "description": "Small avatar",
            "nullable": true,
            "example": "url to small avatar"
          },
          "profileUrl": {
            "type": "string",
            "description": "Profile URL",
            "nullable": true,
            "example": "some text"
          },
          "hasAvatar": {
            "type": "boolean",
            "description": "Specifies if the user has an avatar or not",
            "example": true
          },
          "isAnonim": {
            "type": "boolean",
            "description": "Specifies if the user is an anonim or not",
            "example": true
          }
        },
        "additionalProperties": false
      },
      "ASC.Web.Api.Models.EmployeeFullDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "ID",
            "format": "uuid",
            "example": "{00000000-0000-0000-0000-000000000000}"
          },
          "displayName": {
            "type": "string",
            "description": "Display name",
            "nullable": true,
            "example": "Mike Zanyatski"
          },
          "title": {
            "type": "string",
            "description": "Title",
            "nullable": true,
            "example": "Manager"
          },
          "avatar": {
            "type": "string",
            "description": "Avatar",
            "nullable": true,
            "example": "some text"
          },
          "avatarOriginal": {
            "type": "string",
            "description": "Original size avatar",
            "nullable": true,
            "example": "some text"
          },
          "avatarMax": {
            "type": "string",
            "description": "Maximum size avatar",
            "nullable": true,
            "example": "some text"
          },
          "avatarMedium": {
            "type": "string",
            "description": "Medium size avatar",
            "nullable": true,
            "example": "some text"
          },
          "avatarSmall": {
            "type": "string",
            "description": "Small avatar",
            "nullable": true,
            "example": "url to small avatar"
          },
          "profileUrl": {
            "type": "string",
            "description": "Profile URL",
            "nullable": true,
            "example": "some text"
          },
          "hasAvatar": {
            "type": "boolean",
            "description": "Specifies if the user has an avatar or not",
            "example": true
          },
          "isAnonim": {
            "type": "boolean",
            "description": "Specifies if the user is an anonim or not",
            "example": true
          },
          "firstName": {
            "type": "string",
            "description": "First name",
            "nullable": true,
            "example": "Mike"
          },
          "lastName": {
            "type": "string",
            "description": "Last name",
            "nullable": true,
            "example": "Zanyatski"
          },
          "userName": {
            "type": "string",
            "description": "Username",
            "nullable": true,
            "example": "Mike.Zanyatski"
          },
          "email": {
            "type": "string",
            "description": "Email",
            "format": "email",
            "nullable": true,
            "example": "my@gmail.com"
          },
          "contacts": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ASC.Web.Api.Models.Contact"
            },
            "description": "List of contacts",
            "nullable": true
          },
          "birthday": {
            "$ref": "#/components/schemas/ASC.Api.Core.ApiDateTime"
          },
          "sex": {
            "type": "string",
            "description": "Sex",
            "nullable": true,
            "example": "male"
          },
          "status": {
            "$ref": "#/components/schemas/ASC.Core.Users.EmployeeStatus"
          },
          "activationStatus": {
            "$ref": "#/components/schemas/ASC.Core.Users.EmployeeActivationStatus"
          },
          "terminated": {
            "$ref": "#/components/schemas/ASC.Api.Core.ApiDateTime"
          },
          "department": {
            "type": "string",
            "description": "Department",
            "nullable": true,
            "example": "Marketing"
          },
          "workFrom": {
            "$ref": "#/components/schemas/ASC.Api.Core.ApiDateTime"
          },
          "groups": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ASC.Web.Api.Models.GroupSummaryDto"
            },
            "description": "List of groups",
            "nullable": true
          },
          "location": {
            "type": "string",
            "description": "Location",
            "nullable": true,
            "example": "Palo Alto"
          },
          "notes": {
            "type": "string",
            "description": "Notes",
            "nullable": true,
            "example": "Notes to worker"
          },
          "isAdmin": {
            "type": "boolean",
            "description": "Specifies if the user is an administrator or not",
            "example": false
          },
          "isRoomAdmin": {
            "type": "boolean",
            "description": "Specifies if the user is a room administrator or not",
            "example": true
          },
          "isLDAP": {
            "type": "boolean",
            "description": "Specifies if the LDAP settings are enabled for the user or not",
            "example": false
          },
          "listAdminModules": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "List of administrator modules",
            "nullable": true,
            "example": "[\"projects\", \"crm\"]"
          },
          "isOwner": {
            "type": "boolean",
            "description": "Specifies if the user is a portal owner or not",
            "example": true
          },
          "isVisitor": {
            "type": "boolean",
            "description": "Specifies if the user is a portal visitor or not",
            "example": true
          },
          "isCollaborator": {
            "type": "boolean",
            "description": "Specifies if the user is a portal collaborator or not",
            "example": true
          },
          "cultureName": {
            "type": "string",
            "description": "Language",
            "nullable": true,
            "example": "en-EN"
          },
          "mobilePhone": {
            "type": "string",
            "description": "Mobile phone number",
            "nullable": true,
            "example": "some text"
          },
          "mobilePhoneActivationStatus": {
            "$ref": "#/components/schemas/ASC.Core.Users.MobilePhoneActivationStatus"
          },
          "isSSO": {
            "type": "boolean",
            "description": "Specifies if the SSO settings are enabled for the user or not",
            "example": false
          },
          "theme": {
            "$ref": "#/components/schemas/ASC.Web.Core.Users.DarkThemeSettingsType"
          },
          "quotaLimit": {
            "type": "integer",
            "description": "Quota limit",
            "format": "int64",
            "nullable": true,
            "example": 1234
          },
          "usedSpace": {
            "type": "number",
            "description": "Portal used space",
            "format": "double",
            "nullable": true,
            "example": 12345
          },
          "shared": {
            "type": "boolean",
            "description": "Shared",
            "nullable": true,
            "example": true
          },
          "isCustomQuota": {
            "type": "boolean",
            "description": "Specifies if the user has a custom quota or not",
            "nullable": true,
            "example": true
          },
          "loginEventId": {
            "type": "integer",
            "description": "Current login event ID",
            "format": "int32",
            "nullable": true,
            "example": 1234
          },
          "createdBy": {
            "$ref": "#/components/schemas/ASC.Web.Api.Models.EmployeeDto"
          },
          "registrationDate": {
            "$ref": "#/components/schemas/ASC.Api.Core.ApiDateTime"
          }
        },
        "additionalProperties": false
      },
      "ASC.Web.Api.Models.GroupSummaryDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "ID",
            "format": "uuid",
            "example": "{00000000-0000-0000-0000-000000000000}"
          },
          "name": {
            "type": "string",
            "description": "Name",
            "nullable": true,
            "example": "Group Name"
          },
          "manager": {
            "type": "string",
            "description": "Manager",
            "nullable": true,
            "example": "Jake.Zazhitski"
          }
        },
        "additionalProperties": false
      },
      "ASC.Web.Core.Files.FileType": {
        "oneOf": [
          {
            "enum": [
              "Unknown",
              "Archive",
              "Video",
              "Audio",
              "Image",
              "Spreadsheet",
              "Presentation",
              "Document",
              "Pdf"
            ],
            "type": "string",
            "description": "[Unknown - Unknown, Archive - Archive, Video - Video, Audio - Audio, Image - Image, Spreadsheet - Spreadsheet, Presentation - Presentation, Document - Document, Pdf - Pdf]",
            "example": "Unknown"
          },
          {
            "enum": [
              0,
              1,
              2,
              3,
              4,
              5,
              6,
              7,
              10
            ],
            "type": "integer",
            "description": "[0 - Unknown, 1 - Archive, 2 - Video, 3 - Audio, 4 - Image, 5 - Spreadsheet, 6 - Presentation, 7 - Document, 10 - Pdf]",
            "example": 0
          }
        ]
      },
      "ASC.Web.Core.Users.DarkThemeSettingsType": {
        "oneOf": [
          {
            "enum": [
              "Base",
              "Dark",
              "System"
            ],
            "type": "string",
            "description": "[Base - Base, Dark - Dark, System - System]",
            "example": "Base"
          },
          {
            "enum": [
              0,
              1,
              2
            ],
            "type": "integer",
            "description": "[0 - Base, 1 - Dark, 2 - System]",
            "example": 0
          }
        ]
      },
      "ASC.Web.Files.Core.Compress.ICompress": {
        "type": "object",
        "additionalProperties": false,
        "description": "Archiving Class Unification Interface"
      },
      "ASC.Web.Files.Services.DocumentService.CoEditingConfig": {
        "type": "object",
        "properties": {
          "change": {
            "type": "boolean",
            "description": "Change",
            "example": true
          },
          "fast": {
            "type": "boolean",
            "description": "Fast",
            "example": true
          },
          "mode": {
            "$ref": "#/components/schemas/ASC.Web.Files.Services.DocumentService.CoEditingConfigMode"
          }
        },
        "additionalProperties": false
      },
      "ASC.Web.Files.Services.DocumentService.CoEditingConfigMode": {
        "enum": [
          0,
          1
        ],
        "type": "integer",
        "format": "int32"
      },
      "ASC.Web.Files.Services.DocumentService.EditorType": {
        "oneOf": [
          {
            "enum": [
              "Desktop",
              "Mobile",
              "Embedded"
            ],
            "type": "string",
            "description": "[Desktop - Desktop, Mobile - Mobile, Embedded - Embedded]",
            "example": "Desktop"
          },
          {
            "enum": [
              0,
              1,
              2
            ],
            "type": "integer",
            "description": "[0 - Desktop, 1 - Mobile, 2 - Embedded]",
            "example": 0
          }
        ]
      },
      "ASC.Web.Files.Services.DocumentService.EmbeddedConfig": {
        "type": "object",
        "properties": {
          "embedUrl": {
            "type": "string",
            "description": "Embed url",
            "nullable": true,
            "readOnly": true,
            "example": "some text"
          },
          "saveUrl": {
            "type": "string",
            "description": "Save url",
            "nullable": true,
            "readOnly": true,
            "example": "some text"
          },
          "shareLinkParam": {
            "type": "string",
            "description": "Share link param",
            "nullable": true,
            "example": "some text"
          },
          "shareUrl": {
            "type": "string",
            "description": "Share url",
            "nullable": true,
            "readOnly": true,
            "example": "some text"
          },
          "toolbarDocked": {
            "type": "string",
            "description": "Toolbar docked",
            "nullable": true,
            "readOnly": true,
            "example": "some text"
          }
        },
        "additionalProperties": false
      },
      "ASC.Web.Files.Services.DocumentService.EncryptionKeysConfig": {
        "type": "object",
        "properties": {
          "cryptoEngineId": {
            "type": "string",
            "description": "Crypto engine id",
            "nullable": true,
            "readOnly": true,
            "example": "some text"
          },
          "privateKeyEnc": {
            "type": "string",
            "description": "Private key enc",
            "nullable": true,
            "example": "some text"
          },
          "publicKey": {
            "type": "string",
            "description": "Public key",
            "nullable": true,
            "example": "some text"
          }
        },
        "additionalProperties": false
      },
      "ASC.Web.Files.Services.DocumentService.FeedbackConfig": {
        "type": "object",
        "properties": {
          "url": {
            "type": "string",
            "description": "Url",
            "nullable": true,
            "example": "some text"
          },
          "visible": {
            "type": "boolean",
            "description": "Visible",
            "readOnly": true,
            "example": true
          }
        },
        "additionalProperties": false
      },
      "ASC.Web.Files.Services.DocumentService.FileReference": {
        "type": "object",
        "properties": {
          "referenceData": {
            "$ref": "#/components/schemas/ASC.Web.Files.Services.DocumentService.FileReferenceData"
          },
          "error": {
            "type": "string",
            "description": "Error",
            "nullable": true,
            "example": "some text"
          },
          "path": {
            "type": "string",
            "description": "Path",
            "nullable": true,
            "example": "some text"
          },
          "url": {
            "type": "string",
            "description": "URL",
            "format": "uri",
            "nullable": true,
            "example": "some text"
          },
          "fileType": {
            "type": "string",
            "description": "File type",
            "nullable": true,
            "example": "some text"
          },
          "key": {
            "type": "string",
            "description": "Key",
            "nullable": true,
            "example": "some text"
          },
          "link": {
            "type": "string",
            "description": "Link",
            "nullable": true,
            "example": "some text"
          },
          "token": {
            "type": "string",
            "description": "Token",
            "nullable": true,
            "example": "some text"
          }
        },
        "additionalProperties": false
      },
      "ASC.Web.Files.Services.DocumentService.FileReferenceData": {
        "type": "object",
        "properties": {
          "fileKey": {
            "type": "string",
            "description": "File key",
            "nullable": true,
            "example": "some text"
          },
          "instanceId": {
            "type": "string",
            "description": "Instance ID",
            "nullable": true,
            "example": "8671"
          }
        },
        "additionalProperties": false
      },
      "ASC.Web.Files.Services.DocumentService.GobackConfig": {
        "type": "object",
        "properties": {
          "url": {
            "type": "string",
            "description": "Url",
            "nullable": true,
            "example": "some text"
          }
        },
        "additionalProperties": false
      },
      "ASC.Web.Files.Services.DocumentService.Options": {
        "type": "object",
        "properties": {
          "watermark_on_draw": {
            "$ref": "#/components/schemas/ASC.Web.Files.Services.DocumentService.WatermarkOnDraw"
          }
        },
        "additionalProperties": false
      },
      "ASC.Web.Files.Services.DocumentService.Paragraph": {
        "type": "object",
        "properties": {
          "align": {
            "type": "integer",
            "format": "int32",
            "example": 1234
          },
          "runs": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ASC.Web.Files.Services.DocumentService.Run"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ASC.Web.Files.Services.DocumentService.PermissionsConfig": {
        "type": "object",
        "properties": {
          "changeHistory": {
            "type": "boolean",
            "description": "Change history",
            "example": true
          },
          "comment": {
            "type": "boolean",
            "description": "Comment",
            "example": true
          },
          "chat": {
            "type": "boolean",
            "description": "Chat",
            "example": true
          },
          "download": {
            "type": "boolean",
            "description": "Download",
            "example": true
          },
          "edit": {
            "type": "boolean",
            "description": "Edit",
            "example": true
          },
          "fillForms": {
            "type": "boolean",
            "description": "FillForms",
            "example": true
          },
          "modifyFilter": {
            "type": "boolean",
            "description": "ModifyFilter",
            "example": true
          },
          "protect": {
            "type": "boolean",
            "description": "Protect",
            "example": true
          },
          "print": {
            "type": "boolean",
            "description": "Print",
            "example": true
          },
          "rename": {
            "type": "boolean",
            "description": "Rename",
            "example": true
          },
          "review": {
            "type": "boolean",
            "description": "Review",
            "example": true
          },
          "copy": {
            "type": "boolean",
            "description": "Copy",
            "example": true
          }
        },
        "additionalProperties": false
      },
      "ASC.Web.Files.Services.DocumentService.PluginsConfig": {
        "type": "object",
        "properties": {
          "pluginsData": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true,
            "readOnly": true,
            "example": [
              "some text"
            ]
          }
        },
        "additionalProperties": false
      },
      "ASC.Web.Files.Services.DocumentService.RecentConfig": {
        "type": "object",
        "properties": {
          "folder": {
            "type": "string",
            "description": "Folder",
            "nullable": true,
            "example": "some text"
          },
          "title": {
            "type": "string",
            "description": "Title",
            "nullable": true,
            "example": "grocery_hacking"
          },
          "url": {
            "type": "string",
            "description": "Url",
            "format": "uri",
            "nullable": true,
            "example": "some text"
          }
        },
        "additionalProperties": false
      },
      "ASC.Web.Files.Services.DocumentService.Run": {
        "type": "object",
        "properties": {
          "fill": {
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int32"
            },
            "nullable": true,
            "example": [
              1234
            ]
          },
          "text": {
            "type": "string",
            "nullable": true,
            "example": "some text"
          },
          "font-size": {
            "type": "string",
            "nullable": true,
            "example": "some text"
          }
        },
        "additionalProperties": false
      },
      "ASC.Web.Files.Services.DocumentService.TemplatesConfig": {
        "type": "object",
        "properties": {
          "image": {
            "type": "string",
            "description": "Image",
            "nullable": true,
            "example": "some text"
          },
          "title": {
            "type": "string",
            "description": "Title",
            "nullable": true,
            "example": "plum_web"
          },
          "url": {
            "type": "string",
            "description": "Url",
            "format": "uri",
            "nullable": true,
            "example": "some text"
          }
        },
        "additionalProperties": false
      },
      "ASC.Web.Files.Services.DocumentService.UserConfig": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "Id",
            "nullable": true,
            "example": "1518"
          },
          "name": {
            "type": "string",
            "description": "Name",
            "nullable": true,
            "example": "Wilson Okuneva"
          },
          "image": {
            "type": "string",
            "description": "Image",
            "nullable": true,
            "example": "some text"
          }
        },
        "additionalProperties": false
      },
      "ASC.Web.Files.Services.DocumentService.WatermarkOnDraw": {
        "type": "object",
        "properties": {
          "width": {
            "type": "number",
            "description": "Defines the watermark width measured in millimeters.",
            "format": "double",
            "example": -8.5
          },
          "height": {
            "type": "number",
            "description": "Defines the watermark height measured in millimeters.",
            "format": "double",
            "example": -8.5
          },
          "margins": {
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int32"
            },
            "nullable": true,
            "example": [
              1234
            ]
          },
          "fill": {
            "type": "string",
            "nullable": true,
            "example": "some text"
          },
          "rotate": {
            "type": "integer",
            "format": "int32",
            "example": 1234
          },
          "transparent": {
            "type": "number",
            "format": "double",
            "example": -8.5
          },
          "paragraphs": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ASC.Web.Files.Services.DocumentService.Paragraph"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ASC.Web.Files.Services.WCFService.AceShortWrapper": {
        "type": "object",
        "properties": {
          "user": {
            "type": "string",
            "description": "User",
            "nullable": true,
            "example": "some text"
          },
          "permissions": {
            "type": "string",
            "description": "User access rights to the file",
            "nullable": true,
            "example": "some text"
          },
          "isLink": {
            "type": "boolean",
            "description": "Is link",
            "example": true
          }
        },
        "additionalProperties": false
      },
      "ASC.Web.Files.Services.WCFService.FileOperations.FileConflictResolveType": {
        "oneOf": [
          {
            "enum": [
              "Skip",
              "Overwrite",
              "Duplicate"
            ],
            "type": "string",
            "description": "[Skip - Skip, Overwrite - Overwrite, Duplicate - Duplicate]",
            "example": "Skip"
          },
          {
            "enum": [
              0,
              1,
              2
            ],
            "type": "integer",
            "description": "[0 - Skip, 1 - Overwrite, 2 - Duplicate]",
            "example": 0
          }
        ]
      },
      "ASC.Web.Files.Services.WCFService.FileOperations.FileOperationType": {
        "oneOf": [
          {
            "enum": [
              "Move",
              "Copy",
              "Delete",
              "Download",
              "MarkAsRead",
              "Import",
              "Convert",
              "Duplicate"
            ],
            "type": "string",
            "description": "[Move - Move, Copy - Copy, Delete - Delete, Download - Download, MarkAsRead - MarkAsRead, Import - Import, Convert - Convert, Duplicate - Duplicate]",
            "example": "Move"
          },
          {
            "enum": [
              0,
              1,
              2,
              3,
              4,
              5,
              6,
              7
            ],
            "type": "integer",
            "description": "[0 - Move, 1 - Copy, 2 - Delete, 3 - Download, 4 - MarkAsRead, 5 - Import, 6 - Convert, 7 - Duplicate]",
            "example": 0
          }
        ]
      },
      "ASC.Web.Files.Services.WCFService.MentionWrapper": {
        "type": "object",
        "properties": {
          "user": {
            "$ref": "#/components/schemas/ASC.Core.Users.UserInfo"
          },
          "email": {
            "type": "string",
            "description": "User email",
            "format": "email",
            "nullable": true,
            "readOnly": true,
            "example": "Ila_Price64@yahoo.com"
          },
          "id": {
            "type": "string",
            "description": "User ID",
            "nullable": true,
            "readOnly": true,
            "example": "3331"
          },
          "image": {
            "type": "string",
            "description": "User image",
            "nullable": true,
            "readOnly": true,
            "example": "some text"
          },
          "hasAccess": {
            "type": "boolean",
            "description": "Specifies if the user has the access to the file or not",
            "readOnly": true,
            "example": true
          },
          "name": {
            "type": "string",
            "description": "User display name",
            "nullable": true,
            "readOnly": true,
            "example": "Bonnie Watsica"
          }
        },
        "additionalProperties": false
      },
      "ASC.Web.Files.Services.WCFService.ThirdPartyParams": {
        "type": "object",
        "properties": {
          "auth_data": {
            "$ref": "#/components/schemas/ASC.Files.Core.AuthData"
          },
          "corporate": {
            "type": "boolean",
            "description": "Specifies if this is a corporate account or not",
            "example": true
          },
          "roomsStorage": {
            "type": "boolean",
            "description": "Specifies if this is a room storage or not",
            "example": true
          },
          "customer_title": {
            "type": "string",
            "description": "Customer title",
            "nullable": true,
            "example": "some text"
          },
          "provider_id": {
            "type": "integer",
            "description": "Provider ID",
            "format": "int32",
            "nullable": true,
            "example": 1234
          },
          "provider_key": {
            "type": "string",
            "description": "Provider key",
            "nullable": true,
            "example": "some text"
          }
        },
        "additionalProperties": false
      },
      "Microsoft.AspNetCore.Mvc.NoContentResult": {
        "type": "object",
        "properties": {
          "statusCode": {
            "type": "integer",
            "format": "int32",
            "example": 1234
          }
        },
        "additionalProperties": false
      },
      "System.Collections.Generic.KeyValuePair.System.Boolean.System.String": {
        "type": "object",
        "properties": {
          "key": {
            "type": "boolean",
            "example": true
          },
          "value": {
            "type": "string",
            "nullable": true,
            "example": "some text"
          }
        },
        "additionalProperties": false
      },
      "System.Collections.Generic.KeyValuePair.System.String.Microsoft.Extensions.Primitives.StringValues": {
        "type": "object",
        "properties": {
          "key": {
            "type": "string",
            "nullable": true,
            "example": "some text"
          },
          "value": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "example": [
              "some text"
            ]
          }
        },
        "additionalProperties": false
      },
      "System.Net.Mime.ContentDisposition": {
        "type": "object",
        "properties": {
          "dispositionType": {
            "type": "string",
            "nullable": true,
            "example": "some text"
          },
          "parameters": {
            "type": "array",
            "items": {},
            "nullable": true,
            "readOnly": true
          },
          "fileName": {
            "type": "string",
            "nullable": true,
            "example": "some text"
          },
          "creationDate": {
            "type": "string",
            "format": "date-time",
            "example": "2008-04-10T06:30:00.0000000+04:00"
          },
          "modificationDate": {
            "type": "string",
            "format": "date-time",
            "example": "2008-04-10T06:30:00.0000000+04:00"
          },
          "inline": {
            "type": "boolean",
            "example": true
          },
          "readDate": {
            "type": "string",
            "format": "date-time",
            "example": "2008-04-10T06:30:00.0000000+04:00"
          },
          "size": {
            "type": "integer",
            "format": "int64",
            "example": 1234
          }
        },
        "additionalProperties": false
      },
      "System.Net.Mime.ContentType": {
        "type": "object",
        "properties": {
          "boundary": {
            "type": "string",
            "nullable": true,
            "example": "some text"
          },
          "charSet": {
            "type": "string",
            "nullable": true,
            "example": "some text"
          },
          "mediaType": {
            "type": "string",
            "nullable": true,
            "example": "some text"
          },
          "name": {
            "type": "string",
            "nullable": true,
            "example": "Maverick Ratke"
          },
          "parameters": {
            "type": "array",
            "items": {},
            "nullable": true,
            "readOnly": true
          }
        },
        "additionalProperties": false
      }
    },
    "securitySchemes": {
      "asc_auth_key": {
        "type": "apiKey",
        "name": "asc_auth_key",
        "in": "cookie"
      }
    }
  },
  "tags": [
    {
      "name": "Files / Files",
      "description": "Operations for working with files.",
      "x-displayName": "Files"
    },
    {
      "name": "Files / Folders",
      "description": "Operations for working with folders.",
      "x-displayName": "Folders"
    },
    {
      "name": "Files / Operations",
      "description": "Operations for performing actions on files and folders.",
      "x-displayName": "Operations"
    },
    {
      "name": "Files / Quota",
      "description": "Operations for working with room quota limit.",
      "x-displayName": "Quota"
    },
    {
      "name": "Files / Rooms",
      "description": "Operations for working with rooms.",
      "x-displayName": "Rooms"
    },
    {
      "name": "Files / Settings",
      "description": "Operations for working with file settings.",
      "x-displayName": "Settings"
    },
    {
      "name": "Files / Third-party integration",
      "description": "Operations for working with third-party integrations.",
      "x-displayName": "Third-party integration"
    }
  ],
  "x-tagGroups": [
    {
      "name": "Files",
      "tags": [
        "Files / Files",
        "Files / Folders",
        "Files / Operations",
        "Files / Quota",
        "Files / Rooms",
        "Files / Settings",
        "Files / Third-party integration"
      ]
    }
  ]
}