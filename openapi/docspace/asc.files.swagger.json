{
  "openapi": "3.0.1",
  "info": {
    "title": "ASC.Files",
    "version": "v2"
  },
  "servers": [
    {
      "url": "http://localhost:8092/",
      "description": "Local server"
    }
  ],
  "paths": {
    "/api/2.0/files/file/{fileId}/saveediting": {
      "put": {
        "tags": [
          "Files / Files"
        ],
        "summary": "Save file edits",
        "operationId": "saveEditingFromForm",
        "parameters": [
          {
            "name": "fileId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32",
              "example": 315
            }
          }
        ],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "properties": {
                  "FileExtension": {
                    "type": "string",
                    "example": ".txt"
                  },
                  "DownloadUri": {
                    "type": "string",
                    "example": "some text"
                  },
                  "File": {
                    "type": "string",
                    "format": "binary"
                  },
                  "Forcesave": {
                    "type": "boolean",
                    "example": true
                  }
                }
              },
              "encoding": {
                "FileExtension": {
                  "style": "form"
                },
                "DownloadUri": {
                  "style": "form"
                },
                "File": {
                  "style": "form"
                },
                "Forcesave": {
                  "style": "form"
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Saved file parameters",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.ResponseDto.FileDto.System.Int32"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.ResponseDto.FileDto.System.Int32"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.ResponseDto.FileDto.System.Int32"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "asc_auth_key": [
              "read",
              "write"
            ]
          }
        ],
        "description": "Saves edits to a file with the ID specified in the request."
      }
    },
    "/api/2.0/files/file/{fileId}/startedit": {
      "post": {
        "tags": [
          "Files / Files"
        ],
        "summary": "Start file editing",
        "operationId": "startEdit",
        "parameters": [
          {
            "name": "fileId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32",
              "example": 6717
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.RequestDto.StartEdit"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.RequestDto.StartEdit"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.RequestDto.StartEdit"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "File key for Document Service",
            "content": {
              "text/plain": {
                "schema": {}
              },
              "application/json": {
                "schema": {}
              },
              "text/json": {
                "schema": {}
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "asc_auth_key": [
              "read",
              "write"
            ]
          }
        ],
        "description": "Informs about opening a file with the ID specified in the request for editing, locking it from being deleted or moved (this method is called by the mobile editors)."
      }
    },
    "/api/2.0/files/file/{fileId}/startfilling": {
      "put": {
        "tags": [
          "Files / Files"
        ],
        "summary": "Starts filling",
        "operationId": "startFilling",
        "parameters": [
          {
            "name": "fileId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32",
              "example": 1208
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "asc_auth_key": [
              "read",
              "write"
            ]
          }
        ],
        "description": "Starts filling a file with the ID specified in the request."
      }
    },
    "/api/2.0/files/file/{fileId}/trackeditfile": {
      "get": {
        "tags": [
          "Files / Files"
        ],
        "summary": "Track file editing",
        "operationId": "trackEditFile",
        "parameters": [
          {
            "name": "fileId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32",
              "example": 502
            }
          },
          {
            "name": "tabId",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "uuid",
              "example": "75a5f745-f697-4418-b38d-0fe0d277e258"
            }
          },
          {
            "name": "docKeyForTrack",
            "in": "query",
            "schema": {
              "type": "string",
              "example": "some text"
            }
          },
          {
            "name": "isFinish",
            "in": "query",
            "schema": {
              "type": "boolean",
              "example": true
            }
          }
        ],
        "responses": {
          "200": {
            "description": "File changes",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/System.Collections.Generic.KeyValuePair.System.Boolean.System.String"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/System.Collections.Generic.KeyValuePair.System.Boolean.System.String"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/System.Collections.Generic.KeyValuePair.System.Boolean.System.String"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "asc_auth_key": [
              "read",
              "write"
            ]
          }
        ],
        "description": "Tracks file changes when editing."
      }
    },
    "/api/2.0/files/file/{fileId}/openedit": {
      "get": {
        "tags": [
          "Files / Files"
        ],
        "summary": "Open a file",
        "operationId": "openEdit",
        "parameters": [
          {
            "name": "fileId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32",
              "example": 6812
            }
          },
          {
            "name": "version",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32",
              "example": 1234
            }
          },
          {
            "name": "view",
            "in": "query",
            "schema": {
              "type": "boolean",
              "example": true
            }
          },
          {
            "name": "editorType",
            "in": "query",
            "schema": {
              "$ref": "#/components/schemas/ASC.Web.Files.Services.DocumentService.EditorType"
            }
          },
          {
            "name": "edit",
            "in": "query",
            "schema": {
              "type": "boolean",
              "example": true
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Configuration parameters",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.ResponseDto.ConfigurationDto.System.Int32"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.ResponseDto.ConfigurationDto.System.Int32"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.ResponseDto.ConfigurationDto.System.Int32"
                }
              }
            }
          }
        },
        "description": "Returns the initialization configuration of a file to open it in the editor."
      }
    },
    "/api/2.0/files/file/{fileId}/presigned": {
      "get": {
        "tags": [
          "Files / Files"
        ],
        "summary": "Get file download link asynchronously",
        "operationId": "getPresignedFileUri",
        "parameters": [
          {
            "name": "fileId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32",
              "example": 5563
            }
          }
        ],
        "responses": {
          "200": {
            "description": "File download link",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.Files.Core.Helpers.DocumentService_FileLink"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.Files.Core.Helpers.DocumentService_FileLink"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.Files.Core.Helpers.DocumentService_FileLink"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "asc_auth_key": [
              "read",
              "write"
            ]
          }
        ],
        "description": "Returns a link to download a file with the ID specified in the request asynchronously."
      }
    },
    "/api/2.0/files/file/referencedata": {
      "post": {
        "tags": [
          "Files / Files"
        ],
        "summary": "Get reference data",
        "operationId": "getReferenceData",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.RequestDto.GetReferenceDataDto.System.Int32"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.RequestDto.GetReferenceDataDto.System.Int32"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.RequestDto.GetReferenceDataDto.System.Int32"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "File reference data",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.Web.Files.Services.DocumentService.FileReference"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.Web.Files.Services.DocumentService.FileReference"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.Web.Files.Services.DocumentService.FileReference"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "asc_auth_key": [
              "read",
              "write"
            ]
          }
        ],
        "description": "Returns the reference data to uniquely identify a file in its system and check the availability of insering data into the destination spreadsheet by the external link."
      }
    },
    "/api/2.0/files/file/{fileId}/protectusers": {
      "get": {
        "tags": [
          "Files / Files"
        ],
        "summary": "Get users with the access to the protected file",
        "operationId": "protectUsers",
        "parameters": [
          {
            "name": "fileId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32",
              "example": 5652
            }
          }
        ],
        "responses": {
          "200": {
            "description": "List of users with their access rights to the protected file",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ASC.Web.Files.Services.WCFService.MentionWrapper"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ASC.Web.Files.Services.WCFService.MentionWrapper"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ASC.Web.Files.Services.WCFService.MentionWrapper"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "asc_auth_key": [
              "read",
              "write"
            ]
          }
        ],
        "description": "Returns a list of users with their access rights to the protected file with the ID specified in the request."
      }
    },
    "/api/2.0/files/file/{fileId}/log": {
      "get": {
        "tags": [
          "Files / Files"
        ],
        "summary": "Get file history",
        "operationId": "getFileHistory",
        "parameters": [
          {
            "name": "fileId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32",
              "example": 6178
            }
          }
        ],
        "responses": {
          "200": {
            "description": "List of actions performed on the file",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.ResponseDto.HistoryDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.ResponseDto.HistoryDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.ResponseDto.HistoryDto"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "asc_auth_key": [
              "read",
              "write"
            ]
          }
        ],
        "description": "Get the list of actions performed on the file with the specified identifier"
      }
    },
    "/api/2.0/files/file/{fileId}/history": {
      "put": {
        "tags": [
          "Files / Files"
        ],
        "summary": "Change version history",
        "operationId": "changeHistory",
        "parameters": [
          {
            "name": "fileId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32",
              "example": 2759
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.RequestDto.ChangeHistory"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.RequestDto.ChangeHistory"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.RequestDto.ChangeHistory"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Updated information about file versions",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.ResponseDto.FileDto.System.Int32"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.ResponseDto.FileDto.System.Int32"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.ResponseDto.FileDto.System.Int32"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "asc_auth_key": [
              "read",
              "write"
            ]
          }
        ],
        "description": "Changes the version history of a file with the ID specified in the request."
      },
      "get": {
        "tags": [
          "Files / Files"
        ],
        "summary": "Get file versions",
        "operationId": "getFileVersionInfo",
        "parameters": [
          {
            "name": "fileId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32",
              "example": 565
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Information about file versions: folder ID, version, version group, content length, pure content length, file status, URL to view a file, web URL, file type, file extension, comment, encrypted or not, thumbnail URL, thumbnail status, locked or not, user ID who locked a file, denies file downloading or not, denies file sharing or not, file accessibility",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.ResponseDto.FileDto.System.Int32"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.ResponseDto.FileDto.System.Int32"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.ResponseDto.FileDto.System.Int32"
                }
              }
            }
          }
        },
        "description": "Returns the detailed information about all the available file versions with the ID specified in the request."
      }
    },
    "/api/2.0/files/file/{fileId}/presigneduri": {
      "get": {
        "tags": [
          "Files / Files"
        ],
        "summary": "Get file download link",
        "operationId": "getPresignedUri",
        "parameters": [
          {
            "name": "fileId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32",
              "example": 1461
            }
          }
        ],
        "responses": {
          "200": {
            "description": "File download link",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string"
                }
              },
              "application/json": {
                "schema": {
                  "type": "string"
                }
              },
              "text/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "asc_auth_key": [
              "read",
              "write"
            ]
          }
        ],
        "description": "Returns a link to download a file with the ID specified in the request."
      }
    },
    "/api/2.0/files/file/{fileId}/isformpdf": {
      "get": {
        "tags": [
          "Files / Files"
        ],
        "summary": "Check the PDF file",
        "operationId": "isFormPDF",
        "parameters": [
          {
            "name": "fileId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32",
              "example": 2501
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Boolean value: true - the PDF file is form, false - the PDF file is not a form",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "boolean"
                }
              },
              "application/json": {
                "schema": {
                  "type": "boolean"
                }
              },
              "text/json": {
                "schema": {
                  "type": "boolean"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "asc_auth_key": [
              "read",
              "write"
            ]
          }
        ],
        "description": "Checks if the PDF file is form or not."
      }
    },
    "/api/2.0/files/file/{fileId}/copyas": {
      "post": {
        "tags": [
          "Files / Files"
        ],
        "summary": "Copy a file",
        "operationId": "copyFileAs",
        "parameters": [
          {
            "name": "fileId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32",
              "example": 608
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.RequestDto.CopyAs.System.Text.Json.JsonElement"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.RequestDto.CopyAs.System.Text.Json.JsonElement"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.RequestDto.CopyAs.System.Text.Json.JsonElement"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Copied file entry information",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.ResponseDto.FileEntryDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.ResponseDto.FileEntryDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.ResponseDto.FileEntryDto"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "asc_auth_key": [
              "read",
              "write"
            ]
          }
        ],
        "description": "Copies (and converts if possible) an existing file to the specified folder."
      }
    },
    "/api/2.0/files/{folderId}/file": {
      "post": {
        "tags": [
          "Files / Files"
        ],
        "summary": "Create a file",
        "description": "Creates a new file in the specified folder with the title specified in the request.\n\n**Note**: If a file extension is different from DOCX/XLSX/PPTX and refers to one of the known text, spreadsheet, or presentation formats, it will be changed to DOCX/XLSX/PPTX accordingly. If the file extension is not specified or is unknown, the DOCX extension will be added to the file title.",
        "operationId": "createFile",
        "parameters": [
          {
            "name": "folderId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32",
              "example": 463
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.RequestDto.CreateFile.System.Text.Json.JsonElement"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.RequestDto.CreateFile.System.Text.Json.JsonElement"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.RequestDto.CreateFile.System.Text.Json.JsonElement"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "New file information",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.ResponseDto.FileDto.System.Int32"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.ResponseDto.FileDto.System.Int32"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.ResponseDto.FileDto.System.Int32"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "asc_auth_key": [
              "read",
              "write"
            ]
          }
        ]
      }
    },
    "/api/2.0/files/{folderId}/html": {
      "post": {
        "tags": [
          "Files / Files"
        ],
        "summary": "Create an HTML file",
        "operationId": "createHtmlFile",
        "parameters": [
          {
            "name": "folderId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32",
              "example": 6931
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.RequestDto.CreateTextOrHtmlFile"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.RequestDto.CreateTextOrHtmlFile"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.RequestDto.CreateTextOrHtmlFile"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "New file information",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.ResponseDto.FileDto.System.Int32"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.ResponseDto.FileDto.System.Int32"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.ResponseDto.FileDto.System.Int32"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "asc_auth_key": [
              "read",
              "write"
            ]
          }
        ],
        "description": "Creates an HTML (.html) file in the selected folder with the title and contents specified in the request."
      }
    },
    "/api/2.0/files/{folderId}/text": {
      "post": {
        "tags": [
          "Files / Files"
        ],
        "summary": "Create a txt file",
        "operationId": "createTextFile",
        "parameters": [
          {
            "name": "folderId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32",
              "example": 471
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.RequestDto.CreateTextOrHtmlFile"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.RequestDto.CreateTextOrHtmlFile"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.RequestDto.CreateTextOrHtmlFile"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "New file information",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.ResponseDto.FileDto.System.Int32"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.ResponseDto.FileDto.System.Int32"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.ResponseDto.FileDto.System.Int32"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "asc_auth_key": [
              "read",
              "write"
            ]
          }
        ],
        "description": "Creates a text (.txt) file in the selected folder with the title and contents specified in the request."
      }
    },
    "/api/2.0/files/file/{fileId}": {
      "delete": {
        "tags": [
          "Files / Files"
        ],
        "summary": "Delete a file",
        "operationId": "deleteFile",
        "parameters": [
          {
            "name": "fileId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32",
              "example": 335
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.RequestDto.Delete"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.RequestDto.Delete"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.RequestDto.Delete"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "List of file operations",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.ResponseDto.FileOperationDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.ResponseDto.FileOperationDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.ResponseDto.FileOperationDto"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "asc_auth_key": [
              "read",
              "write"
            ]
          }
        ],
        "description": "Deletes a file with the ID specified in the request."
      },
      "get": {
        "tags": [
          "Files / Files"
        ],
        "summary": "Get file information",
        "operationId": "getFileInfo",
        "parameters": [
          {
            "name": "fileId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32",
              "example": 8554
            }
          },
          {
            "name": "version",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32",
              "example": 1234
            }
          }
        ],
        "responses": {
          "200": {
            "description": "File information",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.ResponseDto.FileDto.System.Int32"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.ResponseDto.FileDto.System.Int32"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.ResponseDto.FileDto.System.Int32"
                }
              }
            }
          }
        },
        "description": "Returns the detailed information about a file with the ID specified in the request."
      },
      "put": {
        "tags": [
          "Files / Files"
        ],
        "summary": "Update a file",
        "operationId": "updateFile",
        "parameters": [
          {
            "name": "fileId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32",
              "example": 5811
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.RequestDto.UpdateFile"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.RequestDto.UpdateFile"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.RequestDto.UpdateFile"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Updated file information",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.ResponseDto.FileDto.System.Int32"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.ResponseDto.FileDto.System.Int32"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.ResponseDto.FileDto.System.Int32"
                }
              }
            }
          }
        },
        "description": "Updates the information of the selected file with the parameters specified in the request."
      }
    },
    "/api/2.0/files/file/fillresult": {
      "get": {
        "tags": [
          "Files / Files"
        ],
        "summary": "Gets fill result",
        "operationId": "getFillResult",
        "parameters": [
          {
            "name": "fillingSessionId",
            "in": "query",
            "schema": {
              "type": "string",
              "example": "some text"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Ok",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.ResponseDto.FillingFormResultDto.System.Int32"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.ResponseDto.FillingFormResultDto.System.Int32"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.ResponseDto.FillingFormResultDto.System.Int32"
                }
              }
            }
          }
        },
        "description": "Gets fill result"
      }
    },
    "/api/2.0/files/file/{fileId}/edit/diff": {
      "get": {
        "tags": [
          "Files / Files"
        ],
        "summary": "Get changes URL",
        "operationId": "getEditDiffUrl",
        "parameters": [
          {
            "name": "fileId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32",
              "example": 4247
            }
          },
          {
            "name": "version",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32",
              "example": 1234
            }
          }
        ],
        "responses": {
          "200": {
            "description": "File version history data",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.Files.Core.EditHistoryDataDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.Files.Core.EditHistoryDataDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.Files.Core.EditHistoryDataDto"
                }
              }
            }
          }
        },
        "description": "Returns a URL to the changes of a file version specified in the request."
      }
    },
    "/api/2.0/files/file/{fileId}/edit/history": {
      "get": {
        "tags": [
          "Files / Files"
        ],
        "summary": "Get version history",
        "operationId": "getEditHistory",
        "parameters": [
          {
            "name": "fileId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32",
              "example": 1298
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Version history data",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.ResponseDto.EditHistoryDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.ResponseDto.EditHistoryDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.ResponseDto.EditHistoryDto"
                }
              }
            }
          }
        },
        "description": "Returns the version history of a file with the ID specified in the request."
      }
    },
    "/api/2.0/files/file/{fileId}/lock": {
      "put": {
        "tags": [
          "Files / Files"
        ],
        "summary": "Lock a file",
        "operationId": "lockFile",
        "parameters": [
          {
            "name": "fileId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32",
              "example": 9099
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.RequestDto.LockFileParameters"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.RequestDto.LockFileParameters"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.RequestDto.LockFileParameters"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Locked file information",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.ResponseDto.FileDto.System.Int32"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.ResponseDto.FileDto.System.Int32"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.ResponseDto.FileDto.System.Int32"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "asc_auth_key": [
              "read",
              "write"
            ]
          }
        ],
        "description": "Locks a file with the ID specified in the request."
      }
    },
    "/api/2.0/files/file/{fileId}/restoreversion": {
      "get": {
        "tags": [
          "Files / Files"
        ],
        "summary": "Restore a file version",
        "operationId": "restoreVersion",
        "parameters": [
          {
            "name": "fileId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32",
              "example": 8740
            }
          },
          {
            "name": "version",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32",
              "example": 1234
            }
          },
          {
            "name": "url",
            "in": "query",
            "schema": {
              "type": "string",
              "example": "some text"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Version history data: file ID, key, file version, version group, a user who updated a file, creation time, history changes in the string format, list of history changes, server version",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.ResponseDto.EditHistoryDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.ResponseDto.EditHistoryDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.ResponseDto.EditHistoryDto"
                }
              }
            }
          }
        },
        "description": "Restores a file version specified in the request."
      }
    },
    "/api/2.0/files/file/{id}/link": {
      "get": {
        "tags": [
          "Files / Files"
        ],
        "summary": "Get primary external link",
        "operationId": "getFilePrimaryExternalLink",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32",
              "example": 9461
            }
          }
        ],
        "responses": {
          "200": {
            "description": "File security information",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.ResponseDto.FileShareDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.ResponseDto.FileShareDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.ResponseDto.FileShareDto"
                }
              }
            }
          }
        },
        "description": "Returns the primary external link by the identifier specified in the request."
      }
    },
    "/api/2.0/files/{fileId}/order": {
      "put": {
        "tags": [
          "Files / Files"
        ],
        "summary": "Sets order of a file with ID specified in the request",
        "operationId": "setOrder",
        "parameters": [
          {
            "name": "fileId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32",
              "example": 1334
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.RequestDto.OrderRequestDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.RequestDto.OrderRequestDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.RequestDto.OrderRequestDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "asc_auth_key": [
              "read",
              "write"
            ]
          }
        ],
        "description": "Sets order of a file with ID specified in the request"
      }
    },
    "/api/2.0/files/file/{id}/links": {
      "get": {
        "tags": [
          "Files / Files"
        ],
        "summary": "Get file external links",
        "operationId": "getLinks",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32",
              "example": 389
            }
          }
        ],
        "responses": {
          "200": {
            "description": "File security information",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.ResponseDto.FileShareDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.ResponseDto.FileShareDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.ResponseDto.FileShareDto"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "asc_auth_key": [
              "read",
              "write"
            ]
          }
        ],
        "description": "Returns the external links of a file with the ID specified in the request."
      },
      "put": {
        "tags": [
          "Files / Files"
        ],
        "summary": "Set an external link",
        "operationId": "setExternalLink",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32",
              "example": 4400
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.RequestDto.FileLinkRequest"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.RequestDto.FileLinkRequest"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.RequestDto.FileLinkRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "File security information",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.ResponseDto.FileShareDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.ResponseDto.FileShareDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.ResponseDto.FileShareDto"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "asc_auth_key": [
              "read",
              "write"
            ]
          }
        ],
        "description": "Sets an external link to a file with the ID specified in the request."
      }
    },
    "/api/2.0/files/file/{id}/saveaspdf": {
      "post": {
        "tags": [
          "Files / Files"
        ],
        "summary": "Save as pdf",
        "operationId": "saveAsPdf",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32",
              "example": 9539
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.RequestDto.SaveAsPdf.System.Int32"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.RequestDto.SaveAsPdf.System.Int32"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.RequestDto.SaveAsPdf.System.Int32"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "New file information",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.ResponseDto.FileDto.System.Int32"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.ResponseDto.FileDto.System.Int32"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.ResponseDto.FileDto.System.Int32"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "asc_auth_key": [
              "read",
              "write"
            ]
          }
        ],
        "description": "Saves a file with the identifier specified in the request as a PDF document"
      }
    },
    "/api/2.0/files/@my/file": {
      "post": {
        "tags": [
          "Files / Files"
        ],
        "summary": "Create a file in the \"My documents\" section",
        "description": "Creates a new file in the \"My documents\" section with the title specified in the request.\n\n**Note**: If a file extension is different from DOCX/XLSX/PPTX and refers to one of the known text, spreadsheet, or presentation formats, it will be changed to DOCX/XLSX/PPTX accordingly. If the file extension is not specified or is unknown, the DOCX extension will be added to the file title.",
        "operationId": "createFileMyDocuments",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.RequestDto.CreateFile.System.Text.Json.JsonElement"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.RequestDto.CreateFile.System.Text.Json.JsonElement"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.RequestDto.CreateFile.System.Text.Json.JsonElement"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "New file information",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.ResponseDto.FileDto.System.Int32"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.ResponseDto.FileDto.System.Int32"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.ResponseDto.FileDto.System.Int32"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "asc_auth_key": [
              "read",
              "write"
            ]
          }
        ]
      }
    },
    "/api/2.0/files/@my/html": {
      "post": {
        "tags": [
          "Files / Files"
        ],
        "summary": "Create an HTML file in the \"My documents\" section",
        "operationId": "createHtmlFileInMy",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.RequestDto.CreateTextOrHtmlFile"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.RequestDto.CreateTextOrHtmlFile"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.RequestDto.CreateTextOrHtmlFile"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "New file information",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.ResponseDto.FileDto.System.Int32"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.ResponseDto.FileDto.System.Int32"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.ResponseDto.FileDto.System.Int32"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "asc_auth_key": [
              "read",
              "write"
            ]
          }
        ],
        "description": "Creates an HTML (.html) file in the \"My documents\" section with the title and contents specified in the request."
      }
    },
    "/api/2.0/files/@my/text": {
      "post": {
        "tags": [
          "Files / Files"
        ],
        "summary": "Create a text file in the \"My documents\" section",
        "operationId": "createTextFileInMy",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.RequestDto.CreateTextOrHtmlFile"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.RequestDto.CreateTextOrHtmlFile"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.RequestDto.CreateTextOrHtmlFile"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "New file information",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.ResponseDto.FileDto.System.Int32"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.ResponseDto.FileDto.System.Int32"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.ResponseDto.FileDto.System.Int32"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "asc_auth_key": [
              "read",
              "write"
            ]
          }
        ],
        "description": "Creates a text (.txt) file in the \"My documents\" section with the title and contents specified in the request."
      }
    },
    "/api/2.0/files/thumbnails": {
      "post": {
        "tags": [
          "Files / Files"
        ],
        "summary": "Create thumbnails",
        "operationId": "createThumbnails",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.RequestDto.BaseBatchRequestDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.RequestDto.BaseBatchRequestDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.RequestDto.BaseBatchRequestDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "List of file IDs",
            "content": {
              "text/plain": {
                "schema": {}
              },
              "application/json": {
                "schema": {}
              },
              "text/json": {
                "schema": {}
              }
            }
          }
        },
        "description": "Creates thumbnails for the files with the IDs specified in the request."
      }
    },
    "/api/2.0/files/masterform/{fileId}/checkfillformdraft": {
      "post": {
        "tags": [
          "Files / Files"
        ],
        "summary": "Check the form draft",
        "operationId": "checkFillFormDraft",
        "parameters": [
          {
            "name": "fileId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32",
              "example": 7511
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.RequestDto.CheckFillFormDraft"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.RequestDto.CheckFillFormDraft"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.RequestDto.CheckFillFormDraft"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Link to the form",
            "content": {
              "text/plain": {
                "schema": {}
              },
              "application/json": {
                "schema": {}
              },
              "text/json": {
                "schema": {}
              }
            }
          }
        },
        "description": "Checks if the current file is a form draft which can be filled out."
      }
    },
    "/api/2.0/files/templates": {
      "post": {
        "tags": [
          "Files / Files"
        ],
        "summary": "Add template files",
        "operationId": "addTemplates",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.RequestDto.TemplatesRequestDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.RequestDto.TemplatesRequestDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.RequestDto.TemplatesRequestDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Boolean value: true if the operation is successful",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "boolean"
                }
              },
              "application/json": {
                "schema": {
                  "type": "boolean"
                }
              },
              "text/json": {
                "schema": {
                  "type": "boolean"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "asc_auth_key": [
              "read",
              "write"
            ]
          }
        ],
        "description": "Adds files with the IDs specified in the request to the template list."
      },
      "delete": {
        "tags": [
          "Files / Files"
        ],
        "summary": "Delete template files",
        "operationId": "deleteTemplates",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "array",
                "items": {},
                "example": [
                  1234
                ]
              }
            },
            "text/json": {
              "schema": {
                "type": "array",
                "items": {},
                "example": [
                  1234
                ]
              }
            },
            "application/*+json": {
              "schema": {
                "type": "array",
                "items": {},
                "example": [
                  1234
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Boolean value: true if the operation is successful",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "boolean"
                }
              },
              "application/json": {
                "schema": {
                  "type": "boolean"
                }
              },
              "text/json": {
                "schema": {
                  "type": "boolean"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "asc_auth_key": [
              "read",
              "write"
            ]
          }
        ],
        "description": "Removes files with the IDs specified in the request from the template list."
      }
    },
    "/api/2.0/files/recent": {
      "delete": {
        "tags": [
          "Files / Files"
        ],
        "summary": "Delete recent files",
        "operationId": "deleteRecent",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.RequestDto.FileBaseBatchRequestDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.RequestDto.FileBaseBatchRequestDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.RequestDto.FileBaseBatchRequestDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "No content",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.NoContentResult"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.NoContentResult"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.NoContentResult"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "asc_auth_key": [
              "read",
              "write"
            ]
          }
        ],
        "description": "Removes files with the IDs specified in the request from the \"Recent\" section."
      }
    },
    "/api/2.0/files/file/{fileId}/edit_session": {
      "post": {
        "tags": [
          "Files / Files"
        ],
        "summary": "Create the editing session",
        "operationId": "createEditSession",
        "parameters": [
          {
            "name": "fileId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32",
              "example": 9696
            }
          },
          {
            "name": "fileSize",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int64",
              "example": 1234
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Information about created session",
            "content": {
              "text/plain": {
                "schema": {}
              },
              "application/json": {
                "schema": {}
              },
              "text/json": {
                "schema": {}
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "asc_auth_key": [
              "read",
              "write"
            ]
          }
        ],
        "description": "Creates a session to edit the existing file with multiple chunks (needed for WebDAV)."
      }
    },
    "/api/2.0/files/folder/{folderId}/log": {
      "get": {
        "tags": [
          "Files / Folders"
        ],
        "summary": "Get folder history",
        "operationId": "getHistory",
        "parameters": [
          {
            "name": "folderId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32",
              "example": 8165
            }
          }
        ],
        "responses": {
          "200": {
            "description": "List of actions in the folder",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.ResponseDto.HistoryDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.ResponseDto.HistoryDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.ResponseDto.HistoryDto"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "asc_auth_key": [
              "read",
              "write"
            ]
          }
        ],
        "description": "Get the activity history of a folder with a specified identifier"
      }
    },
    "/api/2.0/files/folder/{folderId}": {
      "post": {
        "tags": [
          "Files / Folders"
        ],
        "summary": "Create a folder",
        "operationId": "createFolder",
        "parameters": [
          {
            "name": "folderId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32",
              "example": 737
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.RequestDto.CreateFolder"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.RequestDto.CreateFolder"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.RequestDto.CreateFolder"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "New folder parameters",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.ResponseDto.FolderDto.System.Int32"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.ResponseDto.FolderDto.System.Int32"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.ResponseDto.FolderDto.System.Int32"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "asc_auth_key": [
              "read",
              "write"
            ]
          }
        ],
        "description": "Creates a new folder with the title specified in the request. The parent folder ID can be also specified."
      },
      "delete": {
        "tags": [
          "Files / Folders"
        ],
        "summary": "Delete a folder",
        "operationId": "deleteFolder",
        "parameters": [
          {
            "name": "folderId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32",
              "example": 3188
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.RequestDto.DeleteFolder"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.RequestDto.DeleteFolder"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.RequestDto.DeleteFolder"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "List of file operations",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.ResponseDto.FileOperationDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.ResponseDto.FileOperationDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.ResponseDto.FileOperationDto"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "asc_auth_key": [
              "read",
              "write"
            ]
          }
        ],
        "description": "Deletes a folder with the ID specified in the request."
      },
      "get": {
        "tags": [
          "Files / Folders"
        ],
        "summary": "Get folder information",
        "operationId": "getFolderInfo",
        "parameters": [
          {
            "name": "folderId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32",
              "example": 4032
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Folder parameters",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.ResponseDto.FolderDto.System.Int32"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.ResponseDto.FolderDto.System.Int32"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.ResponseDto.FolderDto.System.Int32"
                }
              }
            }
          }
        },
        "description": "Returns the detailed information about a folder with the ID specified in the request."
      },
      "put": {
        "tags": [
          "Files / Folders"
        ],
        "summary": "Rename a folder",
        "operationId": "renameFolder",
        "parameters": [
          {
            "name": "folderId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32",
              "example": 3582
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.RequestDto.CreateFolder"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.RequestDto.CreateFolder"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.RequestDto.CreateFolder"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Folder parameters",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.ResponseDto.FolderDto.System.Int32"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.ResponseDto.FolderDto.System.Int32"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.ResponseDto.FolderDto.System.Int32"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "asc_auth_key": [
              "read",
              "write"
            ]
          }
        ],
        "description": "Renames the selected folder with a new title specified in the request."
      }
    },
    "/api/2.0/files/folder/{folderId}/order": {
      "put": {
        "tags": [
          "Files / Folders"
        ],
        "summary": "Sets file order in the folder with ID specified in the request",
        "operationId": "setFileOrder",
        "parameters": [
          {
            "name": "folderId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32",
              "example": 9178
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.RequestDto.OrderRequestDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.RequestDto.OrderRequestDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.RequestDto.OrderRequestDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "asc_auth_key": [
              "read",
              "write"
            ]
          }
        ],
        "description": "Sets file order in the folder with ID specified in the request"
      }
    },
    "/api/2.0/files/{folderId}": {
      "get": {
        "tags": [
          "Files / Folders"
        ],
        "summary": "Get a folder by ID",
        "operationId": "getFolder",
        "parameters": [
          {
            "name": "folderId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32",
              "example": 6023
            }
          },
          {
            "name": "userIdOrGroupId",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "uuid",
              "example": "75a5f745-f697-4418-b38d-0fe0d277e258"
            }
          },
          {
            "name": "filterType",
            "in": "query",
            "schema": {
              "$ref": "#/components/schemas/ASC.Files.Core.FilterType"
            }
          },
          {
            "name": "roomId",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32",
              "example": 2329
            }
          },
          {
            "name": "searchInContent",
            "in": "query",
            "schema": {
              "type": "boolean",
              "example": true
            }
          },
          {
            "name": "withsubfolders",
            "in": "query",
            "schema": {
              "type": "boolean",
              "example": true
            }
          },
          {
            "name": "excludeSubject",
            "in": "query",
            "schema": {
              "type": "boolean",
              "example": true
            }
          },
          {
            "name": "applyFilterOption",
            "in": "query",
            "schema": {
              "$ref": "#/components/schemas/ASC.Files.Core.Core.ApplyFilterOption"
            }
          },
          {
            "name": "extension",
            "in": "query",
            "schema": {
              "type": "string",
              "example": ".txt"
            }
          },
          {
            "name": "searchArea",
            "in": "query",
            "schema": {
              "$ref": "#/components/schemas/ASC.Files.Core.VirtualRooms.SearchArea"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Folder contents",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.ResponseDto.FolderContentDto.System.Int32"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.ResponseDto.FolderContentDto.System.Int32"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.ResponseDto.FolderContentDto.System.Int32"
                }
              }
            }
          }
        },
        "description": "Returns the detailed list of files and folders located in the folder with the ID specified in the request."
      }
    },
    "/api/2.0/files/folder/{folderId}/path": {
      "get": {
        "tags": [
          "Files / Folders"
        ],
        "summary": "Get the folder path",
        "operationId": "getFolderPath",
        "parameters": [
          {
            "name": "folderId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32",
              "example": 3985
            }
          }
        ],
        "responses": {
          "200": {
            "description": "List of file entry information",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.ResponseDto.FileEntryDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.ResponseDto.FileEntryDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.ResponseDto.FileEntryDto"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "asc_auth_key": [
              "read",
              "write"
            ]
          }
        ],
        "description": "Returns a path to the folder with the ID specified in the request."
      }
    },
    "/api/2.0/files/{folderId}/subfolders": {
      "get": {
        "tags": [
          "Files / Folders"
        ],
        "summary": "Get subfolders",
        "operationId": "getFolders",
        "parameters": [
          {
            "name": "folderId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32",
              "example": 6250
            }
          }
        ],
        "responses": {
          "200": {
            "description": "List of file entry information",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.ResponseDto.FileEntryDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.ResponseDto.FileEntryDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.ResponseDto.FileEntryDto"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "asc_auth_key": [
              "read",
              "write"
            ]
          }
        ],
        "description": "Returns a list of all the subfolders from a folder with the ID specified in the request."
      }
    },
    "/api/2.0/files/{folderId}/news": {
      "get": {
        "tags": [
          "Files / Folders"
        ],
        "summary": "Get new folder items",
        "operationId": "getNewItems",
        "parameters": [
          {
            "name": "folderId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32",
              "example": 1315
            }
          }
        ],
        "responses": {
          "200": {
            "description": "List of file entry information",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.ResponseDto.FileEntryDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.ResponseDto.FileEntryDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.ResponseDto.FileEntryDto"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "asc_auth_key": [
              "read",
              "write"
            ]
          }
        ],
        "description": "Returns a list of all the new items from a folder with the ID specified in the request."
      }
    },
    "/api/2.0/files/filesusedspace": {
      "get": {
        "tags": [
          "Files / Folders"
        ],
        "summary": "Get used space of files",
        "operationId": "getFilesUsedSpace",
        "responses": {
          "200": {
            "description": "Used space of files in the root folders",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.ResponseDto.FilesStatisticsResultDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.ResponseDto.FilesStatisticsResultDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.ResponseDto.FilesStatisticsResultDto"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "asc_auth_key": [
              "read",
              "write"
            ]
          }
        ],
        "description": "Returns the used space of files in the root folders."
      }
    },
    "/api/2.0/files/folder/{id}/link": {
      "get": {
        "tags": [
          "Files / Folders"
        ],
        "summary": "Get primary external link",
        "operationId": "getFolderPrimaryExternalLink",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32",
              "example": 1238
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Folder security information",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.ResponseDto.FileShareDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.ResponseDto.FileShareDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.ResponseDto.FileShareDto"
                }
              }
            }
          }
        },
        "description": "Returns the primary external link by the identifier specified in the request."
      }
    },
    "/api/2.0/files/@my": {
      "get": {
        "tags": [
          "Files / Folders"
        ],
        "summary": "Get the \"My documents\" section",
        "operationId": "getMyFolder",
        "parameters": [
          {
            "name": "userIdOrGroupId",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "uuid",
              "example": "75a5f745-f697-4418-b38d-0fe0d277e258"
            }
          },
          {
            "name": "filterType",
            "in": "query",
            "schema": {
              "$ref": "#/components/schemas/ASC.Files.Core.FilterType"
            }
          },
          {
            "name": "searchInContent",
            "in": "query",
            "schema": {
              "type": "boolean",
              "example": true
            }
          },
          {
            "name": "withsubfolders",
            "in": "query",
            "schema": {
              "type": "boolean",
              "example": true
            }
          },
          {
            "name": "applyFilterOption",
            "in": "query",
            "schema": {
              "$ref": "#/components/schemas/ASC.Files.Core.Core.ApplyFilterOption"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The \"My documents\" section contents",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.ResponseDto.FolderContentDto.System.Int32"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.ResponseDto.FolderContentDto.System.Int32"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.ResponseDto.FolderContentDto.System.Int32"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "asc_auth_key": [
              "read",
              "write"
            ]
          }
        ],
        "description": "Returns the detailed list of files and folders located in the \"My documents\" section."
      }
    },
    "/api/2.0/files/@privacy": {
      "get": {
        "tags": [
          "Files / Folders"
        ],
        "summary": "Get the \"Private Room\" section",
        "operationId": "getPrivacyFolder",
        "parameters": [
          {
            "name": "userIdOrGroupId",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "uuid",
              "example": "75a5f745-f697-4418-b38d-0fe0d277e258"
            }
          },
          {
            "name": "filterType",
            "in": "query",
            "schema": {
              "$ref": "#/components/schemas/ASC.Files.Core.FilterType"
            }
          },
          {
            "name": "searchInContent",
            "in": "query",
            "schema": {
              "type": "boolean",
              "example": true
            }
          },
          {
            "name": "withsubfolders",
            "in": "query",
            "schema": {
              "type": "boolean",
              "example": true
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The \"Private Room\" section contents",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.ResponseDto.FolderContentDto.System.Int32"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.ResponseDto.FolderContentDto.System.Int32"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.ResponseDto.FolderContentDto.System.Int32"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "asc_auth_key": [
              "read",
              "write"
            ]
          }
        ],
        "description": "Returns the detailed list of files and folders located in the \"Private Room\" section."
      }
    },
    "/api/2.0/files/@root": {
      "get": {
        "tags": [
          "Files / Folders"
        ],
        "summary": "Get filtered sections",
        "operationId": "getRootFolders",
        "parameters": [
          {
            "name": "userIdOrGroupId",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "uuid",
              "example": "75a5f745-f697-4418-b38d-0fe0d277e258"
            }
          },
          {
            "name": "filterType",
            "in": "query",
            "schema": {
              "$ref": "#/components/schemas/ASC.Files.Core.FilterType"
            }
          },
          {
            "name": "withsubfolders",
            "in": "query",
            "schema": {
              "type": "boolean",
              "example": true
            }
          },
          {
            "name": "withoutTrash",
            "in": "query",
            "schema": {
              "type": "boolean",
              "example": true
            }
          },
          {
            "name": "searchInContent",
            "in": "query",
            "schema": {
              "type": "boolean",
              "example": true
            }
          }
        ],
        "responses": {
          "200": {
            "description": "List of section contents with the following parameters",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.ResponseDto.FolderContentDto.System.Int32"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.ResponseDto.FolderContentDto.System.Int32"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.ResponseDto.FolderContentDto.System.Int32"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "asc_auth_key": [
              "read",
              "write"
            ]
          }
        ],
        "description": "Returns all the sections matching the parameters specified in the request."
      }
    },
    "/api/2.0/files/@trash": {
      "get": {
        "tags": [
          "Files / Folders"
        ],
        "summary": "Get the \"Trash\" section",
        "operationId": "getTrashFolder",
        "parameters": [
          {
            "name": "userIdOrGroupId",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "uuid",
              "example": "75a5f745-f697-4418-b38d-0fe0d277e258"
            }
          },
          {
            "name": "filterType",
            "in": "query",
            "schema": {
              "$ref": "#/components/schemas/ASC.Files.Core.FilterType"
            }
          },
          {
            "name": "searchInContent",
            "in": "query",
            "schema": {
              "type": "boolean",
              "example": true
            }
          },
          {
            "name": "withsubfolders",
            "in": "query",
            "schema": {
              "type": "boolean",
              "example": true
            }
          },
          {
            "name": "applyFilterOption",
            "in": "query",
            "schema": {
              "$ref": "#/components/schemas/ASC.Files.Core.Core.ApplyFilterOption"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The \"Trash\" section contents",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.ResponseDto.FolderContentDto.System.Int32"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.ResponseDto.FolderContentDto.System.Int32"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.ResponseDto.FolderContentDto.System.Int32"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "asc_auth_key": [
              "read",
              "write"
            ]
          }
        ],
        "description": "Returns the detailed list of files and folders located in the \"Trash\" section."
      }
    },
    "/api/2.0/files/{folderId}/upload/check": {
      "post": {
        "tags": [
          "Files / Folders"
        ],
        "summary": "Checks upload",
        "operationId": "checkUpload",
        "parameters": [
          {
            "name": "folderId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32",
              "example": 9949
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.RequestDto.CheckUploadRequest"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.RequestDto.CheckUploadRequest"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.RequestDto.CheckUploadRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Inserted file",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "asc_auth_key": [
              "read",
              "write"
            ]
          }
        ],
        "description": "Checks upload"
      }
    },
    "/api/2.0/files/{folderId}/insert": {
      "post": {
        "tags": [
          "Files / Folders"
        ],
        "summary": "Insert a file",
        "operationId": "insertFile",
        "parameters": [
          {
            "name": "folderId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32",
              "example": 467
            }
          }
        ],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "properties": {
                  "InsertFile.File": {
                    "type": "string",
                    "format": "binary"
                  },
                  "InsertFile.Title": {
                    "type": "string",
                    "example": "michigan_eco_centric_accountability"
                  },
                  "InsertFile.CreateNewIfExist": {
                    "type": "boolean",
                    "example": true
                  },
                  "InsertFile.KeepConvertStatus": {
                    "type": "boolean",
                    "example": true
                  },
                  "InsertFile.Stream.CanRead": {
                    "type": "boolean",
                    "example": true
                  },
                  "InsertFile.Stream.CanWrite": {
                    "type": "boolean",
                    "example": true
                  },
                  "InsertFile.Stream.CanSeek": {
                    "type": "boolean",
                    "example": true
                  },
                  "InsertFile.Stream.CanTimeout": {
                    "type": "boolean",
                    "example": true
                  },
                  "InsertFile.Stream.Length": {
                    "type": "integer",
                    "format": "int64",
                    "example": 1234
                  },
                  "InsertFile.Stream.Position": {
                    "type": "integer",
                    "format": "int64",
                    "example": 1234
                  },
                  "InsertFile.Stream.ReadTimeout": {
                    "type": "integer",
                    "format": "int32",
                    "example": 1234
                  },
                  "InsertFile.Stream.WriteTimeout": {
                    "type": "integer",
                    "format": "int32",
                    "example": 1234
                  }
                }
              },
              "encoding": {
                "InsertFile.File": {
                  "style": "form"
                },
                "InsertFile.Title": {
                  "style": "form"
                },
                "InsertFile.CreateNewIfExist": {
                  "style": "form"
                },
                "InsertFile.KeepConvertStatus": {
                  "style": "form"
                },
                "InsertFile.Stream.CanRead": {
                  "style": "form"
                },
                "InsertFile.Stream.CanWrite": {
                  "style": "form"
                },
                "InsertFile.Stream.CanSeek": {
                  "style": "form"
                },
                "InsertFile.Stream.CanTimeout": {
                  "style": "form"
                },
                "InsertFile.Stream.Length": {
                  "style": "form"
                },
                "InsertFile.Stream.Position": {
                  "style": "form"
                },
                "InsertFile.Stream.ReadTimeout": {
                  "style": "form"
                },
                "InsertFile.Stream.WriteTimeout": {
                  "style": "form"
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Inserted file",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.ResponseDto.FileDto.System.Int32"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.ResponseDto.FileDto.System.Int32"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.ResponseDto.FileDto.System.Int32"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "asc_auth_key": [
              "read",
              "write"
            ]
          }
        ],
        "description": "Inserts a file specified in the request to the selected folder by single file uploading."
      }
    },
    "/api/2.0/files/{folderId}/upload": {
      "post": {
        "tags": [
          "Files / Folders"
        ],
        "summary": "Upload a file",
        "description": "Uploads a file specified in the request to the selected folder by single file uploading or standart multipart/form-data method.\n\n**Note**:  You can upload files in two different ways:\r\n <ol>\r\n<li>Using single file upload. You should set the Content-Type and Content-Disposition headers to specify a file name and content type, and send the file to the request body.</li>\r\n<li>Using standart multipart/form-data method.</li>\r\n</ol>",
        "operationId": "uploadFile",
        "parameters": [
          {
            "name": "folderId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32",
              "example": 1573
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.RequestDto.UploadRequestDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.RequestDto.UploadRequestDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.RequestDto.UploadRequestDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Inserted file",
            "content": {
              "text/plain": {
                "schema": {}
              },
              "application/json": {
                "schema": {}
              },
              "text/json": {
                "schema": {}
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "asc_auth_key": [
              "read",
              "write"
            ]
          }
        ]
      }
    },
    "/api/2.0/files/@my/insert": {
      "post": {
        "tags": [
          "Files / Folders"
        ],
        "summary": "Insert a file to the \"My documents\" section",
        "operationId": "insertFileToMyFromBody",
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "properties": {
                  "File": {
                    "type": "string",
                    "format": "binary"
                  },
                  "Title": {
                    "type": "string",
                    "example": "maine"
                  },
                  "CreateNewIfExist": {
                    "type": "boolean",
                    "example": true
                  },
                  "KeepConvertStatus": {
                    "type": "boolean",
                    "example": true
                  },
                  "Stream.CanRead": {
                    "type": "boolean",
                    "example": true
                  },
                  "Stream.CanWrite": {
                    "type": "boolean",
                    "example": true
                  },
                  "Stream.CanSeek": {
                    "type": "boolean",
                    "example": true
                  },
                  "Stream.CanTimeout": {
                    "type": "boolean",
                    "example": true
                  },
                  "Stream.Length": {
                    "type": "integer",
                    "format": "int64",
                    "example": 1234
                  },
                  "Stream.Position": {
                    "type": "integer",
                    "format": "int64",
                    "example": 1234
                  },
                  "Stream.ReadTimeout": {
                    "type": "integer",
                    "format": "int32",
                    "example": 1234
                  },
                  "Stream.WriteTimeout": {
                    "type": "integer",
                    "format": "int32",
                    "example": 1234
                  }
                }
              },
              "encoding": {
                "File": {
                  "style": "form"
                },
                "Title": {
                  "style": "form"
                },
                "CreateNewIfExist": {
                  "style": "form"
                },
                "KeepConvertStatus": {
                  "style": "form"
                },
                "Stream.CanRead": {
                  "style": "form"
                },
                "Stream.CanWrite": {
                  "style": "form"
                },
                "Stream.CanSeek": {
                  "style": "form"
                },
                "Stream.CanTimeout": {
                  "style": "form"
                },
                "Stream.Length": {
                  "style": "form"
                },
                "Stream.Position": {
                  "style": "form"
                },
                "Stream.ReadTimeout": {
                  "style": "form"
                },
                "Stream.WriteTimeout": {
                  "style": "form"
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Inserted file",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.ResponseDto.FileDto.System.Int32"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.ResponseDto.FileDto.System.Int32"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.ResponseDto.FileDto.System.Int32"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "asc_auth_key": [
              "read",
              "write"
            ]
          }
        ],
        "description": "Inserts a file specified in the request to the \"My documents\" section by single file uploading."
      }
    },
    "/api/2.0/files/@my/upload": {
      "post": {
        "tags": [
          "Files / Folders"
        ],
        "summary": "Upload a file to the \"My documents\" section",
        "description": "Uploads a file specified in the request to the \"My documents\" section by single file uploading or standart multipart/form-data method.\n\n**Note**:  You can upload files in two different ways:\r\n <ol>\r\n<li>Using single file upload. You should set the Content-Type and Content-Disposition headers to specify a file name and content type, and send the file to the request body.</li>\r\n<li>Using standart multipart/form-data method.</li>\r\n</ol>",
        "operationId": "uploadFileToMy",
        "parameters": [
          {
            "name": "inDto",
            "in": "query",
            "schema": {
              "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.RequestDto.UploadRequestDto"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Uploaded file(s)",
            "content": {
              "text/plain": {
                "schema": {}
              },
              "application/json": {
                "schema": {}
              },
              "text/json": {
                "schema": {}
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "asc_auth_key": [
              "read",
              "write"
            ]
          }
        ]
      }
    },
    "/api/2.0/files/file/{fileId}/checkconversion": {
      "get": {
        "tags": [
          "Files / Operations"
        ],
        "summary": "Get conversion status",
        "operationId": "checkConversion",
        "parameters": [
          {
            "name": "fileId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32",
              "example": 2395
            }
          },
          {
            "name": "start",
            "in": "query",
            "schema": {
              "type": "boolean",
              "example": true
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Conversion result",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.ResponseDto.ConversationResultDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.ResponseDto.ConversationResultDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.ResponseDto.ConversationResultDto"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "asc_auth_key": [
              "read",
              "write"
            ]
          }
        ],
        "description": "Checks the conversion status of a file with the ID specified in the request."
      },
      "put": {
        "tags": [
          "Files / Operations"
        ],
        "summary": "Start file conversion",
        "operationId": "startConversion",
        "parameters": [
          {
            "name": "fileId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32",
              "example": 5184
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.RequestDto.CheckConversionRequestDto.System.Int32"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.RequestDto.CheckConversionRequestDto.System.Int32"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.RequestDto.CheckConversionRequestDto.System.Int32"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Conversion result",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.ResponseDto.ConversationResultDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.ResponseDto.ConversationResultDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.ResponseDto.ConversationResultDto"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "asc_auth_key": [
              "read",
              "write"
            ]
          }
        ],
        "description": "Starts a conversion operation of a file with the ID specified in the request."
      }
    },
    "/api/2.0/files/file/{fileId}/comment": {
      "put": {
        "tags": [
          "Files / Operations"
        ],
        "summary": "Update a comment",
        "operationId": "updateComment",
        "parameters": [
          {
            "name": "fileId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32",
              "example": 3730
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.RequestDto.UpdateComment"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.RequestDto.UpdateComment"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.RequestDto.UpdateComment"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Updated comment",
            "content": {
              "text/plain": {
                "schema": {}
              },
              "application/json": {
                "schema": {}
              },
              "text/json": {
                "schema": {}
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "asc_auth_key": [
              "read",
              "write"
            ]
          }
        ],
        "description": "Updates a comment in a file with the ID specified in the request."
      }
    },
    "/api/2.0/files/fileops/bulkdownload": {
      "put": {
        "tags": [
          "Files / Operations"
        ],
        "summary": "Bulk download",
        "operationId": "bulkDownload",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.RequestDto.DownloadRequestDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.RequestDto.DownloadRequestDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.RequestDto.DownloadRequestDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "List of file operations",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.ResponseDto.FileOperationDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.ResponseDto.FileOperationDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.ResponseDto.FileOperationDto"
                }
              }
            }
          }
        },
        "description": "Starts the download process of files and folders with the IDs specified in the request."
      }
    },
    "/api/2.0/files/fileops/copy": {
      "put": {
        "tags": [
          "Files / Operations"
        ],
        "summary": "Copy to a folder",
        "operationId": "copyBatchItems",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.RequestDto.BatchRequestDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.RequestDto.BatchRequestDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.RequestDto.BatchRequestDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "List of file operations",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.ResponseDto.FileOperationDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.ResponseDto.FileOperationDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.ResponseDto.FileOperationDto"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "asc_auth_key": [
              "read",
              "write"
            ]
          }
        ],
        "description": "Copies all the selected files and folders to the folder with the ID specified in the request."
      }
    },
    "/api/2.0/files/fileops/delete": {
      "put": {
        "tags": [
          "Files / Operations"
        ],
        "summary": "Delete files and folders",
        "operationId": "deleteBatchItems",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.RequestDto.DeleteBatchRequestDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.RequestDto.DeleteBatchRequestDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.RequestDto.DeleteBatchRequestDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "List of file operations",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.ResponseDto.FileOperationDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.ResponseDto.FileOperationDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.ResponseDto.FileOperationDto"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "asc_auth_key": [
              "read",
              "write"
            ]
          }
        ],
        "description": "Deletes the files and folders with the IDs specified in the request."
      }
    },
    "/api/2.0/files/fileops/emptytrash": {
      "put": {
        "tags": [
          "Files / Operations"
        ],
        "summary": "Empty the \"Trash\" folder",
        "operationId": "emptyTrash",
        "responses": {
          "200": {
            "description": "List of file operations",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.ResponseDto.FileOperationDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.ResponseDto.FileOperationDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.ResponseDto.FileOperationDto"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "asc_auth_key": [
              "read",
              "write"
            ]
          }
        ],
        "description": "Deletes all the files and folders from the \"Trash\" folder."
      }
    },
    "/api/2.0/files/fileops": {
      "get": {
        "tags": [
          "Files / Operations"
        ],
        "summary": "Get active operations",
        "operationId": "getOperationStatuses",
        "responses": {
          "200": {
            "description": "List of file operations",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.ResponseDto.FileOperationDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.ResponseDto.FileOperationDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.ResponseDto.FileOperationDto"
                }
              }
            }
          }
        },
        "description": "Returns a list of all the active operations."
      }
    },
    "/api/2.0/files/fileops/markasread": {
      "put": {
        "tags": [
          "Files / Operations"
        ],
        "summary": "Mark as read",
        "operationId": "markAsRead",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.RequestDto.BaseBatchRequestDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.RequestDto.BaseBatchRequestDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.RequestDto.BaseBatchRequestDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "List of file operations",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.ResponseDto.FileOperationDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.ResponseDto.FileOperationDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.ResponseDto.FileOperationDto"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "asc_auth_key": [
              "read",
              "write"
            ]
          }
        ],
        "description": "Marks the files and folders with the IDs specified in the request as read."
      }
    },
    "/api/2.0/files/fileops/move": {
      "put": {
        "tags": [
          "Files / Operations"
        ],
        "summary": "Move to a folder",
        "operationId": "moveBatchItems",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.RequestDto.BatchRequestDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.RequestDto.BatchRequestDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.RequestDto.BatchRequestDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "List of file operations",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.ResponseDto.FileOperationDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.ResponseDto.FileOperationDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.ResponseDto.FileOperationDto"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "asc_auth_key": [
              "read",
              "write"
            ]
          }
        ],
        "description": "Moves all the selected files and folders to the folder with the ID specified in the request."
      },
      "get": {
        "tags": [
          "Files / Operations"
        ],
        "summary": "Check files and folders for conflicts",
        "operationId": "moveOrCopyBatchCheck",
        "parameters": [
          {
            "name": "inDto",
            "in": "query",
            "schema": {
              "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.RequestDto.BatchSimpleRequestDto"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "List of file entry information",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.ResponseDto.FileEntryDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.ResponseDto.FileEntryDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.ResponseDto.FileEntryDto"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "asc_auth_key": [
              "read",
              "write"
            ]
          }
        ],
        "description": "Checks a batch of files and folders for conflicts when moving or copying them to the folder with the ID specified in the request."
      }
    },
    "/api/2.0/files/fileops/duplicate": {
      "put": {
        "tags": [
          "Files / Operations"
        ],
        "summary": "Duplicates all the selected files and folders",
        "operationId": "duplicateBatchItems",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.RequestDto.DuplicateRequestDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.RequestDto.DuplicateRequestDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.RequestDto.DuplicateRequestDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "List of file operations",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.ResponseDto.FileOperationDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.ResponseDto.FileOperationDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.ResponseDto.FileOperationDto"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "asc_auth_key": [
              "read",
              "write"
            ]
          }
        ],
        "description": "Duplicates all the selected files and folders"
      }
    },
    "/api/2.0/files/fileops/checkdestfolder": {
      "get": {
        "tags": [
          "Files / Operations"
        ],
        "summary": "Moves or copies",
        "operationId": "moveOrCopyDestFolderCheck",
        "parameters": [
          {
            "name": "inDto",
            "in": "query",
            "schema": {
              "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.RequestDto.BatchSimpleRequestDto"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Result",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.ResponseDto.CheckDestFolderDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.ResponseDto.CheckDestFolderDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.ResponseDto.CheckDestFolderDto"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "asc_auth_key": [
              "read",
              "write"
            ]
          }
        ],
        "description": "Moves or copies"
      }
    },
    "/api/2.0/files/fileops/terminate/{id}": {
      "put": {
        "tags": [
          "Files / Operations"
        ],
        "summary": "Finish active operations",
        "operationId": "terminateTasks",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "example": "4324"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "List of file operations",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.ResponseDto.FileOperationDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.ResponseDto.FileOperationDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.ResponseDto.FileOperationDto"
                }
              }
            }
          }
        },
        "description": "Finishes an operation with the ID specified in the request or all the active operations."
      }
    },
    "/api/2.0/files/{folderId}/upload/create_session": {
      "post": {
        "tags": [
          "Files / Operations"
        ],
        "summary": "Chunked upload",
        "description": "Creates a session to upload large files in multiple chunks to the folder with the ID specified in the request.\n\n**Note**: Each chunk can have different length but the length should be multiple of <b>512</b> and greater or equal to <b>10 mb</b>. Last chunk can have any size.\r\nAfter the initial response to the request with the <b>200 OK</b> status, you must get the <em>location</em> field value from the response. Send all your chunks to this location.\r\nEach chunk must be sent in the exact order the chunks appear in the file.\r\nAfter receiving each chunk, the server will respond with the current information about the upload session if no errors occurred.\r\nWhen the number of bytes uploaded is equal to the number of bytes you sent in the initial request, the server responds with the <b>201 Created</b> status and sends you information about the uploaded file.",
        "operationId": "createUploadSession",
        "parameters": [
          {
            "name": "folderId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32",
              "example": 1841
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.RequestDto.SessionRequest"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.RequestDto.SessionRequest"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.RequestDto.SessionRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Information about created session",
            "content": {
              "text/plain": {
                "schema": {}
              },
              "application/json": {
                "schema": {}
              },
              "text/json": {
                "schema": {}
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "asc_auth_key": [
              "read",
              "write"
            ]
          }
        ]
      }
    },
    "/api/2.0/files/rooms/roomquota": {
      "put": {
        "tags": [
          "Files / Quota"
        ],
        "summary": "Change a room quota limit",
        "operationId": "updateRoomsQuota",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.RequestDto.UpdateRoomsQuotaRequestDto.System.Int32"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.RequestDto.UpdateRoomsQuotaRequestDto.System.Int32"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.RequestDto.UpdateRoomsQuotaRequestDto.System.Int32"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "List of rooms with the detailed information",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.ResponseDto.FolderDto.System.Int32"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.ResponseDto.FolderDto.System.Int32"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.ResponseDto.FolderDto.System.Int32"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "asc_auth_key": [
              "read",
              "write"
            ]
          }
        ],
        "description": "Changes a quota limit for the rooms with the IDs specified in the request."
      }
    },
    "/api/2.0/files/rooms/resetquota": {
      "put": {
        "tags": [
          "Files / Quota"
        ],
        "summary": "Reset a room quota limit",
        "operationId": "resetRoomQuota",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.RequestDto.UpdateRoomsRoomIdsRequestDto.System.Int32"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.RequestDto.UpdateRoomsRoomIdsRequestDto.System.Int32"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.RequestDto.UpdateRoomsRoomIdsRequestDto.System.Int32"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "List of rooms with the detailed information",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.ResponseDto.FolderDto.System.Int32"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.ResponseDto.FolderDto.System.Int32"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.ResponseDto.FolderDto.System.Int32"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "asc_auth_key": [
              "read",
              "write"
            ]
          }
        ],
        "description": "Resets a quota limit for the rooms with the IDs specified in the request."
      }
    },
    "/api/2.0/files/rooms": {
      "post": {
        "tags": [
          "Files / Rooms"
        ],
        "summary": "Create a room",
        "operationId": "createRoom",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.RequestDto.CreateRoomRequestDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.RequestDto.CreateRoomRequestDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.RequestDto.CreateRoomRequestDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Room information",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.ResponseDto.FolderDto.System.Int32"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.ResponseDto.FolderDto.System.Int32"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.ResponseDto.FolderDto.System.Int32"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "asc_auth_key": [
              "read",
              "write"
            ]
          }
        ],
        "description": "Creates a room in the \"Rooms\" section."
      },
      "get": {
        "tags": [
          "Files / Rooms"
        ],
        "summary": "Get rooms",
        "operationId": "getRoomsFolder",
        "parameters": [
          {
            "name": "Type",
            "in": "query",
            "schema": {
              "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.RequestDto.RoomType"
            }
          },
          {
            "name": "SubjectId",
            "in": "query",
            "schema": {
              "type": "string",
              "example": "some text"
            }
          },
          {
            "name": "SearchInContent",
            "in": "query",
            "schema": {
              "type": "boolean",
              "example": true
            }
          },
          {
            "name": "WithSubfolders",
            "in": "query",
            "schema": {
              "type": "boolean",
              "example": true
            }
          },
          {
            "name": "SearchArea",
            "in": "query",
            "schema": {
              "$ref": "#/components/schemas/ASC.Files.Core.VirtualRooms.SearchArea"
            }
          },
          {
            "name": "WithoutTags",
            "in": "query",
            "schema": {
              "type": "boolean",
              "example": true
            }
          },
          {
            "name": "Tags",
            "in": "query",
            "schema": {
              "type": "string",
              "example": "some text"
            }
          },
          {
            "name": "ExcludeSubject",
            "in": "query",
            "schema": {
              "type": "boolean",
              "example": true
            }
          },
          {
            "name": "Provider",
            "in": "query",
            "schema": {
              "$ref": "#/components/schemas/ASC.Files.Core.ProviderFilter"
            }
          },
          {
            "name": "SubjectFilter",
            "in": "query",
            "schema": {
              "$ref": "#/components/schemas/ASC.Files.Core.Core.SubjectFilter"
            }
          },
          {
            "name": "QuotaFilter",
            "in": "query",
            "schema": {
              "$ref": "#/components/schemas/ASC.Core.QuotaFilter"
            }
          },
          {
            "name": "StorageFilter",
            "in": "query",
            "schema": {
              "$ref": "#/components/schemas/ASC.Files.Core.Core.StorageFilter"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Returns the contents of the \"Rooms\" section",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.ResponseDto.FolderContentDto.System.Int32"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.ResponseDto.FolderContentDto.System.Int32"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.ResponseDto.FolderContentDto.System.Int32"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "asc_auth_key": [
              "read",
              "write"
            ]
          }
        ],
        "description": "Returns the contents of the \"Rooms\" section by the parameters specified in the request."
      }
    },
    "/api/2.0/files/rooms/{id}": {
      "get": {
        "tags": [
          "Files / Rooms"
        ],
        "summary": "Get room information",
        "operationId": "getRoomInfo",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32",
              "example": 7976
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Room information",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.ResponseDto.FolderDto.System.Int32"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.ResponseDto.FolderDto.System.Int32"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.ResponseDto.FolderDto.System.Int32"
                }
              }
            }
          }
        },
        "description": "Returns the room information."
      },
      "put": {
        "tags": [
          "Files / Rooms"
        ],
        "summary": "Rename a room",
        "operationId": "updateRoom",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32",
              "example": 6357
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.RequestDto.UpdateRoomRequest"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.RequestDto.UpdateRoomRequest"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.RequestDto.UpdateRoomRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Updated room information",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.ResponseDto.FolderDto.System.Int32"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.ResponseDto.FolderDto.System.Int32"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.ResponseDto.FolderDto.System.Int32"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "asc_auth_key": [
              "read",
              "write"
            ]
          }
        ],
        "description": "Renames a room with the ID specified in  the request."
      },
      "delete": {
        "tags": [
          "Files / Rooms"
        ],
        "summary": "Remove a room",
        "operationId": "deleteRoom",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32",
              "example": 2828
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.RequestDto.DeleteRoomRequest"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.RequestDto.DeleteRoomRequest"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.RequestDto.DeleteRoomRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "File operation",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.ResponseDto.FileOperationDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.ResponseDto.FileOperationDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.ResponseDto.FileOperationDto"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "asc_auth_key": [
              "read",
              "write"
            ]
          }
        ],
        "description": "Removes a room with the ID specified in the request."
      }
    },
    "/api/2.0/files/rooms/{id}/archive": {
      "put": {
        "tags": [
          "Files / Rooms"
        ],
        "summary": "Archive a room",
        "operationId": "archiveRoom",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32",
              "example": 6450
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.RequestDto.ArchiveRoomRequest"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.RequestDto.ArchiveRoomRequest"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.RequestDto.ArchiveRoomRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "File operation",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.ResponseDto.FileOperationDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.ResponseDto.FileOperationDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.ResponseDto.FileOperationDto"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "asc_auth_key": [
              "read",
              "write"
            ]
          }
        ],
        "description": "Moves a room with the ID specified in the request to the \"Archive\" section."
      }
    },
    "/api/2.0/files/rooms/{id}/unarchive": {
      "put": {
        "tags": [
          "Files / Rooms"
        ],
        "summary": "Unarchive a room",
        "operationId": "unarchiveRoom",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32",
              "example": 729
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.RequestDto.ArchiveRoomRequest"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.RequestDto.ArchiveRoomRequest"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.RequestDto.ArchiveRoomRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "File operation",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.ResponseDto.FileOperationDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.ResponseDto.FileOperationDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.ResponseDto.FileOperationDto"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "asc_auth_key": [
              "read",
              "write"
            ]
          }
        ],
        "description": "Moves a room with the ID specified in the request from the \"Archive\" section to the \"Rooms\" section."
      }
    },
    "/api/2.0/files/rooms/{id}/share": {
      "put": {
        "tags": [
          "Files / Rooms"
        ],
        "summary": "Set room access rights",
        "operationId": "setRoomSecurity",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32",
              "example": 2023
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.RequestDto.RoomInvitationRequest"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.RequestDto.RoomInvitationRequest"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.RequestDto.RoomInvitationRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Room security information",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.ResponseDto.RoomSecurityDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.ResponseDto.RoomSecurityDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.ResponseDto.RoomSecurityDto"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "asc_auth_key": [
              "read",
              "write"
            ]
          }
        ],
        "description": "Sets the access rights to a room with the ID specified in the request."
      },
      "get": {
        "tags": [
          "Files / Rooms"
        ],
        "summary": "Get room access rights",
        "operationId": "getRoomSecurityInfo",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32",
              "example": 376
            }
          },
          {
            "name": "filterType",
            "in": "query",
            "schema": {
              "$ref": "#/components/schemas/ASC.Files.Core.Security.ShareFilterType"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Security information of room files",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.ResponseDto.FileShareDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.ResponseDto.FileShareDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.ResponseDto.FileShareDto"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "asc_auth_key": [
              "read",
              "write"
            ]
          }
        ],
        "description": "Returns the access rights of a room with the ID specified in the request."
      }
    },
    "/api/2.0/files/rooms/{id}/links": {
      "put": {
        "tags": [
          "Files / Rooms"
        ],
        "summary": "Set an external or invitation link",
        "operationId": "setLink",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32",
              "example": 5016
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.RequestDto.RoomLinkRequest"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.RequestDto.RoomLinkRequest"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.RequestDto.RoomLinkRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Room security information",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.ResponseDto.FileShareDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.ResponseDto.FileShareDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.ResponseDto.FileShareDto"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "asc_auth_key": [
              "read",
              "write"
            ]
          }
        ],
        "description": "Sets an external or invitation link with the ID specified in the request."
      },
      "get": {
        "tags": [
          "Files / Rooms"
        ],
        "summary": "Get room links",
        "operationId": "getRoomLinks",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32",
              "example": 727
            }
          },
          {
            "name": "RoomLinks.type",
            "in": "query",
            "schema": {
              "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.ResponseDto.LinkType"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Room security information",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.ResponseDto.FileShareDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.ResponseDto.FileShareDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.ResponseDto.FileShareDto"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "asc_auth_key": [
              "read",
              "write"
            ]
          }
        ],
        "description": "Returns the links of a room with the ID specified in the request."
      }
    },
    "/api/2.0/files/rooms/{id}/link": {
      "get": {
        "tags": [
          "Files / Rooms"
        ],
        "summary": "Get primary external link",
        "operationId": "getRoomsPrimaryExternalLink",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32",
              "example": 3124
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Room security information",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.ResponseDto.FileShareDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.ResponseDto.FileShareDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.ResponseDto.FileShareDto"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "asc_auth_key": [
              "read",
              "write"
            ]
          }
        ],
        "description": "Returns the primary external link of a room with the ID specified in the request."
      }
    },
    "/api/2.0/files/rooms/{id}/tags": {
      "put": {
        "tags": [
          "Files / Rooms"
        ],
        "summary": "Add room tags",
        "operationId": "addTags",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32",
              "example": 7873
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.RequestDto.BatchTagsRequestDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.RequestDto.BatchTagsRequestDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.RequestDto.BatchTagsRequestDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Room information",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.ResponseDto.FolderDto.System.Int32"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.ResponseDto.FolderDto.System.Int32"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.ResponseDto.FolderDto.System.Int32"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "asc_auth_key": [
              "read",
              "write"
            ]
          }
        ],
        "description": "Adds the tags to a room with the ID specified in the request."
      },
      "delete": {
        "tags": [
          "Files / Rooms"
        ],
        "summary": "Remove room tags",
        "operationId": "deleteTags",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32",
              "example": 2090
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.RequestDto.BatchTagsRequestDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.RequestDto.BatchTagsRequestDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.RequestDto.BatchTagsRequestDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Room information",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.ResponseDto.FolderDto.System.Int32"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.ResponseDto.FolderDto.System.Int32"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.ResponseDto.FolderDto.System.Int32"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "asc_auth_key": [
              "read",
              "write"
            ]
          }
        ],
        "description": "Removes the tags from a room with the ID specified in the request."
      }
    },
    "/api/2.0/files/rooms/{id}/logo": {
      "post": {
        "tags": [
          "Files / Rooms"
        ],
        "summary": "Create a room logo",
        "operationId": "createRoomLogo",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32",
              "example": 9080
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.RequestDto.LogoRequest"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.RequestDto.LogoRequest"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.RequestDto.LogoRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Room information",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.ResponseDto.FolderDto.System.Int32"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.ResponseDto.FolderDto.System.Int32"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.ResponseDto.FolderDto.System.Int32"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "asc_auth_key": [
              "read",
              "write"
            ]
          }
        ],
        "description": "Creates a logo for a room with the ID specified in the request."
      },
      "delete": {
        "tags": [
          "Files / Rooms"
        ],
        "summary": "Remove a room logo",
        "operationId": "deleteRoomLogo",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32",
              "example": 9646
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Room information",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.ResponseDto.FolderDto.System.Int32"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.ResponseDto.FolderDto.System.Int32"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.ResponseDto.FolderDto.System.Int32"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "asc_auth_key": [
              "read",
              "write"
            ]
          }
        ],
        "description": "Removes a logo from a room with the ID specified in the request."
      }
    },
    "/api/2.0/files/rooms/{id}/pin": {
      "put": {
        "tags": [
          "Files / Rooms"
        ],
        "summary": "Pin a room",
        "operationId": "pinRoom",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32",
              "example": 3611
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Room information",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.ResponseDto.FolderDto.System.Int32"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.ResponseDto.FolderDto.System.Int32"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.ResponseDto.FolderDto.System.Int32"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "asc_auth_key": [
              "read",
              "write"
            ]
          }
        ],
        "description": "Pins a room with the ID specified in the request to the top of the list."
      }
    },
    "/api/2.0/files/rooms/{id}/unpin": {
      "put": {
        "tags": [
          "Files / Rooms"
        ],
        "summary": "Unpin a room",
        "operationId": "unpinRoom",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32",
              "example": 8315
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Room information",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.ResponseDto.FolderDto.System.Int32"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.ResponseDto.FolderDto.System.Int32"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.ResponseDto.FolderDto.System.Int32"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "asc_auth_key": [
              "read",
              "write"
            ]
          }
        ],
        "description": "Unpins a room with the ID specified in the request from the top of the list."
      }
    },
    "/api/2.0/files/rooms/{id}/resend": {
      "post": {
        "tags": [
          "Files / Rooms"
        ],
        "summary": "Resend room invitations",
        "operationId": "resendEmailInvitations",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32",
              "example": 9017
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.RequestDto.UserInvitation"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.RequestDto.UserInvitation"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.RequestDto.UserInvitation"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "asc_auth_key": [
              "read",
              "write"
            ]
          }
        ],
        "description": "Resends the email invitations to a room with the ID specified in the request to the selected users."
      }
    },
    "/api/2.0/files/rooms/{id}/settings": {
      "put": {
        "tags": [
          "Files / Rooms"
        ],
        "summary": "Updates settings to a room with ID specified in the request",
        "operationId": "updateSettings",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32",
              "example": 3325
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.RequestDto.SettingsRoom"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.RequestDto.SettingsRoom"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.RequestDto.SettingsRoom"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Room information",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.ResponseDto.FolderDto.System.Int32"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.ResponseDto.FolderDto.System.Int32"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.ResponseDto.FolderDto.System.Int32"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "asc_auth_key": [
              "read",
              "write"
            ]
          }
        ],
        "description": "Updates settings to a room with ID specified in the request"
      }
    },
    "/api/2.0/files/rooms/{id}/reorder": {
      "put": {
        "tags": [
          "Files / Rooms"
        ],
        "summary": "Reorders to a room with ID specified in the request",
        "operationId": "reorder",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32",
              "example": 4540
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Room information",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.ResponseDto.FolderDto.System.Int32"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.ResponseDto.FolderDto.System.Int32"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.ResponseDto.FolderDto.System.Int32"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "asc_auth_key": [
              "read",
              "write"
            ]
          }
        ],
        "description": "Reorders to a room with ID specified in the request"
      }
    },
    "/api/2.0/files/rooms/thirdparty/{id}": {
      "post": {
        "tags": [
          "Files / Rooms"
        ],
        "summary": "Create a third-party room",
        "operationId": "createRoomThirdParty",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "example": "4696"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.RequestDto.CreateThirdPartyRoom"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.RequestDto.CreateThirdPartyRoom"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.RequestDto.CreateThirdPartyRoom"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Room information",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.ResponseDto.FolderDto.System.String"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.ResponseDto.FolderDto.System.String"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.ResponseDto.FolderDto.System.String"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "asc_auth_key": [
              "read",
              "write"
            ]
          }
        ],
        "description": "Creates a room in the \"Rooms\" section stored in a third-party storage."
      }
    },
    "/api/2.0/files/tags": {
      "post": {
        "tags": [
          "Files / Rooms"
        ],
        "summary": "Create a tag",
        "operationId": "createTag",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.RequestDto.CreateTagRequestDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.RequestDto.CreateTagRequestDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.RequestDto.CreateTagRequestDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "New tag name",
            "content": {
              "text/plain": {
                "schema": {}
              },
              "application/json": {
                "schema": {}
              },
              "text/json": {
                "schema": {}
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "asc_auth_key": [
              "read",
              "write"
            ]
          }
        ],
        "description": "Creates a custom tag with the parameters specified in the request."
      },
      "get": {
        "tags": [
          "Files / Rooms"
        ],
        "summary": "Get tags",
        "operationId": "getTagsInfo",
        "responses": {
          "200": {
            "description": "List of tag names",
            "content": {
              "text/plain": {
                "schema": {}
              },
              "application/json": {
                "schema": {}
              },
              "text/json": {
                "schema": {}
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "asc_auth_key": [
              "read",
              "write"
            ]
          }
        ],
        "description": "Returns a list of custom tags."
      },
      "delete": {
        "tags": [
          "Files / Rooms"
        ],
        "summary": "Delete tags",
        "operationId": "deleteCustomTags",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.RequestDto.BatchTagsRequestDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.RequestDto.BatchTagsRequestDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.RequestDto.BatchTagsRequestDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "asc_auth_key": [
              "read",
              "write"
            ]
          }
        ],
        "description": "Deletes a bunch of custom tags specified in the request."
      }
    },
    "/api/2.0/files/logos": {
      "post": {
        "tags": [
          "Files / Rooms"
        ],
        "summary": "Upload an image for room logo",
        "operationId": "uploadRoomLogo",
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "properties": {
                  "FormCollection": {
                    "type": "array",
                    "items": {}
                  }
                }
              },
              "encoding": {
                "FormCollection": {
                  "style": "form"
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Upload result",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.ResponseDto.UploadResultDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.ResponseDto.UploadResultDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.ResponseDto.UploadResultDto"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "asc_auth_key": [
              "read",
              "write"
            ]
          }
        ],
        "description": "Uploads a temporary image to create a room logo."
      }
    },
    "/api/2.0/files/rooms/{id}/indexexport": {
      "post": {
        "tags": [
          "Files / Rooms"
        ],
        "summary": "Starts room index export",
        "operationId": "startRoomIndexExport",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32",
              "example": 8296
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Ok",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.ResponseDto.DocumentBuilderTaskDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.ResponseDto.DocumentBuilderTaskDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.ResponseDto.DocumentBuilderTaskDto"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "asc_auth_key": [
              "read",
              "write"
            ]
          }
        ],
        "description": "Starts room index export"
      }
    },
    "/api/2.0/files/rooms/indexexport": {
      "get": {
        "tags": [
          "Files / Rooms"
        ],
        "summary": "Gets room index export",
        "operationId": "getRoomIndexExport",
        "responses": {
          "200": {
            "description": "Ok",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.ResponseDto.DocumentBuilderTaskDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.ResponseDto.DocumentBuilderTaskDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.ResponseDto.DocumentBuilderTaskDto"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "asc_auth_key": [
              "read",
              "write"
            ]
          }
        ],
        "description": "Gets room index export"
      },
      "delete": {
        "tags": [
          "Files / Rooms"
        ],
        "summary": "Terminates room index export",
        "operationId": "terminateRoomIndexExport",
        "responses": {
          "200": {
            "description": "OK"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "asc_auth_key": [
              "read",
              "write"
            ]
          }
        ],
        "description": "Terminates room index export"
      }
    },
    "/api/2.0/files/docservice": {
      "put": {
        "tags": [
          "Files / Settings"
        ],
        "summary": "Check the document service URL",
        "operationId": "checkDocServiceUrl",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.RequestDto.CheckDocServiceUrlRequestDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.RequestDto.CheckDocServiceUrlRequestDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.RequestDto.CheckDocServiceUrlRequestDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Document service information: the Document Server address, the Document Server address in the local private network, the Community Server address",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.ResponseDto.DocServiceUrlDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.ResponseDto.DocServiceUrlDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.ResponseDto.DocServiceUrlDto"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "asc_auth_key": [
              "read",
              "write"
            ]
          }
        ],
        "description": "Checks the document service location."
      }
    },
    "/api/2.0/files/thirdparty": {
      "put": {
        "tags": [
          "Files / Settings"
        ],
        "summary": "Change the third-party settings access",
        "operationId": "changeAccessToThirdparty",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.RequestDto.SettingsRequestDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.RequestDto.SettingsRequestDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.RequestDto.SettingsRequestDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Boolean value: true if the operation is successful",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "boolean"
                }
              },
              "application/json": {
                "schema": {
                  "type": "boolean"
                }
              },
              "text/json": {
                "schema": {
                  "type": "boolean"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "asc_auth_key": [
              "read",
              "write"
            ]
          }
        ],
        "description": "Changes the access to the third-party settings."
      },
      "get": {
        "tags": [
          "Files / Third-party integration"
        ],
        "summary": "Get third-party accounts",
        "operationId": "getThirdPartyAccounts",
        "responses": {
          "200": {
            "description": "List of connected providers information",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.Web.Files.Services.WCFService.ThirdPartyParams"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.Web.Files.Services.WCFService.ThirdPartyParams"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.Web.Files.Services.WCFService.ThirdPartyParams"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "asc_auth_key": [
              "read",
              "write"
            ]
          }
        ],
        "description": "Returns a list of all the connected third-party accounts."
      },
      "post": {
        "tags": [
          "Files / Third-party integration"
        ],
        "summary": "Save a third-party account",
        "description": "Saves the third-party storage service account. For WebDav, Yandex, kDrive and SharePoint, the login and password are used for authentication. For other providers, the authentication is performed using a token received via OAuth 2.0.\n\n**Note**: List of provider keys: DropboxV2, Box, WebDav, Yandex, OneDrive, SharePoint, GoogleDrive, kDrive.",
        "operationId": "saveThirdParty",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.RequestDto.ThirdPartyRequestDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.RequestDto.ThirdPartyRequestDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.RequestDto.ThirdPartyRequestDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Connected provider folder",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.ResponseDto.FolderDto.System.String"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.ResponseDto.FolderDto.System.String"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.ResponseDto.FolderDto.System.String"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "asc_auth_key": [
              "read",
              "write"
            ]
          }
        ]
      }
    },
    "/api/2.0/files/changedeleteconfrim": {
      "put": {
        "tags": [
          "Files / Settings"
        ],
        "summary": "Confirm the file deletion",
        "operationId": "changeDeleteConfirm",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.RequestDto.SettingsRequestDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.RequestDto.SettingsRequestDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.RequestDto.SettingsRequestDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Boolean value: true if the operation is successful",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "boolean"
                }
              },
              "application/json": {
                "schema": {
                  "type": "boolean"
                }
              },
              "text/json": {
                "schema": {
                  "type": "boolean"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "asc_auth_key": [
              "read",
              "write"
            ]
          }
        ],
        "description": "Specifies whether to confirm the file deletion or not."
      }
    },
    "/api/2.0/files/settings/downloadtargz": {
      "put": {
        "tags": [
          "Files / Settings"
        ],
        "summary": "Change the archive format (using body parameters)",
        "operationId": "changeDownloadZipFromBody",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.RequestDto.DisplayRequestDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.RequestDto.DisplayRequestDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.RequestDto.DisplayRequestDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Archive",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.Web.Files.Core.Compress.ICompress"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.Web.Files.Core.Compress.ICompress"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.Web.Files.Core.Compress.ICompress"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "asc_auth_key": [
              "read",
              "write"
            ]
          }
        ],
        "description": "Changes the format of the downloaded archive from .zip to .tar.gz. This method uses the body parameters."
      }
    },
    "/api/2.0/files/settings/external": {
      "put": {
        "tags": [
          "Files / Settings"
        ],
        "summary": "Change the external sharing ability",
        "operationId": "externalShare",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.RequestDto.DisplayRequestDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.RequestDto.DisplayRequestDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.RequestDto.DisplayRequestDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Boolean value: true if the parameter is enabled",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "boolean"
                }
              },
              "application/json": {
                "schema": {
                  "type": "boolean"
                }
              },
              "text/json": {
                "schema": {
                  "type": "boolean"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "asc_auth_key": [
              "read",
              "write"
            ]
          }
        ],
        "description": "Changes the ability to share a file externally."
      }
    },
    "/api/2.0/files/settings/externalsocialmedia": {
      "put": {
        "tags": [
          "Files / Settings"
        ],
        "summary": "Change the external sharing ability on social networks",
        "operationId": "externalShareSocialMedia",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.RequestDto.DisplayRequestDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.RequestDto.DisplayRequestDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.RequestDto.DisplayRequestDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Boolean value: true if the parameter is enabled",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "boolean"
                }
              },
              "application/json": {
                "schema": {
                  "type": "boolean"
                }
              },
              "text/json": {
                "schema": {
                  "type": "boolean"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "asc_auth_key": [
              "read",
              "write"
            ]
          }
        ],
        "description": "Changes the ability to share a file externally on social networks."
      }
    },
    "/api/2.0/files/forcesave": {
      "put": {
        "tags": [
          "Files / Settings"
        ],
        "summary": "Change the forcasaving ability",
        "operationId": "forcesave",
        "responses": {
          "200": {
            "description": "Boolean value: true if the parameter is enabled",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "boolean"
                }
              },
              "application/json": {
                "schema": {
                  "type": "boolean"
                }
              },
              "text/json": {
                "schema": {
                  "type": "boolean"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "asc_auth_key": [
              "read",
              "write"
            ]
          }
        ],
        "description": "Changes the ability to force save a file."
      }
    },
    "/api/2.0/files/settings": {
      "get": {
        "tags": [
          "Files / Settings"
        ],
        "summary": "Get file settings",
        "operationId": "getFilesSettings",
        "responses": {
          "200": {
            "description": "File settings",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.ResponseDto.FilesSettingsDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.ResponseDto.FilesSettingsDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.ResponseDto.FilesSettingsDto"
                }
              }
            }
          }
        },
        "description": "Returns all the file settings."
      }
    },
    "/api/2.0/files/info": {
      "get": {
        "tags": [
          "Files / Settings"
        ],
        "summary": "Get the Documents information",
        "operationId": "getModule",
        "responses": {
          "200": {
            "description": "Module information: ID, product class name, title, description, icon URL, large icon URL, start URL, primary or nor, help URL",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.Api.Core.Module"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.Api.Core.Module"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.Api.Core.Module"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "asc_auth_key": [
              "read",
              "write"
            ]
          }
        ],
        "description": "Returns the information about the Documents module."
      }
    },
    "/api/2.0/files/@privacy/available": {
      "get": {
        "tags": [
          "Files / Settings"
        ],
        "summary": "Check the Private Room availability",
        "operationId": "isAvailablePrivacyRoomSettings",
        "responses": {
          "200": {
            "description": "Boolean value: true if the Private Room settings are available",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "boolean"
                }
              },
              "application/json": {
                "schema": {
                  "type": "boolean"
                }
              },
              "text/json": {
                "schema": {
                  "type": "boolean"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "asc_auth_key": [
              "read",
              "write"
            ]
          }
        ],
        "description": "Checks if the Private Room settings are available or not."
      }
    },
    "/api/2.0/files/storeforcesave": {
      "put": {
        "tags": [
          "Files / Settings"
        ],
        "summary": "Change the ability to store the forcesaved files",
        "operationId": "storeForcesave",
        "responses": {
          "200": {
            "description": "Boolean value: true if the operation is successful",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "boolean"
                }
              },
              "application/json": {
                "schema": {
                  "type": "boolean"
                }
              },
              "text/json": {
                "schema": {
                  "type": "boolean"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "asc_auth_key": [
              "read",
              "write"
            ]
          }
        ],
        "description": "Changes the ability to store the forcesaved file versions."
      }
    },
    "/api/2.0/files/storeoriginal": {
      "put": {
        "tags": [
          "Files / Settings"
        ],
        "summary": "Change the ability to upload original formats",
        "operationId": "storeOriginal",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.RequestDto.SettingsRequestDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.RequestDto.SettingsRequestDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.RequestDto.SettingsRequestDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Boolean value: true if the operation is successful",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "boolean"
                }
              },
              "application/json": {
                "schema": {
                  "type": "boolean"
                }
              },
              "text/json": {
                "schema": {
                  "type": "boolean"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "asc_auth_key": [
              "read",
              "write"
            ]
          }
        ],
        "description": "Changes the ability to upload documents in the original formats as well."
      }
    },
    "/api/2.0/files/keepnewfilename": {
      "put": {
        "tags": [
          "Files / Settings"
        ],
        "summary": "Ask a new file name",
        "operationId": "keepNewFileName",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.RequestDto.SettingsRequestDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.RequestDto.SettingsRequestDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.RequestDto.SettingsRequestDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Boolean value: true if the operation is successful",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "boolean"
                }
              },
              "application/json": {
                "schema": {
                  "type": "boolean"
                }
              },
              "text/json": {
                "schema": {
                  "type": "boolean"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "asc_auth_key": [
              "read",
              "write"
            ]
          }
        ],
        "description": "Specifies whether to ask a user for a file name on creation or not."
      }
    },
    "/api/2.0/files/updateifexist": {
      "put": {
        "tags": [
          "Files / Settings"
        ],
        "summary": "Update a file version if it exists",
        "operationId": "updateIfExist",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.RequestDto.SettingsRequestDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.RequestDto.SettingsRequestDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.RequestDto.SettingsRequestDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Boolean value: true if the operation is successful",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "boolean"
                }
              },
              "application/json": {
                "schema": {
                  "type": "boolean"
                }
              },
              "text/json": {
                "schema": {
                  "type": "boolean"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "asc_auth_key": [
              "read",
              "write"
            ]
          }
        ],
        "description": "Updates a file version if a file with such a name already exists."
      }
    },
    "/api/2.0/files/settings/autocleanup": {
      "get": {
        "tags": [
          "Files / Settings"
        ],
        "summary": "Get the trash bin auto-clearing setting",
        "operationId": "getAutomaticallyCleanUp",
        "responses": {
          "200": {
            "description": "The auto-clearing setting properties: auto-clearing or not, a time interval when the auto-clearing will be performed",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.Files.Core.AutoCleanUpData"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.Files.Core.AutoCleanUpData"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.Files.Core.AutoCleanUpData"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "asc_auth_key": [
              "read",
              "write"
            ]
          }
        ],
        "description": "Returns the trash bin auto-clearing setting."
      },
      "put": {
        "tags": [
          "Files / Settings"
        ],
        "summary": "Update the trash bin auto-clearing setting",
        "operationId": "changeAutomaticallyCleanUp",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.RequestDto.AutoCleanupRequestDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.RequestDto.AutoCleanupRequestDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.RequestDto.AutoCleanupRequestDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "The auto-clearing setting properties: auto-clearing or not, a time interval when the auto-clearing will be performed",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.Files.Core.AutoCleanUpData"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.Files.Core.AutoCleanUpData"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.Files.Core.AutoCleanUpData"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "asc_auth_key": [
              "read",
              "write"
            ]
          }
        ],
        "description": "Updates the trash bin auto-clearing setting."
      }
    },
    "/api/2.0/files/settings/dafaultaccessrights": {
      "put": {
        "tags": [
          "Files / Settings"
        ],
        "summary": "Change the default access rights",
        "operationId": "changeDefaultAccessRights",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "array",
                "items": {
                  "anyOf": [
                    {
                      "enum": [
                        "None",
                        "ReadWrite",
                        "Read",
                        "Restrict",
                        "Varies",
                        "Review",
                        "Comment",
                        "FillForms",
                        "CustomFilter",
                        "RoomAdmin",
                        "Editing",
                        "PowerUser"
                      ],
                      "type": "string",
                      "description": "[None - None, ReadWrite - Read and write, Read - Read, Restrict - Restrict, Varies - Varies, Review - Review, Comment - Comment, FillForms - Fill forms, CustomFilter - Custom filter, RoomAdmin - Room admin, Editing - Editing, PowerUser - Power user]",
                      "example": "None"
                    },
                    {
                      "enum": [
                        0,
                        1,
                        2,
                        3,
                        4,
                        5,
                        6,
                        7,
                        8,
                        9,
                        10,
                        11
                      ],
                      "type": "integer",
                      "description": "[0 - None, 1 - Read and write, 2 - Read, 3 - Restrict, 4 - Varies, 5 - Review, 6 - Comment, 7 - Fill forms, 8 - Custom filter, 9 - Room admin, 10 - Editing, 11 - Power user]",
                      "example": 0
                    }
                  ]
                }
              }
            },
            "text/json": {
              "schema": {
                "type": "array",
                "items": {
                  "anyOf": [
                    {
                      "enum": [
                        "None",
                        "ReadWrite",
                        "Read",
                        "Restrict",
                        "Varies",
                        "Review",
                        "Comment",
                        "FillForms",
                        "CustomFilter",
                        "RoomAdmin",
                        "Editing",
                        "PowerUser"
                      ],
                      "type": "string",
                      "description": "[None - None, ReadWrite - Read and write, Read - Read, Restrict - Restrict, Varies - Varies, Review - Review, Comment - Comment, FillForms - Fill forms, CustomFilter - Custom filter, RoomAdmin - Room admin, Editing - Editing, PowerUser - Power user]",
                      "example": "None"
                    },
                    {
                      "enum": [
                        0,
                        1,
                        2,
                        3,
                        4,
                        5,
                        6,
                        7,
                        8,
                        9,
                        10,
                        11
                      ],
                      "type": "integer",
                      "description": "[0 - None, 1 - Read and write, 2 - Read, 3 - Restrict, 4 - Varies, 5 - Review, 6 - Comment, 7 - Fill forms, 8 - Custom filter, 9 - Room admin, 10 - Editing, 11 - Power user]",
                      "example": 0
                    }
                  ]
                }
              }
            },
            "application/*+json": {
              "schema": {
                "type": "array",
                "items": {
                  "anyOf": [
                    {
                      "enum": [
                        "None",
                        "ReadWrite",
                        "Read",
                        "Restrict",
                        "Varies",
                        "Review",
                        "Comment",
                        "FillForms",
                        "CustomFilter",
                        "RoomAdmin",
                        "Editing",
                        "PowerUser"
                      ],
                      "type": "string",
                      "description": "[None - None, ReadWrite - Read and write, Read - Read, Restrict - Restrict, Varies - Varies, Review - Review, Comment - Comment, FillForms - Fill forms, CustomFilter - Custom filter, RoomAdmin - Room admin, Editing - Editing, PowerUser - Power user]",
                      "example": "None"
                    },
                    {
                      "enum": [
                        0,
                        1,
                        2,
                        3,
                        4,
                        5,
                        6,
                        7,
                        8,
                        9,
                        10,
                        11
                      ],
                      "type": "integer",
                      "description": "[0 - None, 1 - Read and write, 2 - Read, 3 - Restrict, 4 - Varies, 5 - Review, 6 - Comment, 7 - Fill forms, 8 - Custom filter, 9 - Room admin, 10 - Editing, 11 - Power user]",
                      "example": 0
                    }
                  ]
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Updated sharing rights (None, ReadWrite, Read, Restrict, Varies, Review, Comment, FillForms, CustomFilter, RoomAdmin, Editing, Collaborator)",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ASC.Files.Core.Security.FileShare"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ASC.Files.Core.Security.FileShare"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ASC.Files.Core.Security.FileShare"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "asc_auth_key": [
              "read",
              "write"
            ]
          }
        ],
        "description": "Changes the default access rights in the sharing settings."
      }
    },
    "/api/2.0/files/settings/openeditorinsametab": {
      "put": {
        "tags": [
          "Files / Settings"
        ],
        "summary": "Open document in same browser tab",
        "operationId": "setOpenEditorInSameTab",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.RequestDto.SettingsRequestDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.RequestDto.SettingsRequestDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.RequestDto.SettingsRequestDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Boolean value: true if the parameter is enabled",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "boolean"
                }
              },
              "application/json": {
                "schema": {
                  "type": "boolean"
                }
              },
              "text/json": {
                "schema": {
                  "type": "boolean"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "asc_auth_key": [
              "read",
              "write"
            ]
          }
        ],
        "description": "Change the ability to open in a document in the same browser tab"
      }
    },
    "/api/2.0/files/thirdparty/capabilities": {
      "get": {
        "tags": [
          "Files / Third-party integration"
        ],
        "summary": "Get providers",
        "description": "Returns a list of the available providers.\n\n**Note**: Available provider keys: DropboxV2, Box, WebDav, Yandex, OneDrive, SharePoint, GoogleDrive, kDrive.",
        "operationId": "capabilities",
        "responses": {
          "200": {
            "description": "List of provider keys",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    }
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    }
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "asc_auth_key": [
              "read",
              "write"
            ]
          }
        ]
      }
    },
    "/api/2.0/files/thirdparty/{providerId}": {
      "delete": {
        "tags": [
          "Files / Third-party integration"
        ],
        "summary": "Remove a third-party account",
        "operationId": "deleteThirdParty",
        "parameters": [
          {
            "name": "providerId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32",
              "example": 1234
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Third-party folder ID",
            "content": {
              "text/plain": {
                "schema": {}
              },
              "application/json": {
                "schema": {}
              },
              "text/json": {
                "schema": {}
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "asc_auth_key": [
              "read",
              "write"
            ]
          }
        ],
        "description": "Removes the third-party storage service account with the ID specified in the request."
      }
    },
    "/api/2.0/files/thirdparty/common": {
      "get": {
        "tags": [
          "Files / Third-party integration"
        ],
        "summary": "Get common third-party services",
        "operationId": "getCommonThirdPartyFolders",
        "responses": {
          "200": {
            "description": "List of common third-party folderst",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.ResponseDto.FolderDto.System.String"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.ResponseDto.FolderDto.System.String"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.ResponseDto.FolderDto.System.String"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "asc_auth_key": [
              "read",
              "write"
            ]
          }
        ],
        "description": "Returns a list of the third-party services connected to the \"Common\" section."
      }
    },
    "/api/2.0/files/thirdparty/backup": {
      "get": {
        "tags": [
          "Files / Third-party integration"
        ],
        "summary": "Get a third-party account backup",
        "operationId": "getBackupThirdPartyAccount",
        "responses": {
          "200": {
            "description": "Folder for the third-party account backup",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.ResponseDto.FolderDto.System.String"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.ResponseDto.FolderDto.System.String"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.ResponseDto.FolderDto.System.String"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "asc_auth_key": [
              "read",
              "write"
            ]
          }
        ],
        "description": "Return a backup of the connected third-party account."
      },
      "post": {
        "tags": [
          "Files / Third-party integration"
        ],
        "summary": "Save a third-party account backup",
        "description": "Saves a backup of the connected third-party account.\n\n**Note**: List of provider key: DropboxV2, Box, WebDav, Yandex, OneDrive, SharePoint, GoogleDrive, kDrive",
        "operationId": "saveThirdPartyBackup",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.RequestDto.ThirdPartyBackupRequestDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.RequestDto.ThirdPartyBackupRequestDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.RequestDto.ThirdPartyBackupRequestDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Folder for the third-party account backup",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.ResponseDto.FolderDto.System.String"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.ResponseDto.FolderDto.System.String"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.ResponseDto.FolderDto.System.String"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "asc_auth_key": [
              "read",
              "write"
            ]
          }
        ]
      }
    },
    "/api/2.0/files/thirdparty/providers": {
      "get": {
        "tags": [
          "Files / Third-party integration"
        ],
        "summary": "Get all providers",
        "description": "Returns a list of the all providers.\n\n**Note**: Available provider keys: Dropbox, Box, WebDav, OneDrive, GoogleDrive, kDrive, ownCloud, Nextcloud",
        "operationId": "getAllProviders",
        "responses": {
          "200": {
            "description": "List of provider",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.ResponseDto.ProviderDto"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.ResponseDto.ProviderDto"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.ResponseDto.ProviderDto"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "asc_auth_key": [
              "read",
              "write"
            ]
          }
        ]
      }
    }
  },
  "components": {
    "schemas": {
      "ASC.Api.Core.ApiDateTime": {
        "type": "object",
        "properties": {
          "utcTime": {
            "type": "string",
            "format": "date-time",
            "readOnly": true,
            "example": "2008-04-10T06:30:00.0000000+04:00"
          },
          "timeZoneOffset": {
            "type": "string",
            "format": "date-span",
            "readOnly": true,
            "example": "00:00:00"
          }
        },
        "additionalProperties": false
      },
      "ASC.Api.Core.Module": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid",
            "example": "e99fbfb6-b47d-49a2-8e32-0992e5dfffd7"
          },
          "appName": {
            "type": "string",
            "nullable": true,
            "example": "some text"
          },
          "title": {
            "type": "string",
            "nullable": true,
            "example": "glens_bypassing"
          },
          "link": {
            "type": "string",
            "nullable": true,
            "example": "some text"
          },
          "iconUrl": {
            "type": "string",
            "nullable": true,
            "example": "some text"
          },
          "imageUrl": {
            "type": "string",
            "nullable": true,
            "example": "some text"
          },
          "helpUrl": {
            "type": "string",
            "nullable": true,
            "example": "some text"
          },
          "description": {
            "type": "string",
            "nullable": true,
            "example": "some text"
          },
          "isPrimary": {
            "type": "boolean",
            "example": true
          }
        },
        "additionalProperties": false
      },
      "ASC.Common.Threading.DistributedTaskStatus": {
        "oneOf": [
          {
            "enum": [
              "Created",
              "Running",
              "Completed",
              "Canceled",
              "Failted"
            ],
            "type": "string",
            "description": "[Created - Created, Running - Running, Completed - Completed, Canceled - Canceled, Failted - Failted]",
            "example": "Created"
          },
          {
            "enum": [
              0,
              1,
              2,
              3,
              4
            ],
            "type": "integer",
            "description": "[0 - Created, 1 - Running, 2 - Completed, 3 - Canceled, 4 - Failted]",
            "example": 0
          }
        ]
      },
      "ASC.Core.QuotaFilter": {
        "oneOf": [
          {
            "enum": [
              "All",
              "Default",
              "Custom"
            ],
            "type": "string",
            "description": "[All - All, Default - Default, Custom - Custom]",
            "example": "All"
          },
          {
            "enum": [
              0,
              1,
              2
            ],
            "type": "integer",
            "description": "[0 - All, 1 - Default, 2 - Custom]",
            "example": 0
          }
        ]
      },
      "ASC.Core.Users.EmployeeActivationStatus": {
        "oneOf": [
          {
            "enum": [
              "NotActivated",
              "Activated",
              "Pending",
              "AutoGenerated"
            ],
            "type": "string",
            "description": "[NotActivated - Not activated, Activated - Activated, Pending - Pending, AutoGenerated - Auto generated]",
            "example": "NotActivated"
          },
          {
            "enum": [
              0,
              1,
              2,
              4
            ],
            "type": "integer",
            "description": "[0 - Not activated, 1 - Activated, 2 - Pending, 4 - Auto generated]",
            "example": 0
          }
        ]
      },
      "ASC.Core.Users.EmployeeStatus": {
        "oneOf": [
          {
            "enum": [
              "Active",
              "Terminated",
              "Pending",
              "Default",
              "All"
            ],
            "type": "string",
            "description": "[Active - Active, Terminated - Terminated, Pending - Pending, Default - Default, All - All]",
            "example": "Active"
          },
          {
            "enum": [
              1,
              2,
              4,
              5,
              7
            ],
            "type": "integer",
            "description": "[1 - Active, 2 - Terminated, 4 - Pending, 5 - Default, 7 - All]",
            "example": 1
          }
        ]
      },
      "ASC.Core.Users.MobilePhoneActivationStatus": {
        "oneOf": [
          {
            "enum": [
              "NotActivated",
              "Activated"
            ],
            "type": "string",
            "description": "[NotActivated - Not activated, Activated - Activated]",
            "example": "NotActivated"
          },
          {
            "enum": [
              0,
              1
            ],
            "type": "integer",
            "description": "[0 - Not activated, 1 - Activated]",
            "example": 0
          }
        ]
      },
      "ASC.Core.Users.UserInfo": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid",
            "example": "42af808d-02b4-4ac2-9a0b-b7eff7fed572"
          },
          "firstName": {
            "type": "string",
            "nullable": true,
            "example": "Cecelia"
          },
          "lastName": {
            "type": "string",
            "nullable": true,
            "example": "Lueilwitz"
          },
          "userName": {
            "type": "string",
            "nullable": true,
            "example": "some text"
          },
          "birthDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true,
            "example": "2008-04-10T06:30:00.0000000+04:00"
          },
          "sex": {
            "type": "boolean",
            "nullable": true,
            "example": true
          },
          "status": {
            "$ref": "#/components/schemas/ASC.Core.Users.EmployeeStatus"
          },
          "activationStatus": {
            "$ref": "#/components/schemas/ASC.Core.Users.EmployeeActivationStatus"
          },
          "terminatedDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true,
            "example": "2008-04-10T06:30:00.0000000+04:00"
          },
          "title": {
            "type": "string",
            "nullable": true,
            "example": "purple"
          },
          "workFromDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true,
            "example": "2008-04-10T06:30:00.0000000+04:00"
          },
          "email": {
            "type": "string",
            "format": "email",
            "nullable": true,
            "example": "Annabelle.Kub@gmail.com"
          },
          "contacts": {
            "type": "string",
            "nullable": true,
            "example": "some text"
          },
          "contactsList": {
            "type": "array",
            "items": {},
            "nullable": true,
            "example": [
              "some text"
            ]
          },
          "location": {
            "type": "string",
            "nullable": true,
            "example": "86854 Marvin Walk, Lake Alyceshire, Anguilla"
          },
          "notes": {
            "type": "string",
            "nullable": true,
            "example": "some text"
          },
          "removed": {
            "type": "boolean",
            "example": true
          },
          "lastModified": {
            "type": "string",
            "format": "date-time",
            "example": "2008-04-10T06:30:00.0000000+04:00"
          },
          "tenantId": {
            "type": "integer",
            "format": "int32",
            "example": 1234
          },
          "isActive": {
            "type": "boolean",
            "readOnly": true,
            "example": true
          },
          "cultureName": {
            "type": "string",
            "nullable": true,
            "example": "some text"
          },
          "mobilePhone": {
            "type": "string",
            "nullable": true,
            "example": "some text"
          },
          "mobilePhoneActivationStatus": {
            "$ref": "#/components/schemas/ASC.Core.Users.MobilePhoneActivationStatus"
          },
          "sid": {
            "type": "string",
            "nullable": true,
            "example": "some text"
          },
          "ldapQouta": {
            "type": "integer",
            "format": "int64",
            "example": 1234
          },
          "ssoNameId": {
            "type": "string",
            "nullable": true,
            "example": "some text"
          },
          "ssoSessionId": {
            "type": "string",
            "nullable": true,
            "example": "some text"
          },
          "createDate": {
            "type": "string",
            "format": "date-time",
            "example": "2008-04-10T06:30:00.0000000+04:00"
          },
          "checkActivation": {
            "type": "boolean",
            "readOnly": true,
            "example": true
          }
        },
        "additionalProperties": false
      },
      "ASC.FederatedLogin.OAuth20Token": {
        "type": "object",
        "properties": {
          "access_token": {
            "type": "string",
            "nullable": true,
            "example": "some text"
          },
          "refresh_token": {
            "type": "string",
            "nullable": true,
            "example": "some text"
          },
          "expires_in": {
            "type": "integer",
            "format": "int64",
            "example": 1234
          },
          "client_id": {
            "type": "string",
            "nullable": true,
            "example": "some text"
          },
          "client_secret": {
            "type": "string",
            "nullable": true,
            "example": "some text"
          },
          "redirect_uri": {
            "type": "string",
            "format": "uri",
            "nullable": true,
            "example": "some text"
          },
          "timestamp": {
            "type": "string",
            "format": "date-time",
            "example": "2008-04-10T06:30:00.0000000+04:00"
          },
          "isExpired": {
            "type": "boolean",
            "readOnly": true,
            "example": true
          }
        },
        "additionalProperties": false
      },
      "ASC.Files.Core.ApiModels.FileShareParams": {
        "type": "object",
        "properties": {
          "shareTo": {
            "type": "string",
            "format": "uuid",
            "example": "75a5f745-f697-4418-b38d-0fe0d277e258"
          },
          "email": {
            "type": "string",
            "format": "email",
            "nullable": true,
            "example": "Robyn_Hills59@gmail.com"
          },
          "access": {
            "$ref": "#/components/schemas/ASC.Files.Core.Security.FileShare"
          }
        },
        "additionalProperties": false
      },
      "ASC.Files.Core.ApiModels.RequestDto.ArchiveRoomRequest": {
        "type": "object",
        "properties": {
          "deleteAfter": {
            "type": "boolean",
            "example": true
          }
        },
        "additionalProperties": false
      },
      "ASC.Files.Core.ApiModels.RequestDto.AutoCleanupRequestDto": {
        "type": "object",
        "properties": {
          "set": {
            "type": "boolean",
            "example": true
          },
          "gap": {
            "$ref": "#/components/schemas/ASC.Files.Core.DateToAutoCleanUp"
          }
        },
        "additionalProperties": false
      },
      "ASC.Files.Core.ApiModels.RequestDto.BaseBatchRequestDto": {
        "type": "object",
        "properties": {
          "folderIds": {
            "type": "array",
            "items": {
              "anyOf": [
                {
                  "type": "integer",
                  "example": 1234
                },
                {
                  "type": "string",
                  "example": "some text"
                }
              ]
            },
            "nullable": true
          },
          "fileIds": {
            "type": "array",
            "items": {
              "anyOf": [
                {
                  "type": "integer",
                  "example": 1234
                },
                {
                  "type": "string",
                  "example": "some text"
                }
              ]
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ASC.Files.Core.ApiModels.RequestDto.BatchRequestDto": {
        "type": "object",
        "properties": {
          "folderIds": {
            "type": "array",
            "items": {
              "anyOf": [
                {
                  "type": "integer",
                  "example": 1234
                },
                {
                  "type": "string",
                  "example": "some text"
                }
              ]
            },
            "nullable": true
          },
          "fileIds": {
            "type": "array",
            "items": {
              "anyOf": [
                {
                  "type": "integer",
                  "example": 1234
                },
                {
                  "type": "string",
                  "example": "some text"
                }
              ]
            },
            "nullable": true
          },
          "destFolderId": {
            "oneOf": [
              {
                "type": "integer",
                "example": 1234
              },
              {
                "type": "string",
                "example": "some text"
              }
            ]
          },
          "conflictResolveType": {
            "$ref": "#/components/schemas/ASC.Web.Files.Services.WCFService.FileOperations.FileConflictResolveType"
          },
          "deleteAfter": {
            "type": "boolean",
            "example": true
          },
          "content": {
            "type": "boolean",
            "example": true
          }
        },
        "additionalProperties": false
      },
      "ASC.Files.Core.ApiModels.RequestDto.BatchSimpleRequestDto": {
        "type": "object",
        "properties": {
          "folderIds": {
            "type": "array",
            "items": {
              "anyOf": [
                {
                  "type": "integer",
                  "example": 1234
                },
                {
                  "type": "string",
                  "example": "some text"
                }
              ]
            },
            "nullable": true
          },
          "fileIds": {
            "type": "array",
            "items": {
              "anyOf": [
                {
                  "type": "integer",
                  "example": 1234
                },
                {
                  "type": "string",
                  "example": "some text"
                }
              ]
            },
            "nullable": true
          },
          "destFolderId": {
            "oneOf": [
              {
                "type": "integer",
                "example": 1234
              },
              {
                "type": "string",
                "example": "some text"
              }
            ]
          }
        },
        "additionalProperties": false
      },
      "ASC.Files.Core.ApiModels.RequestDto.BatchTagsRequestDto": {
        "type": "object",
        "properties": {
          "names": {
            "type": "array",
            "items": {},
            "nullable": true,
            "example": [
              "some text"
            ]
          }
        },
        "additionalProperties": false
      },
      "ASC.Files.Core.ApiModels.RequestDto.ChangeHistory": {
        "type": "object",
        "properties": {
          "version": {
            "type": "integer",
            "format": "int32",
            "example": 1234
          },
          "continueVersion": {
            "type": "boolean",
            "example": true
          }
        },
        "additionalProperties": false
      },
      "ASC.Files.Core.ApiModels.RequestDto.CheckConversionRequestDto.System.Int32": {
        "type": "object",
        "properties": {
          "fileId": {
            "type": "integer",
            "format": "int32",
            "example": 3206
          },
          "sync": {
            "type": "boolean",
            "example": true
          },
          "startConvert": {
            "type": "boolean",
            "example": true
          },
          "version": {
            "type": "integer",
            "format": "int32",
            "example": 1234
          },
          "password": {
            "type": "string",
            "nullable": true,
            "example": "Dv5eAyghkd"
          },
          "createNewIfExist": {
            "type": "boolean",
            "example": true
          }
        },
        "additionalProperties": false
      },
      "ASC.Files.Core.ApiModels.RequestDto.CheckDocServiceUrlRequestDto": {
        "type": "object",
        "properties": {
          "docServiceUrl": {
            "type": "string",
            "format": "uri",
            "nullable": true,
            "example": "some text"
          },
          "docServiceUrlInternal": {
            "type": "string",
            "format": "uri",
            "nullable": true,
            "example": "some text"
          },
          "docServiceUrlPortal": {
            "type": "string",
            "format": "uri",
            "nullable": true,
            "example": "some text"
          }
        },
        "additionalProperties": false
      },
      "ASC.Files.Core.ApiModels.RequestDto.CheckFillFormDraft": {
        "type": "object",
        "properties": {
          "version": {
            "type": "integer",
            "format": "int32",
            "example": 1234
          },
          "action": {
            "type": "string",
            "nullable": true,
            "example": "some text"
          },
          "requestView": {
            "type": "boolean",
            "readOnly": true,
            "example": true
          },
          "requestEmbedded": {
            "type": "boolean",
            "readOnly": true,
            "example": true
          }
        },
        "additionalProperties": false
      },
      "ASC.Files.Core.ApiModels.RequestDto.CheckUploadRequest": {
        "type": "object",
        "properties": {
          "filesTitle": {
            "type": "array",
            "items": {},
            "nullable": true,
            "example": [
              "some text"
            ]
          }
        },
        "additionalProperties": false
      },
      "ASC.Files.Core.ApiModels.RequestDto.CopyAs.System.Text.Json.JsonElement": {
        "type": "object",
        "properties": {
          "destTitle": {
            "type": "string",
            "nullable": true,
            "example": "some text"
          },
          "destFolderId": {
            "oneOf": [
              {
                "type": "integer",
                "example": 1234
              },
              {
                "type": "string",
                "example": "some text"
              }
            ]
          },
          "enableExternalExt": {
            "type": "boolean",
            "example": true
          },
          "password": {
            "type": "string",
            "nullable": true,
            "example": "69jtQcKgwl"
          },
          "toForm": {
            "type": "boolean",
            "example": true
          }
        },
        "additionalProperties": false
      },
      "ASC.Files.Core.ApiModels.RequestDto.CreateFile.System.Text.Json.JsonElement": {
        "type": "object",
        "properties": {
          "title": {
            "type": "string",
            "nullable": true,
            "example": "markets"
          },
          "templateId": {
            "oneOf": [
              {
                "type": "integer",
                "example": 1234
              },
              {
                "type": "string",
                "example": "some text"
              }
            ]
          },
          "enableExternalExt": {
            "type": "boolean",
            "example": true
          },
          "formId": {
            "type": "integer",
            "format": "int32",
            "example": 1234
          }
        },
        "additionalProperties": false
      },
      "ASC.Files.Core.ApiModels.RequestDto.CreateFolder": {
        "type": "object",
        "properties": {
          "title": {
            "type": "string",
            "nullable": true,
            "example": "auxiliary_colorado"
          }
        },
        "additionalProperties": false
      },
      "ASC.Files.Core.ApiModels.RequestDto.CreateRoomRequestDto": {
        "type": "object",
        "properties": {
          "title": {
            "type": "string",
            "nullable": true,
            "example": "port_money_market_account"
          },
          "roomType": {
            "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.RequestDto.RoomType"
          },
          "private": {
            "type": "boolean",
            "example": true
          },
          "share": {
            "type": "array",
            "items": {},
            "nullable": true,
            "example": [
              {
                "int": 1234,
                "string": "some text",
                "boolean": true
              }
            ]
          },
          "quota": {
            "type": "integer",
            "format": "int64",
            "example": 1234
          },
          "indexing": {
            "type": "boolean",
            "example": true
          }
        },
        "additionalProperties": false
      },
      "ASC.Files.Core.ApiModels.RequestDto.CreateTagRequestDto": {
        "type": "object",
        "properties": {
          "name": {
            "maxLength": 255,
            "minLength": 0,
            "type": "string",
            "nullable": true,
            "example": "Kristy Gaylord"
          }
        },
        "additionalProperties": false
      },
      "ASC.Files.Core.ApiModels.RequestDto.CreateTextOrHtmlFile": {
        "required": [
          "title"
        ],
        "type": "object",
        "properties": {
          "title": {
            "minLength": 1,
            "type": "string",
            "example": "markets_solution_oriented_content"
          },
          "content": {
            "type": "string",
            "nullable": true,
            "example": "some text"
          },
          "createNewIfExist": {
            "type": "boolean",
            "example": true
          }
        },
        "additionalProperties": false
      },
      "ASC.Files.Core.ApiModels.RequestDto.CreateThirdPartyRoom": {
        "type": "object",
        "properties": {
          "createAsNewFolder": {
            "type": "boolean",
            "example": true
          },
          "title": {
            "type": "string",
            "nullable": true,
            "example": "home_loan_account"
          },
          "roomType": {
            "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.RequestDto.RoomType"
          },
          "private": {
            "type": "boolean",
            "example": true
          },
          "indexing": {
            "type": "boolean",
            "example": true
          }
        },
        "additionalProperties": false
      },
      "ASC.Files.Core.ApiModels.RequestDto.Delete": {
        "type": "object",
        "properties": {
          "deleteAfter": {
            "type": "boolean",
            "example": true
          },
          "immediately": {
            "type": "boolean",
            "example": true
          }
        },
        "additionalProperties": false
      },
      "ASC.Files.Core.ApiModels.RequestDto.DeleteBatchRequestDto": {
        "type": "object",
        "properties": {
          "folderIds": {
            "type": "array",
            "items": {
              "anyOf": [
                {
                  "type": "integer",
                  "example": 1234
                },
                {
                  "type": "string",
                  "example": "some text"
                }
              ]
            },
            "nullable": true
          },
          "fileIds": {
            "type": "array",
            "items": {
              "anyOf": [
                {
                  "type": "integer",
                  "example": 1234
                },
                {
                  "type": "string",
                  "example": "some text"
                }
              ]
            },
            "nullable": true
          },
          "deleteAfter": {
            "type": "boolean",
            "example": true
          },
          "immediately": {
            "type": "boolean",
            "example": true
          }
        },
        "additionalProperties": false
      },
      "ASC.Files.Core.ApiModels.RequestDto.DeleteFolder": {
        "type": "object",
        "properties": {
          "deleteAfter": {
            "type": "boolean",
            "example": true
          },
          "immediately": {
            "type": "boolean",
            "example": true
          }
        },
        "additionalProperties": false
      },
      "ASC.Files.Core.ApiModels.RequestDto.DeleteRoomRequest": {
        "type": "object",
        "properties": {
          "deleteAfter": {
            "type": "boolean",
            "example": true
          }
        },
        "additionalProperties": false
      },
      "ASC.Files.Core.ApiModels.RequestDto.DisplayRequestDto": {
        "type": "object",
        "properties": {
          "set": {
            "type": "boolean",
            "example": true
          }
        },
        "additionalProperties": false
      },
      "ASC.Files.Core.ApiModels.RequestDto.DownloadRequestDto": {
        "type": "object",
        "properties": {
          "folderIds": {
            "type": "array",
            "items": {
              "anyOf": [
                {
                  "type": "integer",
                  "example": 1234
                },
                {
                  "type": "string",
                  "example": "some text"
                }
              ]
            },
            "nullable": true
          },
          "fileIds": {
            "type": "array",
            "items": {
              "anyOf": [
                {
                  "type": "integer",
                  "example": 1234
                },
                {
                  "type": "string",
                  "example": "some text"
                }
              ]
            },
            "nullable": true
          },
          "fileConvertIds": {
            "type": "object",
            "additionalProperties": {
              "type": "string",
              "nullable": true
            },
            "nullable": true,
            "example": [
              {
                "value": "some text"
              }
            ]
          }
        },
        "additionalProperties": false
      },
      "ASC.Files.Core.ApiModels.RequestDto.DuplicateRequestDto": {
        "type": "object",
        "properties": {
          "folderIds": {
            "type": "array",
            "items": {
              "anyOf": [
                {
                  "type": "integer",
                  "example": 1234
                },
                {
                  "type": "string",
                  "example": "some text"
                }
              ]
            },
            "nullable": true
          },
          "fileIds": {
            "type": "array",
            "items": {
              "anyOf": [
                {
                  "type": "integer",
                  "example": 1234
                },
                {
                  "type": "string",
                  "example": "some text"
                }
              ]
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ASC.Files.Core.ApiModels.RequestDto.FileBaseBatchRequestDto": {
        "type": "object",
        "properties": {
          "fileIds": {
            "type": "array",
            "items": {
              "anyOf": [
                {
                  "type": "integer",
                  "example": 1234
                },
                {
                  "type": "string",
                  "example": "some text"
                }
              ]
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ASC.Files.Core.ApiModels.RequestDto.FileLinkRequest": {
        "type": "object",
        "properties": {
          "linkId": {
            "type": "string",
            "format": "uuid",
            "example": "75a5f745-f697-4418-b38d-0fe0d277e258"
          },
          "access": {
            "$ref": "#/components/schemas/ASC.Files.Core.Security.FileShare"
          },
          "expirationDate": {
            "$ref": "#/components/schemas/ASC.Api.Core.ApiDateTime"
          },
          "internal": {
            "type": "boolean",
            "example": true
          },
          "primary": {
            "type": "boolean",
            "example": true
          }
        },
        "additionalProperties": false
      },
      "ASC.Files.Core.ApiModels.RequestDto.GetReferenceDataDto.System.Int32": {
        "type": "object",
        "properties": {
          "fileKey": {
            "type": "integer",
            "format": "int32",
            "example": 1234
          },
          "instanceId": {
            "type": "string",
            "nullable": true,
            "example": "6387"
          },
          "sourceFileId": {
            "type": "integer",
            "format": "int32",
            "example": 1234
          },
          "path": {
            "type": "string",
            "nullable": true,
            "example": "some text"
          },
          "link": {
            "type": "string",
            "nullable": true,
            "example": "some text"
          }
        },
        "additionalProperties": false
      },
      "ASC.Files.Core.ApiModels.RequestDto.LockFileParameters": {
        "type": "object",
        "properties": {
          "lockFile": {
            "type": "boolean",
            "example": true
          }
        },
        "additionalProperties": false
      },
      "ASC.Files.Core.ApiModels.RequestDto.LogoRequest": {
        "type": "object",
        "properties": {
          "tmpFile": {
            "type": "string",
            "nullable": true,
            "example": "some text"
          },
          "x": {
            "type": "integer",
            "format": "int32",
            "example": 1234
          },
          "y": {
            "type": "integer",
            "format": "int32",
            "example": 1234
          },
          "width": {
            "type": "integer",
            "format": "int32",
            "example": 1234
          },
          "height": {
            "type": "integer",
            "format": "int32",
            "example": 1234
          }
        },
        "additionalProperties": false
      },
      "ASC.Files.Core.ApiModels.RequestDto.OrderRequestDto": {
        "type": "object",
        "properties": {
          "order": {
            "type": "integer",
            "format": "int32",
            "example": 1234
          }
        },
        "additionalProperties": false
      },
      "ASC.Files.Core.ApiModels.RequestDto.RoomInvitation": {
        "type": "object",
        "properties": {
          "email": {
            "type": "string",
            "format": "email",
            "nullable": true,
            "example": "Katelin_Harvey93@gmail.com"
          },
          "id": {
            "type": "string",
            "format": "uuid",
            "example": "a364077c-f9d3-4dea-90bc-b1771896a1f4"
          },
          "access": {
            "$ref": "#/components/schemas/ASC.Files.Core.Security.FileShare"
          }
        },
        "additionalProperties": false
      },
      "ASC.Files.Core.ApiModels.RequestDto.RoomInvitationRequest": {
        "type": "object",
        "properties": {
          "invitations": {
            "type": "array",
            "items": {},
            "nullable": true,
            "example": [
              {
                "int": 1234,
                "string": "some text",
                "boolean": true
              }
            ]
          },
          "notify": {
            "type": "boolean",
            "example": true
          },
          "message": {
            "type": "string",
            "nullable": true,
            "example": "some text"
          },
          "culture": {
            "type": "string",
            "nullable": true,
            "example": "some text"
          }
        },
        "additionalProperties": false
      },
      "ASC.Files.Core.ApiModels.RequestDto.RoomLinkRequest": {
        "type": "object",
        "properties": {
          "linkId": {
            "type": "string",
            "format": "uuid",
            "example": "75a5f745-f697-4418-b38d-0fe0d277e258"
          },
          "access": {
            "$ref": "#/components/schemas/ASC.Files.Core.Security.FileShare"
          },
          "expirationDate": {
            "$ref": "#/components/schemas/ASC.Api.Core.ApiDateTime"
          },
          "title": {
            "maxLength": 255,
            "minLength": 0,
            "type": "string",
            "nullable": true,
            "example": "refined_granite_chicken_administrator_nepal"
          },
          "linkType": {
            "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.ResponseDto.LinkType"
          },
          "password": {
            "maxLength": 255,
            "minLength": 0,
            "type": "string",
            "nullable": true,
            "example": "jAhP23oUeu"
          },
          "denyDownload": {
            "type": "boolean",
            "example": true
          }
        },
        "additionalProperties": false
      },
      "ASC.Files.Core.ApiModels.RequestDto.RoomType": {
        "oneOf": [
          {
            "enum": [
              "FillingFormsRoom",
              "EditingRoom",
              "CustomRoom",
              "PublicRoom"
            ],
            "type": "string",
            "description": "[FillingFormsRoom - Form filling room, EditingRoom - Collaboration room, CustomRoom - Custom room, PublicRoom - Public room]",
            "example": "FillingFormsRoom"
          },
          {
            "enum": [
              1,
              2,
              5,
              6
            ],
            "type": "integer",
            "description": "[1 - Form filling room, 2 - Collaboration room, 5 - Custom room, 6 - Public room]",
            "example": 1
          }
        ]
      },
      "ASC.Files.Core.ApiModels.RequestDto.SaveAsPdf.System.Int32": {
        "type": "object",
        "properties": {
          "folderId": {
            "type": "integer",
            "format": "int32",
            "example": 5242
          },
          "title": {
            "type": "string",
            "nullable": true,
            "example": "ability_investment_account_magenta"
          }
        },
        "additionalProperties": false
      },
      "ASC.Files.Core.ApiModels.RequestDto.SessionRequest": {
        "type": "object",
        "properties": {
          "fileName": {
            "type": "string",
            "nullable": true,
            "example": "some text"
          },
          "fileSize": {
            "type": "integer",
            "format": "int64",
            "example": 1234
          },
          "relativePath": {
            "type": "string",
            "nullable": true,
            "example": "some text"
          },
          "createOn": {
            "$ref": "#/components/schemas/ASC.Api.Core.ApiDateTime"
          },
          "encrypted": {
            "type": "boolean",
            "example": true
          },
          "createNewIfExist": {
            "type": "boolean",
            "example": true
          }
        },
        "additionalProperties": false
      },
      "ASC.Files.Core.ApiModels.RequestDto.SettingsRequestDto": {
        "type": "object",
        "properties": {
          "set": {
            "type": "boolean",
            "example": true
          }
        },
        "additionalProperties": false
      },
      "ASC.Files.Core.ApiModels.RequestDto.SettingsRoom": {
        "type": "object",
        "properties": {
          "indexing": {
            "type": "boolean",
            "example": true
          }
        },
        "additionalProperties": false
      },
      "ASC.Files.Core.ApiModels.RequestDto.StartEdit": {
        "type": "object",
        "properties": {
          "editingAlone": {
            "type": "boolean",
            "example": true
          }
        },
        "additionalProperties": false
      },
      "ASC.Files.Core.ApiModels.RequestDto.TemplatesRequestDto": {
        "type": "object",
        "properties": {
          "fileIds": {
            "type": "array",
            "items": {},
            "nullable": true,
            "example": [
              1234
            ]
          }
        },
        "additionalProperties": false
      },
      "ASC.Files.Core.ApiModels.RequestDto.ThirdPartyBackupRequestDto": {
        "type": "object",
        "properties": {
          "url": {
            "type": "string",
            "nullable": true,
            "example": "some text"
          },
          "login": {
            "type": "string",
            "nullable": true,
            "example": "some text"
          },
          "password": {
            "type": "string",
            "nullable": true,
            "example": "8h8VVbQtSX"
          },
          "token": {
            "type": "string",
            "nullable": true,
            "example": "some text"
          },
          "customerTitle": {
            "type": "string",
            "nullable": true,
            "example": "some text"
          },
          "providerKey": {
            "type": "string",
            "nullable": true,
            "example": "some text"
          }
        },
        "additionalProperties": false
      },
      "ASC.Files.Core.ApiModels.RequestDto.ThirdPartyRequestDto": {
        "type": "object",
        "properties": {
          "url": {
            "type": "string",
            "nullable": true,
            "example": "some text"
          },
          "login": {
            "type": "string",
            "nullable": true,
            "example": "some text"
          },
          "password": {
            "type": "string",
            "nullable": true,
            "example": "ciXzyt6He6"
          },
          "token": {
            "type": "string",
            "nullable": true,
            "example": "some text"
          },
          "customerTitle": {
            "type": "string",
            "nullable": true,
            "example": "some text"
          },
          "providerKey": {
            "type": "string",
            "nullable": true,
            "example": "some text"
          },
          "providerId": {
            "type": "integer",
            "format": "int32",
            "nullable": true,
            "example": 1234
          }
        },
        "additionalProperties": false
      },
      "ASC.Files.Core.ApiModels.RequestDto.UpdateComment": {
        "type": "object",
        "properties": {
          "version": {
            "type": "integer",
            "format": "int32",
            "example": 1234
          },
          "comment": {
            "type": "string",
            "nullable": true,
            "example": "some text"
          }
        },
        "additionalProperties": false
      },
      "ASC.Files.Core.ApiModels.RequestDto.UpdateFile": {
        "type": "object",
        "properties": {
          "title": {
            "type": "string",
            "nullable": true,
            "example": "strategize_multi_tasking_enhanced"
          },
          "lastVersion": {
            "type": "integer",
            "format": "int32",
            "example": 1234
          }
        },
        "additionalProperties": false
      },
      "ASC.Files.Core.ApiModels.RequestDto.UpdateRoomRequest": {
        "type": "object",
        "properties": {
          "title": {
            "type": "string",
            "nullable": true,
            "example": "override_violet"
          },
          "quota": {
            "type": "integer",
            "format": "int64",
            "nullable": true,
            "example": 1234
          }
        },
        "additionalProperties": false
      },
      "ASC.Files.Core.ApiModels.RequestDto.UpdateRoomsQuotaRequestDto.System.Int32": {
        "type": "object",
        "properties": {
          "roomIds": {
            "type": "array",
            "items": {
              "anyOf": [
                {
                  "type": "integer",
                  "example": 1234
                },
                {
                  "type": "string",
                  "example": "some text"
                }
              ]
            },
            "nullable": true
          },
          "quota": {
            "type": "integer",
            "format": "int64",
            "example": 1234
          }
        },
        "additionalProperties": false
      },
      "ASC.Files.Core.ApiModels.RequestDto.UpdateRoomsRoomIdsRequestDto.System.Int32": {
        "type": "object",
        "properties": {
          "roomIds": {
            "type": "array",
            "items": {
              "anyOf": [
                {
                  "type": "integer",
                  "example": 1234
                },
                {
                  "type": "string",
                  "example": "some text"
                }
              ]
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ASC.Files.Core.ApiModels.RequestDto.UploadRequestDto": {
        "type": "object",
        "properties": {
          "file": {
            "type": "string",
            "format": "binary",
            "nullable": true
          },
          "contentType": {
            "$ref": "#/components/schemas/System.Net.Mime.ContentType"
          },
          "contentDisposition": {
            "$ref": "#/components/schemas/System.Net.Mime.ContentDisposition"
          },
          "files": {
            "type": "array",
            "items": {},
            "nullable": true,
            "example": [
              {
                "int": 1234,
                "string": "some text",
                "boolean": true
              }
            ]
          },
          "createNewIfExist": {
            "type": "boolean",
            "example": true
          },
          "storeOriginalFileFlag": {
            "type": "boolean",
            "nullable": true,
            "example": true
          },
          "keepConvertStatus": {
            "type": "boolean",
            "example": true
          },
          "stream": {
            "type": "string",
            "format": "binary",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ASC.Files.Core.ApiModels.RequestDto.UserInvitation": {
        "type": "object",
        "properties": {
          "usersIds": {
            "type": "array",
            "items": {},
            "nullable": true,
            "example": [
              "75a5f745-f697-4418-b38d-0fe0d277e258"
            ]
          },
          "resendAll": {
            "type": "boolean",
            "example": true
          }
        },
        "additionalProperties": false
      },
      "ASC.Files.Core.ApiModels.ResponseDto.AnonymousConfigDto": {
        "type": "object",
        "properties": {
          "request": {
            "type": "boolean",
            "example": true
          }
        },
        "additionalProperties": false
      },
      "ASC.Files.Core.ApiModels.ResponseDto.CheckDestFolderDto": {
        "type": "object",
        "properties": {
          "result": {
            "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.ResponseDto.CheckDestFolderResult"
          },
          "files": {
            "type": "array",
            "items": {},
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ASC.Files.Core.ApiModels.ResponseDto.CheckDestFolderResult": {
        "oneOf": [
          {
            "enum": [
              "AllAllowed",
              "PartAllowed",
              "NoneAllowed"
            ],
            "type": "string",
            "description": "[AllAllowed - All allowed, PartAllowed - Part allowed, NoneAllowed - None allowed]",
            "example": "AllAllowed"
          },
          {
            "enum": [
              0,
              1,
              2
            ],
            "type": "integer",
            "description": "[0 - All allowed, 1 - Part allowed, 2 - None allowed]",
            "example": 0
          }
        ]
      },
      "ASC.Files.Core.ApiModels.ResponseDto.ConfigurationDto.System.Int32": {
        "type": "object",
        "properties": {
          "document": {
            "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.ResponseDto.DocumentConfigDto"
          },
          "documentType": {
            "type": "string",
            "nullable": true,
            "example": "some text"
          },
          "editorConfig": {
            "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.ResponseDto.EditorConfigurationDto.System.Int32"
          },
          "editorType": {
            "$ref": "#/components/schemas/ASC.Web.Files.Services.DocumentService.EditorType"
          },
          "editorUrl": {
            "type": "string",
            "format": "uri",
            "nullable": true,
            "example": "some text"
          },
          "token": {
            "type": "string",
            "nullable": true,
            "example": "some text"
          },
          "type": {
            "type": "string",
            "nullable": true,
            "example": "some text"
          },
          "file": {
            "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.ResponseDto.FileDto.System.Int32"
          },
          "errorMessage": {
            "type": "string",
            "nullable": true,
            "example": "some text"
          },
          "startFilling": {
            "type": "boolean",
            "nullable": true,
            "example": true
          },
          "fillingSessionId": {
            "type": "string",
            "nullable": true,
            "example": "some text"
          }
        },
        "additionalProperties": false
      },
      "ASC.Files.Core.ApiModels.ResponseDto.ConversationResultDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "nullable": true,
            "example": "1739"
          },
          "Operation": {
            "$ref": "#/components/schemas/ASC.Web.Files.Services.WCFService.FileOperations.FileOperationType"
          },
          "progress": {
            "type": "integer",
            "format": "int32",
            "example": 1234
          },
          "source": {
            "type": "string",
            "nullable": true,
            "example": "some text"
          },
          "result": {
            "nullable": true,
            "example": {
              "int": 1234,
              "string": "some text",
              "boolean": true
            }
          },
          "error": {
            "type": "string",
            "nullable": true,
            "example": "some text"
          },
          "processed": {
            "type": "string",
            "nullable": true,
            "example": "some text"
          }
        },
        "additionalProperties": false
      },
      "ASC.Files.Core.ApiModels.ResponseDto.CustomerConfigDto": {
        "type": "object",
        "properties": {
          "address": {
            "type": "string",
            "nullable": true,
            "example": "some text"
          },
          "logo": {
            "type": "string",
            "nullable": true,
            "example": "some text"
          },
          "logoDark": {
            "type": "string",
            "nullable": true,
            "example": "some text"
          },
          "mail": {
            "type": "string",
            "nullable": true,
            "example": "some text"
          },
          "name": {
            "type": "string",
            "nullable": true,
            "example": "Randi Grant"
          },
          "www": {
            "type": "string",
            "nullable": true,
            "example": "some text"
          }
        },
        "additionalProperties": false
      },
      "ASC.Files.Core.ApiModels.ResponseDto.CustomizationConfigDto.System.Int32": {
        "type": "object",
        "properties": {
          "about": {
            "type": "boolean",
            "example": true
          },
          "customer": {
            "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.ResponseDto.CustomerConfigDto"
          },
          "anonymous": {
            "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.ResponseDto.AnonymousConfigDto"
          },
          "feedback": {
            "$ref": "#/components/schemas/ASC.Web.Files.Services.DocumentService.FeedbackConfig"
          },
          "forcesave": {
            "type": "boolean",
            "nullable": true,
            "example": true
          },
          "goback": {
            "$ref": "#/components/schemas/ASC.Web.Files.Services.DocumentService.GobackConfig"
          },
          "logo": {
            "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.ResponseDto.LogoConfigDto"
          },
          "mentionShare": {
            "type": "boolean",
            "example": true
          },
          "reviewDisplay": {
            "type": "string",
            "nullable": true,
            "example": "some text"
          },
          "submitForm": {
            "type": "boolean",
            "example": true
          }
        },
        "additionalProperties": false
      },
      "ASC.Files.Core.ApiModels.ResponseDto.DocServiceUrlDto": {
        "required": [
          "docServicePortalUrl",
          "docServiceUrl",
          "docServiceUrlApi",
          "docServiceUrlInternal",
          "isDefault",
          "version"
        ],
        "type": "object",
        "properties": {
          "version": {
            "type": "string",
            "nullable": true,
            "example": "some text"
          },
          "docServiceUrlApi": {
            "type": "string",
            "nullable": true,
            "example": "some text"
          },
          "docServiceUrl": {
            "type": "string",
            "nullable": true,
            "example": "some text"
          },
          "docServiceUrlInternal": {
            "type": "string",
            "nullable": true,
            "example": "some text"
          },
          "docServicePortalUrl": {
            "type": "string",
            "nullable": true,
            "example": "some text"
          },
          "isDefault": {
            "type": "boolean",
            "example": true
          }
        },
        "additionalProperties": false
      },
      "ASC.Files.Core.ApiModels.ResponseDto.DocumentBuilderTaskDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "nullable": true,
            "example": "7983"
          },
          "error": {
            "type": "string",
            "nullable": true,
            "example": "some text"
          },
          "percentage": {
            "type": "integer",
            "format": "int32",
            "example": 1234
          },
          "isCompleted": {
            "type": "boolean",
            "example": true
          },
          "status": {
            "$ref": "#/components/schemas/ASC.Common.Threading.DistributedTaskStatus"
          },
          "resultFileId": {
            "nullable": true,
            "example": {
              "int": 1234,
              "string": "some text",
              "boolean": true
            }
          },
          "resultFileName": {
            "type": "string",
            "nullable": true,
            "example": "some text"
          },
          "resultFileUrl": {
            "type": "string",
            "nullable": true,
            "example": "some text"
          }
        },
        "additionalProperties": false
      },
      "ASC.Files.Core.ApiModels.ResponseDto.DocumentConfigDto": {
        "type": "object",
        "properties": {
          "fileType": {
            "type": "string",
            "nullable": true,
            "example": "some text"
          },
          "info": {
            "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.ResponseDto.InfoConfigDto"
          },
          "isLinkedForMe": {
            "type": "boolean",
            "example": true
          },
          "key": {
            "type": "string",
            "nullable": true,
            "example": "some text"
          },
          "permissions": {
            "$ref": "#/components/schemas/ASC.Web.Files.Services.DocumentService.PermissionsConfig"
          },
          "sharedLinkParam": {
            "type": "string",
            "nullable": true,
            "example": "some text"
          },
          "sharedLinkKey": {
            "type": "string",
            "nullable": true,
            "example": "some text"
          },
          "referenceData": {
            "$ref": "#/components/schemas/ASC.Web.Files.Services.DocumentService.FileReferenceData"
          },
          "title": {
            "type": "string",
            "nullable": true,
            "example": "profound_cultivate"
          },
          "url": {
            "type": "string",
            "format": "uri",
            "nullable": true,
            "example": "some text"
          }
        },
        "additionalProperties": false
      },
      "ASC.Files.Core.ApiModels.ResponseDto.DraftLocation.System.Int32": {
        "type": "object",
        "properties": {
          "folderId": {
            "type": "integer",
            "format": "int32",
            "example": 5382
          },
          "folderTitle": {
            "type": "string",
            "nullable": true,
            "example": "some text"
          },
          "fileId": {
            "type": "integer",
            "format": "int32",
            "example": 8242
          },
          "fileTitle": {
            "type": "string",
            "nullable": true,
            "example": "some text"
          }
        },
        "additionalProperties": false
      },
      "ASC.Files.Core.ApiModels.ResponseDto.EditHistoryChangesWrapper": {
        "type": "object",
        "properties": {
          "user": {
            "$ref": "#/components/schemas/ASC.Files.Core.EditHistoryAuthor"
          },
          "created": {
            "$ref": "#/components/schemas/ASC.Api.Core.ApiDateTime"
          }
        },
        "additionalProperties": false
      },
      "ASC.Files.Core.ApiModels.ResponseDto.EditHistoryDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32",
            "example": 1234
          },
          "key": {
            "type": "string",
            "nullable": true,
            "example": "some text"
          },
          "version": {
            "type": "integer",
            "format": "int32",
            "example": 1234
          },
          "versionGroup": {
            "type": "integer",
            "format": "int32",
            "example": 1234
          },
          "user": {
            "$ref": "#/components/schemas/ASC.Files.Core.EditHistoryAuthor"
          },
          "created": {
            "$ref": "#/components/schemas/ASC.Api.Core.ApiDateTime"
          },
          "changesHistory": {
            "type": "string",
            "nullable": true,
            "example": "some text"
          },
          "changes": {
            "type": "array",
            "items": {},
            "nullable": true
          },
          "serverVersion": {
            "type": "string",
            "nullable": true,
            "example": "some text"
          }
        },
        "additionalProperties": false
      },
      "ASC.Files.Core.ApiModels.ResponseDto.EditorConfigurationDto.System.Int32": {
        "type": "object",
        "properties": {
          "callbackUrl": {
            "type": "string",
            "format": "uri",
            "nullable": true,
            "example": "some text"
          },
          "coEditing": {
            "$ref": "#/components/schemas/ASC.Web.Files.Services.DocumentService.CoEditingConfig"
          },
          "createUrl": {
            "type": "string",
            "nullable": true,
            "example": "some text"
          },
          "customization": {
            "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.ResponseDto.CustomizationConfigDto.System.Int32"
          },
          "embedded": {
            "$ref": "#/components/schemas/ASC.Web.Files.Services.DocumentService.EmbeddedConfig"
          },
          "encryptionKeys": {
            "$ref": "#/components/schemas/ASC.Web.Files.Services.DocumentService.EncryptionKeysConfig"
          },
          "lang": {
            "type": "string",
            "nullable": true,
            "example": "some text"
          },
          "mode": {
            "type": "string",
            "nullable": true,
            "example": "some text"
          },
          "modeWrite": {
            "type": "boolean",
            "example": true
          },
          "plugins": {
            "$ref": "#/components/schemas/ASC.Web.Files.Services.DocumentService.PluginsConfig"
          },
          "recent": {
            "type": "array",
            "items": {},
            "nullable": true
          },
          "templates": {
            "type": "array",
            "items": {},
            "nullable": true
          },
          "user": {
            "$ref": "#/components/schemas/ASC.Web.Files.Services.DocumentService.UserConfig"
          }
        },
        "additionalProperties": false
      },
      "ASC.Files.Core.ApiModels.ResponseDto.FileDto.System.Int32": {
        "type": "object",
        "properties": {
          "title": {
            "type": "string",
            "nullable": true,
            "example": "Some titile.txt/ Some title"
          },
          "access": {
            "$ref": "#/components/schemas/ASC.Files.Core.Security.FileShare"
          },
          "shared": {
            "type": "boolean",
            "example": false
          },
          "created": {
            "$ref": "#/components/schemas/ASC.Api.Core.ApiDateTime"
          },
          "createdBy": {
            "$ref": "#/components/schemas/ASC.Web.Api.Models.EmployeeDto"
          },
          "updated": {
            "$ref": "#/components/schemas/ASC.Api.Core.ApiDateTime"
          },
          "autoDelete": {
            "$ref": "#/components/schemas/ASC.Api.Core.ApiDateTime"
          },
          "rootFolderType": {
            "$ref": "#/components/schemas/ASC.Files.Core.FolderType"
          },
          "parentRoomType": {
            "$ref": "#/components/schemas/ASC.Files.Core.FolderType"
          },
          "updatedBy": {
            "$ref": "#/components/schemas/ASC.Web.Api.Models.EmployeeDto"
          },
          "providerItem": {
            "type": "boolean",
            "nullable": true,
            "example": true
          },
          "providerKey": {
            "type": "string",
            "nullable": true,
            "example": "some text"
          },
          "providerId": {
            "type": "integer",
            "format": "int32",
            "nullable": true,
            "example": 1234
          },
          "order": {
            "type": "string",
            "nullable": true,
            "example": "some text"
          },
          "id": {
            "type": "integer",
            "format": "int32",
            "example": 10
          },
          "rootFolderId": {
            "type": "integer",
            "format": "int32",
            "example": 1234
          },
          "originId": {
            "type": "integer",
            "format": "int32",
            "example": 1234
          },
          "originRoomId": {
            "type": "integer",
            "format": "int32",
            "example": 1234
          },
          "originTitle": {
            "type": "string",
            "nullable": true,
            "example": "some text"
          },
          "originRoomTitle": {
            "type": "string",
            "nullable": true,
            "example": "some text"
          },
          "canShare": {
            "type": "boolean",
            "example": true
          },
          "security": {
            "type": "object",
            "properties": {
              "Read": {
                "type": "boolean"
              },
              "Comment": {
                "type": "boolean"
              },
              "FillForms": {
                "type": "boolean"
              },
              "Review": {
                "type": "boolean"
              },
              "Create": {
                "type": "boolean"
              },
              "Edit": {
                "type": "boolean"
              },
              "Delete": {
                "type": "boolean"
              },
              "CustomFilter": {
                "type": "boolean"
              },
              "EditRoom": {
                "type": "boolean"
              },
              "Rename": {
                "type": "boolean"
              },
              "ReadHistory": {
                "type": "boolean"
              },
              "Lock": {
                "type": "boolean"
              },
              "EditHistory": {
                "type": "boolean"
              },
              "CopyTo": {
                "type": "boolean"
              },
              "Copy": {
                "type": "boolean"
              },
              "MoveTo": {
                "type": "boolean"
              },
              "Move": {
                "type": "boolean"
              },
              "Pin": {
                "type": "boolean"
              },
              "Mute": {
                "type": "boolean"
              },
              "EditAccess": {
                "type": "boolean"
              },
              "Duplicate": {
                "type": "boolean"
              },
              "SubmitToFormGallery": {
                "type": "boolean"
              },
              "Download": {
                "type": "boolean"
              },
              "Convert": {
                "type": "boolean"
              },
              "CopySharedLink": {
                "type": "boolean"
              },
              "ReadLinks": {
                "type": "boolean"
              },
              "Reconnect": {
                "type": "boolean"
              },
              "CreateRoomFrom": {
                "type": "boolean"
              },
              "EditForm": {
                "type": "boolean"
              },
              "CopyLink": {
                "type": "boolean"
              },
              "Embed": {
                "type": "boolean"
              }
            },
            "additionalProperties": false,
            "nullable": true,
            "example": [
              {
                "value": true
              }
            ]
          },
          "folderId": {
            "type": "integer",
            "format": "int32",
            "example": 5523
          },
          "version": {
            "type": "integer",
            "format": "int32",
            "example": 3
          },
          "versionGroup": {
            "type": "integer",
            "format": "int32",
            "example": 1
          },
          "contentLength": {
            "type": "string",
            "nullable": true,
            "example": "12345"
          },
          "pureContentLength": {
            "type": "integer",
            "format": "int64",
            "nullable": true,
            "example": 1234
          },
          "fileStatus": {
            "$ref": "#/components/schemas/ASC.Files.Core.FileStatus"
          },
          "mute": {
            "type": "boolean",
            "example": false
          },
          "viewUrl": {
            "type": "string",
            "format": "uri",
            "nullable": true,
            "example": "https://www.onlyoffice.com/viewfile?fileid=2221"
          },
          "webUrl": {
            "type": "string",
            "format": "uri",
            "nullable": true,
            "example": "some text"
          },
          "fileType": {
            "$ref": "#/components/schemas/ASC.Web.Core.Files.FileType"
          },
          "fileExst": {
            "type": "string",
            "nullable": true,
            "example": ".txt"
          },
          "comment": {
            "type": "string",
            "nullable": true,
            "example": "some text"
          },
          "encrypted": {
            "type": "boolean",
            "nullable": true,
            "example": false
          },
          "thumbnailUrl": {
            "type": "string",
            "format": "uri",
            "nullable": true,
            "example": "some text"
          },
          "thumbnailStatus": {
            "$ref": "#/components/schemas/ASC.Files.Core.Thumbnail"
          },
          "locked": {
            "type": "boolean",
            "nullable": true,
            "example": true
          },
          "lockedBy": {
            "type": "string",
            "nullable": true,
            "example": "some text"
          },
          "denyDownload": {
            "type": "boolean",
            "example": false
          },
          "hasDraft": {
            "type": "boolean",
            "nullable": true,
            "example": false
          },
          "isForm": {
            "type": "boolean",
            "nullable": true,
            "example": false
          },
          "startFilling": {
            "type": "boolean",
            "nullable": true,
            "example": false
          },
          "inProcessFolderId": {
            "type": "integer",
            "format": "int32",
            "nullable": true,
            "example": 1234
          },
          "inProcessFolderTitle": {
            "type": "string",
            "nullable": true,
            "example": "some text"
          },
          "draftLocation": {
            "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.ResponseDto.DraftLocation.System.Int32"
          },
          "denySharing": {
            "type": "boolean",
            "example": false
          },
          "viewAccessibility": {
            "type": "object",
            "properties": {
              "ImageView": {
                "type": "boolean"
              },
              "MediaView": {
                "type": "boolean"
              },
              "WebView": {
                "type": "boolean"
              },
              "WebEdit": {
                "type": "boolean"
              },
              "WebReview": {
                "type": "boolean"
              },
              "WebCustomFilterEditing": {
                "type": "boolean"
              },
              "WebRestrictedEditing": {
                "type": "boolean"
              },
              "WebComment": {
                "type": "boolean"
              },
              "CoAuhtoring": {
                "type": "boolean"
              },
              "CanConvert": {
                "type": "boolean"
              },
              "MustConvert": {
                "type": "boolean"
              }
            },
            "additionalProperties": false,
            "nullable": true,
            "example": [
              {
                "value": true
              }
            ]
          },
          "availableExternalRights": {
            "type": "object",
            "additionalProperties": {
              "type": "boolean",
              "nullable": true
            },
            "nullable": true,
            "example": [
              {
                "key": "some text",
                "value": true
              }
            ]
          },
          "requestToken": {
            "type": "string",
            "nullable": true,
            "example": "some text"
          },
          "lastOpened": {
            "$ref": "#/components/schemas/ASC.Api.Core.ApiDateTime"
          },
          "fileEntryType": {
            "$ref": "#/components/schemas/ASC.Files.Core.FileEntryType"
          }
        },
        "additionalProperties": false
      },
      "ASC.Files.Core.ApiModels.ResponseDto.FileEntryDto": {
        "type": "object",
        "properties": {
          "title": {
            "type": "string",
            "nullable": true,
            "example": "Some titile.txt/ Some title"
          },
          "access": {
            "$ref": "#/components/schemas/ASC.Files.Core.Security.FileShare"
          },
          "shared": {
            "type": "boolean",
            "example": false
          },
          "created": {
            "$ref": "#/components/schemas/ASC.Api.Core.ApiDateTime"
          },
          "createdBy": {
            "$ref": "#/components/schemas/ASC.Web.Api.Models.EmployeeDto"
          },
          "updated": {
            "$ref": "#/components/schemas/ASC.Api.Core.ApiDateTime"
          },
          "autoDelete": {
            "$ref": "#/components/schemas/ASC.Api.Core.ApiDateTime"
          },
          "rootFolderType": {
            "$ref": "#/components/schemas/ASC.Files.Core.FolderType"
          },
          "parentRoomType": {
            "$ref": "#/components/schemas/ASC.Files.Core.FolderType"
          },
          "updatedBy": {
            "$ref": "#/components/schemas/ASC.Web.Api.Models.EmployeeDto"
          },
          "providerItem": {
            "type": "boolean",
            "nullable": true,
            "example": true
          },
          "providerKey": {
            "type": "string",
            "nullable": true,
            "example": "some text"
          },
          "providerId": {
            "type": "integer",
            "format": "int32",
            "nullable": true,
            "example": 1234
          },
          "order": {
            "type": "string",
            "nullable": true,
            "example": "some text"
          },
          "fileEntryType": {
            "$ref": "#/components/schemas/ASC.Files.Core.FileEntryType"
          }
        },
        "additionalProperties": false
      },
      "ASC.Files.Core.ApiModels.ResponseDto.FileOperationDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "nullable": true,
            "example": "1952"
          },
          "Operation": {
            "$ref": "#/components/schemas/ASC.Web.Files.Services.WCFService.FileOperations.FileOperationType"
          },
          "progress": {
            "type": "integer",
            "format": "int32",
            "example": 100
          },
          "error": {
            "type": "string",
            "nullable": true,
            "example": ""
          },
          "processed": {
            "type": "string",
            "nullable": true,
            "example": "1"
          },
          "finished": {
            "type": "boolean",
            "example": true
          },
          "url": {
            "type": "string",
            "format": "uri",
            "nullable": true,
            "example": "some text"
          },
          "files": {
            "type": "array",
            "items": {},
            "nullable": true
          },
          "folders": {
            "type": "array",
            "items": {},
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ASC.Files.Core.ApiModels.ResponseDto.FileShareDto": {
        "type": "object",
        "properties": {
          "access": {
            "$ref": "#/components/schemas/ASC.Files.Core.Security.FileShare"
          },
          "sharedTo": {
            "nullable": true,
            "example": {
              "int": 1234,
              "string": "some text",
              "boolean": true
            }
          },
          "isLocked": {
            "type": "boolean",
            "example": false
          },
          "isOwner": {
            "type": "boolean",
            "example": true
          },
          "canEditAccess": {
            "type": "boolean",
            "example": true
          },
          "subjectType": {
            "$ref": "#/components/schemas/ASC.Files.Core.Security.SubjectType"
          }
        },
        "additionalProperties": false
      },
      "ASC.Files.Core.ApiModels.ResponseDto.FilesSettingsDto": {
        "type": "object",
        "properties": {
          "extsImagePreviewed": {
            "type": "array",
            "items": {},
            "nullable": true,
            "example": [
              "some text"
            ]
          },
          "extsMediaPreviewed": {
            "type": "array",
            "items": {},
            "nullable": true,
            "example": [
              "some text"
            ]
          },
          "extsWebPreviewed": {
            "type": "array",
            "items": {},
            "nullable": true,
            "example": [
              "some text"
            ]
          },
          "extsWebEdited": {
            "type": "array",
            "items": {},
            "nullable": true,
            "example": [
              "some text"
            ]
          },
          "extsWebEncrypt": {
            "type": "array",
            "items": {},
            "nullable": true,
            "example": [
              "some text"
            ]
          },
          "extsWebReviewed": {
            "type": "array",
            "items": {},
            "nullable": true,
            "example": [
              "some text"
            ]
          },
          "extsWebCustomFilterEditing": {
            "type": "array",
            "items": {},
            "nullable": true,
            "example": [
              "some text"
            ]
          },
          "extsWebRestrictedEditing": {
            "type": "array",
            "items": {},
            "nullable": true,
            "example": [
              "some text"
            ]
          },
          "extsWebCommented": {
            "type": "array",
            "items": {},
            "nullable": true,
            "example": [
              "some text"
            ]
          },
          "extsWebTemplate": {
            "type": "array",
            "items": {},
            "nullable": true,
            "example": [
              "some text"
            ]
          },
          "extsCoAuthoring": {
            "type": "array",
            "items": {},
            "nullable": true,
            "example": [
              "some text"
            ]
          },
          "extsMustConvert": {
            "type": "array",
            "items": {},
            "nullable": true,
            "example": [
              "some text"
            ]
          },
          "extsConvertible": {
            "type": "object",
            "additionalProperties": {
              "type": "array",
              "items": {
                "type": "string"
              },
              "nullable": true
            },
            "nullable": true,
            "example": [
              {
                "key": "some text",
                "value": [
                  "some text"
                ]
              }
            ]
          },
          "extsUploadable": {
            "type": "array",
            "items": {},
            "nullable": true,
            "example": [
              "some text"
            ]
          },
          "extsArchive": {
            "type": "array",
            "items": {},
            "nullable": true,
            "example": [
              "some text"
            ]
          },
          "extsVideo": {
            "type": "array",
            "items": {},
            "nullable": true,
            "example": [
              "some text"
            ]
          },
          "extsAudio": {
            "type": "array",
            "items": {},
            "nullable": true,
            "example": [
              "some text"
            ]
          },
          "extsImage": {
            "type": "array",
            "items": {},
            "nullable": true,
            "example": [
              "some text"
            ]
          },
          "extsSpreadsheet": {
            "type": "array",
            "items": {},
            "nullable": true,
            "example": [
              "some text"
            ]
          },
          "extsPresentation": {
            "type": "array",
            "items": {},
            "nullable": true,
            "example": [
              "some text"
            ]
          },
          "extsDocument": {
            "type": "array",
            "items": {},
            "nullable": true,
            "example": [
              "some text"
            ]
          },
          "internalFormats": {
            "type": "object",
            "properties": {
              "Unknown": {
                "type": "string"
              },
              "Archive": {
                "type": "string"
              },
              "Video": {
                "type": "string"
              },
              "Audio": {
                "type": "string"
              },
              "Image": {
                "type": "string"
              },
              "Spreadsheet": {
                "type": "string"
              },
              "Presentation": {
                "type": "string"
              },
              "Document": {
                "type": "string"
              },
              "Pdf": {
                "type": "string"
              }
            },
            "additionalProperties": false,
            "nullable": true,
            "example": [
              {
                "value": "some text"
              }
            ]
          },
          "masterFormExtension": {
            "type": "string",
            "nullable": true,
            "example": "some text"
          },
          "paramVersion": {
            "type": "string",
            "nullable": true,
            "example": "some text"
          },
          "paramOutType": {
            "type": "string",
            "nullable": true,
            "example": "some text"
          },
          "fileDownloadUrlString": {
            "type": "string",
            "format": "uri",
            "nullable": true,
            "example": "some text"
          },
          "fileWebViewerUrlString": {
            "type": "string",
            "nullable": true,
            "example": "some text"
          },
          "fileWebViewerExternalUrlString": {
            "type": "string",
            "format": "uri",
            "nullable": true,
            "example": "some text"
          },
          "fileWebEditorUrlString": {
            "type": "string",
            "nullable": true,
            "example": "some text"
          },
          "fileWebEditorExternalUrlString": {
            "type": "string",
            "format": "uri",
            "nullable": true,
            "example": "some text"
          },
          "fileRedirectPreviewUrlString": {
            "type": "string",
            "format": "uri",
            "nullable": true,
            "example": "some text"
          },
          "fileThumbnailUrlString": {
            "type": "string",
            "format": "uri",
            "nullable": true,
            "example": "some text"
          },
          "confirmDelete": {
            "type": "boolean",
            "example": true
          },
          "enableThirdParty": {
            "type": "boolean",
            "example": true
          },
          "externalShare": {
            "type": "boolean",
            "example": true
          },
          "externalShareSocialMedia": {
            "type": "boolean",
            "example": true
          },
          "storeOriginalFiles": {
            "type": "boolean",
            "example": true
          },
          "keepNewFileName": {
            "type": "boolean",
            "example": true
          },
          "convertNotify": {
            "type": "boolean",
            "example": true
          },
          "hideConfirmConvertSave": {
            "type": "boolean",
            "example": true
          },
          "hideConfirmConvertOpen": {
            "type": "boolean",
            "example": true
          },
          "defaultOrder": {
            "$ref": "#/components/schemas/ASC.Files.Core.OrderBy"
          },
          "forcesave": {
            "type": "boolean",
            "example": true
          },
          "storeForcesave": {
            "type": "boolean",
            "example": true
          },
          "recentSection": {
            "type": "boolean",
            "example": true
          },
          "favoritesSection": {
            "type": "boolean",
            "example": true
          },
          "templatesSection": {
            "type": "boolean",
            "example": true
          },
          "downloadTarGz": {
            "type": "boolean",
            "example": true
          },
          "automaticallyCleanUp": {
            "$ref": "#/components/schemas/ASC.Files.Core.AutoCleanUpData"
          },
          "canSearchByContent": {
            "type": "boolean",
            "example": true
          },
          "defaultSharingAccessRights": {
            "type": "array",
            "items": {
              "anyOf": [
                {
                  "enum": [
                    "None",
                    "ReadWrite",
                    "Read",
                    "Restrict",
                    "Varies",
                    "Review",
                    "Comment",
                    "FillForms",
                    "CustomFilter",
                    "RoomAdmin",
                    "Editing",
                    "PowerUser"
                  ],
                  "type": "string",
                  "description": "[None - None, ReadWrite - Read and write, Read - Read, Restrict - Restrict, Varies - Varies, Review - Review, Comment - Comment, FillForms - Fill forms, CustomFilter - Custom filter, RoomAdmin - Room admin, Editing - Editing, PowerUser - Power user]",
                  "example": "None"
                },
                {
                  "enum": [
                    0,
                    1,
                    2,
                    3,
                    4,
                    5,
                    6,
                    7,
                    8,
                    9,
                    10,
                    11
                  ],
                  "type": "integer",
                  "description": "[0 - None, 1 - Read and write, 2 - Read, 3 - Restrict, 4 - Varies, 5 - Review, 6 - Comment, 7 - Fill forms, 8 - Custom filter, 9 - Room admin, 10 - Editing, 11 - Power user]",
                  "example": 0
                }
              ]
            },
            "nullable": true
          },
          "maxUploadThreadCount": {
            "type": "integer",
            "format": "int32",
            "example": 1234
          },
          "chunkUploadSize": {
            "type": "integer",
            "format": "int64",
            "example": 1234
          },
          "openEditorInSameTab": {
            "type": "boolean",
            "example": true
          }
        },
        "additionalProperties": false
      },
      "ASC.Files.Core.ApiModels.ResponseDto.FilesStatisticsFolder": {
        "type": "object",
        "properties": {
          "title": {
            "type": "string",
            "nullable": true,
            "example": "avon_azure_transmitting"
          },
          "usedSpace": {
            "type": "integer",
            "format": "int64",
            "example": 1234
          }
        },
        "additionalProperties": false
      },
      "ASC.Files.Core.ApiModels.ResponseDto.FilesStatisticsResultDto": {
        "type": "object",
        "properties": {
          "myDocumentsUsedSpace": {
            "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.ResponseDto.FilesStatisticsFolder"
          },
          "trashUsedSpace": {
            "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.ResponseDto.FilesStatisticsFolder"
          },
          "archiveUsedSpace": {
            "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.ResponseDto.FilesStatisticsFolder"
          },
          "roomsUsedSpace": {
            "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.ResponseDto.FilesStatisticsFolder"
          }
        },
        "additionalProperties": false
      },
      "ASC.Files.Core.ApiModels.ResponseDto.FillingFormResultDto.System.Int32": {
        "type": "object",
        "properties": {
          "formNumber": {
            "type": "integer",
            "format": "int32",
            "example": 1234
          },
          "completedForm": {
            "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.ResponseDto.FileDto.System.Int32"
          },
          "originalForm": {
            "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.ResponseDto.FileDto.System.Int32"
          },
          "manager": {
            "$ref": "#/components/schemas/ASC.Web.Api.Models.EmployeeFullDto"
          },
          "roomId": {
            "type": "integer",
            "format": "int32",
            "example": 9308
          },
          "isRoomMember": {
            "type": "boolean",
            "example": true
          }
        },
        "additionalProperties": false
      },
      "ASC.Files.Core.ApiModels.ResponseDto.FolderContentDto.System.Int32": {
        "type": "object",
        "properties": {
          "files": {
            "type": "array",
            "items": {},
            "nullable": true
          },
          "folders": {
            "type": "array",
            "items": {},
            "nullable": true
          },
          "current": {
            "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.ResponseDto.FolderDto.System.Int32"
          },
          "pathParts": {
            "nullable": true,
            "example": "{key = \"Key\", path = \"//path//to//folder\"}"
          },
          "startIndex": {
            "type": "integer",
            "format": "int32",
            "example": 0
          },
          "count": {
            "type": "integer",
            "format": "int32",
            "example": 4
          },
          "total": {
            "type": "integer",
            "format": "int32",
            "example": 4
          },
          "new": {
            "type": "integer",
            "format": "int32",
            "example": 1234
          }
        },
        "additionalProperties": false
      },
      "ASC.Files.Core.ApiModels.ResponseDto.FolderDto.System.Int32": {
        "type": "object",
        "properties": {
          "title": {
            "type": "string",
            "nullable": true,
            "example": "Some titile.txt/ Some title"
          },
          "access": {
            "$ref": "#/components/schemas/ASC.Files.Core.Security.FileShare"
          },
          "shared": {
            "type": "boolean",
            "example": false
          },
          "created": {
            "$ref": "#/components/schemas/ASC.Api.Core.ApiDateTime"
          },
          "createdBy": {
            "$ref": "#/components/schemas/ASC.Web.Api.Models.EmployeeDto"
          },
          "updated": {
            "$ref": "#/components/schemas/ASC.Api.Core.ApiDateTime"
          },
          "autoDelete": {
            "$ref": "#/components/schemas/ASC.Api.Core.ApiDateTime"
          },
          "rootFolderType": {
            "$ref": "#/components/schemas/ASC.Files.Core.FolderType"
          },
          "parentRoomType": {
            "$ref": "#/components/schemas/ASC.Files.Core.FolderType"
          },
          "updatedBy": {
            "$ref": "#/components/schemas/ASC.Web.Api.Models.EmployeeDto"
          },
          "providerItem": {
            "type": "boolean",
            "nullable": true,
            "example": true
          },
          "providerKey": {
            "type": "string",
            "nullable": true,
            "example": "some text"
          },
          "providerId": {
            "type": "integer",
            "format": "int32",
            "nullable": true,
            "example": 1234
          },
          "order": {
            "type": "string",
            "nullable": true,
            "example": "some text"
          },
          "id": {
            "type": "integer",
            "format": "int32",
            "example": 10
          },
          "rootFolderId": {
            "type": "integer",
            "format": "int32",
            "example": 1234
          },
          "originId": {
            "type": "integer",
            "format": "int32",
            "example": 1234
          },
          "originRoomId": {
            "type": "integer",
            "format": "int32",
            "example": 1234
          },
          "originTitle": {
            "type": "string",
            "nullable": true,
            "example": "some text"
          },
          "originRoomTitle": {
            "type": "string",
            "nullable": true,
            "example": "some text"
          },
          "canShare": {
            "type": "boolean",
            "example": true
          },
          "security": {
            "type": "object",
            "properties": {
              "Read": {
                "type": "boolean"
              },
              "Comment": {
                "type": "boolean"
              },
              "FillForms": {
                "type": "boolean"
              },
              "Review": {
                "type": "boolean"
              },
              "Create": {
                "type": "boolean"
              },
              "Edit": {
                "type": "boolean"
              },
              "Delete": {
                "type": "boolean"
              },
              "CustomFilter": {
                "type": "boolean"
              },
              "EditRoom": {
                "type": "boolean"
              },
              "Rename": {
                "type": "boolean"
              },
              "ReadHistory": {
                "type": "boolean"
              },
              "Lock": {
                "type": "boolean"
              },
              "EditHistory": {
                "type": "boolean"
              },
              "CopyTo": {
                "type": "boolean"
              },
              "Copy": {
                "type": "boolean"
              },
              "MoveTo": {
                "type": "boolean"
              },
              "Move": {
                "type": "boolean"
              },
              "Pin": {
                "type": "boolean"
              },
              "Mute": {
                "type": "boolean"
              },
              "EditAccess": {
                "type": "boolean"
              },
              "Duplicate": {
                "type": "boolean"
              },
              "SubmitToFormGallery": {
                "type": "boolean"
              },
              "Download": {
                "type": "boolean"
              },
              "Convert": {
                "type": "boolean"
              },
              "CopySharedLink": {
                "type": "boolean"
              },
              "ReadLinks": {
                "type": "boolean"
              },
              "Reconnect": {
                "type": "boolean"
              },
              "CreateRoomFrom": {
                "type": "boolean"
              },
              "EditForm": {
                "type": "boolean"
              },
              "CopyLink": {
                "type": "boolean"
              },
              "Embed": {
                "type": "boolean"
              }
            },
            "additionalProperties": false,
            "nullable": true,
            "example": [
              {
                "value": true
              }
            ]
          },
          "parentId": {
            "type": "integer",
            "format": "int32",
            "example": 10
          },
          "filesCount": {
            "type": "integer",
            "format": "int32",
            "example": 5
          },
          "foldersCount": {
            "type": "integer",
            "format": "int32",
            "example": 7
          },
          "isShareable": {
            "type": "boolean",
            "nullable": true,
            "example": true
          },
          "isFavorite": {
            "type": "boolean",
            "nullable": true,
            "example": true
          },
          "new": {
            "type": "integer",
            "format": "int32",
            "example": 1234
          },
          "mute": {
            "type": "boolean",
            "example": true
          },
          "tags": {
            "type": "array",
            "items": {},
            "nullable": true,
            "example": [
              "some text"
            ]
          },
          "logo": {
            "$ref": "#/components/schemas/ASC.Files.Core.VirtualRooms.Logo"
          },
          "pinned": {
            "type": "boolean",
            "example": true
          },
          "roomType": {
            "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.RequestDto.RoomType"
          },
          "private": {
            "type": "boolean",
            "example": true
          },
          "type": {
            "$ref": "#/components/schemas/ASC.Files.Core.FolderType"
          },
          "inRoom": {
            "type": "boolean",
            "nullable": true,
            "example": true
          },
          "quotaLimit": {
            "type": "integer",
            "format": "int64",
            "nullable": true,
            "example": 1234
          },
          "isCustomQuota": {
            "type": "boolean",
            "nullable": true,
            "example": true
          },
          "usedSpace": {
            "type": "integer",
            "format": "int64",
            "nullable": true,
            "example": 1234
          },
          "fileEntryType": {
            "$ref": "#/components/schemas/ASC.Files.Core.FileEntryType"
          }
        },
        "additionalProperties": false
      },
      "ASC.Files.Core.ApiModels.ResponseDto.FolderDto.System.String": {
        "type": "object",
        "properties": {
          "title": {
            "type": "string",
            "nullable": true,
            "example": "Some titile.txt/ Some title"
          },
          "access": {
            "$ref": "#/components/schemas/ASC.Files.Core.Security.FileShare"
          },
          "shared": {
            "type": "boolean",
            "example": false
          },
          "created": {
            "$ref": "#/components/schemas/ASC.Api.Core.ApiDateTime"
          },
          "createdBy": {
            "$ref": "#/components/schemas/ASC.Web.Api.Models.EmployeeDto"
          },
          "updated": {
            "$ref": "#/components/schemas/ASC.Api.Core.ApiDateTime"
          },
          "autoDelete": {
            "$ref": "#/components/schemas/ASC.Api.Core.ApiDateTime"
          },
          "rootFolderType": {
            "$ref": "#/components/schemas/ASC.Files.Core.FolderType"
          },
          "parentRoomType": {
            "$ref": "#/components/schemas/ASC.Files.Core.FolderType"
          },
          "updatedBy": {
            "$ref": "#/components/schemas/ASC.Web.Api.Models.EmployeeDto"
          },
          "providerItem": {
            "type": "boolean",
            "nullable": true,
            "example": true
          },
          "providerKey": {
            "type": "string",
            "nullable": true,
            "example": "some text"
          },
          "providerId": {
            "type": "integer",
            "format": "int32",
            "nullable": true,
            "example": 1234
          },
          "order": {
            "type": "string",
            "nullable": true,
            "example": "some text"
          },
          "id": {
            "type": "string",
            "nullable": true,
            "example": 10
          },
          "rootFolderId": {
            "type": "string",
            "nullable": true,
            "example": "some text"
          },
          "originId": {
            "type": "string",
            "nullable": true,
            "example": "some text"
          },
          "originRoomId": {
            "type": "string",
            "nullable": true,
            "example": "some text"
          },
          "originTitle": {
            "type": "string",
            "nullable": true,
            "example": "some text"
          },
          "originRoomTitle": {
            "type": "string",
            "nullable": true,
            "example": "some text"
          },
          "canShare": {
            "type": "boolean",
            "example": true
          },
          "security": {
            "type": "object",
            "properties": {
              "Read": {
                "type": "boolean"
              },
              "Comment": {
                "type": "boolean"
              },
              "FillForms": {
                "type": "boolean"
              },
              "Review": {
                "type": "boolean"
              },
              "Create": {
                "type": "boolean"
              },
              "Edit": {
                "type": "boolean"
              },
              "Delete": {
                "type": "boolean"
              },
              "CustomFilter": {
                "type": "boolean"
              },
              "EditRoom": {
                "type": "boolean"
              },
              "Rename": {
                "type": "boolean"
              },
              "ReadHistory": {
                "type": "boolean"
              },
              "Lock": {
                "type": "boolean"
              },
              "EditHistory": {
                "type": "boolean"
              },
              "CopyTo": {
                "type": "boolean"
              },
              "Copy": {
                "type": "boolean"
              },
              "MoveTo": {
                "type": "boolean"
              },
              "Move": {
                "type": "boolean"
              },
              "Pin": {
                "type": "boolean"
              },
              "Mute": {
                "type": "boolean"
              },
              "EditAccess": {
                "type": "boolean"
              },
              "Duplicate": {
                "type": "boolean"
              },
              "SubmitToFormGallery": {
                "type": "boolean"
              },
              "Download": {
                "type": "boolean"
              },
              "Convert": {
                "type": "boolean"
              },
              "CopySharedLink": {
                "type": "boolean"
              },
              "ReadLinks": {
                "type": "boolean"
              },
              "Reconnect": {
                "type": "boolean"
              },
              "CreateRoomFrom": {
                "type": "boolean"
              },
              "EditForm": {
                "type": "boolean"
              },
              "CopyLink": {
                "type": "boolean"
              },
              "Embed": {
                "type": "boolean"
              }
            },
            "additionalProperties": false,
            "nullable": true,
            "example": [
              {
                "value": true
              }
            ]
          },
          "parentId": {
            "type": "string",
            "nullable": true,
            "example": 10
          },
          "filesCount": {
            "type": "integer",
            "format": "int32",
            "example": 5
          },
          "foldersCount": {
            "type": "integer",
            "format": "int32",
            "example": 7
          },
          "isShareable": {
            "type": "boolean",
            "nullable": true,
            "example": true
          },
          "isFavorite": {
            "type": "boolean",
            "nullable": true,
            "example": true
          },
          "new": {
            "type": "integer",
            "format": "int32",
            "example": 1234
          },
          "mute": {
            "type": "boolean",
            "example": true
          },
          "tags": {
            "type": "array",
            "items": {},
            "nullable": true,
            "example": [
              "some text"
            ]
          },
          "logo": {
            "$ref": "#/components/schemas/ASC.Files.Core.VirtualRooms.Logo"
          },
          "pinned": {
            "type": "boolean",
            "example": true
          },
          "roomType": {
            "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.RequestDto.RoomType"
          },
          "private": {
            "type": "boolean",
            "example": true
          },
          "type": {
            "$ref": "#/components/schemas/ASC.Files.Core.FolderType"
          },
          "inRoom": {
            "type": "boolean",
            "nullable": true,
            "example": true
          },
          "quotaLimit": {
            "type": "integer",
            "format": "int64",
            "nullable": true,
            "example": 1234
          },
          "isCustomQuota": {
            "type": "boolean",
            "nullable": true,
            "example": true
          },
          "usedSpace": {
            "type": "integer",
            "format": "int64",
            "nullable": true,
            "example": 1234
          },
          "fileEntryType": {
            "$ref": "#/components/schemas/ASC.Files.Core.FileEntryType"
          }
        },
        "additionalProperties": false
      },
      "ASC.Files.Core.ApiModels.ResponseDto.HistoryDto": {
        "type": "object",
        "properties": {
          "action": {
            "$ref": "#/components/schemas/ASC.Files.Core.Core.Entries.HistoryAction"
          },
          "initiator": {
            "$ref": "#/components/schemas/ASC.Web.Api.Models.EmployeeDto"
          },
          "date": {
            "$ref": "#/components/schemas/ASC.Api.Core.ApiDateTime"
          },
          "data": {
            "$ref": "#/components/schemas/ASC.Files.Core.Core.Entries.HistoryData"
          },
          "related": {
            "type": "array",
            "items": {},
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ASC.Files.Core.ApiModels.ResponseDto.InfoConfigDto": {
        "type": "object",
        "properties": {
          "favorite": {
            "type": "boolean",
            "nullable": true,
            "example": true
          },
          "folder": {
            "type": "string",
            "nullable": true,
            "example": "some text"
          },
          "owner": {
            "type": "string",
            "nullable": true,
            "example": "some text"
          },
          "sharingSettings": {
            "type": "array",
            "items": {},
            "nullable": true
          },
          "type": {
            "$ref": "#/components/schemas/ASC.Web.Files.Services.DocumentService.EditorType"
          },
          "uploaded": {
            "type": "string",
            "nullable": true,
            "example": "some text"
          }
        },
        "additionalProperties": false
      },
      "ASC.Files.Core.ApiModels.ResponseDto.LinkType": {
        "oneOf": [
          {
            "enum": [
              "Invitation",
              "External"
            ],
            "type": "string",
            "description": "[Invitation - Invitation, External - External]",
            "example": "Invitation"
          },
          {
            "enum": [
              0,
              1
            ],
            "type": "integer",
            "description": "[0 - Invitation, 1 - External]",
            "example": 0
          }
        ]
      },
      "ASC.Files.Core.ApiModels.ResponseDto.LogoConfigDto": {
        "type": "object",
        "properties": {
          "image": {
            "type": "string",
            "nullable": true,
            "example": "some text"
          },
          "imageDark": {
            "type": "string",
            "nullable": true,
            "example": "some text"
          },
          "imageEmbedded": {
            "type": "string",
            "nullable": true,
            "example": "some text"
          },
          "url": {
            "type": "string",
            "nullable": true,
            "example": "some text"
          },
          "visible": {
            "type": "boolean",
            "example": true
          }
        },
        "additionalProperties": false
      },
      "ASC.Files.Core.ApiModels.ResponseDto.ProviderDto": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "nullable": true,
            "example": "Bridie Reichert"
          },
          "key": {
            "type": "string",
            "nullable": true,
            "example": "some text"
          },
          "connected": {
            "type": "boolean",
            "example": true
          },
          "oauth": {
            "type": "boolean",
            "example": true
          },
          "redirectUrl": {
            "type": "string",
            "nullable": true,
            "example": "some text"
          },
          "requiredConnectionUrl": {
            "type": "boolean",
            "example": true
          },
          "clientId": {
            "type": "string",
            "nullable": true,
            "example": "some text"
          }
        },
        "additionalProperties": false
      },
      "ASC.Files.Core.ApiModels.ResponseDto.RoomSecurityDto": {
        "type": "object",
        "properties": {
          "members": {
            "type": "array",
            "items": {},
            "nullable": true,
            "example": [
              {
                "int": 1234,
                "string": "some text",
                "boolean": true
              }
            ]
          },
          "warning": {
            "type": "string",
            "nullable": true,
            "example": "some text"
          }
        },
        "additionalProperties": false
      },
      "ASC.Files.Core.ApiModels.ResponseDto.UploadResultDto": {
        "type": "object",
        "properties": {
          "success": {
            "type": "boolean",
            "example": true
          },
          "data": {
            "nullable": true,
            "example": {
              "int": 1234,
              "string": "some text",
              "boolean": true
            }
          },
          "message": {
            "type": "string",
            "nullable": true,
            "example": "some text"
          }
        },
        "additionalProperties": false
      },
      "ASC.Files.Core.AuthData": {
        "type": "object",
        "properties": {
          "login": {
            "type": "string",
            "nullable": true,
            "example": "some text"
          },
          "password": {
            "type": "string",
            "nullable": true,
            "example": "G9smV9syX4"
          },
          "rawToken": {
            "type": "string",
            "nullable": true,
            "example": "some text"
          },
          "url": {
            "type": "string",
            "format": "uri",
            "nullable": true,
            "example": "some text"
          },
          "provider": {
            "type": "string",
            "nullable": true,
            "example": "some text"
          },
          "token": {
            "$ref": "#/components/schemas/ASC.FederatedLogin.OAuth20Token"
          }
        },
        "additionalProperties": false
      },
      "ASC.Files.Core.AutoCleanUpData": {
        "type": "object",
        "properties": {
          "isAutoCleanUp": {
            "type": "boolean",
            "example": true
          },
          "gap": {
            "$ref": "#/components/schemas/ASC.Files.Core.DateToAutoCleanUp"
          }
        },
        "additionalProperties": false
      },
      "ASC.Files.Core.Core.ApplyFilterOption": {
        "oneOf": [
          {
            "enum": [
              "All",
              "Files",
              "Folders"
            ],
            "type": "string",
            "description": "[All - All, Files - Files, Folders - Folders]",
            "example": "All"
          },
          {
            "enum": [
              0,
              1,
              2
            ],
            "type": "integer",
            "description": "[0 - All, 1 - Files, 2 - Folders]",
            "example": 0
          }
        ]
      },
      "ASC.Files.Core.Core.Entries.HistoryAction": {
        "type": "object",
        "properties": {
          "id": {
            "$ref": "#/components/schemas/ASC.MessagingSystem.Core.MessageAction"
          },
          "key": {
            "type": "string",
            "nullable": true,
            "example": "some text"
          }
        },
        "additionalProperties": false
      },
      "ASC.Files.Core.Core.Entries.HistoryData": {
        "type": "object",
        "properties": {
          "initiatorName": {
            "type": "string",
            "nullable": true,
            "readOnly": true,
            "example": "some text"
          }
        },
        "additionalProperties": false
      },
      "ASC.Files.Core.Core.StorageFilter": {
        "oneOf": [
          {
            "enum": [
              "None",
              "Internal",
              "ThirdParty"
            ],
            "type": "string",
            "description": "[None - None, Internal - Internal, ThirdParty - ThirdParty]",
            "example": "None"
          },
          {
            "enum": [
              0,
              1,
              2
            ],
            "type": "integer",
            "description": "[0 - None, 1 - Internal, 2 - ThirdParty]",
            "example": 0
          }
        ]
      },
      "ASC.Files.Core.Core.SubjectFilter": {
        "oneOf": [
          {
            "enum": [
              "Owner",
              "Member"
            ],
            "type": "string",
            "description": "[Owner - Owner, Member - Member]",
            "example": "Owner"
          },
          {
            "enum": [
              0,
              1
            ],
            "type": "integer",
            "description": "[0 - Owner, 1 - Member]",
            "example": 0
          }
        ]
      },
      "ASC.Files.Core.DateToAutoCleanUp": {
        "oneOf": [
          {
            "enum": [
              "OneWeek",
              "TwoWeeks",
              "OneMonth",
              "ThirtyDays",
              "TwoMonths",
              "ThreeMonths"
            ],
            "type": "string",
            "description": "[OneWeek - One week, TwoWeeks - Two weeks, OneMonth - One month, ThirtyDays - Thirty days, TwoMonths - Two months, ThreeMonths - Three months]",
            "example": "OneWeek"
          },
          {
            "enum": [
              1,
              2,
              3,
              4,
              5,
              6
            ],
            "type": "integer",
            "description": "[1 - One week, 2 - Two weeks, 3 - One month, 4 - Thirty days, 5 - Two months, 6 - Three months]",
            "example": 1
          }
        ]
      },
      "ASC.Files.Core.EditHistoryAuthor": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "nullable": true,
            "example": "7028"
          },
          "name": {
            "type": "string",
            "nullable": true,
            "example": "Adan Emmerich"
          }
        },
        "additionalProperties": false
      },
      "ASC.Files.Core.EditHistoryDataDto": {
        "type": "object",
        "properties": {
          "changesUrl": {
            "type": "string",
            "format": "uri",
            "nullable": true,
            "example": "some text"
          },
          "key": {
            "type": "string",
            "nullable": true,
            "example": "some text"
          },
          "previous": {
            "$ref": "#/components/schemas/ASC.Files.Core.EditHistoryUrl"
          },
          "token": {
            "type": "string",
            "nullable": true,
            "example": "some text"
          },
          "url": {
            "type": "string",
            "format": "uri",
            "nullable": true,
            "example": "some text"
          },
          "version": {
            "type": "integer",
            "format": "int32",
            "example": 1234
          },
          "fileType": {
            "type": "string",
            "nullable": true,
            "example": "some text"
          }
        },
        "additionalProperties": false
      },
      "ASC.Files.Core.EditHistoryUrl": {
        "type": "object",
        "properties": {
          "key": {
            "type": "string",
            "nullable": true,
            "example": "some text"
          },
          "url": {
            "type": "string",
            "format": "uri",
            "nullable": true,
            "example": "some text"
          },
          "fileType": {
            "type": "string",
            "nullable": true,
            "example": "some text"
          }
        },
        "additionalProperties": false
      },
      "ASC.Files.Core.FileEntryType": {
        "enum": [
          1,
          2
        ],
        "type": "integer",
        "format": "int32"
      },
      "ASC.Files.Core.FileStatus": {
        "oneOf": [
          {
            "enum": [
              "None",
              "IsEditing",
              "IsNew",
              "IsConverting",
              "IsOriginal",
              "IsEditingAlone",
              "IsFavorite",
              "IsTemplate",
              "IsFillFormDraft"
            ],
            "type": "string",
            "description": "[None - None, IsEditing - Is editing, IsNew - Is new, IsConverting - Is converting, IsOriginal - Is original, IsEditingAlone - Is editing alone, IsFavorite - Is favorite, IsTemplate - Is template, IsFillFormDraft - Is fill form draft]",
            "example": "None"
          },
          {
            "enum": [
              0,
              1,
              2,
              4,
              8,
              16,
              32,
              64,
              128
            ],
            "type": "integer",
            "description": "[0 - None, 1 - Is editing, 2 - Is new, 4 - Is converting, 8 - Is original, 16 - Is editing alone, 32 - Is favorite, 64 - Is template, 128 - Is fill form draft]",
            "example": 0
          }
        ]
      },
      "ASC.Files.Core.FilterType": {
        "oneOf": [
          {
            "enum": [
              "None",
              "FilesOnly",
              "FoldersOnly",
              "DocumentsOnly",
              "PresentationsOnly",
              "SpreadsheetsOnly",
              "ImagesOnly",
              "ByUser",
              "ByDepartment",
              "ArchiveOnly",
              "ByExtension",
              "MediaOnly",
              "FillingFormsRooms",
              "EditingRooms",
              "ReviewRooms",
              "ReadOnlyRooms",
              "CustomRooms",
              "PublicRooms",
              "FormRooms",
              "Pdf",
              "PdfForm"
            ],
            "type": "string",
            "description": "[None - None, FilesOnly - Files  only, FoldersOnly - Folders only, DocumentsOnly - Documents only, PresentationsOnly - Presentations only, SpreadsheetsOnly - Spreadsheets only, ImagesOnly - Images only, ByUser - By user, ByDepartment - By department, ArchiveOnly - Archive only, ByExtension - By extension, MediaOnly - Media only, FillingFormsRooms - Filling forms rooms, EditingRooms - Editing rooms, ReviewRooms - Review rooms, ReadOnlyRooms - Read only rooms, CustomRooms - Custom rooms, PublicRooms - Public rooms, FormRooms - Form rooms, Pdf - Pdf, PdfForm - Pdf form]",
            "example": "None"
          },
          {
            "enum": [
              0,
              1,
              2,
              3,
              4,
              5,
              7,
              8,
              9,
              10,
              11,
              12,
              13,
              14,
              15,
              16,
              17,
              20,
              21,
              22,
              23
            ],
            "type": "integer",
            "description": "[0 - None, 1 - Files  only, 2 - Folders only, 3 - Documents only, 4 - Presentations only, 5 - Spreadsheets only, 7 - Images only, 8 - By user, 9 - By department, 10 - Archive only, 11 - By extension, 12 - Media only, 13 - Filling forms rooms, 14 - Editing rooms, 15 - Review rooms, 16 - Read only rooms, 17 - Custom rooms, 20 - Public rooms, 21 - Form rooms, 22 - Pdf, 23 - Pdf form]",
            "example": 0
          }
        ]
      },
      "ASC.Files.Core.FolderType": {
        "oneOf": [
          {
            "enum": [
              "DEFAULT",
              "COMMON",
              "BUNCH",
              "TRASH",
              "USER",
              "SHARE",
              "Projects",
              "Favorites",
              "Recent",
              "Templates",
              "Privacy",
              "VirtualRooms",
              "FillingFormsRoom",
              "EditingRoom",
              "CustomRoom",
              "Archive",
              "ThirdpartyBackup",
              "PublicRoom",
              "ReadyFormFolder",
              "InProcessFormFolder",
              "FormFillingFolderDone",
              "FormFillingFolderInProgress"
            ],
            "type": "string",
            "description": "[DEFAULT - Default, COMMON - Coomon, BUNCH - Bunch, TRASH - Trash, USER - User, SHARE - Share, Projects - Projects, Favorites - Favourites, Recent - Recent, Templates - Templates, Privacy - Privacy, VirtualRooms - Virtual rooms, FillingFormsRoom - Filling forms room, EditingRoom - Editing room, CustomRoom - Custom room, Archive - Archive, ThirdpartyBackup - Thirdparty backup, PublicRoom - Public room, ReadyFormFolder - Ready form folder, InProcessFormFolder - In process form folder, FormFillingFolderDone - Form filling folder done, FormFillingFolderInProgress - Form filling folder in progress]",
            "example": "DEFAULT"
          },
          {
            "enum": [
              0,
              1,
              2,
              3,
              5,
              6,
              8,
              10,
              11,
              12,
              13,
              14,
              15,
              16,
              19,
              20,
              21,
              22,
              25,
              26,
              27,
              28
            ],
            "type": "integer",
            "description": "[0 - Default, 1 - Coomon, 2 - Bunch, 3 - Trash, 5 - User, 6 - Share, 8 - Projects, 10 - Favourites, 11 - Recent, 12 - Templates, 13 - Privacy, 14 - Virtual rooms, 15 - Filling forms room, 16 - Editing room, 19 - Custom room, 20 - Archive, 21 - Thirdparty backup, 22 - Public room, 25 - Ready form folder, 26 - In process form folder, 27 - Form filling folder done, 28 - Form filling folder in progress]",
            "example": 0
          }
        ]
      },
      "ASC.Files.Core.Helpers.DocumentService_FileLink": {
        "type": "object",
        "properties": {
          "filetype": {
            "type": "string",
            "nullable": true,
            "example": "some text"
          },
          "token": {
            "type": "string",
            "nullable": true,
            "example": "some text"
          },
          "url": {
            "type": "string",
            "format": "uri",
            "nullable": true,
            "example": "some text"
          }
        },
        "additionalProperties": false
      },
      "ASC.Files.Core.OrderBy": {
        "type": "object",
        "properties": {
          "is_asc": {
            "type": "boolean",
            "example": true
          },
          "property": {
            "$ref": "#/components/schemas/ASC.Files.Core.SortedByType"
          }
        },
        "additionalProperties": false
      },
      "ASC.Files.Core.ProviderFilter": {
        "oneOf": [
          {
            "enum": [
              "None",
              "Box",
              "DropBox",
              "GoogleDrive",
              "kDrive",
              "OneDrive",
              "SharePoint",
              "WebDav",
              "Yandex",
              "Storage"
            ],
            "type": "string",
            "description": "[None - None, Box - Box, DropBox - DropBox, GoogleDrive - GoogleDrive, kDrive - kDrive, OneDrive - OneDrive, SharePoint - SharePoint, WebDav - WebDav, Yandex - Yandex, Storage - Storage]",
            "example": "None"
          },
          {
            "enum": [
              0,
              1,
              2,
              3,
              4,
              5,
              6,
              7,
              8,
              9
            ],
            "type": "integer",
            "description": "[0 - None, 1 - Box, 2 - DropBox, 3 - GoogleDrive, 4 - kDrive, 5 - OneDrive, 6 - SharePoint, 7 - WebDav, 8 - Yandex, 9 - Storage]",
            "example": 0
          }
        ]
      },
      "ASC.Files.Core.Security.FileShare": {
        "oneOf": [
          {
            "enum": [
              "None",
              "ReadWrite",
              "Read",
              "Restrict",
              "Varies",
              "Review",
              "Comment",
              "FillForms",
              "CustomFilter",
              "RoomAdmin",
              "Editing",
              "PowerUser"
            ],
            "type": "string",
            "description": "[None - None, ReadWrite - Read and write, Read - Read, Restrict - Restrict, Varies - Varies, Review - Review, Comment - Comment, FillForms - Fill forms, CustomFilter - Custom filter, RoomAdmin - Room admin, Editing - Editing, PowerUser - Power user]",
            "example": "None"
          },
          {
            "enum": [
              0,
              1,
              2,
              3,
              4,
              5,
              6,
              7,
              8,
              9,
              10,
              11
            ],
            "type": "integer",
            "description": "[0 - None, 1 - Read and write, 2 - Read, 3 - Restrict, 4 - Varies, 5 - Review, 6 - Comment, 7 - Fill forms, 8 - Custom filter, 9 - Room admin, 10 - Editing, 11 - Power user]",
            "example": 0
          }
        ]
      },
      "ASC.Files.Core.Security.ShareFilterType": {
        "oneOf": [
          {
            "enum": [
              "UserOrGroup",
              "InvitationLink",
              "ExternalLink",
              "AdditionalExternalLink",
              "PrimaryExternalLink",
              "User",
              "Group"
            ],
            "type": "string",
            "description": "[UserOrGroup - User or group, InvitationLink - Invitation link, ExternalLink - External link, AdditionalExternalLink - Additional external link, PrimaryExternalLink - Primary external link, User - User, Group - Group]",
            "example": "UserOrGroup"
          },
          {
            "enum": [
              0,
              1,
              2,
              4,
              8,
              16,
              32
            ],
            "type": "integer",
            "description": "[0 - User or group, 1 - Invitation link, 2 - External link, 4 - Additional external link, 8 - Primary external link, 16 - User, 32 - Group]",
            "example": 0
          }
        ]
      },
      "ASC.Files.Core.Security.SubjectType": {
        "oneOf": [
          {
            "enum": [
              "User",
              "ExternalLink",
              "Group",
              "InvitationLink",
              "PrimaryExternalLink"
            ],
            "type": "string",
            "description": "[User - User, ExternalLink - External link, Group - Group, InvitationLink - Invitation link, PrimaryExternalLink - Primary external link]",
            "example": "User"
          },
          {
            "enum": [
              0,
              1,
              2,
              3,
              4
            ],
            "type": "integer",
            "description": "[0 - User, 1 - External link, 2 - Group, 3 - Invitation link, 4 - Primary external link]",
            "example": 0
          }
        ]
      },
      "ASC.Files.Core.SortedByType": {
        "oneOf": [
          {
            "enum": [
              "DateAndTime",
              "AZ",
              "Size",
              "Author",
              "Type",
              "New",
              "DateAndTimeCreation",
              "RoomType",
              "Tags",
              "Room",
              "CustomOrder",
              "LastOpened",
              "UsedSpace"
            ],
            "type": "string",
            "description": "[DateAndTime - Date and time, AZ - AZ, Size - Size, Author - Author, Type - Type, New - New, DateAndTimeCreation - Date and time creation, RoomType - Room type, Tags - Tags, Room - Room, CustomOrder - Custom order, LastOpened - Last opened, UsedSpace - Used space]",
            "example": "DateAndTime"
          },
          {
            "enum": [
              0,
              1,
              2,
              3,
              4,
              5,
              6,
              7,
              8,
              9,
              10,
              11,
              12
            ],
            "type": "integer",
            "description": "[0 - Date and time, 1 - AZ, 2 - Size, 3 - Author, 4 - Type, 5 - New, 6 - Date and time creation, 7 - Room type, 8 - Tags, 9 - Room, 10 - Custom order, 11 - Last opened, 12 - Used space]",
            "example": 0
          }
        ]
      },
      "ASC.Files.Core.Thumbnail": {
        "oneOf": [
          {
            "enum": [
              "Waiting",
              "Created",
              "Error",
              "NotRequired",
              "Creating"
            ],
            "type": "string",
            "description": "[Waiting - Waiting, Created - Created, Error - Error, NotRequired - Not required, Creating - Creating]",
            "example": "Waiting"
          },
          {
            "enum": [
              0,
              1,
              2,
              3,
              4
            ],
            "type": "integer",
            "description": "[0 - Waiting, 1 - Created, 2 - Error, 3 - Not required, 4 - Creating]",
            "example": 0
          }
        ]
      },
      "ASC.Files.Core.VirtualRooms.Logo": {
        "type": "object",
        "properties": {
          "original": {
            "type": "string",
            "nullable": true,
            "example": "some text"
          },
          "large": {
            "type": "string",
            "nullable": true,
            "example": "some text"
          },
          "medium": {
            "type": "string",
            "nullable": true,
            "example": "some text"
          },
          "small": {
            "type": "string",
            "nullable": true,
            "example": "some text"
          },
          "color": {
            "type": "string",
            "nullable": true,
            "example": "some text"
          }
        },
        "additionalProperties": false
      },
      "ASC.Files.Core.VirtualRooms.SearchArea": {
        "oneOf": [
          {
            "enum": [
              "Active",
              "Archive",
              "Any",
              "RecentByLinks"
            ],
            "type": "string",
            "description": "[Active - Active, Archive - Archive, Any - Any, RecentByLinks - Recent by links]",
            "example": "Active"
          },
          {
            "enum": [
              0,
              1,
              2,
              3
            ],
            "type": "integer",
            "description": "[0 - Active, 1 - Archive, 2 - Any, 3 - Recent by links]",
            "example": 0
          }
        ]
      },
      "ASC.MessagingSystem.Core.MessageAction": {
        "oneOf": [
          {
            "enum": [
              "LoginSuccess",
              "LoginSuccessViaSocialAccount",
              "LoginFailInvalidCombination",
              "LoginFailSocialAccountNotFound",
              "LoginFailDisabledProfile",
              "LoginFail",
              "Logout",
              "LoginSuccessViaSms",
              "LoginFailViaSms",
              "LoginFailIpSecurity",
              "LoginSuccessViaApi",
              "LoginSuccessViaSocialApp",
              "LoginSuccessViaApiSms",
              "LoginFailViaApi",
              "LoginFailViaApiSms",
              "LoginSuccessViaSSO",
              "SessionStarted",
              "SessionCompleted",
              "LoginFailViaSSO",
              "LoginSuccessViaApiSocialAccount",
              "LoginFailViaApiSocialAccount",
              "LoginSuccesViaTfaApp",
              "LoginFailViaTfaApp",
              "LoginFailBruteForce",
              "LoginSuccessViaApiTfa",
              "LoginFailViaApiTfa",
              "LoginFailRecaptcha",
              "UserCreated",
              "GuestCreated",
              "UserCreatedViaInvite",
              "GuestCreatedViaInvite",
              "UserActivated",
              "GuestActivated",
              "UserUpdated",
              "UserUpdatedLanguage",
              "UserAddedAvatar",
              "UserDeletedAvatar",
              "UserUpdatedAvatarThumbnails",
              "UserLinkedSocialAccount",
              "UserUnlinkedSocialAccount",
              "UserSentActivationInstructions",
              "UserSentEmailChangeInstructions",
              "UserSentPasswordChangeInstructions",
              "UserSentDeleteInstructions",
              "UserUpdatedPassword",
              "UserDeleted",
              "UsersUpdatedType",
              "UsersUpdatedStatus",
              "UsersSentActivationInstructions",
              "UsersDeleted",
              "SentInviteInstructions",
              "UserImported",
              "GuestImported",
              "GroupCreated",
              "GroupUpdated",
              "GroupDeleted",
              "UserUpdatedMobileNumber",
              "UserDataReassigns",
              "UserDataRemoving",
              "UserConnectedTfaApp",
              "UserDisconnectedTfaApp",
              "UserLogoutActiveConnections",
              "UserLogoutActiveConnection",
              "UserLogoutActiveConnectionsForUser",
              "SendJoinInvite",
              "FileCreated",
              "FileRenamed",
              "FileUpdated",
              "FileCreatedVersion",
              "FileDeletedVersion",
              "FileUpdatedRevisionComment",
              "FileLocked",
              "FileUnlocked",
              "FileUpdatedAccess",
              "FileDownloaded",
              "FileDownloadedAs",
              "FileUploaded",
              "FileImported",
              "FileCopied",
              "FileCopiedWithOverwriting",
              "FileMoved",
              "FileMovedWithOverwriting",
              "FileMovedToTrash",
              "FileDeleted",
              "FolderCreated",
              "FolderRenamed",
              "FolderUpdatedAccess",
              "FolderCopied",
              "FolderCopiedWithOverwriting",
              "FolderMoved",
              "FolderMovedWithOverwriting",
              "FolderMovedToTrash",
              "FolderDeleted",
              "ThirdPartyCreated",
              "ThirdPartyUpdated",
              "ThirdPartyDeleted",
              "DocumentsThirdPartySettingsUpdated",
              "DocumentsOverwritingSettingsUpdated",
              "DocumentsUploadingFormatsSettingsUpdated",
              "UserFileUpdated",
              "FileConverted",
              "FileSendAccessLink",
              "DocumentServiceLocationSetting",
              "AuthorizationKeysSetting",
              "FullTextSearchSetting",
              "StartTransferSetting",
              "StartBackupSetting",
              "LicenseKeyUploaded",
              "FileChangeOwner",
              "FileRestoreVersion",
              "DocumentSendToSign",
              "DocumentSignComplete",
              "UserUpdatedEmail",
              "DocumentsStoreForcesave",
              "DocumentsForcesave",
              "StartStorageEncryption",
              "PrivacyRoomEnable",
              "PrivacyRoomDisable",
              "StartStorageDecryption",
              "FileOpenedForChange",
              "FileMarkedAsFavorite",
              "FileRemovedFromFavorite",
              "FolderDownloaded",
              "FileRemovedFromList",
              "FolderRemovedFromList",
              "FileExternalLinkAccessUpdated",
              "TrashEmptied",
              "FileRevisionDownloaded",
              "FileMarkedAsRead",
              "FileReaded",
              "FolderMarkedAsRead",
              "FolderUpdatedAccessFor",
              "FileUpdatedAccessFor",
              "DocumentsExternalShareSettingsUpdated",
              "RoomCreated",
              "RoomRenamed",
              "RoomArchived",
              "RoomUnarchived",
              "RoomDeleted",
              "RoomUpdateAccessForUser",
              "TagCreated",
              "TagsDeleted",
              "AddedRoomTags",
              "DeletedRoomTags",
              "RoomLogoCreated",
              "RoomLogoDeleted",
              "RoomInvitationLinkUpdated",
              "DocumentsKeepNewFileNameSettingsUpdated",
              "RoomRemoveUser",
              "RoomCreateUser",
              "RoomInvitationLinkCreated",
              "RoomInvitationLinkDeleted",
              "RoomExternalLinkCreated",
              "RoomExternalLinkUpdated",
              "RoomExternalLinkDeleted",
              "FileExternalLinkCreated",
              "FileExternalLinkUpdated",
              "FileExternalLinkDeleted",
              "RoomGroupAdded",
              "RoomUpdateAccessForGroup",
              "RoomGroupRemove",
              "RoomExternalLinkRevoked",
              "RoomExternalLinkRenamed",
              "FileUploadedWithOverwriting",
              "RoomCopied",
              "LanguageSettingsUpdated",
              "TimeZoneSettingsUpdated",
              "DnsSettingsUpdated",
              "TrustedMailDomainSettingsUpdated",
              "PasswordStrengthSettingsUpdated",
              "TwoFactorAuthenticationSettingsUpdated",
              "AdministratorMessageSettingsUpdated",
              "DefaultStartPageSettingsUpdated",
              "ProductsListUpdated",
              "AdministratorAdded",
              "AdministratorOpenedFullAccess",
              "AdministratorDeleted",
              "UsersOpenedProductAccess",
              "GroupsOpenedProductAccess",
              "ProductAccessOpened",
              "ProductAccessRestricted",
              "ProductAddedAdministrator",
              "ProductDeletedAdministrator",
              "GreetingSettingsUpdated",
              "TeamTemplateChanged",
              "ColorThemeChanged",
              "OwnerSentChangeOwnerInstructions",
              "OwnerUpdated",
              "OwnerSentPortalDeactivationInstructions",
              "OwnerSentPortalDeleteInstructions",
              "PortalDeactivated",
              "PortalDeleted",
              "LoginHistoryReportDownloaded",
              "AuditTrailReportDownloaded",
              "SSOEnabled",
              "SSODisabled",
              "PortalAccessSettingsUpdated",
              "CookieSettingsUpdated",
              "MailServiceSettingsUpdated",
              "CustomNavigationSettingsUpdated",
              "AuditSettingsUpdated",
              "TwoFactorAuthenticationDisabled",
              "TwoFactorAuthenticationEnabledBySms",
              "TwoFactorAuthenticationEnabledByTfaApp",
              "PortalRenamed",
              "QuotaPerRoomChanged",
              "QuotaPerRoomDisabled",
              "QuotaPerUserChanged",
              "QuotaPerUserDisabled",
              "QuotaPerPortalChanged",
              "QuotaPerPortalDisabled",
              "FormSubmit",
              "FormOpenedForFilling",
              "CustomQuotaPerRoomDefault",
              "CustomQuotaPerRoomChanged",
              "CustomQuotaPerRoomDisabled",
              "CustomQuotaPerUserDefault",
              "CustomQuotaPerUserChanged",
              "CustomQuotaPerUserDisabled",
              "ContactAdminMailSent",
              "RoomInviteLinkUsed",
              "UserCreatedAndAddedToRoom",
              "GuestCreatedAndAddedToRoom",
              "ContactSalesMailSent",
              "None"
            ],
            "type": "string",
            "description": "[LoginSuccess - Login success, LoginSuccessViaSocialAccount - Login success via social account, LoginFailInvalidCombination - Login fail invalid combination, LoginFailSocialAccountNotFound - Login fail social account not found, LoginFailDisabledProfile - Login fail disabled profile, LoginFail - Login fail, Logout - Logout, LoginSuccessViaSms - Login success via sms, LoginFailViaSms - Login fail via sms, LoginFailIpSecurity - Login fail ip security, LoginSuccessViaApi - Login success via api, LoginSuccessViaSocialApp - Login success via social app, LoginSuccessViaApiSms - Login success via api sms, LoginFailViaApi - Login fail via api, LoginFailViaApiSms - Login fail via api sms, LoginSuccessViaSSO - Login success via SSO, SessionStarted - Session started, SessionCompleted - Session completed, LoginFailViaSSO - Login fail via SSO, LoginSuccessViaApiSocialAccount - Login success via api social account, LoginFailViaApiSocialAccount - Login fail via api social account, LoginSuccesViaTfaApp - Login succes via tfa app, LoginFailViaTfaApp - Login fail via Tfa app, LoginFailBruteForce - Login fail brute force, LoginSuccessViaApiTfa - Login success via api tfa, LoginFailViaApiTfa - Login fail via api tfa, LoginFailRecaptcha - Login fail recaptcha, UserCreated - User created, GuestCreated - Guest created, UserCreatedViaInvite - User created via invite, GuestCreatedViaInvite - Guest created via invite, UserActivated - User activated, GuestActivated - Guest activated, UserUpdated - User updated, UserUpdatedLanguage - User updated language, UserAddedAvatar - User added avatar, UserDeletedAvatar - User deleted avatar, UserUpdatedAvatarThumbnails - User updated avatar thumbnails, UserLinkedSocialAccount - User linked social account, UserUnlinkedSocialAccount - User unlinked social account, UserSentActivationInstructions - User sent activation instructions, UserSentEmailChangeInstructions - User sent email change instructions, UserSentPasswordChangeInstructions - User sent password change instructions, UserSentDeleteInstructions - User sent delete instructions, UserUpdatedPassword - User updated password, UserDeleted - User deleted, UsersUpdatedType - Users updated type, UsersUpdatedStatus - Users updated status, UsersSentActivationInstructions - Users sent activation instructions, UsersDeleted - Users deleted, SentInviteInstructions - Sent invite instructions, UserImported - User imported, GuestImported - Guest imported, GroupCreated - Group created, GroupUpdated - Group updated, GroupDeleted - Group deleted, UserUpdatedMobileNumber - User updated mobile number, UserDataReassigns - User data reassigns, UserDataRemoving - User data removing, UserConnectedTfaApp - User connected tfa app, UserDisconnectedTfaApp - User disconnected tfa app, UserLogoutActiveConnections - User logout active connections, UserLogoutActiveConnection - User logout active connection, UserLogoutActiveConnectionsForUser - User logout active connections for user, SendJoinInvite - Send join invite, FileCreated - File created, FileRenamed - File renamed, FileUpdated - File updated, FileCreatedVersion - File created version, FileDeletedVersion - File deleted version, FileUpdatedRevisionComment - File updated revision comment, FileLocked - File locked, FileUnlocked - File unlocked, FileUpdatedAccess - File updated access, FileDownloaded - File downloaded, FileDownloadedAs - File downloaded as, FileUploaded - File uploaded, FileImported - File imported, FileCopied - File copied, FileCopiedWithOverwriting - File copied with overwriting, FileMoved - File moved, FileMovedWithOverwriting - File moved with overwriting, FileMovedToTrash - File moved to trash, FileDeleted - File deleted, FolderCreated - Folder created, FolderRenamed - Folder renamed, FolderUpdatedAccess - Folder updated access, FolderCopied - Folder copied, FolderCopiedWithOverwriting - Folder copied with overwriting, FolderMoved - Folder moved, FolderMovedWithOverwriting - Folder moved with overwriting, FolderMovedToTrash - Folder moved to trash, FolderDeleted - Folder deleted, ThirdPartyCreated - ThirdParty created, ThirdPartyUpdated - ThirdParty updated, ThirdPartyDeleted - ThirdParty deleted, DocumentsThirdPartySettingsUpdated - Documents ThirdParty settings updated, DocumentsOverwritingSettingsUpdated - Documents overwriting settings updated, DocumentsUploadingFormatsSettingsUpdated - Documents uploading formats settings updated, UserFileUpdated - User file updated, FileConverted - File converted, FileSendAccessLink - File send access link, DocumentServiceLocationSetting - Document service location setting, AuthorizationKeysSetting - Authorization keys setting, FullTextSearchSetting - Full text search setting, StartTransferSetting - Start transfer setting, StartBackupSetting - Start backup setting, LicenseKeyUploaded - License key uploaded, FileChangeOwner - File change owner, FileRestoreVersion - File restore version, DocumentSendToSign - Document send to sign, DocumentSignComplete - Document sign complete, UserUpdatedEmail - User updated email, DocumentsStoreForcesave - Documents store forcesave, DocumentsForcesave - Documents forcesave, StartStorageEncryption - Start storage encryption, PrivacyRoomEnable - Privacy room enable, PrivacyRoomDisable - Privacy room disable, StartStorageDecryption - Start storage decryption, FileOpenedForChange - File opened for change, FileMarkedAsFavorite - File marked as favorite, FileRemovedFromFavorite - File removed from favorite, FolderDownloaded - Folder downloaded, FileRemovedFromList - File removed from list, FolderRemovedFromList - Folder removed from list, FileExternalLinkAccessUpdated - File external link access updated, TrashEmptied - Trash emptied, FileRevisionDownloaded - File revision downloaded, FileMarkedAsRead - File marked as read, FileReaded - File readed, FolderMarkedAsRead - Folder marked as read, FolderUpdatedAccessFor - Folder updated access for, FileUpdatedAccessFor - File updated access for, DocumentsExternalShareSettingsUpdated - Documents external share settings updated, RoomCreated - Room created, RoomRenamed - Room renamed, RoomArchived - Room archived, RoomUnarchived - Room unarchived, RoomDeleted - Room deleted, RoomUpdateAccessForUser - Room update access for user, TagCreated - Tag created, TagsDeleted - Tags deleted, AddedRoomTags - Added room tags, DeletedRoomTags - Deleted room tags, RoomLogoCreated - Room logo created, RoomLogoDeleted - Room logo deleted, RoomInvitationLinkUpdated - Room invitation link updated, DocumentsKeepNewFileNameSettingsUpdated - Documents keep new file name settings updated, RoomRemoveUser - Room remove user, RoomCreateUser - Room create user, RoomInvitationLinkCreated - Room invitation link created, RoomInvitationLinkDeleted - Room invitation link deleted, RoomExternalLinkCreated - Room external link created, RoomExternalLinkUpdated - Room external link updated, RoomExternalLinkDeleted - Room external link deleted, FileExternalLinkCreated - File external link created, FileExternalLinkUpdated - File external link updated, FileExternalLinkDeleted - File external link deleted, RoomGroupAdded - Room group added, RoomUpdateAccessForGroup - Room update access for group, RoomGroupRemove - Room group remove, RoomExternalLinkRevoked - Room external link revoked, RoomExternalLinkRenamed - Room external link renamed, FileUploadedWithOverwriting - File uploaded with overwriting, RoomCopied - Room copied, LanguageSettingsUpdated - Language settings updated, TimeZoneSettingsUpdated - Time zone settings updated, DnsSettingsUpdated - Dns settings updated, TrustedMailDomainSettingsUpdated - Trusted mail domain settings updated, PasswordStrengthSettingsUpdated - Password strength settings updated, TwoFactorAuthenticationSettingsUpdated - Two factor authentication settings updated, AdministratorMessageSettingsUpdated - Administrator message settings updated, DefaultStartPageSettingsUpdated - Default start page settings updated, ProductsListUpdated - Products list updated, AdministratorAdded - Administrator added, AdministratorOpenedFullAccess - Administrator opened full access, AdministratorDeleted - Administrator deleted, UsersOpenedProductAccess - Users opened product access, GroupsOpenedProductAccess - Groups opened product access, ProductAccessOpened - Product access opened, ProductAccessRestricted - Product access restricted, ProductAddedAdministrator - Product added administrator, ProductDeletedAdministrator - Product deleted administrator, GreetingSettingsUpdated - Greeting settings updated, TeamTemplateChanged - Team template changed, ColorThemeChanged - Color theme changed, OwnerSentChangeOwnerInstructions - Owner sent change owner instructions, OwnerUpdated - Owner updated, OwnerSentPortalDeactivationInstructions - Owner sent portal deactivation instructions, OwnerSentPortalDeleteInstructions - Owner sent portal delete instructions, PortalDeactivated - Portal deactivated, PortalDeleted - Portal deleted, LoginHistoryReportDownloaded - Login history report downloaded, AuditTrailReportDownloaded - Audit trail report downloaded, SSOEnabled - SSO enabled, SSODisabled - SSO disabled, PortalAccessSettingsUpdated - Portal access settings updated, CookieSettingsUpdated - Cookie settings updated, MailServiceSettingsUpdated - Mail service settings updated, CustomNavigationSettingsUpdated - Custom navigation settings updated, AuditSettingsUpdated - Audit settings updated, TwoFactorAuthenticationDisabled - Two factor authentication disabled, TwoFactorAuthenticationEnabledBySms - Two factor authentication enabled by sms, TwoFactorAuthenticationEnabledByTfaApp - Two factor authentication enabled by tfa app, PortalRenamed - Portal renamed, QuotaPerRoomChanged - Quota per room changed, QuotaPerRoomDisabled - Quota per room disabled, QuotaPerUserChanged - Quota per user changed, QuotaPerUserDisabled - Quota per user disabled, QuotaPerPortalChanged - Quota per portal changed, QuotaPerPortalDisabled - Quota per portal disabled, FormSubmit - Form submit, FormOpenedForFilling - Form opened for filling, CustomQuotaPerRoomDefault - Custom quota per room default, CustomQuotaPerRoomChanged - Custom quota per room changed, CustomQuotaPerRoomDisabled - Custom quota per room disabled, CustomQuotaPerUserDefault - Custom quota per user default, CustomQuotaPerUserChanged - Custom quota per user changed, CustomQuotaPerUserDisabled - Custom quota per user disabled, ContactAdminMailSent - Contact admin mail sent, RoomInviteLinkUsed - Room invite link used, UserCreatedAndAddedToRoom - User created and added to room, GuestCreatedAndAddedToRoom - Guest created and added to room, ContactSalesMailSent - Contact sales mail sent, None - None]",
            "example": "LoginSuccess"
          },
          {
            "enum": [
              1000,
              1001,
              1002,
              1003,
              1004,
              1005,
              1006,
              1007,
              1008,
              1009,
              1010,
              1011,
              1012,
              1013,
              1014,
              1015,
              1016,
              1017,
              1018,
              1019,
              1020,
              1021,
              1022,
              1023,
              1024,
              1025,
              1026,
              4000,
              4001,
              4002,
              4003,
              4004,
              4005,
              4006,
              4007,
              4008,
              4009,
              4010,
              4011,
              4012,
              4013,
              4014,
              4015,
              4016,
              4017,
              4018,
              4019,
              4020,
              4021,
              4022,
              4023,
              4024,
              4025,
              4026,
              4027,
              4028,
              4029,
              4030,
              4031,
              4032,
              4033,
              4034,
              4035,
              4036,
              4037,
              5000,
              5001,
              5002,
              5003,
              5004,
              5005,
              5006,
              5007,
              5008,
              5009,
              5010,
              5011,
              5012,
              5013,
              5014,
              5015,
              5016,
              5017,
              5018,
              5019,
              5020,
              5021,
              5022,
              5023,
              5024,
              5025,
              5026,
              5027,
              5028,
              5029,
              5030,
              5031,
              5032,
              5033,
              5034,
              5035,
              5036,
              5037,
              5038,
              5039,
              5040,
              5041,
              5042,
              5043,
              5044,
              5045,
              5046,
              5047,
              5048,
              5049,
              5050,
              5051,
              5052,
              5053,
              5054,
              5055,
              5056,
              5057,
              5058,
              5059,
              5060,
              5061,
              5062,
              5063,
              5064,
              5065,
              5066,
              5068,
              5069,
              5070,
              5071,
              5072,
              5073,
              5074,
              5075,
              5076,
              5077,
              5078,
              5079,
              5080,
              5081,
              5082,
              5083,
              5084,
              5085,
              5086,
              5087,
              5088,
              5089,
              5090,
              5091,
              5092,
              5093,
              5094,
              5095,
              5096,
              5097,
              5098,
              5099,
              5100,
              6000,
              6001,
              6002,
              6003,
              6004,
              6005,
              6006,
              6007,
              6008,
              6009,
              6010,
              6011,
              6012,
              6013,
              6014,
              6015,
              6016,
              6017,
              6018,
              6019,
              6020,
              6021,
              6022,
              6023,
              6024,
              6025,
              6026,
              6027,
              6028,
              6029,
              6030,
              6031,
              6032,
              6033,
              6034,
              6035,
              6036,
              6037,
              6038,
              6039,
              6040,
              6041,
              6042,
              6043,
              6044,
              6045,
              6046,
              6047,
              6048,
              6049,
              6050,
              6051,
              6052,
              6053,
              7000,
              7001,
              7002,
              7003,
              7004,
              -1
            ],
            "type": "integer",
            "description": "[1000 - Login success, 1001 - Login success via social account, 1002 - Login fail invalid combination, 1003 - Login fail social account not found, 1004 - Login fail disabled profile, 1005 - Login fail, 1006 - Logout, 1007 - Login success via sms, 1008 - Login fail via sms, 1009 - Login fail ip security, 1010 - Login success via api, 1011 - Login success via social app, 1012 - Login success via api sms, 1013 - Login fail via api, 1014 - Login fail via api sms, 1015 - Login success via SSO, 1016 - Session started, 1017 - Session completed, 1018 - Login fail via SSO, 1019 - Login success via api social account, 1020 - Login fail via api social account, 1021 - Login succes via tfa app, 1022 - Login fail via Tfa app, 1023 - Login fail brute force, 1024 - Login success via api tfa, 1025 - Login fail via api tfa, 1026 - Login fail recaptcha, 4000 - User created, 4001 - Guest created, 4002 - User created via invite, 4003 - Guest created via invite, 4004 - User activated, 4005 - Guest activated, 4006 - User updated, 4007 - User updated language, 4008 - User added avatar, 4009 - User deleted avatar, 4010 - User updated avatar thumbnails, 4011 - User linked social account, 4012 - User unlinked social account, 4013 - User sent activation instructions, 4014 - User sent email change instructions, 4015 - User sent password change instructions, 4016 - User sent delete instructions, 4017 - User updated password, 4018 - User deleted, 4019 - Users updated type, 4020 - Users updated status, 4021 - Users sent activation instructions, 4022 - Users deleted, 4023 - Sent invite instructions, 4024 - User imported, 4025 - Guest imported, 4026 - Group created, 4027 - Group updated, 4028 - Group deleted, 4029 - User updated mobile number, 4030 - User data reassigns, 4031 - User data removing, 4032 - User connected tfa app, 4033 - User disconnected tfa app, 4034 - User logout active connections, 4035 - User logout active connection, 4036 - User logout active connections for user, 4037 - Send join invite, 5000 - File created, 5001 - File renamed, 5002 - File updated, 5003 - File created version, 5004 - File deleted version, 5005 - File updated revision comment, 5006 - File locked, 5007 - File unlocked, 5008 - File updated access, 5009 - File downloaded, 5010 - File downloaded as, 5011 - File uploaded, 5012 - File imported, 5013 - File copied, 5014 - File copied with overwriting, 5015 - File moved, 5016 - File moved with overwriting, 5017 - File moved to trash, 5018 - File deleted, 5019 - Folder created, 5020 - Folder renamed, 5021 - Folder updated access, 5022 - Folder copied, 5023 - Folder copied with overwriting, 5024 - Folder moved, 5025 - Folder moved with overwriting, 5026 - Folder moved to trash, 5027 - Folder deleted, 5028 - ThirdParty created, 5029 - ThirdParty updated, 5030 - ThirdParty deleted, 5031 - Documents ThirdParty settings updated, 5032 - Documents overwriting settings updated, 5033 - Documents uploading formats settings updated, 5034 - User file updated, 5035 - File converted, 5036 - File send access link, 5037 - Document service location setting, 5038 - Authorization keys setting, 5039 - Full text search setting, 5040 - Start transfer setting, 5041 - Start backup setting, 5042 - License key uploaded, 5043 - File change owner, 5044 - File restore version, 5045 - Document send to sign, 5046 - Document sign complete, 5047 - User updated email, 5048 - Documents store forcesave, 5049 - Documents forcesave, 5050 - Start storage encryption, 5051 - Privacy room enable, 5052 - Privacy room disable, 5053 - Start storage decryption, 5054 - File opened for change, 5055 - File marked as favorite, 5056 - File removed from favorite, 5057 - Folder downloaded, 5058 - File removed from list, 5059 - Folder removed from list, 5060 - File external link access updated, 5061 - Trash emptied, 5062 - File revision downloaded, 5063 - File marked as read, 5064 - File readed, 5065 - Folder marked as read, 5066 - Folder updated access for, 5068 - File updated access for, 5069 - Documents external share settings updated, 5070 - Room created, 5071 - Room renamed, 5072 - Room archived, 5073 - Room unarchived, 5074 - Room deleted, 5075 - Room update access for user, 5076 - Tag created, 5077 - Tags deleted, 5078 - Added room tags, 5079 - Deleted room tags, 5080 - Room logo created, 5081 - Room logo deleted, 5082 - Room invitation link updated, 5083 - Documents keep new file name settings updated, 5084 - Room remove user, 5085 - Room create user, 5086 - Room invitation link created, 5087 - Room invitation link deleted, 5088 - Room external link created, 5089 - Room external link updated, 5090 - Room external link deleted, 5091 - File external link created, 5092 - File external link updated, 5093 - File external link deleted, 5094 - Room group added, 5095 - Room update access for group, 5096 - Room group remove, 5097 - Room external link revoked, 5098 - Room external link renamed, 5099 - File uploaded with overwriting, 5100 - Room copied, 6000 - Language settings updated, 6001 - Time zone settings updated, 6002 - Dns settings updated, 6003 - Trusted mail domain settings updated, 6004 - Password strength settings updated, 6005 - Two factor authentication settings updated, 6006 - Administrator message settings updated, 6007 - Default start page settings updated, 6008 - Products list updated, 6009 - Administrator added, 6010 - Administrator opened full access, 6011 - Administrator deleted, 6012 - Users opened product access, 6013 - Groups opened product access, 6014 - Product access opened, 6015 - Product access restricted, 6016 - Product added administrator, 6017 - Product deleted administrator, 6018 - Greeting settings updated, 6019 - Team template changed, 6020 - Color theme changed, 6021 - Owner sent change owner instructions, 6022 - Owner updated, 6023 - Owner sent portal deactivation instructions, 6024 - Owner sent portal delete instructions, 6025 - Portal deactivated, 6026 - Portal deleted, 6027 - Login history report downloaded, 6028 - Audit trail report downloaded, 6029 - SSO enabled, 6030 - SSO disabled, 6031 - Portal access settings updated, 6032 - Cookie settings updated, 6033 - Mail service settings updated, 6034 - Custom navigation settings updated, 6035 - Audit settings updated, 6036 - Two factor authentication disabled, 6037 - Two factor authentication enabled by sms, 6038 - Two factor authentication enabled by tfa app, 6039 - Portal renamed, 6040 - Quota per room changed, 6041 - Quota per room disabled, 6042 - Quota per user changed, 6043 - Quota per user disabled, 6044 - Quota per portal changed, 6045 - Quota per portal disabled, 6046 - Form submit, 6047 - Form opened for filling, 6048 - Custom quota per room default, 6049 - Custom quota per room changed, 6050 - Custom quota per room disabled, 6051 - Custom quota per user default, 6052 - Custom quota per user changed, 6053 - Custom quota per user disabled, 7000 - Contact admin mail sent, 7001 - Room invite link used, 7002 - User created and added to room, 7003 - Guest created and added to room, 7004 - Contact sales mail sent, -1 - None]",
            "example": 1000
          }
        ]
      },
      "ASC.Web.Api.Models.Contact": {
        "type": "object",
        "properties": {
          "type": {
            "type": "string",
            "nullable": true,
            "example": "GTalk"
          },
          "value": {
            "type": "string",
            "nullable": true,
            "example": "my@gmail.com"
          }
        },
        "additionalProperties": false
      },
      "ASC.Web.Api.Models.EmployeeDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid",
            "example": "{00000000-0000-0000-0000-000000000000}"
          },
          "displayName": {
            "type": "string",
            "nullable": true,
            "example": "Mike Zanyatski"
          },
          "title": {
            "type": "string",
            "nullable": true,
            "example": "Manager"
          },
          "avatar": {
            "type": "string",
            "nullable": true,
            "example": "some text"
          },
          "avatarOriginal": {
            "type": "string",
            "nullable": true,
            "example": "some text"
          },
          "avatarMax": {
            "type": "string",
            "nullable": true,
            "example": "some text"
          },
          "avatarMedium": {
            "type": "string",
            "nullable": true,
            "example": "some text"
          },
          "avatarSmall": {
            "type": "string",
            "nullable": true,
            "example": "url to small avatar"
          },
          "profileUrl": {
            "type": "string",
            "nullable": true,
            "example": "some text"
          },
          "hasAvatar": {
            "type": "boolean",
            "example": true
          },
          "isAnonim": {
            "type": "boolean",
            "example": true
          }
        },
        "additionalProperties": false
      },
      "ASC.Web.Api.Models.EmployeeFullDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid",
            "example": "{00000000-0000-0000-0000-000000000000}"
          },
          "displayName": {
            "type": "string",
            "nullable": true,
            "example": "Mike Zanyatski"
          },
          "title": {
            "type": "string",
            "nullable": true,
            "example": "Manager"
          },
          "avatar": {
            "type": "string",
            "nullable": true,
            "example": "some text"
          },
          "avatarOriginal": {
            "type": "string",
            "nullable": true,
            "example": "some text"
          },
          "avatarMax": {
            "type": "string",
            "nullable": true,
            "example": "some text"
          },
          "avatarMedium": {
            "type": "string",
            "nullable": true,
            "example": "some text"
          },
          "avatarSmall": {
            "type": "string",
            "nullable": true,
            "example": "url to small avatar"
          },
          "profileUrl": {
            "type": "string",
            "nullable": true,
            "example": "some text"
          },
          "hasAvatar": {
            "type": "boolean",
            "example": true
          },
          "isAnonim": {
            "type": "boolean",
            "example": true
          },
          "firstName": {
            "type": "string",
            "nullable": true,
            "example": "Mike"
          },
          "lastName": {
            "type": "string",
            "nullable": true,
            "example": "Zanyatski"
          },
          "userName": {
            "type": "string",
            "nullable": true,
            "example": "Mike.Zanyatski"
          },
          "email": {
            "type": "string",
            "format": "email",
            "nullable": true,
            "example": "my@gmail.com"
          },
          "contacts": {
            "type": "array",
            "items": {},
            "nullable": true
          },
          "birthday": {
            "$ref": "#/components/schemas/ASC.Api.Core.ApiDateTime"
          },
          "sex": {
            "type": "string",
            "nullable": true,
            "example": "male"
          },
          "status": {
            "$ref": "#/components/schemas/ASC.Core.Users.EmployeeStatus"
          },
          "activationStatus": {
            "$ref": "#/components/schemas/ASC.Core.Users.EmployeeActivationStatus"
          },
          "terminated": {
            "$ref": "#/components/schemas/ASC.Api.Core.ApiDateTime"
          },
          "department": {
            "type": "string",
            "nullable": true,
            "example": "Marketing"
          },
          "workFrom": {
            "$ref": "#/components/schemas/ASC.Api.Core.ApiDateTime"
          },
          "groups": {
            "type": "array",
            "items": {},
            "nullable": true
          },
          "location": {
            "type": "string",
            "nullable": true,
            "example": "Palo Alto"
          },
          "notes": {
            "type": "string",
            "nullable": true,
            "example": "Notes to worker"
          },
          "isAdmin": {
            "type": "boolean",
            "example": false
          },
          "isRoomAdmin": {
            "type": "boolean",
            "example": true
          },
          "isLDAP": {
            "type": "boolean",
            "example": false
          },
          "listAdminModules": {
            "type": "array",
            "items": {},
            "nullable": true,
            "example": "[\"projects\", \"crm\"]"
          },
          "isOwner": {
            "type": "boolean",
            "example": true
          },
          "isVisitor": {
            "type": "boolean",
            "example": true
          },
          "isCollaborator": {
            "type": "boolean",
            "example": true
          },
          "cultureName": {
            "type": "string",
            "nullable": true,
            "example": "en-EN"
          },
          "mobilePhone": {
            "type": "string",
            "nullable": true,
            "example": "some text"
          },
          "mobilePhoneActivationStatus": {
            "$ref": "#/components/schemas/ASC.Core.Users.MobilePhoneActivationStatus"
          },
          "isSSO": {
            "type": "boolean",
            "example": false
          },
          "theme": {
            "$ref": "#/components/schemas/ASC.Web.Core.Users.DarkThemeSettingsType"
          },
          "quotaLimit": {
            "type": "integer",
            "format": "int64",
            "nullable": true,
            "example": 1234
          },
          "usedSpace": {
            "type": "number",
            "format": "double",
            "nullable": true,
            "example": 12345
          },
          "shared": {
            "type": "boolean",
            "nullable": true,
            "example": true
          },
          "isCustomQuota": {
            "type": "boolean",
            "nullable": true,
            "example": true
          },
          "loginEventId": {
            "type": "integer",
            "format": "int32",
            "nullable": true,
            "example": 1234
          }
        },
        "additionalProperties": false
      },
      "ASC.Web.Api.Models.GroupSummaryDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid",
            "example": "{00000000-0000-0000-0000-000000000000}"
          },
          "name": {
            "type": "string",
            "nullable": true,
            "example": "Group Name"
          },
          "manager": {
            "type": "string",
            "nullable": true,
            "example": "Jake.Zazhitski"
          }
        },
        "additionalProperties": false
      },
      "ASC.Web.Core.Files.FileType": {
        "oneOf": [
          {
            "enum": [
              "Unknown",
              "Archive",
              "Video",
              "Audio",
              "Image",
              "Spreadsheet",
              "Presentation",
              "Document",
              "Pdf"
            ],
            "type": "string",
            "description": "[Unknown - Unknown, Archive - Archive, Video - Video, Audio - Audio, Image - Image, Spreadsheet - Spreadsheet, Presentation - Presentation, Document - Document, Pdf - Pdf]",
            "example": "Unknown"
          },
          {
            "enum": [
              0,
              1,
              2,
              3,
              4,
              5,
              6,
              7,
              10
            ],
            "type": "integer",
            "description": "[0 - Unknown, 1 - Archive, 2 - Video, 3 - Audio, 4 - Image, 5 - Spreadsheet, 6 - Presentation, 7 - Document, 10 - Pdf]",
            "example": 0
          }
        ]
      },
      "ASC.Web.Core.Users.DarkThemeSettingsType": {
        "oneOf": [
          {
            "enum": [
              "Base",
              "Dark",
              "System"
            ],
            "type": "string",
            "description": "[Base - Base, Dark - Dark, System - System]",
            "example": "Base"
          },
          {
            "enum": [
              0,
              1,
              2
            ],
            "type": "integer",
            "description": "[0 - Base, 1 - Dark, 2 - System]",
            "example": 0
          }
        ]
      },
      "ASC.Web.Files.Core.Compress.ICompress": {
        "type": "object",
        "additionalProperties": false
      },
      "ASC.Web.Files.Services.DocumentService.CoEditingConfig": {
        "type": "object",
        "properties": {
          "change": {
            "type": "boolean",
            "example": true
          },
          "fast": {
            "type": "boolean",
            "example": true
          },
          "mode": {
            "$ref": "#/components/schemas/ASC.Web.Files.Services.DocumentService.CoEditingConfigMode"
          }
        },
        "additionalProperties": false
      },
      "ASC.Web.Files.Services.DocumentService.CoEditingConfigMode": {
        "enum": [
          0,
          1
        ],
        "type": "integer",
        "format": "int32"
      },
      "ASC.Web.Files.Services.DocumentService.EditorType": {
        "oneOf": [
          {
            "enum": [
              "Desktop",
              "Mobile",
              "Embedded"
            ],
            "type": "string",
            "description": "[Desktop - Desktop, Mobile - Mobile, Embedded - Embedded]",
            "example": "Desktop"
          },
          {
            "enum": [
              0,
              1,
              2
            ],
            "type": "integer",
            "description": "[0 - Desktop, 1 - Mobile, 2 - Embedded]",
            "example": 0
          }
        ]
      },
      "ASC.Web.Files.Services.DocumentService.EmbeddedConfig": {
        "type": "object",
        "properties": {
          "embedUrl": {
            "type": "string",
            "nullable": true,
            "readOnly": true,
            "example": "some text"
          },
          "saveUrl": {
            "type": "string",
            "nullable": true,
            "readOnly": true,
            "example": "some text"
          },
          "shareLinkParam": {
            "type": "string",
            "nullable": true,
            "example": "some text"
          },
          "shareUrl": {
            "type": "string",
            "nullable": true,
            "readOnly": true,
            "example": "some text"
          },
          "toolbarDocked": {
            "type": "string",
            "nullable": true,
            "readOnly": true,
            "example": "some text"
          }
        },
        "additionalProperties": false
      },
      "ASC.Web.Files.Services.DocumentService.EncryptionKeysConfig": {
        "type": "object",
        "properties": {
          "cryptoEngineId": {
            "type": "string",
            "nullable": true,
            "readOnly": true,
            "example": "some text"
          },
          "privateKeyEnc": {
            "type": "string",
            "nullable": true,
            "example": "some text"
          },
          "publicKey": {
            "type": "string",
            "nullable": true,
            "example": "some text"
          }
        },
        "additionalProperties": false
      },
      "ASC.Web.Files.Services.DocumentService.FeedbackConfig": {
        "type": "object",
        "properties": {
          "url": {
            "type": "string",
            "nullable": true,
            "example": "some text"
          },
          "visible": {
            "type": "boolean",
            "readOnly": true,
            "example": true
          }
        },
        "additionalProperties": false
      },
      "ASC.Web.Files.Services.DocumentService.FileReference": {
        "type": "object",
        "properties": {
          "referenceData": {
            "$ref": "#/components/schemas/ASC.Web.Files.Services.DocumentService.FileReferenceData"
          },
          "error": {
            "type": "string",
            "nullable": true,
            "example": "some text"
          },
          "path": {
            "type": "string",
            "nullable": true,
            "example": "some text"
          },
          "url": {
            "type": "string",
            "format": "uri",
            "nullable": true,
            "example": "some text"
          },
          "fileType": {
            "type": "string",
            "nullable": true,
            "example": "some text"
          },
          "key": {
            "type": "string",
            "nullable": true,
            "example": "some text"
          },
          "link": {
            "type": "string",
            "nullable": true,
            "example": "some text"
          },
          "token": {
            "type": "string",
            "nullable": true,
            "example": "some text"
          }
        },
        "additionalProperties": false
      },
      "ASC.Web.Files.Services.DocumentService.FileReferenceData": {
        "type": "object",
        "properties": {
          "fileKey": {
            "type": "string",
            "nullable": true,
            "example": "some text"
          },
          "instanceId": {
            "type": "string",
            "nullable": true,
            "example": "7328"
          }
        },
        "additionalProperties": false
      },
      "ASC.Web.Files.Services.DocumentService.GobackConfig": {
        "type": "object",
        "properties": {
          "url": {
            "type": "string",
            "nullable": true,
            "example": "some text"
          }
        },
        "additionalProperties": false
      },
      "ASC.Web.Files.Services.DocumentService.PermissionsConfig": {
        "type": "object",
        "properties": {
          "changeHistory": {
            "type": "boolean",
            "example": true
          },
          "comment": {
            "type": "boolean",
            "example": true
          },
          "chat": {
            "type": "boolean",
            "example": true
          },
          "download": {
            "type": "boolean",
            "example": true
          },
          "edit": {
            "type": "boolean",
            "example": true
          },
          "fillForms": {
            "type": "boolean",
            "example": true
          },
          "modifyFilter": {
            "type": "boolean",
            "example": true
          },
          "protect": {
            "type": "boolean",
            "example": true
          },
          "print": {
            "type": "boolean",
            "example": true
          },
          "rename": {
            "type": "boolean",
            "example": true
          },
          "review": {
            "type": "boolean",
            "example": true
          },
          "copy": {
            "type": "boolean",
            "example": true
          }
        },
        "additionalProperties": false
      },
      "ASC.Web.Files.Services.DocumentService.PluginsConfig": {
        "type": "object",
        "properties": {
          "pluginsData": {
            "type": "array",
            "items": {},
            "nullable": true,
            "readOnly": true,
            "example": [
              "some text"
            ]
          }
        },
        "additionalProperties": false
      },
      "ASC.Web.Files.Services.DocumentService.RecentConfig": {
        "type": "object",
        "properties": {
          "folder": {
            "type": "string",
            "nullable": true,
            "example": "some text"
          },
          "title": {
            "type": "string",
            "nullable": true,
            "example": "ergonomic_concrete_keyboard_senior_thx"
          },
          "url": {
            "type": "string",
            "format": "uri",
            "nullable": true,
            "example": "some text"
          }
        },
        "additionalProperties": false
      },
      "ASC.Web.Files.Services.DocumentService.TemplatesConfig": {
        "type": "object",
        "properties": {
          "image": {
            "type": "string",
            "nullable": true,
            "example": "some text"
          },
          "title": {
            "type": "string",
            "nullable": true,
            "example": "personal_loan_account"
          },
          "url": {
            "type": "string",
            "format": "uri",
            "nullable": true,
            "example": "some text"
          }
        },
        "additionalProperties": false
      },
      "ASC.Web.Files.Services.DocumentService.UserConfig": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "nullable": true,
            "example": "6611"
          },
          "name": {
            "type": "string",
            "nullable": true,
            "example": "Aryanna Beer"
          },
          "image": {
            "type": "string",
            "nullable": true,
            "example": "some text"
          }
        },
        "additionalProperties": false
      },
      "ASC.Web.Files.Services.WCFService.AceShortWrapper": {
        "type": "object",
        "properties": {
          "user": {
            "type": "string",
            "nullable": true,
            "example": "some text"
          },
          "permissions": {
            "type": "string",
            "nullable": true,
            "example": "some text"
          },
          "isLink": {
            "type": "boolean",
            "example": true
          }
        },
        "additionalProperties": false
      },
      "ASC.Web.Files.Services.WCFService.FileOperations.FileConflictResolveType": {
        "oneOf": [
          {
            "enum": [
              "Skip",
              "Overwrite",
              "Duplicate"
            ],
            "type": "string",
            "description": "[Skip - Skip, Overwrite - Overwrite, Duplicate - Duplicate]",
            "example": "Skip"
          },
          {
            "enum": [
              0,
              1,
              2
            ],
            "type": "integer",
            "description": "[0 - Skip, 1 - Overwrite, 2 - Duplicate]",
            "example": 0
          }
        ]
      },
      "ASC.Web.Files.Services.WCFService.FileOperations.FileOperationType": {
        "oneOf": [
          {
            "enum": [
              "Move",
              "Copy",
              "Delete",
              "Download",
              "MarkAsRead",
              "Import",
              "Convert",
              "Duplicate"
            ],
            "type": "string",
            "description": "[Move - Move, Copy - Copy, Delete - Delete, Download - Download, MarkAsRead - MarkAsRead, Import - Import, Convert - Convert, Duplicate - Duplicate]",
            "example": "Move"
          },
          {
            "enum": [
              0,
              1,
              2,
              3,
              4,
              5,
              6,
              7
            ],
            "type": "integer",
            "description": "[0 - Move, 1 - Copy, 2 - Delete, 3 - Download, 4 - MarkAsRead, 5 - Import, 6 - Convert, 7 - Duplicate]",
            "example": 0
          }
        ]
      },
      "ASC.Web.Files.Services.WCFService.MentionWrapper": {
        "type": "object",
        "properties": {
          "user": {
            "$ref": "#/components/schemas/ASC.Core.Users.UserInfo"
          },
          "email": {
            "type": "string",
            "format": "email",
            "nullable": true,
            "readOnly": true,
            "example": "Rachelle_Berge@hotmail.com"
          },
          "id": {
            "type": "string",
            "nullable": true,
            "readOnly": true,
            "example": "8385"
          },
          "image": {
            "type": "string",
            "nullable": true,
            "readOnly": true,
            "example": "some text"
          },
          "hasAccess": {
            "type": "boolean",
            "readOnly": true,
            "example": true
          },
          "name": {
            "type": "string",
            "nullable": true,
            "readOnly": true,
            "example": "Mckenzie Dibbert"
          }
        },
        "additionalProperties": false
      },
      "ASC.Web.Files.Services.WCFService.ThirdPartyParams": {
        "type": "object",
        "properties": {
          "auth_data": {
            "$ref": "#/components/schemas/ASC.Files.Core.AuthData"
          },
          "corporate": {
            "type": "boolean",
            "example": true
          },
          "roomsStorage": {
            "type": "boolean",
            "example": true
          },
          "customer_title": {
            "type": "string",
            "nullable": true,
            "example": "some text"
          },
          "provider_id": {
            "type": "integer",
            "format": "int32",
            "nullable": true,
            "example": 1234
          },
          "provider_key": {
            "type": "string",
            "nullable": true,
            "example": "some text"
          }
        },
        "additionalProperties": false
      },
      "Microsoft.AspNetCore.Mvc.NoContentResult": {
        "type": "object",
        "properties": {
          "statusCode": {
            "type": "integer",
            "format": "int32",
            "example": 1234
          }
        },
        "additionalProperties": false
      },
      "System.Collections.Generic.KeyValuePair.System.Boolean.System.String": {
        "type": "object",
        "properties": {
          "key": {
            "type": "boolean",
            "example": true
          },
          "value": {
            "type": "string",
            "nullable": true,
            "example": "some text"
          }
        },
        "additionalProperties": false
      },
      "System.Collections.Generic.KeyValuePair.System.String.Microsoft.Extensions.Primitives.StringValues": {
        "type": "object",
        "properties": {
          "key": {
            "type": "string",
            "nullable": true,
            "example": "some text"
          },
          "value": {
            "type": "array",
            "items": {},
            "example": [
              "some text"
            ]
          }
        },
        "additionalProperties": false
      },
      "System.Net.Mime.ContentDisposition": {
        "type": "object",
        "properties": {
          "dispositionType": {
            "type": "string",
            "nullable": true,
            "example": "some text"
          },
          "parameters": {
            "type": "array",
            "items": {},
            "nullable": true,
            "readOnly": true,
            "example": [
              {
                "int": 1234,
                "string": "some text",
                "boolean": true
              }
            ]
          },
          "fileName": {
            "type": "string",
            "nullable": true,
            "example": "some text"
          },
          "creationDate": {
            "type": "string",
            "format": "date-time",
            "example": "2008-04-10T06:30:00.0000000+04:00"
          },
          "modificationDate": {
            "type": "string",
            "format": "date-time",
            "example": "2008-04-10T06:30:00.0000000+04:00"
          },
          "inline": {
            "type": "boolean",
            "example": true
          },
          "readDate": {
            "type": "string",
            "format": "date-time",
            "example": "2008-04-10T06:30:00.0000000+04:00"
          },
          "size": {
            "type": "integer",
            "format": "int64",
            "example": 1234
          }
        },
        "additionalProperties": false
      },
      "System.Net.Mime.ContentType": {
        "type": "object",
        "properties": {
          "boundary": {
            "type": "string",
            "nullable": true,
            "example": "some text"
          },
          "charSet": {
            "type": "string",
            "nullable": true,
            "example": "some text"
          },
          "mediaType": {
            "type": "string",
            "nullable": true,
            "example": "some text"
          },
          "name": {
            "type": "string",
            "nullable": true,
            "example": "Savannah Anderson"
          },
          "parameters": {
            "type": "array",
            "items": {},
            "nullable": true,
            "readOnly": true,
            "example": [
              {
                "int": 1234,
                "string": "some text",
                "boolean": true
              }
            ]
          }
        },
        "additionalProperties": false
      }
    },
    "securitySchemes": {
      "asc_auth_key": {
        "type": "apiKey",
        "name": "asc_auth_key",
        "in": "cookie"
      }
    }
  },
  "tags": [
    {
      "name": "Files / Files",
      "description": "Operations for working with files."
    },
    {
      "name": "Files / Folders",
      "description": "Operations for working with folders."
    },
    {
      "name": "Files / Operations",
      "description": "Operations for performing actions on files and folders."
    },
    {
      "name": "Files / Quota",
      "description": "Operations for working with room quota limit."
    },
    {
      "name": "Files / Rooms",
      "description": "Operations for working with rooms."
    },
    {
      "name": "Files / Settings",
      "description": "Operations for working with file settings."
    },
    {
      "name": "Files / Third-party integration",
      "description": "Operations for working with third-party integrations."
    }
  ]
}