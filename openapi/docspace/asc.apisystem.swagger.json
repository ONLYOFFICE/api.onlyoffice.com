{
  "openapi": "3.0.1",
  "info": {
    "title": "ASC.ApiSystem",
    "version": "v2"
  },
  "servers": [
    {
      "url": "http://localhost:8092",
      "description": "Local server"
    }
  ],
  "paths": {
    "/people/find": {
      "post": {
        "tags": [
          "People"
        ],
        "summary": "Find",
        "operationId": "find",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ASC.ApiSystem.Models.FindPeopleModel"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ASC.ApiSystem.Models.FindPeopleModel"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/ASC.ApiSystem.Models.FindPeopleModel"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Ok",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.IActionResult"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.IActionResult"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.IActionResult"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "security": [
          {
            "asc_auth_key": [
              "read",
              "write"
            ]
          }
        ],
        "description": "Find"
      }
    },
    "/portal/register": {
      "post": {
        "tags": [
          "Portal"
        ],
        "summary": "Register",
        "operationId": "register",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ASC.ApiSystem.Models.TenantModel"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ASC.ApiSystem.Models.TenantModel"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/ASC.ApiSystem.Models.TenantModel"
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/ASC.ApiSystem.Models.TenantModel"
              }
            },
            "text/xml": {
              "schema": {
                "$ref": "#/components/schemas/ASC.ApiSystem.Models.TenantModel"
              }
            },
            "application/*+xml": {
              "schema": {
                "$ref": "#/components/schemas/ASC.ApiSystem.Models.TenantModel"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Ok",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.IActionResult"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.IActionResult"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.IActionResult"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "security": [
          {
            "asc_auth_key": [
              "read",
              "write"
            ]
          }
        ],
        "description": "Register"
      }
    },
    "/portal/remove": {
      "delete": {
        "tags": [
          "Portal"
        ],
        "summary": "Remove",
        "operationId": "remove",
        "parameters": [
          {
            "name": "PortalName",
            "in": "query",
            "description": "Portal name",
            "schema": {
              "type": "string",
              "example": "some text"
            }
          },
          {
            "name": "TenantId",
            "in": "query",
            "description": "Tenant id",
            "schema": {
              "type": "integer",
              "format": "int32",
              "example": 1234
            }
          },
          {
            "name": "AffiliateId",
            "in": "query",
            "description": "Affiliate id",
            "schema": {
              "maxLength": 255,
              "minLength": 0,
              "type": "string",
              "example": "some text"
            }
          },
          {
            "name": "PartnerId",
            "in": "query",
            "description": "Partner id",
            "schema": {
              "maxLength": 255,
              "minLength": 0,
              "type": "string",
              "example": "some text"
            }
          },
          {
            "name": "Campaign",
            "in": "query",
            "description": "Campaign",
            "schema": {
              "type": "string",
              "example": "some text"
            }
          },
          {
            "name": "FirstName",
            "in": "query",
            "description": "First name",
            "schema": {
              "maxLength": 255,
              "minLength": 0,
              "type": "string",
              "example": "Stewart"
            }
          },
          {
            "name": "Email",
            "in": "query",
            "description": "Email",
            "schema": {
              "maxLength": 255,
              "minLength": 0,
              "type": "string",
              "format": "email",
              "example": "Zoie.MacGyver0@gmail.com"
            }
          },
          {
            "name": "Industry",
            "in": "query",
            "description": "Industry",
            "schema": {
              "type": "integer",
              "format": "int32",
              "example": 1234
            }
          },
          {
            "name": "Language",
            "in": "query",
            "description": "Language",
            "schema": {
              "maxLength": 7,
              "minLength": 0,
              "type": "string",
              "example": "some text"
            }
          },
          {
            "name": "LastName",
            "in": "query",
            "description": "Last name",
            "schema": {
              "maxLength": 255,
              "minLength": 0,
              "type": "string",
              "example": "Flatley"
            }
          },
          {
            "name": "Module",
            "in": "query",
            "description": "Module",
            "schema": {
              "maxLength": 38,
              "minLength": 0,
              "type": "string",
              "example": "some text"
            }
          },
          {
            "name": "Password",
            "in": "query",
            "description": "Password",
            "schema": {
              "maxLength": 30,
              "minLength": 0,
              "type": "string",
              "example": "c4Yq_jMVc6"
            }
          },
          {
            "name": "PasswordHash",
            "in": "query",
            "description": "Password hash",
            "schema": {
              "type": "string",
              "example": "some text"
            }
          },
          {
            "name": "Phone",
            "in": "query",
            "description": "Phone",
            "schema": {
              "maxLength": 32,
              "minLength": 0,
              "type": "string",
              "example": "some text"
            }
          },
          {
            "name": "RecaptchaResponse",
            "in": "query",
            "description": "Recaptcha response",
            "schema": {
              "type": "string",
              "example": "some text"
            }
          },
          {
            "name": "RecaptchaType",
            "in": "query",
            "description": "Recaptcha type",
            "schema": {
              "$ref": "#/components/schemas/ASC.Web.Core.RecaptchaType"
            }
          },
          {
            "name": "Region",
            "in": "query",
            "description": "Region",
            "schema": {
              "maxLength": 20,
              "minLength": 0,
              "type": "string",
              "example": "some text"
            }
          },
          {
            "name": "AWSRegion",
            "in": "query",
            "description": "AWS region",
            "schema": {
              "type": "string",
              "example": "some text"
            }
          },
          {
            "name": "Status",
            "in": "query",
            "description": "Status",
            "schema": {
              "$ref": "#/components/schemas/ASC.Core.Tenants.TenantStatus"
            }
          },
          {
            "name": "SkipWelcome",
            "in": "query",
            "description": "Skip welcome",
            "schema": {
              "type": "boolean",
              "example": true
            }
          },
          {
            "name": "TimeZoneName",
            "in": "query",
            "description": "TimeZone name",
            "schema": {
              "maxLength": 255,
              "minLength": 0,
              "type": "string",
              "example": "some text"
            }
          },
          {
            "name": "Spam",
            "in": "query",
            "description": "Spam",
            "schema": {
              "type": "boolean",
              "example": true
            }
          },
          {
            "name": "Calls",
            "in": "query",
            "description": "Calls",
            "schema": {
              "type": "boolean",
              "example": true
            }
          },
          {
            "name": "AppKey",
            "in": "query",
            "description": "App key",
            "schema": {
              "type": "string",
              "example": "some text"
            }
          },
          {
            "name": "LimitedAccessSpace",
            "in": "query",
            "description": "Limited access space",
            "schema": {
              "type": "boolean",
              "example": true
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Ok",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.IActionResult"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.IActionResult"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.IActionResult"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "security": [
          {
            "asc_auth_key": [
              "read",
              "write"
            ]
          }
        ],
        "description": "Remove"
      }
    },
    "/portal/status": {
      "put": {
        "tags": [
          "Portal"
        ],
        "summary": "Status",
        "operationId": "changeStatus",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ASC.ApiSystem.Models.TenantModel"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ASC.ApiSystem.Models.TenantModel"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/ASC.ApiSystem.Models.TenantModel"
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/ASC.ApiSystem.Models.TenantModel"
              }
            },
            "text/xml": {
              "schema": {
                "$ref": "#/components/schemas/ASC.ApiSystem.Models.TenantModel"
              }
            },
            "application/*+xml": {
              "schema": {
                "$ref": "#/components/schemas/ASC.ApiSystem.Models.TenantModel"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Ok",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.IActionResult"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.IActionResult"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.IActionResult"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "security": [
          {
            "asc_auth_key": [
              "read",
              "write"
            ]
          }
        ],
        "description": "Status"
      }
    },
    "/portal/validateportalname": {
      "post": {
        "tags": [
          "Portal"
        ],
        "summary": "Checks if portal exists",
        "operationId": "checkExistingNamePortal",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ASC.ApiSystem.Models.TenantModel"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ASC.ApiSystem.Models.TenantModel"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/ASC.ApiSystem.Models.TenantModel"
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/ASC.ApiSystem.Models.TenantModel"
              }
            },
            "text/xml": {
              "schema": {
                "$ref": "#/components/schemas/ASC.ApiSystem.Models.TenantModel"
              }
            },
            "application/*+xml": {
              "schema": {
                "$ref": "#/components/schemas/ASC.ApiSystem.Models.TenantModel"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Ok",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.IActionResult"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.IActionResult"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.IActionResult"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "security": [
          {
            "asc_auth_key": [
              "read",
              "write"
            ]
          }
        ],
        "description": "Checks if portal exists"
      }
    },
    "/portal/get": {
      "get": {
        "tags": [
          "Portal"
        ],
        "summary": "Gets a list of portals",
        "operationId": "getPortals",
        "parameters": [
          {
            "name": "PortalName",
            "in": "query",
            "description": "Portal name",
            "schema": {
              "type": "string",
              "example": "some text"
            }
          },
          {
            "name": "TenantId",
            "in": "query",
            "description": "Tenant id",
            "schema": {
              "type": "integer",
              "format": "int32",
              "example": 1234
            }
          },
          {
            "name": "AffiliateId",
            "in": "query",
            "description": "Affiliate id",
            "schema": {
              "maxLength": 255,
              "minLength": 0,
              "type": "string",
              "example": "some text"
            }
          },
          {
            "name": "PartnerId",
            "in": "query",
            "description": "Partner id",
            "schema": {
              "maxLength": 255,
              "minLength": 0,
              "type": "string",
              "example": "some text"
            }
          },
          {
            "name": "Campaign",
            "in": "query",
            "description": "Campaign",
            "schema": {
              "type": "string",
              "example": "some text"
            }
          },
          {
            "name": "FirstName",
            "in": "query",
            "description": "First name",
            "schema": {
              "maxLength": 255,
              "minLength": 0,
              "type": "string",
              "example": "Candelario"
            }
          },
          {
            "name": "Email",
            "in": "query",
            "description": "Email",
            "schema": {
              "maxLength": 255,
              "minLength": 0,
              "type": "string",
              "format": "email",
              "example": "Esperanza.Roob73@hotmail.com"
            }
          },
          {
            "name": "Industry",
            "in": "query",
            "description": "Industry",
            "schema": {
              "type": "integer",
              "format": "int32",
              "example": 1234
            }
          },
          {
            "name": "Language",
            "in": "query",
            "description": "Language",
            "schema": {
              "maxLength": 7,
              "minLength": 0,
              "type": "string",
              "example": "some text"
            }
          },
          {
            "name": "LastName",
            "in": "query",
            "description": "Last name",
            "schema": {
              "maxLength": 255,
              "minLength": 0,
              "type": "string",
              "example": "Langworth"
            }
          },
          {
            "name": "Module",
            "in": "query",
            "description": "Module",
            "schema": {
              "maxLength": 38,
              "minLength": 0,
              "type": "string",
              "example": "some text"
            }
          },
          {
            "name": "Password",
            "in": "query",
            "description": "Password",
            "schema": {
              "maxLength": 30,
              "minLength": 0,
              "type": "string",
              "example": "9e73tGcQvP"
            }
          },
          {
            "name": "PasswordHash",
            "in": "query",
            "description": "Password hash",
            "schema": {
              "type": "string",
              "example": "some text"
            }
          },
          {
            "name": "Phone",
            "in": "query",
            "description": "Phone",
            "schema": {
              "maxLength": 32,
              "minLength": 0,
              "type": "string",
              "example": "some text"
            }
          },
          {
            "name": "RecaptchaResponse",
            "in": "query",
            "description": "Recaptcha response",
            "schema": {
              "type": "string",
              "example": "some text"
            }
          },
          {
            "name": "RecaptchaType",
            "in": "query",
            "description": "Recaptcha type",
            "schema": {
              "$ref": "#/components/schemas/ASC.Web.Core.RecaptchaType"
            }
          },
          {
            "name": "Region",
            "in": "query",
            "description": "Region",
            "schema": {
              "maxLength": 20,
              "minLength": 0,
              "type": "string",
              "example": "some text"
            }
          },
          {
            "name": "AWSRegion",
            "in": "query",
            "description": "AWS region",
            "schema": {
              "type": "string",
              "example": "some text"
            }
          },
          {
            "name": "Status",
            "in": "query",
            "description": "Status",
            "schema": {
              "$ref": "#/components/schemas/ASC.Core.Tenants.TenantStatus"
            }
          },
          {
            "name": "SkipWelcome",
            "in": "query",
            "description": "Skip welcome",
            "schema": {
              "type": "boolean",
              "example": true
            }
          },
          {
            "name": "TimeZoneName",
            "in": "query",
            "description": "TimeZone name",
            "schema": {
              "maxLength": 255,
              "minLength": 0,
              "type": "string",
              "example": "some text"
            }
          },
          {
            "name": "Spam",
            "in": "query",
            "description": "Spam",
            "schema": {
              "type": "boolean",
              "example": true
            }
          },
          {
            "name": "Calls",
            "in": "query",
            "description": "Calls",
            "schema": {
              "type": "boolean",
              "example": true
            }
          },
          {
            "name": "AppKey",
            "in": "query",
            "description": "App key",
            "schema": {
              "type": "string",
              "example": "some text"
            }
          },
          {
            "name": "LimitedAccessSpace",
            "in": "query",
            "description": "Limited access space",
            "schema": {
              "type": "boolean",
              "example": true
            }
          },
          {
            "name": "statistics",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Ok",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.IActionResult"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.IActionResult"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.IActionResult"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "security": [
          {
            "asc_auth_key": [
              "read",
              "write"
            ]
          }
        ],
        "description": "Gets a list of portals"
      }
    },
    "/portal/signin": {
      "post": {
        "tags": [
          "Portal"
        ],
        "summary": "Signs in to portal",
        "operationId": "signInToPortal",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ASC.ApiSystem.Models.TenantModel"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ASC.ApiSystem.Models.TenantModel"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/ASC.ApiSystem.Models.TenantModel"
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/ASC.ApiSystem.Models.TenantModel"
              }
            },
            "text/xml": {
              "schema": {
                "$ref": "#/components/schemas/ASC.ApiSystem.Models.TenantModel"
              }
            },
            "application/*+xml": {
              "schema": {
                "$ref": "#/components/schemas/ASC.ApiSystem.Models.TenantModel"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Ok",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.IActionResult"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.IActionResult"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.IActionResult"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "security": [
          {
            "asc_auth_key": [
              "read",
              "write"
            ]
          }
        ],
        "description": "Signs in to portal"
      }
    },
    "/settings/get": {
      "get": {
        "tags": [
          "Settings"
        ],
        "summary": "Gets settings",
        "operationId": "getSettings",
        "parameters": [
          {
            "name": "PortalName",
            "in": "query",
            "description": "Portal name",
            "schema": {
              "maxLength": 255,
              "minLength": 0,
              "type": "string",
              "example": "some text"
            }
          },
          {
            "name": "TenantId",
            "in": "query",
            "description": "Tenant id",
            "schema": {
              "type": "integer",
              "format": "int32",
              "example": 1234
            }
          },
          {
            "name": "Key",
            "in": "query",
            "description": "Key",
            "schema": {
              "maxLength": 255,
              "minLength": 0,
              "type": "string",
              "example": "some text"
            }
          },
          {
            "name": "Value",
            "in": "query",
            "description": "Value",
            "schema": {
              "type": "string",
              "example": "some text"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Settings",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.IActionResult"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.IActionResult"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.IActionResult"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "security": [
          {
            "asc_auth_key": [
              "read",
              "write"
            ]
          }
        ],
        "description": "Gets settings"
      }
    },
    "/settings/save": {
      "post": {
        "tags": [
          "Settings"
        ],
        "summary": "Saves settings",
        "operationId": "saveSettings",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ASC.ApiSystem.Models.SettingsModel"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ASC.ApiSystem.Models.SettingsModel"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/ASC.ApiSystem.Models.SettingsModel"
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/ASC.ApiSystem.Models.SettingsModel"
              }
            },
            "text/xml": {
              "schema": {
                "$ref": "#/components/schemas/ASC.ApiSystem.Models.SettingsModel"
              }
            },
            "application/*+xml": {
              "schema": {
                "$ref": "#/components/schemas/ASC.ApiSystem.Models.SettingsModel"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Settings",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.IActionResult"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.IActionResult"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.IActionResult"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "security": [
          {
            "asc_auth_key": [
              "read",
              "write"
            ]
          }
        ],
        "description": "Saves settings"
      }
    },
    "/settings/checkdomain": {
      "post": {
        "tags": [
          "Settings"
        ],
        "summary": "Checks domain",
        "operationId": "checkDomain",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ASC.ApiSystem.Models.DomainModel"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ASC.ApiSystem.Models.DomainModel"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/ASC.ApiSystem.Models.DomainModel"
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/ASC.ApiSystem.Models.DomainModel"
              }
            },
            "text/xml": {
              "schema": {
                "$ref": "#/components/schemas/ASC.ApiSystem.Models.DomainModel"
              }
            },
            "application/*+xml": {
              "schema": {
                "$ref": "#/components/schemas/ASC.ApiSystem.Models.DomainModel"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "True if success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.IActionResult"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.IActionResult"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.IActionResult"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "security": [
          {
            "asc_auth_key": [
              "read",
              "write"
            ]
          }
        ],
        "description": "Checks domain"
      }
    },
    "/tariff/set": {
      "put": {
        "tags": [
          "Tariff"
        ],
        "summary": "Sets tariff",
        "operationId": "setTariff",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ASC.ApiSystem.Models.TariffModel"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ASC.ApiSystem.Models.TariffModel"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/ASC.ApiSystem.Models.TariffModel"
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/ASC.ApiSystem.Models.TariffModel"
              }
            },
            "text/xml": {
              "schema": {
                "$ref": "#/components/schemas/ASC.ApiSystem.Models.TariffModel"
              }
            },
            "application/*+xml": {
              "schema": {
                "$ref": "#/components/schemas/ASC.ApiSystem.Models.TariffModel"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Tariff",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.IActionResult"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.IActionResult"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.IActionResult"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "security": [
          {
            "asc_auth_key": [
              "read",
              "write"
            ]
          }
        ],
        "description": "Sets tariff"
      }
    },
    "/tariff/get": {
      "get": {
        "tags": [
          "Tariff"
        ],
        "summary": "Gets tariff",
        "operationId": "getTariff",
        "parameters": [
          {
            "name": "PortalName",
            "in": "query",
            "description": "Portal name",
            "schema": {
              "maxLength": 255,
              "minLength": 0,
              "type": "string",
              "example": "some text"
            }
          },
          {
            "name": "TenantId",
            "in": "query",
            "description": "Tenant id",
            "schema": {
              "type": "integer",
              "format": "int32",
              "example": 1234
            }
          },
          {
            "name": "ActiveUsers",
            "in": "query",
            "description": "Active users",
            "schema": {
              "type": "integer",
              "format": "int32",
              "example": 1234
            }
          },
          {
            "name": "DueDate",
            "in": "query",
            "description": "Due date",
            "schema": {
              "type": "string",
              "format": "date-time",
              "example": "2008-04-10T06:30:00.0000000+04:00"
            }
          },
          {
            "name": "Features",
            "in": "query",
            "description": "Features",
            "schema": {
              "maxLength": 255,
              "minLength": 0,
              "type": "string",
              "example": "some text"
            }
          },
          {
            "name": "MaxFileSize",
            "in": "query",
            "description": "Max file size",
            "schema": {
              "type": "integer",
              "format": "int64",
              "example": 1234
            }
          },
          {
            "name": "MaxTotalSize",
            "in": "query",
            "description": "Max total size",
            "schema": {
              "type": "integer",
              "format": "int64",
              "example": 1234
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Tariff",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.IActionResult"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.IActionResult"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.IActionResult"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "security": [
          {
            "asc_auth_key": [
              "read",
              "write"
            ]
          }
        ],
        "description": "Gets tariff"
      }
    },
    "/tariff/all": {
      "get": {
        "tags": [
          "Tariff"
        ],
        "summary": "Gets all tariffs",
        "operationId": "getTariffs",
        "responses": {
          "200": {
            "description": "Tariff",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.IActionResult"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.IActionResult"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.IActionResult"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "security": [
          {
            "asc_auth_key": [
              "read",
              "write"
            ]
          }
        ],
        "description": "Gets all tariffs"
      }
    }
  },
  "components": {
    "schemas": {
      "ASC.ApiSystem.Models.DomainModel": {
        "type": "object",
        "properties": {
          "hostName": {
            "maxLength": 255,
            "minLength": 0,
            "type": "string",
            "description": "Host name",
            "nullable": true,
            "example": "some text"
          }
        },
        "additionalProperties": false,
        "description": "Requst parameters for domain"
      },
      "ASC.ApiSystem.Models.FindPeopleModel": {
        "type": "object",
        "properties": {
          "userIds": {
            "type": "array",
            "items": {
              "type": "string",
              "format": "uuid"
            },
            "description": "User ids",
            "nullable": true,
            "example": [
              "75a5f745-f697-4418-b38d-0fe0d277e258"
            ]
          }
        },
        "additionalProperties": false,
        "description": "Request parameters for people"
      },
      "ASC.ApiSystem.Models.SettingsModel": {
        "type": "object",
        "properties": {
          "portalName": {
            "maxLength": 255,
            "minLength": 0,
            "type": "string",
            "description": "Portal name",
            "nullable": true,
            "example": "some text"
          },
          "tenantId": {
            "type": "integer",
            "description": "Tenant id",
            "format": "int32",
            "nullable": true,
            "example": 1234
          },
          "key": {
            "maxLength": 255,
            "minLength": 0,
            "type": "string",
            "description": "Key",
            "nullable": true,
            "example": "some text"
          },
          "value": {
            "type": "string",
            "description": "Value",
            "nullable": true,
            "example": "some text"
          }
        },
        "additionalProperties": false,
        "description": "Request parameters for settings"
      },
      "ASC.ApiSystem.Models.TariffModel": {
        "type": "object",
        "properties": {
          "portalName": {
            "maxLength": 255,
            "minLength": 0,
            "type": "string",
            "description": "Portal name",
            "nullable": true,
            "example": "some text"
          },
          "tenantId": {
            "type": "integer",
            "description": "Tenant id",
            "format": "int32",
            "nullable": true,
            "example": 1234
          },
          "activeUsers": {
            "type": "integer",
            "description": "Active users",
            "format": "int32",
            "example": 1234
          },
          "dueDate": {
            "type": "string",
            "description": "Due date",
            "format": "date-time",
            "example": "2008-04-10T06:30:00.0000000+04:00"
          },
          "features": {
            "maxLength": 255,
            "minLength": 0,
            "type": "string",
            "description": "Features",
            "nullable": true,
            "example": "some text"
          },
          "maxFileSize": {
            "type": "integer",
            "description": "Max file size",
            "format": "int64",
            "example": 1234
          },
          "maxTotalSize": {
            "type": "integer",
            "description": "Max total size",
            "format": "int64",
            "example": 1234
          }
        },
        "additionalProperties": false,
        "description": "Request parameters for tariff"
      },
      "ASC.ApiSystem.Models.TenantModel": {
        "type": "object",
        "properties": {
          "portalName": {
            "type": "string",
            "description": "Portal name",
            "nullable": true,
            "example": "some text"
          },
          "tenantId": {
            "type": "integer",
            "description": "Tenant id",
            "format": "int32",
            "nullable": true,
            "example": 1234
          },
          "affiliateId": {
            "maxLength": 255,
            "minLength": 0,
            "type": "string",
            "description": "Affiliate id",
            "nullable": true,
            "example": "some text"
          },
          "partnerId": {
            "maxLength": 255,
            "minLength": 0,
            "type": "string",
            "description": "Partner id",
            "nullable": true,
            "example": "some text"
          },
          "campaign": {
            "type": "string",
            "description": "Campaign",
            "nullable": true,
            "example": "some text"
          },
          "firstName": {
            "maxLength": 255,
            "minLength": 0,
            "type": "string",
            "description": "First name",
            "nullable": true,
            "example": "Rolando"
          },
          "email": {
            "maxLength": 255,
            "minLength": 0,
            "type": "string",
            "description": "Email",
            "format": "email",
            "nullable": true,
            "example": "Rosalyn.Hessel@yahoo.com"
          },
          "industry": {
            "type": "integer",
            "description": "Industry",
            "format": "int32",
            "example": 1234
          },
          "language": {
            "maxLength": 7,
            "minLength": 0,
            "type": "string",
            "description": "Language",
            "nullable": true,
            "example": "some text"
          },
          "lastName": {
            "maxLength": 255,
            "minLength": 0,
            "type": "string",
            "description": "Last name",
            "nullable": true,
            "example": "O'Reilly"
          },
          "module": {
            "maxLength": 38,
            "minLength": 0,
            "type": "string",
            "description": "Module",
            "nullable": true,
            "example": "some text"
          },
          "password": {
            "maxLength": 30,
            "minLength": 0,
            "type": "string",
            "description": "Password",
            "nullable": true,
            "example": "gL1tZYUPAs"
          },
          "passwordHash": {
            "type": "string",
            "description": "Password hash",
            "nullable": true,
            "example": "some text"
          },
          "phone": {
            "maxLength": 32,
            "minLength": 0,
            "type": "string",
            "description": "Phone",
            "nullable": true,
            "example": "some text"
          },
          "recaptchaResponse": {
            "type": "string",
            "description": "Recaptcha response",
            "nullable": true,
            "example": "some text"
          },
          "recaptchaType": {
            "$ref": "#/components/schemas/ASC.Web.Core.RecaptchaType"
          },
          "region": {
            "maxLength": 20,
            "minLength": 0,
            "type": "string",
            "description": "Region",
            "nullable": true,
            "example": "some text"
          },
          "awsRegion": {
            "type": "string",
            "description": "AWS region",
            "nullable": true,
            "example": "some text"
          },
          "status": {
            "$ref": "#/components/schemas/ASC.Core.Tenants.TenantStatus"
          },
          "skipWelcome": {
            "type": "boolean",
            "description": "Skip welcome",
            "example": true
          },
          "timeZoneName": {
            "maxLength": 255,
            "minLength": 0,
            "type": "string",
            "description": "TimeZone name",
            "nullable": true,
            "example": "some text"
          },
          "spam": {
            "type": "boolean",
            "description": "Spam",
            "example": true
          },
          "calls": {
            "type": "boolean",
            "description": "Calls",
            "example": true
          },
          "appKey": {
            "type": "string",
            "description": "App key",
            "nullable": true,
            "example": "some text"
          },
          "limitedAccessSpace": {
            "type": "boolean",
            "description": "Limited access space",
            "example": true
          }
        },
        "additionalProperties": false,
        "description": "Request parameters for portal"
      },
      "ASC.Core.Tenants.TenantStatus": {
        "oneOf": [
          {
            "enum": [
              "Active",
              "Suspended",
              "RemovePending",
              "Transfering",
              "Restoring",
              "Migrating",
              "Encryption"
            ],
            "type": "string",
            "description": "[Active - Active, Suspended - Suspended, RemovePending - Remove pending, Transfering - Transfering, Restoring - Restoring, Migrating - Migrating, Encryption - Encryption]",
            "example": "Active"
          },
          {
            "enum": [
              0,
              1,
              2,
              3,
              4,
              5,
              6
            ],
            "type": "integer",
            "description": "[0 - Active, 1 - Suspended, 2 - Remove pending, 3 - Transfering, 4 - Restoring, 5 - Migrating, 6 - Encryption]",
            "example": 0
          }
        ]
      },
      "ASC.Web.Core.RecaptchaType": {
        "oneOf": [
          {
            "enum": [
              "Default",
              "AndroidV2",
              "iOSV2",
              "hCaptcha"
            ],
            "type": "string",
            "description": "[Default - Default, AndroidV2 - AndroidV2, iOSV2 - iOSV2, hCaptcha - hCaptcha]",
            "example": "Default"
          },
          {
            "enum": [
              0,
              1,
              2,
              3
            ],
            "type": "integer",
            "description": "[0 - Default, 1 - AndroidV2, 2 - iOSV2, 3 - hCaptcha]",
            "example": 0
          }
        ]
      },
      "Microsoft.AspNetCore.Mvc.IActionResult": {
        "type": "object",
        "additionalProperties": false
      }
    },
    "securitySchemes": {
      "asc_auth_key": {
        "type": "apiKey",
        "name": "asc_auth_key",
        "in": "cookie"
      }
    }
  },
  "tags": [
    {
      "name": "People",
      "description": "Operations for working with people",
      "x-displayName": "People"
    },
    {
      "name": "Portal",
      "description": "Operations for working with portal",
      "x-displayName": "Portal"
    },
    {
      "name": "Settings",
      "description": "Operations for working with settings",
      "x-displayName": "Settings"
    },
    {
      "name": "Tariff",
      "description": "Operations for working with tariff",
      "x-displayName": "Tariff"
    }
  ],
  "x-tagGroups": [
    {
      "name": "People",
      "tags": [
        "People"
      ]
    },
    {
      "name": "Portal",
      "tags": [
        "Portal"
      ]
    },
    {
      "name": "Settings",
      "tags": [
        "Settings"
      ]
    },
    {
      "name": "Tariff",
      "tags": [
        "Tariff"
      ]
    }
  ]
}