openapi: 3.0.1
info:
  title: ASC.Web.Api
  version: v2
servers:
  - url: http://localhost
    description: Local server
tags:
  - name: Authentication
    description: Operations for authenticating users.
    x-displayName: Authentication
  - name: Capabilities
    description: Operations for getting information about portal capabilities.
    x-displayName: Capabilities
  - name: Migration
    description: Operations for performing migration.
    x-displayName: Migration
  - name: Modules
    description: Operations for getting information about portal modules.
    x-displayName: Modules
  - name: Portal / Quota
    description: Operations for getting information about portal quota.
    x-displayName: Quota
  - name: Portal / Settings
    description: Operations for getting information about portal settings.
    x-displayName: Settings
  - name: Portal / Users
    description: Operations for getting information about portal users.
    x-displayName: Users
  - name: Security / Active connections
    description: Operations for working with active connections.
    x-displayName: Active connections
  - name: Security / Audit trail data
    description: Operations for working with audit trail data.
    x-displayName: Audit trail data
  - name: Security / CSP
    description: Operations for working with CSP.
    x-displayName: CSP
  - name: Security / Firebase
    description: Operations for working with Firebase.
    x-displayName: Firebase
  - name: Security / Login history
    description: Operations for getting login history.
    x-displayName: Login history
  - name: Security / SMTP settings
    description: Operations for working with SMTP settings.
    x-displayName: SMTP settings
  - name: Settings / Authorization
    description: Operations for working with authorization settings.
    x-displayName: Authorization
  - name: Settings / Common settings
    description: Operations for working with common settings.
    x-displayName: Common settings
  - name: Settings / Cookies
    description: Operations for working with cookies settings.
    x-displayName: Cookies
  - name: Settings / Custom Navigation
    description: Operations for working with custom navigation settings.
    x-displayName: Custom Navigation
  - name: Settings / Encryption
    description: Operations for working with encryption settings.
    x-displayName: Encryption
  - name: Settings / Greeting settings
    description: Operations for working with greeting settings.
    x-displayName: Greeting settings
  - name: Settings / IP restrictions
    description: Operations for working with IP restriction settings.
    x-displayName: IP restrictions
  - name: Settings / License
    description: Operations for working with license settings.
    x-displayName: License
  - name: Settings / Login settings
    description: Operations for working with login settings.
    x-displayName: Login settings
  - name: Settings / Messages
    description: Operations for working with message settings.
    x-displayName: Messages
  - name: Settings / Notifications
    description: Operations for working with notification settings.
    x-displayName: Notifications
  - name: Settings / Owner
    description: Operations for working with owner settings.
    x-displayName: Owner
  - name: Settings / Quota
    description: Operations for working with quota settings.
    x-displayName: Quota
  - name: Settings / Rebranding
    description: Operations for working with rebranding settings.
    x-displayName: Rebranding
  - name: Settings / Security
    description: Operations for working with security settings.
    x-displayName: Security
  - name: Settings / SSO
    description: Operations for working with SSO settings.
    x-displayName: SSO
  - name: Settings / Statistics
    description: Operations for working with statistics settings.
    x-displayName: Statistics
  - name: Settings / Storage
    description: Operations for working with storage settings.
    x-displayName: Storage
  - name: Settings / Team templates
    description: Operations for working with team template settings.
    x-displayName: Team templates
  - name: Settings / TFA settings
    description: Operations for working with TFA settings.
    x-displayName: TFA settings
  - name: Settings / Tips
    description: Operations for working with tip settings.
    x-displayName: Tips
  - name: Settings / Webhooks
    description: Operations for working with webhook settings.
    x-displayName: Webhooks
  - name: Settings / Webplugins
    description: Operations for working with webplugin settings.
    x-displayName: Webplugins
  - name: Group
    description: Operations for working with groups.
    x-displayName: Group
  - name: Group / Rooms
    description: Operations for getting groups with access rights to a room.
    x-displayName: Rooms
  - name: People / Contacts
    description: Operations for working with user contacts.
    x-displayName: Contacts
  - name: People / Guests
    description: Operations for workig with gursts
    x-displayName: Guests
  - name: People / Password
    description: Operations for working with user passwords.
    x-displayName: Password
  - name: People / Photos
    description: Operations for working with user photos.
    x-displayName: Photos
  - name: People / Profiles
    description: Operations  for working with user profiles.
    x-displayName: Profiles
  - name: People / Quota
    description: Operations for working with user quotas.
    x-displayName: Quota
  - name: People / Search
    description: Operations for searching users.
    x-displayName: Search
  - name: People / Theme
    description: Operations for working with portal theme.
    x-displayName: Theme
  - name: People / Third-party accounts
    description: Operations for working with third-party accounts.
    x-displayName: Third-party accounts
  - name: People / User data
    description: Operations for working with user data.
    x-displayName: User data
  - name: People / User status
    description: Operations for working with user status.
    x-displayName: User status
  - name: People / User type
    description: Operations for working with user types.
    x-displayName: User type
  - name: Files / Files
    description: Operations for working with files.
    x-displayName: Files
  - name: Files / Folders
    description: Operations for working with folders.
    x-displayName: Folders
  - name: Files / Operations
    description: Operations for performing actions on files and folders.
    x-displayName: Operations
  - name: Files / Quota
    description: Operations for working with room quota limit.
    x-displayName: Quota
  - name: Files / Rooms
    description: Operations for working with rooms.
    x-displayName: Rooms
  - name: Files / Settings
    description: Operations for working with file settings.
    x-displayName: Settings
  - name: Files / Third-party integration
    description: Operations for working with third-party integrations.
    x-displayName: Third-party integration
  - name: Backup
    description: Operations for working with backup
    x-displayName: Backup
paths:
  /api/2.0/authentication:
    get:
      tags:
        - Authentication
      summary: Check authentication
      operationId: getIsAuthentificated
      responses:
        '200':
          description: 'Boolean value: true if the current user is authenticated'
          content:
            application/json:
              schema:
                type: boolean
      description: Checks if the current user is authenticated or not.
    post:
      tags:
        - Authentication
      summary: Authenticate a user
      operationId: authenticateMe
      requestBody:
        content:
          application/json:
            schema:
              $ref: >-
                #/components/schemas/ASC.Web.Api.ApiModel.RequestsDto.AuthRequestsDto
      responses:
        '200':
          description: Authentication data
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/ASC.Web.Api.ApiModel.ResponseDto.AuthenticationTokenDto
        '400':
          description: userName, password or passworHash is empty
        '401':
          description: User authentication failed
        '404':
          description: The user could not be found
        '429':
          description: Too many login attempts. Please try again later
      description: >-
        Authenticates the current user by SMS, authenticator app, or without
        two-factor authentication.
  /api/2.0/authentication/{code}:
    post:
      tags:
        - Authentication
      summary: Authenticate a user by code
      operationId: authenticateMeFromBodyWithCode
      parameters:
        - name: code
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: >-
                #/components/schemas/ASC.Web.Api.ApiModel.RequestsDto.AuthRequestsDto
      responses:
        '200':
          description: Authentication data
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/ASC.Web.Api.ApiModel.ResponseDto.AuthenticationTokenDto
        '400':
          description: userName, password or passworHash is empty
        '401':
          description: User authentication failed
        '403':
          description: Auth code is not available
        '429':
          description: Too many login attempts. Please try again later
      description: Authenticates the current user by SMS or two-factor authentication code.
  /api/2.0/authentication/logout:
    post:
      tags:
        - Authentication
      summary: Log out
      operationId: logout
      responses:
        '200':
          description: Ok
          content:
            application/json:
              schema: {}
      description: Logs out of the current user account.
  /api/2.0/authentication/confirm:
    post:
      tags:
        - Authentication
      summary: Open confirmation email URL
      operationId: checkConfirm
      requestBody:
        content:
          application/json:
            schema:
              $ref: >-
                #/components/schemas/ASC.Security.Cryptography.EmailValidationKeyModel
      responses:
        '200':
          description: 'Validation result: Ok, Invalid, or Expired'
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/ASC.Web.Api.ApiModels.ResponseDto.ConfirmDto
      description: >-
        Opens a confirmation email URL to validate a certain action (employee
        invitation, portal removal, phone activation, etc.).
  /api/2.0/authentication/setphone:
    post:
      tags:
        - Authentication
      summary: Set a mobile phone
      operationId: saveMobilePhone
      requestBody:
        content:
          application/json:
            schema:
              $ref: >-
                #/components/schemas/ASC.Web.Api.ApiModel.RequestsDto.MobileRequestsDto
      responses:
        '200':
          description: Authentication data
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/ASC.Web.Api.ApiModel.ResponseDto.AuthenticationTokenDto
      description: Sets a mobile phone for the current user.
  /api/2.0/authentication/sendsms:
    post:
      tags:
        - Authentication
      summary: Send SMS code
      operationId: sendSmsCode
      requestBody:
        content:
          application/json:
            schema:
              $ref: >-
                #/components/schemas/ASC.Web.Api.ApiModel.RequestsDto.AuthRequestsDto
      responses:
        '200':
          description: Authentication data
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/ASC.Web.Api.ApiModel.ResponseDto.AuthenticationTokenDto
        '400':
          description: userName, password or passworHash is empty
        '429':
          description: Too many login attempts. Please try again later
      description: Sends SMS with an authentication code.
  /api/2.0/capabilities:
    get:
      tags:
        - Capabilities
      summary: Get portal capabilities
      operationId: getPortalCapabilities
      responses:
        '200':
          description: Portal capabilities
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/ASC.Web.Api.ApiModel.ResponseDto.CapabilitiesDto
      description: Returns the information about portal capabilities.
  /api/2.0/migration/list:
    get:
      tags:
        - Migration
      summary: Gets migration list
      operationId: list
      responses:
        '200':
          description: Ok
          content:
            application/json:
              schema:
                type: array
                items:
                  type: string
        '401':
          description: Unauthorized
        '403':
          description: No permissions to perform this action
      security:
        - asc_auth_key:
            - read
            - write
      description: Gets migration list
  /api/2.0/migration/init/{migratorName}:
    post:
      tags:
        - Migration
      summary: Uploads and inits migration
      operationId: uploadAndInit
      parameters:
        - name: migratorName
          in: path
          description: Migrator name
          required: true
          schema:
            type: string
            example: some text
      responses:
        '200':
          description: Ok
        '401':
          description: Unauthorized
        '403':
          description: No permissions to perform this action
      security:
        - asc_auth_key:
            - read
            - write
      description: Uploads and inits migration
  /api/2.0/migration/status:
    get:
      tags:
        - Migration
      summary: Gets migration status
      operationId: status
      responses:
        '200':
          description: Ok
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/ASC.Web.Api.ApiModels.ResponseDto.MigrationStatusDto
        '401':
          description: Unauthorized
        '403':
          description: No permissions to perform this action
      security:
        - asc_auth_key:
            - read
            - write
      description: Gets migration status
  /api/2.0/migration/cancel:
    post:
      tags:
        - Migration
      summary: Cancels migration
      operationId: cancel
      responses:
        '200':
          description: Ok
        '401':
          description: Unauthorized
        '403':
          description: No permissions to perform this action
      security:
        - asc_auth_key:
            - read
            - write
      description: Cancels migration
  /api/2.0/migration/clear:
    post:
      tags:
        - Migration
      summary: Clears migration
      operationId: clear
      responses:
        '200':
          description: Ok
        '401':
          description: Unauthorized
        '403':
          description: No permissions to perform this action
      security:
        - asc_auth_key:
            - read
            - write
      description: Clears migration
  /api/2.0/migration/migrate:
    post:
      tags:
        - Migration
      summary: Migrates
      operationId: migrate
      requestBody:
        content:
          application/json:
            schema:
              $ref: >-
                #/components/schemas/ASC.Migration.Core.Models.Api.MigrationApiInfo
      responses:
        '200':
          description: Ok
        '401':
          description: Unauthorized
        '403':
          description: No permissions to perform this action
      security:
        - asc_auth_key:
            - read
            - write
      description: Migrates
  /api/2.0/migration/logs:
    get:
      tags:
        - Migration
      summary: Gets migration logs
      operationId: logs
      responses:
        '200':
          description: Ok
        '401':
          description: Unauthorized
        '403':
          description: No permissions to perform this action
      security:
        - asc_auth_key:
            - read
            - write
      description: Gets migration logs
  /api/2.0/migration/finish:
    post:
      tags:
        - Migration
      summary: Finishes migration
      operationId: finish
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ASC.Web.Api.ApiModels.RequestsDto.FinishDto'
      responses:
        '200':
          description: Ok
        '401':
          description: Unauthorized
        '403':
          description: No permissions to perform this action
      security:
        - asc_auth_key:
            - read
            - write
      description: Finishes migration
  /api/2.0/modules:
    get:
      tags:
        - Modules
      summary: Get modules
      operationId: getAll
      responses:
        '200':
          description: List of modules
          content:
            application/json:
              schema:
                type: string
        '401':
          description: Unauthorized
      security:
        - asc_auth_key:
            - read
            - write
      description: Returns a list of all the portal modules.
  /api/2.0/modules/info:
    get:
      tags:
        - Modules
      summary: Get modules information
      operationId: getAllWithInfo
      responses:
        '200':
          description: List of modules with their information
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ASC.Api.Core.Module'
        '401':
          description: Unauthorized
      security:
        - asc_auth_key:
            - read
            - write
      description: Returns a list of all the portal modules with their information.
  /api/2.0/portal/usedspace:
    get:
      tags:
        - Portal / Quota
      summary: Get the used portal space
      operationId: getUsedSpace
      responses:
        '200':
          description: Used portal space
          content:
            application/json:
              schema:
                type: number
                format: double
        '401':
          description: Unauthorized
      security:
        - asc_auth_key:
            - read
            - write
      description: Returns the used space of the current portal.
  /api/2.0/portal/tariff:
    get:
      tags:
        - Portal / Quota
      summary: Get a portal tariff
      operationId: getTariff
      parameters:
        - name: refresh
          in: query
          description: Specifies whether the tariff will be refreshed
          schema:
            type: boolean
            example: true
      responses:
        '200':
          description: Current portal tariff
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ASC.Core.Billing.Tariff'
        '401':
          description: Unauthorized
      security:
        - asc_auth_key:
            - read
            - write
      description: Returns the current portal tariff.
  /api/2.0/portal/quota:
    get:
      tags:
        - Portal / Quota
      summary: Get a portal quota
      operationId: getQuota
      responses:
        '200':
          description: Current portal quota
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ASC.Core.Tenants.TenantQuota'
        '401':
          description: Unauthorized
        '403':
          description: No permissions to perform this action
      security:
        - asc_auth_key:
            - read
            - write
      description: Returns the current portal quota.
  /api/2.0/portal/quota/right:
    get:
      tags:
        - Portal / Quota
      summary: Get the recommended quota
      operationId: getRightQuota
      responses:
        '200':
          description: Recommended portal quota
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ASC.Core.Tenants.TenantQuota'
        '401':
          description: Unauthorized
      security:
        - asc_auth_key:
            - read
            - write
      description: Returns the recommended quota for the current portal.
  /api/2.0/portal:
    get:
      tags:
        - Portal / Settings
      summary: Get a portal
      operationId: get
      responses:
        '200':
          description: Current portal information
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/ASC.Web.Api.ApiModels.ResponseDto.TenantDto
        '401':
          description: Unauthorized
      security:
        - asc_auth_key:
            - read
            - write
      description: Returns the current portal.
  /api/2.0/portal/getshortenlink:
    put:
      tags:
        - Portal / Settings
      summary: Get a shortened link
      operationId: getShortenLink
      requestBody:
        content:
          application/json:
            schema:
              $ref: >-
                #/components/schemas/ASC.Web.Api.ApiModel.RequestsDto.ShortenLinkRequestsDto
      responses:
        '200':
          description: Shortened link
          content:
            application/json:
              schema: {}
        '401':
          description: Unauthorized
      security:
        - asc_auth_key:
            - read
            - write
      description: Returns a link specified in the request in the shortened format.
  /api/2.0/portal/path:
    get:
      tags:
        - Portal / Settings
      summary: Get a path to the portal
      operationId: getFullAbsolutePath
      parameters:
        - name: virtualPath
          in: query
          description: Portal virtual path
          schema:
            type: string
            example: some text
      responses:
        '200':
          description: Portal path
          content:
            application/json:
              schema: {}
        '401':
          description: Unauthorized
      security:
        - asc_auth_key:
            - read
            - write
      description: Returns the full absolute path to the current portal.
  /api/2.0/portal/suspend:
    post:
      tags:
        - Portal / Settings
      summary: Send suspension instructions
      operationId: sendSuspendInstructions
      responses:
        '200':
          description: OK
        '401':
          description: Unauthorized
      security:
        - asc_auth_key:
            - read
            - write
      description: Sends the instructions to suspend the current portal.
    put:
      tags:
        - Portal / Settings
      summary: Deactivate a portal
      operationId: suspendPortal
      responses:
        '200':
          description: OK
        '401':
          description: Unauthorized
      security:
        - asc_auth_key:
            - read
            - write
      description: Deactivates the current portal.
  /api/2.0/portal/delete:
    post:
      tags:
        - Portal / Settings
      summary: Send removal instructions
      operationId: sendDeleteInstructions
      responses:
        '200':
          description: OK
        '401':
          description: Unauthorized
      security:
        - asc_auth_key:
            - read
            - write
      description: Sends the instructions to remove the current portal.
    delete:
      tags:
        - Portal / Settings
      summary: Delete a portal
      operationId: deletePortal
      responses:
        '200':
          description: URL to the feedback form about removing a portal
          content:
            application/json:
              schema: {}
        '401':
          description: Unauthorized
      security:
        - asc_auth_key:
            - read
            - write
      description: Deletes the current portal.
  /api/2.0/portal/continue:
    put:
      tags:
        - Portal / Settings
      summary: Restore a portal
      operationId: continuePortal
      responses:
        '200':
          description: OK
        '401':
          description: Unauthorized
      security:
        - asc_auth_key:
            - read
            - write
      description: Restores the current portal.
  /api/2.0/portal/users/{userID}:
    get:
      tags:
        - Portal / Users
      summary: Get a user by ID
      operationId: getUser
      parameters:
        - name: userID
          in: path
          description: User ID
          required: true
          schema:
            type: string
            format: uuid
            example: aae1e103-bca5-9fa1-ba8c-42058b4abf28
      responses:
        '200':
          description: User information
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ASC.Core.Users.UserInfo'
        '401':
          description: Unauthorized
      security:
        - asc_auth_key:
            - read
            - write
      description: >-
        Returns a user with the ID specified in the request from the current
        portal.
  /api/2.0/portal/users/invite/{employeeType}:
    get:
      tags:
        - Portal / Users
      summary: Get an invitation link
      operationId: geInviteLink
      parameters:
        - name: employeeType
          in: path
          description: Employee type (All, RoomAdmin, User, DocSpaceAdmin)
          required: true
          schema:
            $ref: '#/components/schemas/ASC.Core.Users.EmployeeType'
      responses:
        '200':
          description: Invitation link
          content:
            application/json:
              schema: {}
        '401':
          description: Unauthorized
      security:
        - asc_auth_key:
            - read
            - write
      description: Returns an invitation link for joining the portal.
  /api/2.0/portal/userscount:
    get:
      tags:
        - Portal / Users
      summary: Get a number of portal users
      operationId: getUsersCount
      responses:
        '200':
          description: Number of portal users
          content:
            application/json:
              schema:
                type: integer
                format: int64
        '401':
          description: Unauthorized
      security:
        - asc_auth_key:
            - read
            - write
      description: Returns a number of portal users.
  /api/2.0/portal/present/mark:
    post:
      tags:
        - Portal / Users
      summary: Mark a gift message as read
      operationId: markPresentAsReaded
      responses:
        '200':
          description: OK
        '401':
          description: Unauthorized
      security:
        - asc_auth_key:
            - read
            - write
      description: Marks a gift message as read.
  /api/2.0/portal/sendcongratulations:
    post:
      tags:
        - Portal / Users
      summary: Send congratulations
      operationId: sendCongratulations
      parameters:
        - name: Userid
          in: query
          description: User ID
          schema:
            type: string
            format: uuid
            example: 75a5f745-f697-4418-b38d-0fe0d277e258
        - name: Key
          in: query
          description: Email key
          schema:
            type: string
            example: some text
      responses:
        '200':
          description: Ok
        '403':
          description: No permissions to perform this action
      description: Sends congratulations to the user after registering the portal.
  /api/2.0/security/activeconnections:
    get:
      tags:
        - Security / Active connections
      summary: Get active connections
      operationId: getAllActiveConnections
      responses:
        '200':
          description: Active portal connections
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/ASC.Web.Api.ApiModels.ResponseDto.ActiveConnectionsDto
        '401':
          description: Unauthorized
      security:
        - asc_auth_key:
            - read
            - write
      description: Returns all the active connections to the portal.
  /api/2.0/security/activeconnections/logoutallchangepassword:
    put:
      tags:
        - Security / Active connections
      summary: Log out and change password
      operationId: logOutAllActiveConnectionsChangePassword
      responses:
        '200':
          description: URL to the confirmation message for changing a password
          content:
            application/json:
              schema: {}
        '401':
          description: Unauthorized
      security:
        - asc_auth_key:
            - read
            - write
      description: >-
        Logs out from all the active connections of the current user and changes
        their password.
  /api/2.0/security/activeconnections/logoutall/{userId}:
    put:
      tags:
        - Security / Active connections
      summary: Log out for the user by ID
      operationId: logOutAllActiveConnectionsForUser
      parameters:
        - name: userId
          in: path
          description: User ID
          required: true
          schema:
            type: string
            format: uuid
            example: aae1e103-bca5-9fa1-ba8c-42058b4abf28
      responses:
        '200':
          description: Ok
        '401':
          description: Unauthorized
        '403':
          description: Method not available
      security:
        - asc_auth_key:
            - read
            - write
      description: >-
        Logs out from all the active connections of the user with the ID
        specified in the request.
  /api/2.0/security/activeconnections/logoutallexceptthis:
    put:
      tags:
        - Security / Active connections
      summary: Log out from all connections
      operationId: logOutAllExceptThisConnection
      responses:
        '200':
          description: Current user name
          content:
            application/json:
              schema: {}
        '401':
          description: Unauthorized
      security:
        - asc_auth_key:
            - read
            - write
      description: Logs out from all the active connections except the current connection.
  /api/2.0/security/activeconnections/logout/{loginEventId}:
    put:
      tags:
        - Security / Active connections
      summary: Log out from the connection
      operationId: logOutActiveConnection
      parameters:
        - name: loginEventId
          in: path
          description: Login event ID
          required: true
          schema:
            type: integer
            format: int32
            example: 9846
      responses:
        '200':
          description: 'Boolean value: true if the operation is successful'
          content:
            application/json:
              schema:
                type: boolean
        '401':
          description: Unauthorized
        '403':
          description: Method not available
      security:
        - asc_auth_key:
            - read
            - write
      description: Logs out from the connection with the ID specified in the request.
  /api/2.0/security/audit/events/last:
    get:
      tags:
        - Security / Audit trail data
      summary: Get audit trail data
      operationId: getLastAuditEvents
      responses:
        '200':
          description: List of audit trail data
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/ASC.Web.Api.ApiModel.ResponseDto.AuditEventDto
        '401':
          description: Unauthorized
        '402':
          description: Your pricing plan does not support this option
      security:
        - asc_auth_key:
            - read
            - write
      description: >-
        Returns a list of the latest changes (creation, modification, deletion,
        etc.) made by users to the entities (tasks, opportunities, files, etc.)
        on the portal.
  /api/2.0/security/audit/events/filter:
    get:
      tags:
        - Security / Audit trail data
      summary: Get filtered audit trail data
      operationId: getAuditEventsByFilter
      parameters:
        - name: userId
          in: query
          description: User ID
          schema:
            type: string
            format: uuid
            example: aae1e103-bca5-9fa1-ba8c-42058b4abf28
        - name: productType
          in: query
          description: Product
          schema:
            $ref: '#/components/schemas/ASC.AuditTrail.Types.ProductType'
        - name: moduleType
          in: query
          description: Module
          schema:
            $ref: '#/components/schemas/ASC.AuditTrail.Types.ModuleType'
        - name: actionType
          in: query
          description: Action type
          schema:
            $ref: '#/components/schemas/ASC.AuditTrail.Types.ActionType'
        - name: action
          in: query
          description: Action
          schema:
            $ref: '#/components/schemas/ASC.MessagingSystem.Core.MessageAction'
        - name: entryType
          in: query
          description: Entry
          schema:
            $ref: '#/components/schemas/ASC.AuditTrail.Types.EntryType'
        - name: target
          in: query
          description: Target
          schema:
            type: string
            example: some text
        - name: from
          in: query
          description: Start date
          schema:
            $ref: '#/components/schemas/ASC.Api.Core.ApiDateTime'
        - name: to
          in: query
          description: End date
          schema:
            $ref: '#/components/schemas/ASC.Api.Core.ApiDateTime'
      responses:
        '200':
          description: List of filtered audit trail data
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/ASC.Web.Api.ApiModel.ResponseDto.AuditEventDto
        '401':
          description: Unauthorized
        '402':
          description: Your pricing plan does not support this option
      security:
        - asc_auth_key:
            - read
            - write
      description: >-
        Returns a list of the audit events by the parameters specified in the
        request.
  /api/2.0/security/audit/types:
    get:
      tags:
        - Security / Audit trail data
      summary: Get audit trail types
      operationId: getTypes
      responses:
        '200':
          description: Audit trail types
          content:
            application/json:
              schema: {}
      description: Returns all the available audit trail types.
  /api/2.0/security/audit/mappers:
    get:
      tags:
        - Security / Audit trail data
      summary: Get audit trail mappers
      operationId: getMappers
      parameters:
        - name: productType
          in: query
          description: Product
          schema:
            $ref: '#/components/schemas/ASC.AuditTrail.Types.ProductType'
        - name: moduleType
          in: query
          description: Module
          schema:
            $ref: '#/components/schemas/ASC.AuditTrail.Types.ModuleType'
      responses:
        '200':
          description: Audit trail mappers
          content:
            application/json:
              schema: {}
      description: Returns the mappers for the audit trail types.
  /api/2.0/security/audit/events/report:
    post:
      tags:
        - Security / Audit trail data
      summary: Generate the audit trail report
      operationId: createAuditTrailReport
      responses:
        '200':
          description: URL to the xlsx report file
          content:
            application/json:
              schema: {}
        '401':
          description: Unauthorized
        '402':
          description: Your pricing plan does not support this option
        '403':
          description: You don't have enough permission to create
      security:
        - asc_auth_key:
            - read
            - write
      description: Generates the audit trail report.
  /api/2.0/security/audit/settings/lifetime:
    get:
      tags:
        - Security / Audit trail data
      summary: Get the audit trail settings
      operationId: getAuditSettings
      responses:
        '200':
          description: Audit settings
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ASC.Core.Tenants.TenantAuditSettings'
        '401':
          description: Unauthorized
        '402':
          description: Your pricing plan does not support this option
      security:
        - asc_auth_key:
            - read
            - write
      description: Returns the audit trail settings.
    post:
      tags:
        - Security / Audit trail data
      summary: Set the audit trail settings
      operationId: setAuditSettings
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ASC.Core.Tenants.TenantAuditSettingsWrapper'
      responses:
        '200':
          description: Audit trail settings
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ASC.Core.Tenants.TenantAuditSettings'
        '400':
          description: Exception in LoginHistoryLifeTime or AuditTrailLifeTime
        '401':
          description: Unauthorized
        '402':
          description: Your pricing plan does not support this option
      security:
        - asc_auth_key:
            - read
            - write
      description: Sets the audit trail settings for the current portal.
  /api/2.0/security/csp:
    post:
      tags:
        - Security / CSP
      summary: Csp
      operationId: csp
      requestBody:
        content:
          application/json:
            schema:
              $ref: >-
                #/components/schemas/ASC.Web.Api.ApiModels.RequestsDto.CspRequestsDto
      responses:
        '200':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ASC.Web.Api.ApiModels.ResponseDto.CspDto'
        '400':
          description: Exception in Domains
        '401':
          description: Unauthorized
      security:
        - asc_auth_key:
            - read
            - write
      description: Csp
    get:
      tags:
        - Security / CSP
      summary: Gets csp
      operationId: getCsp
      responses:
        '200':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ASC.Web.Api.ApiModels.ResponseDto.CspDto'
      description: Gets csp
  /api/2.0/settings/push/docregisterdevice:
    post:
      tags:
        - Security / Firebase
      summary: Save the Documents Firebase device token
      operationId: docRegisterPusnNotificationDevice
      requestBody:
        content:
          application/json:
            schema:
              $ref: >-
                #/components/schemas/ASC.Web.Api.ApiModels.RequestsDto.FirebaseRequestsDto
      responses:
        '200':
          description: FireBase user
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ASC.Core.Common.EF.FireBaseUser'
        '401':
          description: Unauthorized
      security:
        - asc_auth_key:
            - read
            - write
      description: >-
        Saves the Firebase device token specified in the request for the
        Documents application.
  /api/2.0/settings/push/docsubscribe:
    put:
      tags:
        - Security / Firebase
      summary: Subscribe to Documents push notification
      operationId: subscribeDocumentsPushNotification
      requestBody:
        content:
          application/json:
            schema:
              $ref: >-
                #/components/schemas/ASC.Web.Api.ApiModels.RequestsDto.FirebaseRequestsDto
      responses:
        '200':
          description: FireBase user
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ASC.Core.Common.EF.FireBaseUser'
        '401':
          description: Unauthorized
      security:
        - asc_auth_key:
            - read
            - write
      description: Subscribes to the Documents push notification.
  /api/2.0/security/audit/login/last:
    get:
      tags:
        - Security / Login history
      summary: Get login history
      operationId: getLastLoginEvents
      responses:
        '200':
          description: List of login events
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/ASC.Web.Api.ApiModel.ResponseDto.LoginEventDto
        '401':
          description: Unauthorized
        '402':
          description: Your pricing plan does not support this option
      security:
        - asc_auth_key:
            - read
            - write
      description: >-
        Returns all the latest user login activity, including successful logins
        and error logs.
  /api/2.0/security/audit/login/filter:
    get:
      tags:
        - Security / Login history
      summary: Get filtered login events
      operationId: getLoginEventsByFilter
      parameters:
        - name: userId
          in: query
          description: User ID
          schema:
            type: string
            format: uuid
            example: aae1e103-bca5-9fa1-ba8c-42058b4abf28
        - name: action
          in: query
          description: Action
          schema:
            $ref: '#/components/schemas/ASC.MessagingSystem.Core.MessageAction'
        - name: from
          in: query
          description: Start date
          schema:
            $ref: '#/components/schemas/ASC.Api.Core.ApiDateTime'
        - name: to
          in: query
          description: End date
          schema:
            $ref: '#/components/schemas/ASC.Api.Core.ApiDateTime'
      responses:
        '200':
          description: List of filtered login events
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/ASC.Web.Api.ApiModel.ResponseDto.LoginEventDto
        '401':
          description: Unauthorized
        '402':
          description: Your pricing plan does not support this option
      security:
        - asc_auth_key:
            - read
            - write
      description: >-
        Returns a list of the login events by the parameters specified in the
        request.
  /api/2.0/security/audit/login/report:
    post:
      tags:
        - Security / Login history
      summary: Generate the login history report
      operationId: createLoginHistoryReport
      responses:
        '200':
          description: URL to the xlsx report file
          content:
            application/json:
              schema: {}
        '401':
          description: Unauthorized
        '402':
          description: Your pricing plan does not support this option
      security:
        - asc_auth_key:
            - read
            - write
      description: Generates the login history report.
  /api/2.0/smtpsettings/smtp:
    get:
      tags:
        - Security / SMTP settings
      summary: Get the SMTP settings
      operationId: getSmtpSettings
      responses:
        '200':
          description: SMTP settings
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/ASC.Web.Api.ApiModel.ResponseDto.SmtpSettingsDto
        '401':
          description: Unauthorized
        '402':
          description: Your pricing plan does not support this option
      security:
        - asc_auth_key:
            - read
            - write
      description: Returns the current portal SMTP settings.
    post:
      tags:
        - Security / SMTP settings
      summary: Save the SMTP settings
      operationId: saveSmtpSettings
      requestBody:
        content:
          application/json:
            schema:
              $ref: >-
                #/components/schemas/ASC.Web.Api.ApiModel.ResponseDto.SmtpSettingsDto
      responses:
        '200':
          description: SMTP settings
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/ASC.Web.Api.ApiModel.ResponseDto.SmtpSettingsDto
        '401':
          description: Unauthorized
        '402':
          description: Your pricing plan does not support this option
      security:
        - asc_auth_key:
            - read
            - write
      description: Saves the SMTP settings for the current portal.
    delete:
      tags:
        - Security / SMTP settings
      summary: Reset the SMTP settings
      operationId: resetSmtpSettings
      responses:
        '200':
          description: Default SMTP settings
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/ASC.Web.Api.ApiModel.ResponseDto.SmtpSettingsDto
        '401':
          description: Unauthorized
        '402':
          description: Your pricing plan does not support this option
      security:
        - asc_auth_key:
            - read
            - write
      description: Resets the SMTP settings of the current portal.
  /api/2.0/smtpsettings/smtp/test:
    get:
      tags:
        - Security / SMTP settings
      summary: Test the SMTP settings
      operationId: testSmtpSettings
      responses:
        '200':
          description: SMTP operation status
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/ASC.Api.Settings.Smtp.SmtpOperationStatusRequestsDto
        '401':
          description: Unauthorized
        '402':
          description: Your pricing plan does not support this option
      security:
        - asc_auth_key:
            - read
            - write
      description: >-
        Tests the SMTP settings for the current portal (sends test message to
        the user email).
  /api/2.0/smtpsettings/smtp/test/status:
    get:
      tags:
        - Security / SMTP settings
      summary: Get the SMTP test process status
      operationId: getSmtpOperationStatus
      responses:
        '200':
          description: SMTP operation status
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/ASC.Api.Settings.Smtp.SmtpOperationStatusRequestsDto
        '401':
          description: Unauthorized
        '402':
          description: Your pricing plan does not support this option
      security:
        - asc_auth_key:
            - read
            - write
      description: Returns the SMTP test process status.
  /api/2.0/settings/authservice:
    get:
      tags:
        - Settings / Authorization
      summary: Get the authorization services
      operationId: getAuthServices
      responses:
        '200':
          description: Authorization services
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/ASC.Web.Api.ApiModel.RequestsDto.AuthServiceRequestsDto
        '401':
          description: Unauthorized
      security:
        - asc_auth_key:
            - read
            - write
      description: Returns the authorization services.
    post:
      tags:
        - Settings / Authorization
      summary: Save the authorization keys
      operationId: saveAuthKeys
      requestBody:
        content:
          application/json:
            schema:
              $ref: >-
                #/components/schemas/ASC.Web.Api.ApiModel.RequestsDto.AuthServiceRequestsDto
      responses:
        '200':
          description: 'Boolean value: true if the authorization keys are changed'
          content:
            application/json:
              schema:
                type: boolean
        '400':
          description: Bad keys
        '401':
          description: Unauthorized
        '402':
          description: Your pricing plan does not support this option
      security:
        - asc_auth_key:
            - read
            - write
      description: Saves the authorization keys.
  /api/2.0/settings:
    get:
      tags:
        - Settings / Common settings
      summary: Get the portal settings
      operationId: getSettings
      parameters:
        - name: withpassword
          in: query
          description: Specifies if the password hasher settings will be returned or not
          schema:
            type: boolean
            example: true
      responses:
        '200':
          description: Settings
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/ASC.Web.Api.ApiModel.ResponseDto.SettingsDto
      description: >-
        Returns a list of all the available portal settings with the current
        values for each parameter.
  /api/2.0/settings/maildomainsettings:
    post:
      tags:
        - Settings / Common settings
      summary: Save the mail domain settings
      operationId: saveMailDomainSettings
      requestBody:
        content:
          application/json:
            schema:
              $ref: >-
                #/components/schemas/ASC.Web.Api.ApiModel.RequestsDto.MailDomainSettingsRequestsDto
      responses:
        '200':
          description: Message about the result of saving the mail domain settings
          content:
            application/json:
              schema: {}
        '401':
          description: Unauthorized
      security:
        - asc_auth_key:
            - read
            - write
      description: Saves the mail domain settings specified in the request to the portal.
  /api/2.0/settings/cultures:
    get:
      tags:
        - Settings / Common settings
      summary: Get supported languages
      operationId: getSupportedCultures
      responses:
        '200':
          description: List of all the available portal languages
          content:
            application/json:
              schema:
                type: string
      description: >-
        Returns a list of all the available portal languages in the format of a
        two-letter or four-letter language code (e.g. "de", "en-US", etc.).
  /api/2.0/settings/timezones:
    get:
      tags:
        - Settings / Common settings
      summary: Get time zones
      operationId: getTimeZonesAsync
      responses:
        '200':
          description: >-
            List of all the available time zones with their IDs and display
            names
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/ASC.Web.Api.ApiModel.RequestsDto.TimezonesRequestsDto
        '401':
          description: Unauthorized
      security:
        - asc_auth_key:
            - read
            - write
      description: Returns a list of all the available portal time zones.
  /api/2.0/settings/machine:
    get:
      tags:
        - Settings / Common settings
      summary: Get hostname
      operationId: getMachineName
      responses:
        '200':
          description: Portal hostname
          content:
            application/json:
              schema: {}
        '401':
          description: Unauthorized
      security:
        - asc_auth_key:
            - read
            - write
      description: Returns the portal hostname.
  /api/2.0/settings/dns:
    put:
      tags:
        - Settings / Common settings
      summary: Save the DNS settings
      operationId: saveDnsSettings
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ASC.Web.Api.Models.DnsSettingsRequestsDto'
      responses:
        '200':
          description: Message about changing DNS
          content:
            application/json:
              schema: {}
        '400':
          description: Invalid domain name/incorrect length of doman name
        '401':
          description: Unauthorized
        '402':
          description: Your pricing plan does not support this option
        '405':
          description: Method not allowed
      security:
        - asc_auth_key:
            - read
            - write
      description: Saves the DNS settings specified in the request to the current portal.
  /api/2.0/settings/logo:
    get:
      tags:
        - Settings / Common settings
      summary: Get a portal logo
      operationId: getLogo
      responses:
        '200':
          description: Portal logo image URL
          content:
            application/json:
              schema: {}
        '401':
          description: Unauthorized
      security:
        - asc_auth_key:
            - read
            - write
      description: Returns the portal logo image URL.
  /api/2.0/settings/wizard/complete:
    put:
      tags:
        - Settings / Common settings
      summary: Complete the Wizard settings
      operationId: completeWizard
      requestBody:
        content:
          application/json:
            schema:
              $ref: >-
                #/components/schemas/ASC.Web.Api.ApiModel.RequestsDto.WizardRequestsDto
      responses:
        '200':
          description: Wizard settings
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/ASC.Web.Core.Utility.Settings.WizardSettings
        '400':
          description: Incorrect email address/The password is empty
        '401':
          description: Unauthorized
        '402':
          description: >-
            You must enter a license key or license key is not correct or
            license expired or user quota does not match the license
      security:
        - asc_auth_key:
            - read
            - write
      description: Completes the Wizard settings.
  /api/2.0/settings/colortheme:
    get:
      tags:
        - Settings / Common settings
      summary: Get a color theme
      operationId: getColorTheme
      responses:
        '200':
          description: Settings of the portal themes
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/ASC.Web.Api.ApiModels.ResponseDto.CustomColorThemesSettingsDto
      description: Returns the portal color theme.
    put:
      tags:
        - Settings / Common settings
      summary: Save a color theme
      operationId: saveColorTheme
      requestBody:
        content:
          application/json:
            schema:
              $ref: >-
                #/components/schemas/ASC.Web.Api.ApiModels.RequestsDto.CustomColorThemesSettingsRequestsDto
      responses:
        '200':
          description: Portal theme settings
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/ASC.Web.Api.ApiModels.ResponseDto.CustomColorThemesSettingsDto
        '401':
          description: Unauthorized
      security:
        - asc_auth_key:
            - read
            - write
      description: Saves the portal color theme specified in the request.
    delete:
      tags:
        - Settings / Common settings
      summary: Delete a color theme
      operationId: deleteColorTheme
      parameters:
        - name: id
          in: query
          description: Portal theme ID
          schema:
            type: integer
            format: int32
            example: 9846
      responses:
        '200':
          description: >-
            Portal theme settings: custom color theme settings, selected or not,
            limit
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/ASC.Web.Api.ApiModels.ResponseDto.CustomColorThemesSettingsDto
        '401':
          description: Unauthorized
      security:
        - asc_auth_key:
            - read
            - write
      description: Deletes the portal color theme with the ID specified in the request.
  /api/2.0/settings/closeadminhelper:
    put:
      tags:
        - Settings / Common settings
      summary: Close the admin helper notification
      operationId: closeAdminHelper
      responses:
        '200':
          description: Ok
        '401':
          description: Unauthorized
        '405':
          description: Not available
      security:
        - asc_auth_key:
            - read
            - write
      description: Closes the admin helper notification.
  /api/2.0/settings/emailactivation:
    put:
      tags:
        - Settings / Common settings
      summary: Update the email activation settings
      operationId: updateEmailActivationSettings
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ASC.Web.Studio.Core.EmailActivationSettings'
      responses:
        '200':
          description: Updated email activation settings
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/ASC.Web.Studio.Core.EmailActivationSettings
        '401':
          description: Unauthorized
      security:
        - asc_auth_key:
            - read
            - write
      description: Updates the email activation settings.
  /api/2.0/settings/socket:
    get:
      tags:
        - Settings / Common settings
      summary: Get the socket settings
      operationId: getSocketSettings
      responses:
        '200':
          description: 'Socket settings: hub URL'
          content:
            application/json:
              schema: {}
        '401':
          description: Unauthorized
      security:
        - asc_auth_key:
            - read
            - write
      description: Returns the socket settings.
  /api/2.0/settings/payment:
    get:
      tags:
        - Settings / Common settings
      summary: Get the payment settings
      operationId: paymentSettings
      responses:
        '200':
          description: >-
            Payment settings: sales email, feedback and support URL, link to pay
            for a portal, Standalone or not, current license, maximum quota
            quantity
          content:
            application/json:
              schema: {}
        '401':
          description: Unauthorized
      security:
        - asc_auth_key:
            - read
            - write
      description: Returns the portal payment settings.
  /api/2.0/settings/cookiesettings:
    get:
      tags:
        - Settings / Cookies
      summary: Get cookies lifetime
      operationId: getCookieSettings
      responses:
        '200':
          description: Lifetime value in minutes
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/ASC.Web.Api.ApiModels.ResponseDto.CookieSettingsDto
        '401':
          description: Unauthorized
      security:
        - asc_auth_key:
            - read
            - write
      description: Returns the cookies lifetime value in minutes.
    put:
      tags:
        - Settings / Cookies
      summary: Update cookies lifetime
      operationId: updateCookieSettings
      requestBody:
        content:
          application/json:
            schema:
              $ref: >-
                #/components/schemas/ASC.Web.Api.Models.CookieSettingsRequestsDto
      responses:
        '200':
          description: Message about the result of saving new settings
          content:
            application/json:
              schema: {}
        '401':
          description: Unauthorized
        '402':
          description: Your pricing plan does not support this option
      security:
        - asc_auth_key:
            - read
            - write
      description: Updates the cookies lifetime value in minutes.
  /api/2.0/settings/customnavigation/getall:
    get:
      tags:
        - Settings / Custom Navigation
      summary: Get the custom navigation items
      operationId: getCustomNavigationItems
      responses:
        '200':
          description: List of the custom navigation items
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ASC.Web.Studio.Core.CustomNavigationItem'
        '401':
          description: Unauthorized
      security:
        - asc_auth_key:
            - read
            - write
      description: Returns a list of the custom navigation items.
  /api/2.0/settings/customnavigation/getsample:
    get:
      tags:
        - Settings / Custom Navigation
      summary: Get a custom navigation item sample
      operationId: getCustomNavigationItemSample
      responses:
        '200':
          description: Custom navigation item
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ASC.Web.Studio.Core.CustomNavigationItem'
        '401':
          description: Unauthorized
      security:
        - asc_auth_key:
            - read
            - write
      description: Returns a custom navigation item sample.
  /api/2.0/settings/customnavigation/get/{id}:
    get:
      tags:
        - Settings / Custom Navigation
      summary: Get a custom navigation item by ID
      operationId: getCustomNavigationItem
      parameters:
        - name: id
          in: path
          description: Id
          required: true
          schema:
            type: string
            format: uuid
            example: aae1e103-bca5-9fa1-ba8c-42058b4abf28
      responses:
        '200':
          description: Custom navigation item
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ASC.Web.Studio.Core.CustomNavigationItem'
        '401':
          description: Unauthorized
      security:
        - asc_auth_key:
            - read
            - write
      description: Returns a custom navigation item by the ID specified in the request.
  /api/2.0/settings/customnavigation/create:
    post:
      tags:
        - Settings / Custom Navigation
      summary: Add a custom navigation item
      operationId: createCustomNavigationItem
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ASC.Web.Studio.Core.CustomNavigationItem'
      responses:
        '200':
          description: Custom navigation item
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ASC.Web.Studio.Core.CustomNavigationItem'
        '401':
          description: Unauthorized
      security:
        - asc_auth_key:
            - read
            - write
      description: >-
        Adds a custom navigation item with the parameters specified in the
        request.
  /api/2.0/settings/customnavigation/delete/{id}:
    delete:
      tags:
        - Settings / Custom Navigation
      summary: Delete a custom navigation item
      operationId: deleteCustomNavigationItem
      parameters:
        - name: id
          in: path
          description: Id
          required: true
          schema:
            type: string
            format: uuid
            example: aae1e103-bca5-9fa1-ba8c-42058b4abf28
      responses:
        '200':
          description: OK
        '401':
          description: Unauthorized
      security:
        - asc_auth_key:
            - read
            - write
      description: Deletes a custom navigation item with the ID specified in the request.
  /api/2.0/settings/encryption/start:
    post:
      tags:
        - Settings / Encryption
      summary: Start the storage encryption process
      operationId: startStorageEncryption
      requestBody:
        content:
          application/json:
            schema:
              $ref: >-
                #/components/schemas/ASC.Web.Api.ApiModel.RequestsDto.StorageEncryptionRequestsDto
      responses:
        '200':
          description: 'Boolean value: true if the operation is successful'
          content:
            application/json:
              schema:
                type: boolean
        '401':
          description: Unauthorized
        '402':
          description: Your pricing plan does not support this option
        '403':
          description: No permissions to perform this action
        '405':
          description: Method not allowed
      security:
        - asc_auth_key:
            - read
            - write
      description: Starts the storage encryption process.
  /api/2.0/settings/encryption/progress:
    get:
      tags:
        - Settings / Encryption
      summary: Get the storage encryption progress
      operationId: getStorageEncryptionProgress
      responses:
        '200':
          description: Storage encryption progress
          content:
            application/json:
              schema:
                type: number
                format: double
        '401':
          description: Unauthorized
        '405':
          description: Method not allowed
      security:
        - asc_auth_key:
            - read
            - write
      description: Returns the storage encryption progress.
  /api/2.0/settings/greetingsettings:
    get:
      tags:
        - Settings / Greeting settings
      summary: Get greeting settings
      operationId: getGreetingSettings
      responses:
        '200':
          description: 'Greeting settings: tenant name'
          content:
            application/json:
              schema: {}
        '401':
          description: Unauthorized
      security:
        - asc_auth_key:
            - read
            - write
      description: Returns the greeting settings for the current portal.
    post:
      tags:
        - Settings / Greeting settings
      summary: Save the greeting settings
      operationId: saveGreetingSettings
      requestBody:
        content:
          application/json:
            schema:
              $ref: >-
                #/components/schemas/ASC.Web.Api.ApiModel.RequestsDto.GreetingSettingsRequestsDto
      responses:
        '200':
          description: Message about saving greeting settings successfully
          content:
            application/json:
              schema: {}
        '401':
          description: Unauthorized
      security:
        - asc_auth_key:
            - read
            - write
      description: >-
        Saves the greeting settings specified in the request to the current
        portal.
  /api/2.0/settings/greetingsettings/isdefault:
    get:
      tags:
        - Settings / Greeting settings
      summary: Check the default greeting settings
      operationId: isDefault
      responses:
        '200':
          description: >-
            Boolean value: true if the greeting settings of the current portal
            are set to default
          content:
            application/json:
              schema:
                type: boolean
        '401':
          description: Unauthorized
      security:
        - asc_auth_key:
            - read
            - write
      description: >-
        Checks if the greeting settings of the current portal are set to default
        or not.
  /api/2.0/settings/greetingsettings/restore:
    post:
      tags:
        - Settings / Greeting settings
      summary: Restore the greeting settings
      operationId: restoreGreetingSettings
      responses:
        '200':
          description: 'Greeting settings: tenant name'
          content:
            application/json:
              schema: {}
        '401':
          description: Unauthorized
      security:
        - asc_auth_key:
            - read
            - write
      description: Restores the current portal greeting settings.
  /api/2.0/settings/iprestrictions:
    get:
      tags:
        - Settings / IP restrictions
      summary: Get the IP portal restrictions
      operationId: getIpRestrictions
      responses:
        '200':
          description: List of IP restrictions parameters
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ASC.IPSecurity.IPRestriction'
        '401':
          description: Unauthorized
      security:
        - asc_auth_key:
            - read
            - write
      description: Returns the IP portal restrictions.
    put:
      tags:
        - Settings / IP restrictions
      summary: Save the IP restriction settings
      operationId: saveIpRestrictions
      requestBody:
        content:
          application/json:
            schema:
              $ref: >-
                #/components/schemas/ASC.Web.Api.ApiModel.RequestsDto.IpRestrictionsDto
      responses:
        '200':
          description: Updated IP restriction settings
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/ASC.Web.Api.ApiModel.RequestsDto.IpRestrictionsDto
        '401':
          description: Unauthorized
      security:
        - asc_auth_key:
            - read
            - write
      description: >-
        Updates the IP restriction settings with a parameter specified in the
        request.
  /api/2.0/settings/iprestrictions/settings:
    get:
      tags:
        - Settings / IP restrictions
      summary: Get the IP restriction settings
      operationId: readIpRestrictionsSettings
      responses:
        '200':
          description: IP restriction settings
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ASC.IPSecurity.IPRestrictionsSettings'
        '401':
          description: Unauthorized
      security:
        - asc_auth_key:
            - read
            - write
      description: Returns the IP restriction settings.
    put:
      tags:
        - Settings / IP restrictions
      summary: Save the IP restriction settings
      operationId: updateIpRestrictionsSettings
      requestBody:
        content:
          application/json:
            schema:
              $ref: >-
                #/components/schemas/ASC.Web.Api.ApiModel.RequestsDto.IpRestrictionsDto
      responses:
        '200':
          description: Updated IP restriction settings
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/ASC.Web.Api.ApiModel.RequestsDto.IpRestrictionsDto
        '401':
          description: Unauthorized
      security:
        - asc_auth_key:
            - read
            - write
      description: >-
        Updates the IP restriction settings with a parameter specified in the
        request.
  /api/2.0/settings/license/refresh:
    get:
      tags:
        - Settings / License
      summary: Refresh the license
      operationId: refreshLicense
      responses:
        '200':
          description: 'Boolean value: true if the operation is successful'
          content:
            application/json:
              schema:
                type: boolean
        '401':
          description: Unauthorized
      security:
        - asc_auth_key:
            - read
            - write
      description: Refreshes the license.
  /api/2.0/settings/license/accept:
    post:
      tags:
        - Settings / License
      summary: Activate a license
      operationId: acceptLicense
      responses:
        '200':
          description: Message about the result of activating license
          content:
            application/json:
              schema: {}
        '401':
          description: Unauthorized
      security:
        - asc_auth_key:
            - read
            - write
      description: Activates a license for the portal.
  /api/2.0/settings/license/required:
    get:
      tags:
        - Settings / License
      summary: Request a license
      operationId: requestLicense
      responses:
        '200':
          description: 'Boolean value: true if the license is required'
          content:
            application/json:
              schema:
                type: boolean
      description: Requests a portal license if necessary.
  /api/2.0/settings/license:
    post:
      tags:
        - Settings / License
      summary: Upload a license
      operationId: uploadLicense
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                Files:
                  type: array
                  items:
                    type: string
                    format: binary
                  description: License attachments
            encoding:
              Files:
                style: form
      responses:
        '200':
          description: License
          content:
            application/json:
              schema: {}
        '400':
          description: The uploaded file could not be found
        '401':
          description: Unauthorized
        '403':
          description: Portal Access
        '405':
          description: Your pricing plan does not support this option
      security:
        - asc_auth_key:
            - read
            - write
      description: Uploads a portal license specified in the request.
  /api/2.0/settings/security/loginsettings:
    put:
      tags:
        - Settings / Login settings
      summary: Update login settings
      operationId: updateLoginSettings
      requestBody:
        content:
          application/json:
            schema:
              $ref: >-
                #/components/schemas/ASC.Web.Api.ApiModels.RequestsDto.LoginSettingsRequestDto
      responses:
        '200':
          description: Updated login settings
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/ASC.Web.Api.ApiModels.ResponseDto.LoginSettingsDto
        '401':
          description: Unauthorized
      security:
        - asc_auth_key:
            - read
            - write
      description: Updates the login settings with the parameters specified in the request.
    get:
      tags:
        - Settings / Login settings
      summary: Get login settings
      operationId: getLoginSettings
      responses:
        '200':
          description: Login settings
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/ASC.Web.Api.ApiModels.ResponseDto.LoginSettingsDto
        '401':
          description: Unauthorized
      security:
        - asc_auth_key:
            - read
            - write
      description: Returns the portal login settings.
    delete:
      tags:
        - Settings / Login settings
      summary: Returns the portal login settings.
      operationId: setDefaultLoginSettings
      responses:
        '200':
          description: Login settings
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/ASC.Web.Api.ApiModels.ResponseDto.LoginSettingsDto
        '401':
          description: Unauthorized
      security:
        - asc_auth_key:
            - read
            - write
      description: Returns the portal login settings.
  /api/2.0/settings/messagesettings:
    post:
      tags:
        - Settings / Messages
      summary: Enable the administrator message settings
      operationId: enableAdminMessageSettings
      requestBody:
        content:
          application/json:
            schema:
              $ref: >-
                #/components/schemas/ASC.Web.Api.ApiModel.RequestsDto.TurnOnAdminMessageSettingsRequestDto
      responses:
        '200':
          description: Message about the result of saving new settings
          content:
            application/json:
              schema: {}
        '401':
          description: Unauthorized
      security:
        - asc_auth_key:
            - read
            - write
      description: >-
        Displays the contact form on the "Sign In" page, allowing users to send
        a message to the DocSpace administrator in case they encounter any
        issues while accessing DocSpace.
  /api/2.0/settings/sendadmmail:
    post:
      tags:
        - Settings / Messages
      summary: Send a message to the administrator
      operationId: sendAdmMail
      requestBody:
        content:
          application/json:
            schema:
              $ref: >-
                #/components/schemas/ASC.Web.Api.ApiModel.RequestsDto.AdminMessageSettingsRequestsDto
      responses:
        '200':
          description: Message about the result of sending a message
          content:
            application/json:
              schema: {}
        '400':
          description: Incorrect email or message text is empty
        '429':
          description: Request limit is exceeded
      description: >-
        Sends a message to the administrator email when unauthorized users
        encounter issues accessing DocSpace.
  /api/2.0/settings/sendjoininvite:
    post:
      tags:
        - Settings / Messages
      summary: Sends an invitation email
      operationId: sendJoinInviteMail
      requestBody:
        content:
          application/json:
            schema:
              $ref: >-
                #/components/schemas/ASC.Web.Api.ApiModel.RequestsDto.AdminMessageBaseSettingsRequestsDto
      responses:
        '200':
          description: Message about sending a link to confirm joining the DocSpace
          content:
            application/json:
              schema: {}
        '400':
          description: Incorrect email or email already exists
        '403':
          description: No permissions to perform this action
        '429':
          description: Request limit is exceeded
      description: Sends an invitation email with a link to the DocSpace.
  /api/2.0/settings/notification/{type}:
    get:
      tags:
        - Settings / Notifications
      summary: Check notification availability
      operationId: getNotificationSettings
      parameters:
        - name: type
          in: path
          description: Notification type (Badges, RoomsActivity, DailyFeed, UsefullTips)
          required: true
          schema:
            $ref: '#/components/schemas/ASC.Web.Core.Notify.NotificationType'
      responses:
        '200':
          description: Notification settings
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/ASC.Web.Api.ApiModels.ResponseDto.NotificationSettingsDto
        '401':
          description: Unauthorized
      security:
        - asc_auth_key:
            - read
            - write
      description: >-
        Checks if the notification type specified in the request is enabled or
        not.
  /api/2.0/settings/notification:
    post:
      tags:
        - Settings / Notifications
      summary: Enable notifications
      operationId: setSettings
      requestBody:
        content:
          application/json:
            schema:
              $ref: >-
                #/components/schemas/ASC.Web.Api.ApiModels.RequestsDto.NotificationSettingsRequestsDto
      responses:
        '200':
          description: Notification settings
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/ASC.Web.Api.ApiModels.ResponseDto.NotificationSettingsDto
        '401':
          description: Unauthorized
      security:
        - asc_auth_key:
            - read
            - write
      description: Enables the notification type specified in the request.
  /api/2.0/settings/notification/rooms:
    get:
      tags:
        - Settings / Notifications
      summary: Get room notification settings
      operationId: getRoomsNotificationSettings
      responses:
        '200':
          description: Room notification settings
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/ASC.Web.Api.ApiModels.ResponseDto.RoomsNotificationSettingsDto
        '401':
          description: Unauthorized
      security:
        - asc_auth_key:
            - read
            - write
      description: Returns a list of rooms with the disabled notifications
    post:
      tags:
        - Settings / Notifications
      summary: Set room notification status
      operationId: setRoomsNotificationStatus
      requestBody:
        content:
          application/json:
            schema:
              $ref: >-
                #/components/schemas/ASC.Web.Api.ApiModels.RequestsDto.RoomsNotificationsSettingsRequestDto
      responses:
        '200':
          description: Room notification settings
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/ASC.Web.Api.ApiModels.ResponseDto.RoomsNotificationSettingsDto
        '401':
          description: Unauthorized
      security:
        - asc_auth_key:
            - read
            - write
      description: >-
        Sets a notification status for a room with the ID specified in the
        request.
  /api/2.0/settings/owner:
    post:
      tags:
        - Settings / Owner
      summary: Send the owner change instructions
      operationId: sendOwnerChangeInstructions
      requestBody:
        content:
          application/json:
            schema:
              $ref: >-
                #/components/schemas/ASC.Web.Api.ApiModel.RequestsDto.OwnerIdSettingsRequestDto
      responses:
        '200':
          description: Message about changing the portal owner
          content:
            application/json:
              schema: {}
        '401':
          description: Unauthorized
        '403':
          description: Collaborator can not be an owner
      security:
        - asc_auth_key:
            - read
            - write
      description: Sends the instructions to change the DocSpace owner.
    put:
      tags:
        - Settings / Owner
      summary: Update the portal owner
      operationId: owner
      requestBody:
        content:
          application/json:
            schema:
              $ref: >-
                #/components/schemas/ASC.Web.Api.ApiModel.RequestsDto.OwnerIdSettingsRequestDto
      responses:
        '200':
          description: Ok
        '400':
          description: The user could not be found
        '401':
          description: Unauthorized
        '409':
          description: ''
      security:
        - asc_auth_key:
            - read
            - write
      description: >-
        Updates the current portal owner with a new one specified in the
        request.
  /api/2.0/settings/userquotasettings:
    get:
      tags:
        - Settings / Quota
      summary: Gets user quota
      operationId: getUserQuotaSettings
      responses:
        '200':
          description: Ok
          content:
            application/json:
              schema: {}
        '401':
          description: Unauthorized
      security:
        - asc_auth_key:
            - read
            - write
      description: Gets user quota
  /api/2.0/settings/roomquotasettings:
    post:
      tags:
        - Settings / Quota
      summary: Save the room quota settings
      operationId: saveRoomQuotaSettings
      requestBody:
        content:
          application/json:
            schema:
              $ref: >-
                #/components/schemas/ASC.Web.Api.ApiModel.RequestsDto.QuotaSettingsRequestsDto
      responses:
        '200':
          description: Tenant room quota settings
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ASC.Core.Tenants.TenantRoomQuotaSettings'
        '401':
          description: Unauthorized
        '402':
          description: Your pricing plan does not support this option
      security:
        - asc_auth_key:
            - read
            - write
      description: >-
        Saves the room quota settings specified in the request to the current
        portal.
  /api/2.0/settings/tenantquotasettings:
    put:
      tags:
        - Settings / Quota
      summary: Save the tenant quota settings
      operationId: setTenantQuotaSettings
      requestBody:
        content:
          application/json:
            schema:
              $ref: >-
                #/components/schemas/ASC.Web.Api.ApiModel.RequestsDto.TenantQuotaSettingsRequestsDto
      responses:
        '200':
          description: Tenant quota settings
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ASC.Core.Tenants.TenantQuotaSettings'
        '401':
          description: Unauthorized
        '402':
          description: Your pricing plan does not support this option
        '405':
          description: Not available
      security:
        - asc_auth_key:
            - read
            - write
      description: >-
        Saves the tenant quota settings specified in the request to the current
        portal.
  /api/2.0/settings/whitelabel/save:
    post:
      tags:
        - Settings / Rebranding
      summary: Save the white label settings
      operationId: saveWhiteLabelSettings
      parameters:
        - name: IsDark
          in: query
          description: Specifies if the logo is for a dark theme or not
          schema:
            type: boolean
            example: true
        - name: IsDefault
          in: query
          description: Specifies if the logo is for a default tenant or not
          schema:
            type: boolean
            example: true
      requestBody:
        content:
          application/json:
            schema:
              $ref: >-
                #/components/schemas/ASC.Web.Api.ApiModel.RequestsDto.WhiteLabelRequestsDto
      responses:
        '200':
          description: 'Boolean value: true if the operation is sucessful'
          content:
            application/json:
              schema:
                type: boolean
        '401':
          description: Unauthorized
        '403':
          description: No permissions to perform this action
      security:
        - asc_auth_key:
            - read
            - write
      description: Saves the white label settings specified in the request.
  /api/2.0/settings/whitelabel/savefromfiles:
    post:
      tags:
        - Settings / Rebranding
      summary: Save the white label settings from files
      operationId: saveWhiteLabelSettingsFromFiles
      parameters:
        - name: IsDark
          in: query
          description: Specifies if the logo is for a dark theme or not
          schema:
            type: boolean
            example: true
        - name: IsDefault
          in: query
          description: Specifies if the logo is for a default tenant or not
          schema:
            type: boolean
            example: true
      responses:
        '200':
          description: 'Boolean value: true if the operation is sucessful'
          content:
            application/json:
              schema:
                type: boolean
        '401':
          description: Unauthorized
        '403':
          description: No permissions to perform this action
        '409':
          description: No input files
      security:
        - asc_auth_key:
            - read
            - write
      description: Saves the white label settings from files.
  /api/2.0/settings/whitelabel/logos:
    get:
      tags:
        - Settings / Rebranding
      summary: Get the white label logos
      operationId: getWhiteLabelLogos
      parameters:
        - name: IsDark
          in: query
          description: Specifies if the logo is for a dark theme or not
          schema:
            type: boolean
            example: true
        - name: IsDefault
          in: query
          description: Specifies if the logo is for a default tenant or not
          schema:
            type: boolean
            example: true
      responses:
        '200':
          description: White label logos
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/ASC.Web.Api.ApiModels.ResponseDto.WhiteLabelItemDto
      description: Returns the white label logos.
  /api/2.0/settings/whitelabel/logos/isdefault:
    get:
      tags:
        - Settings / Rebranding
      summary: Check the default white label logos
      operationId: getIsDefaultWhiteLabelLogos
      parameters:
        - name: IsDark
          in: query
          description: Specifies if the logo is for a dark theme or not
          schema:
            type: boolean
            example: true
        - name: IsDefault
          in: query
          description: Specifies if the logo is for a default tenant or not
          schema:
            type: boolean
            example: true
      responses:
        '200':
          description: Request properties of white label logos
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/ASC.Web.Api.ApiModels.ResponseDto.IsDefaultWhiteLabelLogosDto
        '401':
          description: Unauthorized
      security:
        - asc_auth_key:
            - read
            - write
      description: Specifies if the white label logos are default or not.
  /api/2.0/settings/whitelabel/logotext:
    get:
      tags:
        - Settings / Rebranding
      summary: Get the white label logo text
      operationId: getWhiteLabelLogoText
      parameters:
        - name: IsDark
          in: query
          description: Specifies if the logo is for a dark theme or not
          schema:
            type: boolean
            example: true
        - name: IsDefault
          in: query
          description: Specifies if the logo is for a default tenant or not
          schema:
            type: boolean
            example: true
      responses:
        '200':
          description: Logo text
          content:
            application/json:
              schema: {}
        '401':
          description: Unauthorized
      security:
        - asc_auth_key:
            - read
            - write
      description: Returns the white label logo text.
  /api/2.0/settings/whitelabel/restore:
    put:
      tags:
        - Settings / Rebranding
      summary: Restore the white label options
      operationId: restoreWhiteLabelOptions
      parameters:
        - name: IsDark
          in: query
          description: Specifies if the logo is for a dark theme or not
          schema:
            type: boolean
            example: true
        - name: IsDefault
          in: query
          description: Specifies if the logo is for a default tenant or not
          schema:
            type: boolean
            example: true
      responses:
        '200':
          description: 'Boolean value: true if the operation is successful'
          content:
            application/json:
              schema:
                type: boolean
        '401':
          description: Unauthorized
        '403':
          description: No permissions to perform this action
      security:
        - asc_auth_key:
            - read
            - write
      description: Restores the white label options.
  /api/2.0/settings/companywhitelabel:
    get:
      tags:
        - Settings / Rebranding
      summary: Get the licensor data
      operationId: getLicensorData
      responses:
        '200':
          description: List of company white label settings
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/ASC.Web.Core.WhiteLabel.CompanyWhiteLabelSettings
        '401':
          description: Unauthorized
      security:
        - asc_auth_key:
            - read
            - write
      description: Returns the licensor data.
  /api/2.0/settings/rebranding/company:
    post:
      tags:
        - Settings / Rebranding
      summary: Save the company white label settings
      operationId: saveCompanyWhiteLabelSettings
      requestBody:
        content:
          application/json:
            schema:
              $ref: >-
                #/components/schemas/ASC.Web.Core.WhiteLabel.CompanyWhiteLabelSettingsWrapper
      responses:
        '200':
          description: 'Boolean value: true if the operation is successful'
          content:
            application/json:
              schema:
                type: boolean
        '400':
          description: Settings is empty
        '401':
          description: Unauthorized
        '403':
          description: No permissions to perform this action
      security:
        - asc_auth_key:
            - read
            - write
      description: Saves the company white label settings specified in the request.
    get:
      tags:
        - Settings / Rebranding
      summary: Get the company white label settings
      operationId: getCompanyWhiteLabelSettings
      responses:
        '200':
          description: Company white label settings
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/ASC.Web.Api.ApiModels.ResponseDto.CompanyWhiteLabelSettingsDto
        '401':
          description: Unauthorized
      security:
        - asc_auth_key:
            - read
            - write
      description: Returns the company white label settings.
    delete:
      tags:
        - Settings / Rebranding
      summary: Delete the company white label settings
      operationId: deleteCompanyWhiteLabelSettings
      responses:
        '200':
          description: Default company white label settings
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/ASC.Web.Core.WhiteLabel.CompanyWhiteLabelSettings
        '401':
          description: Unauthorized
        '403':
          description: No permissions to perform this action
      security:
        - asc_auth_key:
            - read
            - write
      description: Deletes the company white label settings.
  /api/2.0/settings/rebranding/additional:
    post:
      tags:
        - Settings / Rebranding
      summary: Save the additional white label settings
      operationId: saveAdditionalWhiteLabelSettings
      requestBody:
        content:
          application/json:
            schema:
              $ref: >-
                #/components/schemas/ASC.Web.Core.WhiteLabel.AdditionalWhiteLabelSettingsWrapper
      responses:
        '200':
          description: 'Boolean value: true if the operation is successful'
          content:
            application/json:
              schema:
                type: boolean
        '400':
          description: Settings is empty
        '401':
          description: Unauthorized
        '403':
          description: No permissions to perform this action
      security:
        - asc_auth_key:
            - read
            - write
      description: Saves the additional white label settings specified in the request.
    get:
      tags:
        - Settings / Rebranding
      summary: Get the additional white label settings
      operationId: getAdditionalWhiteLabelSettings
      responses:
        '200':
          description: Additional white label settings
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/ASC.Web.Api.ApiModels.ResponseDto.AdditionalWhiteLabelSettingsDto
        '401':
          description: Unauthorized
      security:
        - asc_auth_key:
            - read
            - write
      description: Returns the additional white label settings.
    delete:
      tags:
        - Settings / Rebranding
      summary: Delete the additional white label settings
      operationId: deleteAdditionalWhiteLabelSettings
      responses:
        '200':
          description: Default additional white label settings
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/ASC.Web.Core.WhiteLabel.AdditionalWhiteLabelSettings
        '401':
          description: Unauthorized
        '403':
          description: No permissions to perform this action
      security:
        - asc_auth_key:
            - read
            - write
      description: Deletes the additional white label settings.
  /api/2.0/settings/enablewhitelabel:
    get:
      tags:
        - Settings / Rebranding
      summary: Check the white label availability
      operationId: getEnableWhitelabel
      responses:
        '200':
          description: 'Boolean value: true if the white label is enabled'
          content:
            application/json:
              schema:
                type: boolean
        '401':
          description: Unauthorized
      security:
        - asc_auth_key:
            - read
            - write
      description: Checks if the white label is enabled or not.
  /api/2.0/settings/security:
    get:
      tags:
        - Settings / Security
      summary: Get the security settings
      operationId: getWebItemSettingsSecurityInfo
      parameters:
        - name: ids
          in: query
          description: List of module IDs
          style: deepObject
          schema:
            type: array
            items:
              type: string
            example:
              - some text
      responses:
        '200':
          description: Security settings
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/ASC.Web.Api.ApiModel.ResponseDto.SecurityDto
        '401':
          description: Unauthorized
      security:
        - asc_auth_key:
            - read
            - write
      description: Returns the security settings for the modules specified in the request.
    put:
      tags:
        - Settings / Security
      summary: Set the module security settings
      operationId: setWebItemSecurity
      requestBody:
        content:
          application/json:
            schema:
              $ref: >-
                #/components/schemas/ASC.Web.Api.ApiModel.RequestsDto.WebItemSecurityRequestsDto
      responses:
        '200':
          description: Security settings
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/ASC.Web.Api.ApiModel.ResponseDto.SecurityDto
        '401':
          description: Unauthorized
        '403':
          description: Security settings are disabled for an open portal
      security:
        - asc_auth_key:
            - read
            - write
      description: >-
        Sets the security settings to the module with the ID specified in the
        request.
  /api/2.0/settings/security/{id}:
    get:
      tags:
        - Settings / Security
      summary: Get the module availability
      operationId: getWebItemSecurityInfo
      parameters:
        - name: id
          in: path
          description: Id
          required: true
          schema:
            type: string
            format: uuid
            example: aae1e103-bca5-9fa1-ba8c-42058b4abf28
      responses:
        '200':
          description: 'Boolean value: true - module is enabled, false - module is disabled'
          content:
            application/json:
              schema:
                type: boolean
        '401':
          description: Unauthorized
      security:
        - asc_auth_key:
            - read
            - write
      description: >-
        Returns the availability of the module with the ID specified in the
        request.
  /api/2.0/settings/security/modules:
    get:
      tags:
        - Settings / Security
      summary: Get the enabled modules
      operationId: getEnabledModules
      responses:
        '200':
          description: List of enabled modules
          content:
            application/json:
              schema: {}
        '401':
          description: Unauthorized
      security:
        - asc_auth_key:
            - read
            - write
      description: Returns a list of all the enabled modules.
  /api/2.0/settings/security/password:
    get:
      tags:
        - Settings / Security
      summary: Get the password settings
      operationId: getPasswordSettings
      responses:
        '200':
          description: Password settings
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/ASC.Web.Api.ApiModels.ResponseDto.PasswordSettingsDto
        '401':
          description: Unauthorized
      security:
        - asc_auth_key:
            - read
            - write
      description: Returns the portal password settings.
    put:
      tags:
        - Settings / Security
      summary: Set the password settings
      operationId: updatePasswordSettings
      requestBody:
        content:
          application/json:
            schema:
              $ref: >-
                #/components/schemas/ASC.Web.Api.Models.PasswordSettingsRequestsDto
      responses:
        '200':
          description: Password settings
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/ASC.Web.Api.ApiModels.ResponseDto.PasswordSettingsDto
        '400':
          description: MinLength
        '401':
          description: Unauthorized
      security:
        - asc_auth_key:
            - read
            - write
      description: Sets the portal password settings.
  /api/2.0/settings/security/access:
    put:
      tags:
        - Settings / Security
      summary: Set the access settings to products
      operationId: setAccessToWebItems
      requestBody:
        content:
          application/json:
            schema:
              $ref: >-
                #/components/schemas/ASC.Web.Api.ApiModel.RequestsDto.WebItemsSecurityRequestsDto
      responses:
        '200':
          description: Security settings
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/ASC.Web.Api.ApiModel.ResponseDto.SecurityDto
        '401':
          description: Unauthorized
        '403':
          description: Security settings are disabled for an open portal
      security:
        - asc_auth_key:
            - read
            - write
      description: >-
        Sets the access settings to the products with the IDs specified in the
        request.
  /api/2.0/settings/security/administrator/{productid}:
    get:
      tags:
        - Settings / Security
      summary: Get the product administrators
      operationId: getProductAdministrators
      parameters:
        - name: productid
          in: path
          description: Product ID
          required: true
          schema:
            type: string
            format: uuid
            example: aae1e103-bca5-9fa1-ba8c-42058b4abf28
      responses:
        '200':
          description: List of product administrators with the following parameters
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ASC.Web.Api.Models.EmployeeDto'
        '401':
          description: Unauthorized
      security:
        - asc_auth_key:
            - read
            - write
      description: >-
        Returns a list of all the product administrators with the ID specified
        in the request.
  /api/2.0/settings/security/administrator:
    get:
      tags:
        - Settings / Security
      summary: Check a product administrator
      operationId: isProductAdministrator
      parameters:
        - name: productid
          in: query
          description: Product ID
          schema:
            type: string
            format: uuid
            example: aae1e103-bca5-9fa1-ba8c-42058b4abf28
        - name: userid
          in: query
          description: User ID
          schema:
            type: string
            format: uuid
            example: aae1e103-bca5-9fa1-ba8c-42058b4abf28
      responses:
        '200':
          description: >-
            Object with the user security information: product ID, user ID,
            administrator or not
          content:
            application/json:
              schema: {}
        '401':
          description: Unauthorized
      security:
        - asc_auth_key:
            - read
            - write
      description: >-
        Checks if the selected user is a product administrator with the ID
        specified in the request.
    put:
      tags:
        - Settings / Security
      summary: Set a product administrator
      operationId: setProductAdministrator
      requestBody:
        content:
          application/json:
            schema:
              $ref: >-
                #/components/schemas/ASC.Web.Api.ApiModel.RequestsDto.SecurityRequestsDto
      responses:
        '200':
          description: >-
            Object with the user security information: product ID, user ID,
            administrator or not
          content:
            application/json:
              schema: {}
        '401':
          description: Unauthorized
        '402':
          description: Your pricing plan does not support this option
      security:
        - asc_auth_key:
            - read
            - write
      description: >-
        Sets the selected user as a product administrator with the ID specified
        in the request.
  /api/2.0/settings/ssov2:
    get:
      tags:
        - Settings / SSO
      summary: Get the SSO settings
      operationId: getSsoSettingsV2
      responses:
        '200':
          description: SSO settings
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/ASC.Web.Studio.UserControls.Management.SingleSignOnSettings.SsoSettingsV2
      description: Returns the current portal SSO settings.
    post:
      tags:
        - Settings / SSO
      summary: Save the SSO settings
      operationId: saveSsoSettingsV2
      requestBody:
        content:
          application/json:
            schema:
              $ref: >-
                #/components/schemas/ASC.Web.Api.ApiModel.RequestsDto.SsoSettingsRequestsDto
      responses:
        '200':
          description: SSO settings
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/ASC.Web.Studio.UserControls.Management.SingleSignOnSettings.SsoSettingsV2
        '400':
          description: Settings could not be null
        '401':
          description: Unauthorized
      security:
        - asc_auth_key:
            - read
            - write
      description: Saves the SSO settings for the current portal.
    delete:
      tags:
        - Settings / SSO
      summary: Reset the SSO settings
      operationId: resetSsoSettingsV2
      responses:
        '200':
          description: Default SSO settings
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/ASC.Web.Studio.UserControls.Management.SingleSignOnSettings.SsoSettingsV2
        '401':
          description: Unauthorized
      security:
        - asc_auth_key:
            - read
            - write
      description: Resets the SSO settings of the current portal.
  /api/2.0/settings/ssov2/default:
    get:
      tags:
        - Settings / SSO
      summary: Get the default SSO settings
      operationId: getDefaultSsoSettingsV2
      responses:
        '200':
          description: Default SSO settings
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/ASC.Web.Studio.UserControls.Management.SingleSignOnSettings.SsoSettingsV2
        '401':
          description: Unauthorized
      security:
        - asc_auth_key:
            - read
            - write
      description: Returns the default portal SSO settings.
  /api/2.0/settings/ssov2/constants:
    get:
      tags:
        - Settings / SSO
      summary: Get the SSO settings constants
      operationId: getSsoSettingsV2Constants
      responses:
        '200':
          description: >-
            The SSO settings constants: SSO name ID format type, SSO binding
            type, SSO signing algorithm type, SSO SP certificate action type,
            SSO IDP certificate action type
          content:
            application/json:
              schema: {}
        '401':
          description: Unauthorized
      security:
        - asc_auth_key:
            - read
            - write
      description: Returns the SSO settings constants.
  /api/2.0/settings/statistics/spaceusage/{id}:
    get:
      tags:
        - Settings / Statistics
      summary: Get the space usage statistics
      operationId: getSpaceUsageStatistics
      parameters:
        - name: id
          in: path
          description: Id
          required: true
          schema:
            type: string
            format: uuid
            example: aae1e103-bca5-9fa1-ba8c-42058b4abf28
      responses:
        '200':
          description: Module space usage statistics
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/ASC.Web.Api.ApiModel.ResponseDto.UsageSpaceStatItemDto
        '401':
          description: Unauthorized
      security:
        - asc_auth_key:
            - read
            - write
      description: >-
        Returns the space usage statistics of the module with the ID specified
        in the request.
  /api/2.0/settings/storage:
    get:
      tags:
        - Settings / Storage
      summary: Get storages
      operationId: getAllStorages
      responses:
        '200':
          description: List of storages with the following parameters
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/ASC.Web.Api.ApiModel.ResponseDto.StorageDto
        '401':
          description: Unauthorized
        '403':
          description: No permissions to perform this action
      security:
        - asc_auth_key:
            - read
            - write
      description: Returns a list of all the portal storages.
    put:
      tags:
        - Settings / Storage
      summary: Update a storage
      operationId: updateStorage
      requestBody:
        content:
          application/json:
            schema:
              $ref: >-
                #/components/schemas/ASC.Web.Api.ApiModel.RequestsDto.StorageRequestsDto
      responses:
        '200':
          description: Updated storage settings
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/ASC.Data.Storage.Configuration.StorageSettings
        '400':
          description: Module
        '401':
          description: Unauthorized
        '403':
          description: No permissions to perform this action
      security:
        - asc_auth_key:
            - read
            - write
      description: Updates a storage with the parameters specified in the request.
    delete:
      tags:
        - Settings / Storage
      summary: Reset the storage settings
      operationId: resetStorageToDefault
      responses:
        '200':
          description: Ok
        '401':
          description: Unauthorized
        '403':
          description: No permissions to perform this action
      security:
        - asc_auth_key:
            - read
            - write
      description: Resets the storage settings to the default parameters.
  /api/2.0/settings/storage/progress:
    get:
      tags:
        - Settings / Storage
      summary: Get the storage progress
      operationId: getStorageProgress
      responses:
        '200':
          description: Storage progress
          content:
            application/json:
              schema:
                type: number
                format: double
        '401':
          description: Unauthorized
      security:
        - asc_auth_key:
            - read
            - write
      description: Returns the storage progress.
  /api/2.0/settings/storage/cdn:
    get:
      tags:
        - Settings / Storage
      summary: Get the CDN storages
      operationId: getAllCdnStorages
      responses:
        '200':
          description: List of the CDN storages with the following parameters
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/ASC.Web.Api.ApiModel.ResponseDto.StorageDto
        '401':
          description: Unauthorized
        '403':
          description: No permissions to perform this action
      security:
        - asc_auth_key:
            - read
            - write
      description: Returns a list of all the CDN storages.
    put:
      tags:
        - Settings / Storage
      summary: Update the CDN storage
      operationId: updateCdn
      requestBody:
        content:
          application/json:
            schema:
              $ref: >-
                #/components/schemas/ASC.Web.Api.ApiModel.RequestsDto.StorageRequestsDto
      responses:
        '200':
          description: Updated CDN storage
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/ASC.Data.Storage.Configuration.CdnStorageSettings
        '400':
          description: Module
        '401':
          description: Unauthorized
        '403':
          description: No permissions to perform this action
      security:
        - asc_auth_key:
            - read
            - write
      description: Updates the CDN storage with the parameters specified in the request.
    delete:
      tags:
        - Settings / Storage
      summary: Reset the CDN storage settings
      operationId: resetCdnToDefault
      responses:
        '200':
          description: Ok
        '401':
          description: Unauthorized
        '403':
          description: No permissions to perform this action
      security:
        - asc_auth_key:
            - read
            - write
      description: Resets the CDN storage settings to the default parameters.
  /api/2.0/settings/storage/backup:
    get:
      tags:
        - Settings / Storage
      summary: Get the backup storages
      operationId: getAllBackupStorages
      responses:
        '200':
          description: List of the backup storages with the following parameters
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/ASC.Web.Api.ApiModel.ResponseDto.StorageDto
        '401':
          description: Unauthorized
        '402':
          description: Your pricing plan does not support this option
      security:
        - asc_auth_key:
            - read
            - write
      description: Returns a list of all the backup storages.
  /api/2.0/settings/storage/s3/regions:
    get:
      tags:
        - Settings / Storage
      summary: Get Amazon regions
      operationId: getAmazonS3Regions
      responses:
        '200':
          description: List of the Amazon regions
          content:
            application/json:
              schema: {}
        '401':
          description: Unauthorized
      security:
        - asc_auth_key:
            - read
            - write
      description: Returns a list of all Amazon regions.
  /api/2.0/settings/customschemas:
    get:
      tags:
        - Settings / Team templates
      summary: Get team templates
      operationId: peopleSchemas
      responses:
        '200':
          description: List of team templates with the following parameters
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/ASC.Web.Api.ApiModel.RequestsDto.SchemaRequestsDto
        '401':
          description: Unauthorized
      security:
        - asc_auth_key:
            - read
            - write
      description: >-
        Returns all portal team templates that allow users to name their
        organization (or group), add members, and define their activities within
        the portal.
    post:
      tags:
        - Settings / Team templates
      summary: Save the naming settings
      operationId: saveNamingSettings
      requestBody:
        content:
          application/json:
            schema:
              $ref: >-
                #/components/schemas/ASC.Web.Api.ApiModel.RequestsDto.SchemaBaseRequestsDto
      responses:
        '200':
          description: Team template with the following parameters
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/ASC.Web.Api.ApiModel.RequestsDto.SchemaRequestsDto
        '401':
          description: Unauthorized
      security:
        - asc_auth_key:
            - read
            - write
      description: >-
        Saves the names from the team template with the ID specified in the
        request.
    put:
      tags:
        - Settings / Team templates
      summary: Create a custom team template
      operationId: saveCustomNamingSettings
      requestBody:
        content:
          application/json:
            schema:
              $ref: >-
                #/components/schemas/ASC.Web.Api.ApiModel.RequestsDto.SchemaRequestsDto
      responses:
        '200':
          description: Custom team template with the following parameters
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/ASC.Web.Api.ApiModel.RequestsDto.SchemaRequestsDto
        '400':
          description: Please fill in all fields
        '401':
          description: Unauthorized
      security:
        - asc_auth_key:
            - read
            - write
      description: >-
        Creates a custom team template with the parameters specified in the
        request.
  /api/2.0/settings/customschemas/{id}:
    get:
      tags:
        - Settings / Team templates
      summary: Get a team template by ID
      operationId: peopleSchema
      parameters:
        - name: id
          in: path
          description: Id
          required: true
          schema:
            type: string
            example: '9846'
      responses:
        '200':
          description: Team template with the following parameters
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/ASC.Web.Api.ApiModel.RequestsDto.SchemaRequestsDto
        '401':
          description: Unauthorized
      security:
        - asc_auth_key:
            - read
            - write
      description: Returns a team template by the ID specified in the request.
  /api/2.0/settings/tfaapp:
    get:
      tags:
        - Settings / TFA settings
      summary: Get the TFA settings
      operationId: getTfaSettings
      responses:
        '200':
          description: TFA settings
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/ASC.Web.Api.ApiModel.RequestsDto.TfaSettingsDto
        '401':
          description: Unauthorized
      security:
        - asc_auth_key:
            - read
            - write
      description: Returns the current two-factor authentication settings.
    put:
      tags:
        - Settings / TFA settings
      summary: Update the TFA settings
      operationId: tfaSettings
      requestBody:
        content:
          application/json:
            schema:
              $ref: >-
                #/components/schemas/ASC.Web.Api.ApiModel.RequestsDto.TfaRequestsDto
      responses:
        '200':
          description: True if the operation is successful
          content:
            application/json:
              schema:
                type: boolean
        '401':
          description: Unauthorized
        '405':
          description: >-
            SMS settings are not available/TFA application settings are not
            available
      security:
        - asc_auth_key:
            - read
            - write
      description: >-
        Updates the two-factor authentication settings with the parameters
        specified in the request.
  /api/2.0/settings/tfaapp/validate:
    post:
      tags:
        - Settings / TFA settings
      summary: Validate the TFA code
      operationId: tfaValidateAuthCode
      requestBody:
        content:
          application/json:
            schema:
              $ref: >-
                #/components/schemas/ASC.Web.Api.ApiModel.RequestsDto.TfaValidateRequestsDto
      responses:
        '200':
          description: True if the code is valid
          content:
            application/json:
              schema:
                type: boolean
        '401':
          description: Unauthorized
      security:
        - asc_auth_key:
            - read
            - write
      description: Validates the two-factor authentication code specified in the request.
  /api/2.0/settings/tfaapp/confirm:
    get:
      tags:
        - Settings / TFA settings
      summary: Get confirmation email
      operationId: tfaConfirmUrl
      responses:
        '200':
          description: Confirmation email URL
          content:
            application/json:
              schema: {}
        '401':
          description: Unauthorized
      security:
        - asc_auth_key:
            - read
            - write
      description: >-
        Returns the confirmation email URL for authorization via SMS or TFA
        application.
  /api/2.0/settings/tfaappwithlink:
    put:
      tags:
        - Settings / TFA settings
      summary: Get confirmation email for updating TFA settings
      operationId: tfaSettingsLink
      requestBody:
        content:
          application/json:
            schema:
              $ref: >-
                #/components/schemas/ASC.Web.Api.ApiModel.RequestsDto.TfaRequestsDto
      responses:
        '200':
          description: Confirmation email URL
          content:
            application/json:
              schema: {}
        '401':
          description: Unauthorized
      security:
        - asc_auth_key:
            - read
            - write
      description: Returns the confirmation email URL for updating TFA settings.
  /api/2.0/settings/tfaapp/setup:
    get:
      tags:
        - Settings / TFA settings
      summary: Generate setup code
      operationId: tfaAppGenerateSetupCode
      responses:
        '200':
          description: Setup code
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Google.Authenticator.SetupCode'
        '401':
          description: Unauthorized
        '405':
          description: TFA application settings are not available
      security:
        - asc_auth_key:
            - read
            - write
      description: Generates the setup TFA code for the current user.
  /api/2.0/settings/tfaappcodes:
    get:
      tags:
        - Settings / TFA settings
      summary: Get the TFA codes
      operationId: tfaAppGetCodes
      responses:
        '200':
          description: List of TFA application codes
          content:
            application/json:
              schema: {}
        '401':
          description: Unauthorized
        '405':
          description: TFA application settings are not available
      security:
        - asc_auth_key:
            - read
            - write
      description: Returns the two-factor authentication application codes.
  /api/2.0/settings/tfaappnewcodes:
    put:
      tags:
        - Settings / TFA settings
      summary: Update the TFA codes
      operationId: tfaAppRequestNewCodes
      responses:
        '200':
          description: New backup codes
          content:
            application/json:
              schema: {}
        '401':
          description: Unauthorized
        '405':
          description: TFA application settings are not available
      security:
        - asc_auth_key:
            - read
            - write
      description: >-
        Requests the new backup codes for the two-factor authentication
        application.
  /api/2.0/settings/tfaappnewapp:
    put:
      tags:
        - Settings / TFA settings
      summary: Unlink the TFA application
      operationId: tfaAppNewApp
      requestBody:
        content:
          application/json:
            schema:
              $ref: >-
                #/components/schemas/ASC.Web.Api.ApiModel.RequestsDto.TfaRequestsDto
      responses:
        '200':
          description: Login URL
          content:
            application/json:
              schema: {}
        '401':
          description: Unauthorized
        '403':
          description: No permissions to perform this action
        '405':
          description: TFA application settings are not available
      security:
        - asc_auth_key:
            - read
            - write
      description: >-
        Unlinks the current two-factor authentication application from the user
        account specified in the request.
  /api/2.0/settings/tips:
    put:
      tags:
        - Settings / Tips
      summary: Update the tip settings
      operationId: updateTipsSettings
      requestBody:
        content:
          application/json:
            schema:
              $ref: >-
                #/components/schemas/ASC.Web.Api.ApiModel.RequestsDto.TipsRequestDto
      responses:
        '200':
          description: Updated tip settings
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ASC.Web.Studio.Core.TipsSettings'
        '401':
          description: Unauthorized
      security:
        - asc_auth_key:
            - read
            - write
      description: Updates the tip settings with a parameter specified in the request.
  /api/2.0/settings/tips/change/subscription:
    put:
      tags:
        - Settings / Tips
      summary: Update the tip subscription
      operationId: updateTipsSubscription
      responses:
        '200':
          description: 'Boolean value: true if the user is subscribed to the tips'
          content:
            application/json:
              schema:
                type: boolean
        '401':
          description: Unauthorized
      security:
        - asc_auth_key:
            - read
            - write
      description: Updates the tip subscription.
  /api/2.0/settings/tips/subscription:
    get:
      tags:
        - Settings / Tips
      summary: Check the tip subscription
      operationId: getTipsSubscription
      responses:
        '200':
          description: 'Boolean value: true if the user is subscribed to the tips'
          content:
            application/json:
              schema:
                type: boolean
        '401':
          description: Unauthorized
      security:
        - asc_auth_key:
            - read
            - write
      description: Checks if the current user is subscribed to the tips or not.
  /api/2.0/settings/webhook:
    get:
      tags:
        - Settings / Webhooks
      summary: Get webhooks
      operationId: getTenantWebhooks
      responses:
        '200':
          description: List of tenant webhooks with their config parameters
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/ASC.Web.Api.ApiModels.ResponseDto.WebhooksConfigWithStatusDto
        '401':
          description: Unauthorized
      security:
        - asc_auth_key:
            - read
            - write
      description: Returns a list of the tenant webhooks.
    post:
      tags:
        - Settings / Webhooks
      summary: Create a webhook
      operationId: createWebhook
      requestBody:
        content:
          application/json:
            schema:
              $ref: >-
                #/components/schemas/ASC.Web.Api.ApiModels.RequestsDto.WebhooksConfigRequestsDto
      responses:
        '200':
          description: Tenant webhook with its config parameters
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/ASC.Web.Api.ApiModels.ResponseDto.WebhooksConfigDto
        '401':
          description: Unauthorized
      security:
        - asc_auth_key:
            - read
            - write
      description: >-
        Creates a new tenant webhook with the parameters specified in the
        request.
    put:
      tags:
        - Settings / Webhooks
      summary: Update a webhook
      operationId: updateWebhook
      requestBody:
        content:
          application/json:
            schema:
              $ref: >-
                #/components/schemas/ASC.Web.Api.ApiModels.RequestsDto.WebhooksConfigRequestsDto
      responses:
        '200':
          description: Updated tenant webhook with its config parameters
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/ASC.Web.Api.ApiModels.ResponseDto.WebhooksConfigDto
        '401':
          description: Unauthorized
      security:
        - asc_auth_key:
            - read
            - write
      description: Updates the tenant webhook with the parameters specified in the request.
  /api/2.0/settings/webhook/{id}:
    delete:
      tags:
        - Settings / Webhooks
      summary: Remove a webhook
      operationId: removeWebhook
      parameters:
        - name: id
          in: path
          description: Id
          required: true
          schema:
            type: integer
            format: int32
            example: 9846
      responses:
        '200':
          description: Tenant webhook with its config parameters
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/ASC.Web.Api.ApiModels.ResponseDto.WebhooksConfigDto
        '401':
          description: Unauthorized
      security:
        - asc_auth_key:
            - read
            - write
      description: Removes the tenant webhook with the ID specified in the request.
    put:
      tags:
        - Settings / Webhooks
      summary: Disable a webhook
      operationId: disableWebHook
      parameters:
        - name: id
          in: path
          description: Id
          required: true
          schema:
            type: integer
            format: int32
            example: 9846
      responses:
        '200':
          description: Webhook settings
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ASC.Webhooks.Core.Webhook'
        '401':
          description: Unauthorized
      security:
        - asc_auth_key:
            - read
            - write
      description: Disables a webhook with the ID specified in the request.
  /api/2.0/settings/webhooks/log:
    get:
      tags:
        - Settings / Webhooks
      summary: Get webhook logs
      operationId: getJournal
      parameters:
        - name: deliveryFrom
          in: query
          description: Delivey start time
          schema:
            type: string
            format: date-time
            example: '2008-04-10T06:30:00.0000000+04:00'
        - name: deliveryTo
          in: query
          description: Delivey end time
          schema:
            type: string
            format: date-time
            example: '2008-04-10T06:30:00.0000000+04:00'
        - name: hookUri
          in: query
          description: Hook URI
          schema:
            type: string
            example: some text
        - name: webhookId
          in: query
          description: Webhook ID
          schema:
            type: integer
            format: int32
            example: 1234
        - name: configId
          in: query
          description: Config ID
          schema:
            type: integer
            format: int32
            example: 1234
        - name: eventId
          in: query
          description: Event ID
          schema:
            type: integer
            format: int32
            example: 1234
        - name: groupStatus
          in: query
          description: Webhook group status
          schema:
            $ref: '#/components/schemas/ASC.Webhooks.Core.WebhookGroupStatus'
      responses:
        '200':
          description: Logs of the webhook activities
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/ASC.Web.Api.ApiModels.ResponseDto.WebhooksLogDto
        '401':
          description: Unauthorized
      security:
        - asc_auth_key:
            - read
            - write
      description: Returns the logs of the webhook activities.
  /api/2.0/settings/webhook/{id}/retry:
    put:
      tags:
        - Settings / Webhooks
      summary: Retry a webhook
      operationId: retryWebhook
      parameters:
        - name: id
          in: path
          description: Id
          required: true
          schema:
            type: integer
            format: int32
            example: 9846
      responses:
        '200':
          description: Logs of the webhook activities
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/ASC.Web.Api.ApiModels.ResponseDto.WebhooksLogDto
        '400':
          description: Id incorrect
        '401':
          description: Unauthorized
        '404':
          description: Item not found
      security:
        - asc_auth_key:
            - read
            - write
      description: Retries a webhook with the ID specified in the request.
  /api/2.0/settings/webhook/retry:
    put:
      tags:
        - Settings / Webhooks
      summary: Retry webhooks
      operationId: retryWebhooks
      requestBody:
        content:
          application/json:
            schema:
              $ref: >-
                #/components/schemas/ASC.Web.Api.ApiModels.RequestsDto.WebhookRetryRequestsDto
      responses:
        '200':
          description: Logs of the webhook activities
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/ASC.Web.Api.ApiModels.ResponseDto.WebhooksLogDto
        '401':
          description: Unauthorized
      security:
        - asc_auth_key:
            - read
            - write
      description: Retries all the webhooks with the IDs specified in the request.
  /api/2.0/settings/webhooks:
    get:
      tags:
        - Settings / Webhooks
      summary: Get webhook settings
      operationId: settings
      responses:
        '200':
          description: List of webhook settings
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ASC.Webhooks.Core.Webhook'
        '401':
          description: Unauthorized
      security:
        - asc_auth_key:
            - read
            - write
      description: Returns settings of all webhooks.
  /api/2.0/settings/webplugins:
    post:
      tags:
        - Settings / Webplugins
      summary: Adds web plugins from file
      operationId: addWebPluginFromFile
      parameters:
        - name: system
          in: query
          description: System
          schema:
            type: boolean
            example: true
      responses:
        '200':
          description: Web plugin
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/ASC.Web.Api.ApiModels.ResponseDto.WebPluginDto
        '400':
          description: bad request
        '401':
          description: Unauthorized
        '403':
          description: Plugins disabled
      security:
        - asc_auth_key:
            - read
            - write
      description: Adds web plugins from file
    get:
      tags:
        - Settings / Webplugins
      summary: Gets web plugins
      operationId: getWebPlugins
      parameters:
        - name: enabled
          in: query
          description: Enabled
          schema:
            type: boolean
            example: true
      responses:
        '200':
          description: Web plugin
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/ASC.Web.Api.ApiModels.ResponseDto.WebPluginDto
        '401':
          description: Unauthorized
        '403':
          description: Plugins disabled
      security:
        - asc_auth_key:
            - read
            - write
      description: Gets web plugins
  /api/2.0/settings/webplugins/{name}:
    get:
      tags:
        - Settings / Webplugins
      summary: Gets web plugins by name specified in request
      operationId: getWebPlugin
      parameters:
        - name: name
          in: path
          description: Name
          required: true
          schema:
            type: string
            example: Winfield Upton
      responses:
        '200':
          description: Web plugin
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/ASC.Web.Api.ApiModels.ResponseDto.WebPluginDto
        '401':
          description: Unauthorized
        '403':
          description: Plugins disabled
      security:
        - asc_auth_key:
            - read
            - write
      description: Gets web plugins by name specified in request
    put:
      tags:
        - Settings / Webplugins
      summary: Updates web plugins
      operationId: updateWebPlugin
      parameters:
        - name: name
          in: path
          description: Name
          required: true
          schema:
            type: string
            example: Winfield Upton
      requestBody:
        description: Web plugin
        content:
          application/json:
            schema:
              $ref: >-
                #/components/schemas/ASC.Web.Api.ApiModel.RequestsDto.WebPluginRequests
      responses:
        '200':
          description: Ok
        '401':
          description: Unauthorized
        '403':
          description: Plugins disabled
      security:
        - asc_auth_key:
            - read
            - write
      description: Updates web plugins
    delete:
      tags:
        - Settings / Webplugins
      summary: Deletes web plugins by name specified in request
      operationId: deleteWebPlugin
      parameters:
        - name: name
          in: path
          description: Name
          required: true
          schema:
            type: string
            example: Winfield Upton
      responses:
        '200':
          description: Ok
        '401':
          description: Unauthorized
        '403':
          description: Plugins disabled
      security:
        - asc_auth_key:
            - read
            - write
      description: Deletes web plugins by name specified in request
  /api/2.0/group:
    get:
      tags:
        - Group
      summary: Get groups
      description: >-
        Returns the general information about all the groups, such as group ID
        and group manager.

         **Note**: This method returns partial group information.
      operationId: getGroups
      parameters:
        - name: userId
          in: query
          description: User ID
          schema:
            type: string
            format: uuid
            example: aae1e103-bca5-9fa1-ba8c-42058b4abf28
        - name: manager
          in: query
          description: Specifies if the user is a manager or not
          schema:
            type: boolean
            example: true
      responses:
        '200':
          description: List of groups
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ASC.People.ApiModels.ResponseDto.GroupDto'
        '401':
          description: Unauthorized
      security:
        - asc_auth_key:
            - read
            - write
    post:
      tags:
        - Group
      summary: Add a new group
      operationId: addGroup
      requestBody:
        content:
          application/json:
            schema:
              $ref: >-
                #/components/schemas/ASC.People.ApiModels.RequestDto.GroupRequestDto
      responses:
        '200':
          description: Newly created group with the detailed information
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ASC.People.ApiModels.ResponseDto.GroupDto'
        '401':
          description: Unauthorized
      security:
        - asc_auth_key:
            - read
            - write
      description: >-
        Adds a new group with the group manager, name, and members specified in
        the request.
  /api/2.0/group/{id}:
    get:
      tags:
        - Group
      summary: Get a group
      description: |-
        Returns the detailed information about the selected group.

         **Note**: This method returns full group information.
      operationId: getGroup
      parameters:
        - name: id
          in: path
          description: Group ID
          required: true
          schema:
            type: string
            format: uuid
            example: aae1e103-bca5-9fa1-ba8c-42058b4abf28
        - name: includeMembers
          in: query
          description: Include members
          schema:
            type: boolean
            example: true
      responses:
        '200':
          description: Group with the detailed information
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ASC.People.ApiModels.ResponseDto.GroupDto'
        '401':
          description: Unauthorized
        '404':
          description: Group not found
      security:
        - asc_auth_key:
            - read
            - write
    put:
      tags:
        - Group
      summary: Update a group
      operationId: updateGroup
      parameters:
        - name: id
          in: path
          description: Group ID
          required: true
          schema:
            type: string
            format: uuid
            example: aae1e103-bca5-9fa1-ba8c-42058b4abf28
      requestBody:
        description: Update group parameters
        content:
          application/json:
            schema:
              $ref: >-
                #/components/schemas/ASC.People.ApiModels.RequestDto.UpdateGroupRequest
      responses:
        '200':
          description: Updated group with the detailed information
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ASC.People.ApiModels.ResponseDto.GroupDto'
        '401':
          description: Unauthorized
        '404':
          description: Group not found
      security:
        - asc_auth_key:
            - read
            - write
      description: >-
        Updates the existing group changing the group manager, name, and/or
        members.
    delete:
      tags:
        - Group
      summary: Delete a group
      operationId: deleteGroup
      parameters:
        - name: id
          in: path
          description: Group ID
          required: true
          schema:
            type: string
            format: uuid
            example: aae1e103-bca5-9fa1-ba8c-42058b4abf28
      responses:
        '200':
          description: No content
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Microsoft.AspNetCore.Mvc.NoContentResult'
        '401':
          description: Unauthorized
        '404':
          description: Group not found
      security:
        - asc_auth_key:
            - read
            - write
      description: >-
        Deletes a group with the ID specified in the request from the list of
        groups on the portal.
  /api/2.0/group/user/{userid}:
    get:
      tags:
        - Group
      summary: Get user groups
      operationId: getByUserId
      parameters:
        - name: userid
          in: path
          description: User ID
          required: true
          schema:
            type: string
            format: uuid
            example: aae1e103-bca5-9fa1-ba8c-42058b4abf28
      responses:
        '200':
          description: List of groups
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ASC.Web.Api.Models.GroupSummaryDto'
        '401':
          description: Unauthorized
      security:
        - asc_auth_key:
            - read
            - write
      description: >-
        Returns a list of groups for the user with the ID specified in the
        request.
  /api/2.0/group/{fromId}/members/{toId}:
    put:
      tags:
        - Group
      summary: Move group members
      operationId: transferMembersTo
      parameters:
        - name: fromId
          in: path
          description: Group ID to move from
          required: true
          schema:
            type: string
            format: uuid
            example: 75a5f745-f697-4418-b38d-0fe0d277e258
        - name: toId
          in: path
          description: Group ID to move to
          required: true
          schema:
            type: string
            format: uuid
            example: 75a5f745-f697-4418-b38d-0fe0d277e258
      responses:
        '200':
          description: Group with the detailed information
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ASC.People.ApiModels.ResponseDto.GroupDto'
        '401':
          description: Unauthorized
        '404':
          description: Group not found
      security:
        - asc_auth_key:
            - read
            - write
      description: >-
        Moves all the members from the selected group to another one specified
        in the request.
  /api/2.0/group/{id}/members:
    post:
      tags:
        - Group
      summary: Replace group members
      operationId: setMembersTo
      parameters:
        - name: id
          in: path
          description: Group ID
          required: true
          schema:
            type: string
            format: uuid
            example: aae1e103-bca5-9fa1-ba8c-42058b4abf28
      requestBody:
        description: Members
        content:
          application/json:
            schema:
              $ref: >-
                #/components/schemas/ASC.People.ApiModels.RequestDto.MembersRequest
      responses:
        '200':
          description: Group with the detailed information
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ASC.People.ApiModels.ResponseDto.GroupDto'
        '401':
          description: Unauthorized
      security:
        - asc_auth_key:
            - read
            - write
      description: Replaces the group members with those specified in the request.
    put:
      tags:
        - Group
      summary: Add group members
      operationId: addMembersTo
      parameters:
        - name: id
          in: path
          description: Group ID
          required: true
          schema:
            type: string
            format: uuid
            example: aae1e103-bca5-9fa1-ba8c-42058b4abf28
      requestBody:
        description: Members
        content:
          application/json:
            schema:
              $ref: >-
                #/components/schemas/ASC.People.ApiModels.RequestDto.MembersRequest
      responses:
        '200':
          description: Group with the detailed information
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ASC.People.ApiModels.ResponseDto.GroupDto'
        '401':
          description: Unauthorized
        '404':
          description: Group not found
      security:
        - asc_auth_key:
            - read
            - write
      description: >-
        Adds new group members to the group with the ID specified in the
        request.
    delete:
      tags:
        - Group
      summary: Remove group members
      operationId: removeMembersFrom
      parameters:
        - name: id
          in: path
          description: Group ID
          required: true
          schema:
            type: string
            format: uuid
            example: aae1e103-bca5-9fa1-ba8c-42058b4abf28
      requestBody:
        description: Members
        content:
          application/json:
            schema:
              $ref: >-
                #/components/schemas/ASC.People.ApiModels.RequestDto.MembersRequest
      responses:
        '200':
          description: Group with the detailed information
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ASC.People.ApiModels.ResponseDto.GroupDto'
        '401':
          description: Unauthorized
        '404':
          description: Group not found
      security:
        - asc_auth_key:
            - read
            - write
      description: >-
        Removes the group members specified in the request from the selected
        group.
  /api/2.0/group/{id}/manager:
    put:
      tags:
        - Group
      summary: Set a group manager
      operationId: setManager
      parameters:
        - name: id
          in: path
          description: Group ID
          required: true
          schema:
            type: string
            format: uuid
            example: aae1e103-bca5-9fa1-ba8c-42058b4abf28
      requestBody:
        description: Set manager
        content:
          application/json:
            schema:
              $ref: >-
                #/components/schemas/ASC.People.ApiModels.RequestDto.SetManagerRequest
      responses:
        '200':
          description: Group with the detailed information
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ASC.People.ApiModels.ResponseDto.GroupDto'
        '401':
          description: Unauthorized
        '404':
          description: User not found
      security:
        - asc_auth_key:
            - read
            - write
      description: Sets a user with the ID specified in the request as a group manager.
  /api/2.0/group/room/{id}:
    get:
      tags:
        - Group / Rooms
      summary: Gets groups with shared
      operationId: getGroupsWithShared
      parameters:
        - name: id
          in: path
          description: ID
          required: true
          schema:
            type: integer
            format: int32
            example: 9846
        - name: excludeShared
          in: query
          description: Exclude shared
          schema:
            type: boolean
            example: true
      responses:
        '200':
          description: Ok
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: >-
                    #/components/schemas/ASC.People.ApiModels.ResponseDto.GroupDto
        '401':
          description: Unauthorized
        '403':
          description: No permissions to perform this action
      security:
        - asc_auth_key:
            - read
            - write
      description: Gets groups with shared
  /api/2.0/people/{userid}/contacts:
    delete:
      tags:
        - People / Contacts
      summary: Delete user contacts
      operationId: deleteMemberContacts
      parameters:
        - name: userid
          in: path
          description: User ID
          required: true
          schema:
            type: string
            example: '9846'
      requestBody:
        description: Contacts
        content:
          application/json:
            schema:
              $ref: >-
                #/components/schemas/ASC.People.ApiModels.RequestDto.ContactsRequest
      responses:
        '200':
          description: Deleted user profile with the detailed information
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ASC.Web.Api.Models.EmployeeFullDto'
        '401':
          description: Unauthorized
        '403':
          description: No permissions to perform this action
        '404':
          description: User not found
      security:
        - asc_auth_key:
            - read
            - write
      description: >-
        Deletes the contacts of the user with the ID specified in the request
        from the portal.
    post:
      tags:
        - People / Contacts
      summary: Set user contacts
      operationId: setMemberContacts
      parameters:
        - name: userid
          in: path
          description: User ID
          required: true
          schema:
            type: string
            example: '9846'
      requestBody:
        description: Contacts
        content:
          application/json:
            schema:
              $ref: >-
                #/components/schemas/ASC.People.ApiModels.RequestDto.ContactsRequest
      responses:
        '200':
          description: Updated user profile with the detailed information
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ASC.Web.Api.Models.EmployeeFullDto'
        '401':
          description: Unauthorized
        '403':
          description: No permissions to perform this action
        '404':
          description: User not found
      security:
        - asc_auth_key:
            - read
            - write
      description: >-
        Sets the contacts of the user with the ID specified in the request
        replacing the current portal data with the new data.
    put:
      tags:
        - People / Contacts
      summary: Update user contacts
      operationId: updateMemberContacts
      parameters:
        - name: userid
          in: path
          description: User ID
          required: true
          schema:
            type: string
            example: '9846'
      requestBody:
        description: Contacts
        content:
          application/json:
            schema:
              $ref: >-
                #/components/schemas/ASC.People.ApiModels.RequestDto.ContactsRequest
      responses:
        '200':
          description: Updated user profile with the detailed information
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ASC.Web.Api.Models.EmployeeFullDto'
        '401':
          description: Unauthorized
        '403':
          description: No permissions to perform this action
        '404':
          description: User not found
      security:
        - asc_auth_key:
            - read
            - write
      description: >-
        Updates the contact information of the user with the ID specified in the
        request merging the new data into the current portal data.
  /api/2.0/people/guests:
    delete:
      tags:
        - People / Guests
      summary: Removes guests from the list and from rooms
      operationId: deleteGuests
      requestBody:
        content:
          application/json:
            schema:
              $ref: >-
                #/components/schemas/ASC.People.ApiModels.RequestDto.UpdateMembersRequestDto
      responses:
        '200':
          description: Request parameters for deleting guests
        '401':
          description: Unauthorized
        '403':
          description: No permissions to perform this action
      security:
        - asc_auth_key:
            - read
            - write
      description: >-
        Removes guests from the list and excludes them from rooms to which you
        have invited them
  /api/2.0/people/{userid}/password:
    put:
      tags:
        - People / Password
      summary: Change a user password
      operationId: changeUserPassword
      parameters:
        - name: userid
          in: path
          description: User ID
          required: true
          schema:
            type: string
            format: uuid
            example: aae1e103-bca5-9fa1-ba8c-42058b4abf28
      requestBody:
        description: Member base
        content:
          application/json:
            schema:
              $ref: >-
                #/components/schemas/ASC.People.ApiModels.RequestDto.MemberBaseRequestDto
      responses:
        '200':
          description: Detailed user information
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ASC.Web.Api.Models.EmployeeFullDto'
        '400':
          description: Incorrect email
        '401':
          description: Unauthorized
        '403':
          description: The invitation link is invalid or its validity has expired
        '404':
          description: User not found
      security:
        - asc_auth_key:
            - read
            - write
      description: Sets a new password to the user with the ID specified in the request.
  /api/2.0/people/password:
    post:
      tags:
        - People / Password
      summary: Remind a user password
      operationId: sendUserPassword
      requestBody:
        content:
          application/json:
            schema:
              $ref: >-
                #/components/schemas/ASC.People.ApiModels.RequestDto.EmailMemberRequestDto
      responses:
        '200':
          description: Email with the password
          content:
            application/json:
              schema: {}
        '403':
          description: No permissions to perform this action
      description: >-
        Reminds a password to the user using the email address specified in the
        request.
  /api/2.0/people/{userid}/photo/thumbnails:
    post:
      tags:
        - People / Photos
      summary: Create photo thumbnails
      operationId: createMemberPhotoThumbnails
      parameters:
        - name: userid
          in: path
          description: User ID
          required: true
          schema:
            type: string
            example: '9846'
      requestBody:
        description: Thumbnails
        content:
          application/json:
            schema:
              $ref: >-
                #/components/schemas/ASC.People.ApiModels.RequestDto.ThumbnailsRequest
      responses:
        '200':
          description: Thumbnail parameters
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/ASC.People.ApiModels.ResponseDto.ThumbnailsDataDto
        '401':
          description: Unauthorized
        '403':
          description: No permissions to perform this action
        '404':
          description: User not found
      security:
        - asc_auth_key:
            - read
            - write
      description: >-
        Creates photo thumbnails by coordinates of the original image specified
        in the request.
  /api/2.0/people/{userid}/photo:
    delete:
      tags:
        - People / Photos
      summary: Delete a user photo
      operationId: deleteMemberPhoto
      parameters:
        - name: userid
          in: path
          description: User ID
          required: true
          schema:
            type: string
            example: '9846'
      responses:
        '200':
          description: >-
            Thumbnail parameters: original photo, retina, maximum size photo,
            big, medium, small
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/ASC.People.ApiModels.ResponseDto.ThumbnailsDataDto
        '401':
          description: Unauthorized
        '403':
          description: No permissions to perform this action
        '404':
          description: User not found
      security:
        - asc_auth_key:
            - read
            - write
      description: Deletes a photo of the user with the ID specified in the request.
    get:
      tags:
        - People / Photos
      summary: Get a user photo
      operationId: getMemberPhoto
      parameters:
        - name: userid
          in: path
          description: User ID
          required: true
          schema:
            type: string
            example: '9846'
      responses:
        '200':
          description: >-
            Thumbnail parameters: original photo, retina, maximum size photo,
            big, medium, small
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/ASC.People.ApiModels.ResponseDto.ThumbnailsDataDto
        '401':
          description: Unauthorized
        '403':
          description: No permissions to perform this action
        '404':
          description: User not found
      security:
        - asc_auth_key:
            - read
            - write
      description: Returns a photo of the user with the ID specified in the request.
    put:
      tags:
        - People / Photos
      summary: Update a user photo
      operationId: updateMemberPhoto
      parameters:
        - name: userid
          in: path
          description: User ID
          required: true
          schema:
            type: string
            example: '9846'
      requestBody:
        description: Update photo
        content:
          application/json:
            schema:
              $ref: >-
                #/components/schemas/ASC.People.ApiModels.RequestDto.UpdatePhotoMemberRequest
      responses:
        '200':
          description: >-
            Updated thumbnail parameters: original photo, retina, maximum size
            photo, big, medium, small
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/ASC.People.ApiModels.ResponseDto.ThumbnailsDataDto
        '401':
          description: Unauthorized
        '403':
          description: No permissions to perform this action
        '404':
          description: User not found
      security:
        - asc_auth_key:
            - read
            - write
      description: Updates a photo of the user with the ID specified in the request.
    post:
      tags:
        - People / Photos
      summary: Upload a user photo
      operationId: uploadMemberPhoto
      parameters:
        - name: userid
          in: path
          description: User ID
          required: true
          schema:
            type: string
            example: '9846'
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                formCollection:
                  type: array
                  items:
                    $ref: >-
                      #/components/schemas/System.Collections.Generic.KeyValuePair.System.String.Microsoft.Extensions.Primitives.StringValues
                  description: Image data
            encoding:
              formCollection:
                style: form
      responses:
        '200':
          description: Result of file uploading
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/ASC.People.ApiModels.ResponseDto.FileUploadResultDto
        '401':
          description: Unauthorized
      security:
        - asc_auth_key:
            - read
            - write
      description: Uploads a photo of the user with the ID specified in the request.
  /api/2.0/people/tokendiagnostics:
    get:
      tags:
        - People / Profiles
      summary: Gets claims
      operationId: getClaims
      responses:
        '200':
          description: Claims
          content:
            application/json:
              schema: {}
        '401':
          description: Unauthorized
      security:
        - asc_auth_key:
            - read
            - write
      description: Gets claims
  /api/2.0/people:
    post:
      tags:
        - People / Profiles
      summary: Add a user
      operationId: addMember
      requestBody:
        content:
          application/json:
            schema:
              $ref: >-
                #/components/schemas/ASC.People.ApiModels.RequestDto.MemberRequestDto
      responses:
        '200':
          description: Newly added user with the detailed information
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ASC.Web.Api.Models.EmployeeFullDto'
        '401':
          description: Unauthorized
        '403':
          description: The invitation link is invalid or its validity has expired
      security:
        - asc_auth_key:
            - read
            - write
      description: >-
        Adds a new portal user with the first name, last name, email address,
        and several optional parameters specified in the request.
    get:
      tags:
        - People / Profiles
      summary: Get profiles
      operationId: getAllProfiles
      responses:
        '200':
          description: List of users with the detailed information
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ASC.Web.Api.Models.EmployeeFullDto'
        '401':
          description: Unauthorized
      security:
        - asc_auth_key:
            - read
            - write
      description: Returns a list of profiles for all the portal users.
  /api/2.0/people/invite:
    post:
      tags:
        - People / Profiles
      summary: Invite users
      operationId: inviteUsers
      requestBody:
        content:
          application/json:
            schema:
              $ref: >-
                #/components/schemas/ASC.People.ApiModels.RequestDto.InviteUsersRequestDto
      responses:
        '200':
          description: List of users
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ASC.Web.Api.Models.EmployeeDto'
        '401':
          description: Unauthorized
        '403':
          description: No permissions to perform this action
      security:
        - asc_auth_key:
            - read
            - write
      description: Invites users specified in the request to the current portal.
    put:
      tags:
        - People / Profiles
      summary: Resend activation emails
      operationId: resendUserInvites
      requestBody:
        content:
          application/json:
            schema:
              $ref: >-
                #/components/schemas/ASC.People.ApiModels.RequestDto.UpdateMembersRequestDto
      responses:
        '200':
          description: List of users with the detailed information
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ASC.Web.Api.Models.EmployeeFullDto'
        '401':
          description: Unauthorized
        '403':
          description: No permissions to perform this action
      security:
        - asc_auth_key:
            - read
            - write
      description: Resends emails to the users who have not activated their emails.
  /api/2.0/people/{userid}:
    delete:
      tags:
        - People / Profiles
      summary: Delete a user
      operationId: deleteMember
      parameters:
        - name: userid
          in: path
          description: User ID
          required: true
          schema:
            type: string
            example: '9846'
      responses:
        '200':
          description: Deleted user detailed information
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ASC.Web.Api.Models.EmployeeFullDto'
        '401':
          description: Unauthorized
        '403':
          description: You don't have enough permission to perform the operation
        '404':
          description: User not found
      security:
        - asc_auth_key:
            - read
            - write
      description: Deletes a user with the ID specified in the request from the portal.
    get:
      tags:
        - People / Profiles
      summary: Get a profile by user name
      operationId: getById
      parameters:
        - name: userid
          in: path
          description: User ID
          required: true
          schema:
            type: string
            example: '9846'
      responses:
        '200':
          description: Detailed profile information
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ASC.Web.Api.Models.EmployeeFullDto'
        '400':
          description: Incorect UserId
        '401':
          description: Unauthorized
        '404':
          description: User not found
      security:
        - asc_auth_key:
            - read
            - write
      description: >-
        Returns the detailed information about a profile of the user with the
        name specified in the request.
    put:
      tags:
        - People / Profiles
      summary: Update a user
      operationId: updateMember
      parameters:
        - name: userid
          in: path
          description: User ID
          required: true
          schema:
            type: string
            example: '9846'
      requestBody:
        description: Update member
        content:
          application/json:
            schema:
              $ref: >-
                #/components/schemas/ASC.People.ApiModels.RequestDto.UpdateMemberRequestDto
      responses:
        '200':
          description: Updated user with the detailed information
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ASC.Web.Api.Models.EmployeeFullDto'
        '400':
          description: Incorrect user name
        '401':
          description: Unauthorized
        '403':
          description: You don't have enough permission to perform the operation
        '404':
          description: User not found
      security:
        - asc_auth_key:
            - read
            - write
      description: >-
        Updates the data for the selected portal user with the first name, last
        name, email address, and/or optional parameters specified in the
        request.
  /api/2.0/people/@self:
    delete:
      tags:
        - People / Profiles
      summary: Delete my profile
      operationId: deleteProfile
      responses:
        '200':
          description: Detailed information about my profile
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ASC.Web.Api.Models.EmployeeFullDto'
        '401':
          description: Unauthorized
        '403':
          description: You don't have enough permission to perform the operation
        '404':
          description: User not found
      security:
        - asc_auth_key:
            - read
            - write
      description: Deletes the current user profile.
    get:
      tags:
        - People / Profiles
      summary: Get my profile
      operationId: self
      responses:
        '200':
          description: Detailed information about my profile
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ASC.Web.Api.Models.EmployeeFullDto'
        '401':
          description: Unauthorized
      security:
        - asc_auth_key:
            - read
            - write
      description: Returns the detailed information about the current user profile.
  /api/2.0/people/email:
    get:
      tags:
        - People / Profiles
      summary: Get a profile by user email
      operationId: getByEmail
      parameters:
        - name: email
          in: query
          description: User email address
          schema:
            maxLength: 255
            minLength: 0
            type: string
            format: email
            example: Sydney_Roberts4@hotmail.com
      responses:
        '200':
          description: Detailed profile information
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ASC.Web.Api.Models.EmployeeFullDto'
        '401':
          description: Unauthorized
        '404':
          description: User not found
      security:
        - asc_auth_key:
            - read
            - write
      description: >-
        Returns the detailed information about a profile of the user with the
        email specified in the request.
    post:
      tags:
        - People / Profiles
      summary: Send instructions to change email
      operationId: sendEmailChangeInstructions
      requestBody:
        content:
          application/json:
            schema:
              $ref: >-
                #/components/schemas/ASC.People.ApiModels.RequestDto.UpdateMemberRequestDto
      responses:
        '200':
          description: Message text
          content:
            application/json:
              schema: {}
        '400':
          description: Incorrect userId or email
        '401':
          description: Unauthorized
        '403':
          description: No permissions to perform this action
        '404':
          description: User not found
      security:
        - asc_auth_key:
            - read
            - write
      description: >-
        Sends a message to the user email with the instructions to change the
        email address connected to the portal.
  /api/2.0/people/delete:
    put:
      tags:
        - People / Profiles
      summary: Delete users
      operationId: removeUsers
      requestBody:
        content:
          application/json:
            schema:
              $ref: >-
                #/components/schemas/ASC.People.ApiModels.RequestDto.UpdateMembersRequestDto
      responses:
        '200':
          description: List of users with the detailed information
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ASC.Web.Api.Models.EmployeeFullDto'
        '401':
          description: Unauthorized
      security:
        - asc_auth_key:
            - read
            - write
      description: Deletes a list of the users with the IDs specified in the request.
  /api/2.0/people/{userid}/culture:
    put:
      tags:
        - People / Profiles
      summary: Update user language
      operationId: updateMemberCulture
      parameters:
        - name: userid
          in: path
          description: User ID
          required: true
          schema:
            type: string
            example: '9846'
      requestBody:
        description: Update member
        content:
          application/json:
            schema:
              $ref: >-
                #/components/schemas/ASC.People.ApiModels.RequestDto.UpdateMemberRequestDto
      responses:
        '200':
          description: Detailed user information
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ASC.Web.Api.Models.EmployeeFullDto'
        '401':
          description: Unauthorized
        '403':
          description: You don't have enough permission to perform the operation
        '404':
          description: User not found
      security:
        - asc_auth_key:
            - read
            - write
      description: Updates the user language with the parameter specified in the request.
  /api/2.0/people/userquota:
    put:
      tags:
        - People / Quota
      summary: Change a user quota limit
      operationId: updateUserQuota
      requestBody:
        content:
          application/json:
            schema:
              $ref: >-
                #/components/schemas/ASC.People.ApiModels.RequestDto.UpdateMembersQuotaRequestDto
      responses:
        '200':
          description: List of users with the detailed information
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ASC.Web.Api.Models.EmployeeFullDto'
        '401':
          description: Unauthorized
        '402':
          description: >-
            Failed to set quota per user. The entered value is greater than the
            total DocSpace storage
      security:
        - asc_auth_key:
            - read
            - write
      description: >-
        Changes a quota limit for the users with the IDs specified in the
        request.
  /api/2.0/people/resetquota:
    put:
      tags:
        - People / Quota
      summary: Reset a user quota limit
      operationId: resetUsersQuota
      requestBody:
        content:
          application/json:
            schema:
              $ref: >-
                #/components/schemas/ASC.People.ApiModels.RequestDto.UpdateMembersQuotaRequestDto
      responses:
        '200':
          description: User detailed information
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ASC.Web.Api.Models.EmployeeFullDto'
        '401':
          description: Unauthorized
        '402':
          description: Your pricing plan does not support this option
        '403':
          description: The invitation link is invalid or its validity has expired
      security:
        - asc_auth_key:
            - read
            - write
      description: >-
        Resets a user quota limit with the ID specified in the request from the
        portal.
  /api/2.0/accounts/room/{id}/search:
    get:
      tags:
        - People / Search
      summary: Gets accounts entries with shared
      operationId: getAccountsEntriesWithShared
      parameters:
        - name: id
          in: path
          description: ID
          required: true
          schema:
            type: integer
            format: int32
            example: 9846
        - name: employeeStatus
          in: query
          description: Employee status
          schema:
            $ref: '#/components/schemas/ASC.Core.Users.EmployeeStatus'
        - name: activationStatus
          in: query
          description: Activation status
          schema:
            $ref: '#/components/schemas/ASC.Core.Users.EmployeeActivationStatus'
        - name: excludeShared
          in: query
          description: Exclude shared
          schema:
            type: boolean
            example: true
        - name: invitedByMe
          in: query
          description: Invited by me
          schema:
            type: boolean
            example: true
        - name: inviterId
          in: query
          description: Inviter Id
          schema:
            type: string
            format: uuid
            example: 75a5f745-f697-4418-b38d-0fe0d277e258
        - name: area
          in: query
          description: Area
          schema:
            $ref: '#/components/schemas/ASC.Core.Common.Core.Area'
      responses:
        '200':
          description: Ok
          content:
            application/json:
              schema:
                type: array
                items: {}
        '401':
          description: Unauthorized
        '403':
          description: No permissions to perform this action
      security:
        - asc_auth_key:
            - read
            - write
      description: Gets accounts entries with shared
  /api/2.0/people/status/{status}/search:
    get:
      tags:
        - People / Search
      summary: Search users by status filter
      operationId: getAdvanced
      parameters:
        - name: status
          in: path
          description: User status
          required: true
          schema:
            $ref: '#/components/schemas/ASC.Core.Users.EmployeeStatus'
        - name: query
          in: query
          description: Search query
          schema:
            type: string
            example: some text
      responses:
        '200':
          description: List of users with the detailed information
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ASC.Web.Api.Models.EmployeeFullDto'
        '401':
          description: Unauthorized
      security:
        - asc_auth_key:
            - read
            - write
      description: Returns a list of users matching the status filter and search query.
  /api/2.0/people/filter:
    get:
      tags:
        - People / Search
      summary: Search users and their information by extended filter
      operationId: getFullByFilter
      parameters:
        - name: employeeStatus
          in: query
          description: User status
          schema:
            $ref: '#/components/schemas/ASC.Core.Users.EmployeeStatus'
        - name: groupId
          in: query
          description: Group ID
          schema:
            type: string
            format: uuid
            example: 75a5f745-f697-4418-b38d-0fe0d277e258
        - name: activationStatus
          in: query
          description: Activation status
          schema:
            $ref: '#/components/schemas/ASC.Core.Users.EmployeeActivationStatus'
        - name: employeeType
          in: query
          description: User type
          schema:
            $ref: '#/components/schemas/ASC.Core.Users.EmployeeType'
        - name: employeeTypes
          in: query
          description: List of user types
          style: deepObject
          schema:
            type: array
            items:
              anyOf:
                - enum:
                    - All
                    - RoomAdmin
                    - Guest
                    - DocSpaceAdmin
                    - User
                  type: string
                  description: >-
                    [All - All, RoomAdmin - Room admin, Guest - Guest,
                    DocSpaceAdmin - DocSpace admin, User - User]
                  example: All
                - enum:
                    - 0
                    - 1
                    - 2
                    - 3
                    - 4
                  type: integer
                  description: >-
                    [0 - All, 1 - Room admin, 2 - Guest, 3 - DocSpace admin, 4 -
                    User]
                  example: 0
        - name: isAdministrator
          in: query
          description: Specifies if the user is an administrator or not
          schema:
            type: boolean
            example: true
        - name: payments
          in: query
          description: User payment status
          schema:
            $ref: '#/components/schemas/ASC.Core.Payments'
        - name: accountLoginType
          in: query
          description: Account login type
          schema:
            $ref: '#/components/schemas/ASC.Core.AccountLoginType'
        - name: quotaFilter
          in: query
          description: Filter by quota (Default - 1, Custom - 2)
          schema:
            $ref: '#/components/schemas/ASC.Core.QuotaFilter'
        - name: withoutGroup
          in: query
          description: Specifies whether the user should be a member of a group or not
          schema:
            type: boolean
            example: true
        - name: excludeGroup
          in: query
          description: >-
            Specifies whether or not the user should be a member of the group
            with the specified ID
          schema:
            type: boolean
            example: true
        - name: invitedByMe
          in: query
          description: Invited by me
          schema:
            type: boolean
            example: true
        - name: inviterId
          in: query
          description: Inviter Id
          schema:
            type: string
            format: uuid
            example: 75a5f745-f697-4418-b38d-0fe0d277e258
        - name: area
          in: query
          description: Area
          schema:
            $ref: '#/components/schemas/ASC.Core.Common.Core.Area'
      responses:
        '200':
          description: List of users with the detailed information
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ASC.Web.Api.Models.EmployeeFullDto'
        '401':
          description: Unauthorized
        '403':
          description: No permissions to perform this action
      security:
        - asc_auth_key:
            - read
            - write
      description: >-
        Returns a list of users with full information about them matching the
        parameters specified in the request.
  /api/2.0/people/search:
    get:
      tags:
        - People / Search
      summary: Search users (using query parameters)
      operationId: getPeopleSearch
      parameters:
        - name: query
          in: query
          description: Search query
          schema:
            type: string
            example: some text
      responses:
        '200':
          description: List of users
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ASC.Web.Api.Models.EmployeeDto'
        '401':
          description: Unauthorized
      security:
        - asc_auth_key:
            - read
            - write
      description: >-
        Returns a list of users matching the search query. This method uses the
        query parameters.
  /api/2.0/people/@search/{query}:
    get:
      tags:
        - People / Search
      summary: Search users
      operationId: getSearch
      parameters:
        - name: query
          in: path
          description: Search query
          required: true
          schema:
            type: string
            example: some text
      responses:
        '200':
          description: List of users with the detailed information
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ASC.Web.Api.Models.EmployeeFullDto'
        '401':
          description: Unauthorized
      security:
        - asc_auth_key:
            - read
            - write
      description: Returns a list of users matching the search query.
  /api/2.0/people/simple/filter:
    get:
      tags:
        - People / Search
      summary: Search users by extended filter
      operationId: getSimpleByFilter
      parameters:
        - name: employeeStatus
          in: query
          description: User status
          schema:
            $ref: '#/components/schemas/ASC.Core.Users.EmployeeStatus'
        - name: groupId
          in: query
          description: Group ID
          schema:
            type: string
            format: uuid
            example: 75a5f745-f697-4418-b38d-0fe0d277e258
        - name: activationStatus
          in: query
          description: Activation status
          schema:
            $ref: '#/components/schemas/ASC.Core.Users.EmployeeActivationStatus'
        - name: employeeType
          in: query
          description: User type
          schema:
            $ref: '#/components/schemas/ASC.Core.Users.EmployeeType'
        - name: employeeTypes
          in: query
          description: List of user types
          style: deepObject
          schema:
            type: array
            items:
              anyOf:
                - enum:
                    - All
                    - RoomAdmin
                    - Guest
                    - DocSpaceAdmin
                    - User
                  type: string
                  description: >-
                    [All - All, RoomAdmin - Room admin, Guest - Guest,
                    DocSpaceAdmin - DocSpace admin, User - User]
                  example: All
                - enum:
                    - 0
                    - 1
                    - 2
                    - 3
                    - 4
                  type: integer
                  description: >-
                    [0 - All, 1 - Room admin, 2 - Guest, 3 - DocSpace admin, 4 -
                    User]
                  example: 0
        - name: isAdministrator
          in: query
          description: Specifies if the user is an administrator or not
          schema:
            type: boolean
            example: true
        - name: payments
          in: query
          description: User payment status
          schema:
            $ref: '#/components/schemas/ASC.Core.Payments'
        - name: accountLoginType
          in: query
          description: Account login type
          schema:
            $ref: '#/components/schemas/ASC.Core.AccountLoginType'
        - name: quotaFilter
          in: query
          description: Filter by quota (Default - 1, Custom - 2)
          schema:
            $ref: '#/components/schemas/ASC.Core.QuotaFilter'
        - name: withoutGroup
          in: query
          description: Specifies whether the user should be a member of a group or not
          schema:
            type: boolean
            example: true
        - name: excludeGroup
          in: query
          description: >-
            Specifies whether or not the user should be a member of the group
            with the specified ID
          schema:
            type: boolean
            example: true
        - name: invitedByMe
          in: query
          description: Invited by me
          schema:
            type: boolean
            example: true
        - name: inviterId
          in: query
          description: Inviter Id
          schema:
            type: string
            format: uuid
            example: 75a5f745-f697-4418-b38d-0fe0d277e258
        - name: area
          in: query
          description: Area
          schema:
            $ref: '#/components/schemas/ASC.Core.Common.Core.Area'
      responses:
        '200':
          description: List of users
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ASC.Web.Api.Models.EmployeeDto'
        '401':
          description: Unauthorized
        '403':
          description: No permissions to perform this action
      security:
        - asc_auth_key:
            - read
            - write
      description: >-
        Returns a list of users matching the parameters specified in the
        request.
  /api/2.0/people/room/{id}:
    get:
      tags:
        - People / Search
      summary: Gets users with shared in room ID specified in request
      operationId: getUsersWithRoomShared
      parameters:
        - name: id
          in: path
          description: Id
          required: true
          schema:
            type: integer
            format: int32
            example: 9846
        - name: employeeStatus
          in: query
          description: Employee status
          schema:
            $ref: '#/components/schemas/ASC.Core.Users.EmployeeStatus'
        - name: activationStatus
          in: query
          description: Activation status
          schema:
            $ref: '#/components/schemas/ASC.Core.Users.EmployeeActivationStatus'
        - name: excludeShared
          in: query
          description: Exclude shared
          schema:
            type: boolean
            example: true
        - name: invitedByMe
          in: query
          description: Invited by me
          schema:
            type: boolean
            example: true
        - name: inviterId
          in: query
          description: Inviter Id
          schema:
            type: string
            format: uuid
            example: 75a5f745-f697-4418-b38d-0fe0d277e258
        - name: area
          in: query
          description: Area
          schema:
            $ref: '#/components/schemas/ASC.Core.Common.Core.Area'
      responses:
        '200':
          description: Ok
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ASC.Web.Api.Models.EmployeeFullDto'
        '401':
          description: Unauthorized
        '403':
          description: No permissions to perform this action
      security:
        - asc_auth_key:
            - read
            - write
      description: Gets users with shared in room ID specified in request
  /api/2.0/people/theme:
    get:
      tags:
        - People / Theme
      summary: Get portal theme
      operationId: getTheme
      responses:
        '200':
          description: Theme
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ASC.Web.Core.Users.DarkThemeSettings'
        '401':
          description: Unauthorized
      security:
        - asc_auth_key:
            - read
            - write
      description: Returns a theme which is set to the current portal.
    put:
      tags:
        - People / Theme
      summary: Change portal theme
      operationId: changeTheme
      requestBody:
        content:
          application/json:
            schema:
              $ref: >-
                #/components/schemas/ASC.People.ApiModels.RequestDto.DarkThemeSettingsRequestDto
      responses:
        '200':
          description: Theme
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ASC.Web.Core.Users.DarkThemeSettings'
        '401':
          description: Unauthorized
      security:
        - asc_auth_key:
            - read
            - write
      description: Changes the current portal theme.
  /api/2.0/people/thirdparty/providers:
    get:
      tags:
        - People / Third-party accounts
      summary: Get third-party accounts
      operationId: getAuthProviders
      parameters:
        - name: inviteView
          in: query
          description: >-
            Specifies whether to return providers that are available for
            invitation links, i.e. the user can login or register through these
            providers
          schema:
            type: boolean
            example: true
        - name: settingsView
          in: query
          description: >-
            Specifies whether to return URLs in the format that is used on the
            Settings page
          schema:
            type: boolean
            example: true
        - name: clientCallback
          in: query
          description: Method that is called after authorization
          schema:
            type: string
            example: some text
        - name: fromOnly
          in: query
          description: Provider name if the response only from this provider is needed
          schema:
            type: string
            example: some text
      responses:
        '200':
          description: List of third-party accounts
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/ASC.People.ApiModels.ResponseDto.AccountInfoDto
      description: Returns a list of the available third-party accounts.
  /api/2.0/people/thirdparty/linkaccount:
    put:
      tags:
        - People / Third-party accounts
      summary: Link a third-pary account
      operationId: linkAccount
      requestBody:
        content:
          application/json:
            schema:
              $ref: >-
                #/components/schemas/ASC.People.ApiModels.RequestDto.LinkAccountRequestDto
      responses:
        '200':
          description: Ok
        '401':
          description: Unauthorized
        '405':
          description: Error not allowed option
      security:
        - asc_auth_key:
            - read
            - write
      description: >-
        Links a third-party account specified in the request to the user
        profile.
  /api/2.0/people/thirdparty/signup:
    post:
      tags:
        - People / Third-party accounts
      summary: Create a third-pary account
      operationId: signupAccount
      requestBody:
        content:
          application/json:
            schema:
              $ref: >-
                #/components/schemas/ASC.People.ApiModels.RequestDto.SignupAccountRequestDto
      responses:
        '200':
          description: Ok
        '400':
          description: Incorrect email
        '403':
          description: The invitation link is invalid or its validity has expired
      description: >-
        Creates a third-party account with the parameters specified in the
        request.
  /api/2.0/people/thirdparty/unlinkaccount:
    delete:
      tags:
        - People / Third-party accounts
      summary: Unlink a third-pary account
      operationId: unlinkAccount
      parameters:
        - name: provider
          in: query
          description: Provider name
          schema:
            type: string
            example: some text
      responses:
        '200':
          description: OK
        '401':
          description: Unauthorized
      security:
        - asc_auth_key:
            - read
            - write
      description: >-
        Unlinks a third-party account specified in the request from the user
        profile.
  /api/2.0/people/reassign/progress/{userid}:
    get:
      tags:
        - People / User data
      summary: Get the reassignment progress
      operationId: getReassignProgress
      parameters:
        - name: userid
          in: path
          description: User ID whose data is reassigned
          required: true
          schema:
            type: string
            format: uuid
            example: aae1e103-bca5-9fa1-ba8c-42058b4abf28
      responses:
        '200':
          description: Reassignment progress
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/ASC.People.ApiModels.ResponseDto.TaskProgressResponseDto
        '401':
          description: Unauthorized
      security:
        - asc_auth_key:
            - read
            - write
      description: >-
        Returns the progress of the started data reassignment for the user with
        the ID specified in the request.
  /api/2.0/people/reassign/start:
    post:
      tags:
        - People / User data
      summary: Start the data reassignment
      operationId: startReassign
      requestBody:
        content:
          application/json:
            schema:
              $ref: >-
                #/components/schemas/ASC.People.ApiModels.RequestDto.StartReassignRequestDto
      responses:
        '200':
          description: Reassignment progress
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/ASC.People.ApiModels.ResponseDto.TaskProgressResponseDto
        '400':
          description: Can not reassign data to user or from user
        '401':
          description: Unauthorized
      security:
        - asc_auth_key:
            - read
            - write
      description: >-
        Starts the data reassignment for the user with the ID specified in the
        request.
  /api/2.0/people/reassign/terminate:
    put:
      tags:
        - People / User data
      summary: Terminate the data reassignment
      operationId: terminateReassign
      requestBody:
        content:
          application/json:
            schema:
              $ref: >-
                #/components/schemas/ASC.People.ApiModels.RequestDto.TerminateRequestDto
      responses:
        '200':
          description: Reassignment progress
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/ASC.People.ApiModels.ResponseDto.TaskProgressResponseDto
        '401':
          description: Unauthorized
      security:
        - asc_auth_key:
            - read
            - write
      description: >-
        Terminates the data reassignment for the user with the ID specified in
        the request.
  /api/2.0/people/remove/progress/{userid}:
    get:
      tags:
        - People / User data
      summary: Get the deletion progress
      operationId: getRemoveProgress
      parameters:
        - name: userid
          in: path
          description: User ID whose data is reassigned
          required: true
          schema:
            type: string
            format: uuid
            example: aae1e103-bca5-9fa1-ba8c-42058b4abf28
      responses:
        '200':
          description: Deletion progress
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/ASC.People.ApiModels.ResponseDto.TaskProgressResponseDto
        '401':
          description: Unauthorized
      security:
        - asc_auth_key:
            - read
            - write
      description: >-
        Returns the progress of the started data deletion for the user with the
        ID specified in the request.
  /api/2.0/people/self/delete:
    put:
      tags:
        - People / User data
      summary: Send the deletion instructions
      operationId: sendInstructionsToDelete
      responses:
        '200':
          description: Information message
          content:
            application/json:
              schema: {}
        '401':
          description: Unauthorized
        '403':
          description: No permissions to perform this action
      security:
        - asc_auth_key:
            - read
            - write
      description: Sends instructions for deleting a user profile.
  /api/2.0/people/remove/start:
    post:
      tags:
        - People / User data
      summary: Start the data deletion
      operationId: startRemove
      requestBody:
        content:
          application/json:
            schema:
              $ref: >-
                #/components/schemas/ASC.People.ApiModels.RequestDto.TerminateRequestDto
      responses:
        '200':
          description: Deletion progress
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/ASC.People.ApiModels.ResponseDto.TaskProgressResponseDto
        '400':
          description: User exception
        '401':
          description: Unauthorized
        '403':
          description: No permissions to perform this action
        '404':
          description: User not found
      security:
        - asc_auth_key:
            - read
            - write
      description: >-
        Starts the data deletion for the user with the ID specified in the
        request.
  /api/2.0/people/remove/terminate:
    put:
      tags:
        - People / User data
      summary: Terminate the data deletion
      operationId: terminateRemove
      requestBody:
        content:
          application/json:
            schema:
              $ref: >-
                #/components/schemas/ASC.People.ApiModels.RequestDto.TerminateRequestDto
      responses:
        '200':
          description: OK
        '401':
          description: Unauthorized
      security:
        - asc_auth_key:
            - read
            - write
      description: >-
        Terminates the data deletion for the user with the ID specified in the
        request.
  /api/2.0/people/status/{status}:
    get:
      tags:
        - People / User status
      summary: Get profiles by status
      operationId: getByStatus
      parameters:
        - name: status
          in: path
          description: User status
          required: true
          schema:
            $ref: '#/components/schemas/ASC.Core.Users.EmployeeStatus'
      responses:
        '200':
          description: List of users with the detailed information
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ASC.Web.Api.Models.EmployeeFullDto'
        '401':
          description: Unauthorized
      security:
        - asc_auth_key:
            - read
            - write
      description: Returns a list of profiles filtered by user status.
    put:
      tags:
        - People / User status
      summary: Change a user status
      operationId: updateUserStatus
      parameters:
        - name: status
          in: path
          description: New user status
          required: true
          schema:
            $ref: '#/components/schemas/ASC.Core.Users.EmployeeStatus'
      requestBody:
        description: Update members
        content:
          application/json:
            schema:
              $ref: >-
                #/components/schemas/ASC.People.ApiModels.RequestDto.UpdateMembersRequestDto
      responses:
        '200':
          description: List of users with the detailed information
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ASC.Web.Api.Models.EmployeeFullDto'
        '401':
          description: Unauthorized
      security:
        - asc_auth_key:
            - read
            - write
      description: Changes a status for the users with the IDs specified in the request.
  /api/2.0/people/activationstatus/{activationstatus}:
    put:
      tags:
        - People / User status
      summary: Set an activation status to the users
      operationId: updateEmployeeActivationStatus
      parameters:
        - name: activationstatus
          in: path
          description: Activation status
          required: true
          schema:
            $ref: '#/components/schemas/ASC.Core.Users.EmployeeActivationStatus'
      requestBody:
        description: Update members
        content:
          application/json:
            schema:
              $ref: >-
                #/components/schemas/ASC.People.ApiModels.RequestDto.UpdateMembersRequestDto
      responses:
        '200':
          description: List of users with the detailed information
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ASC.Web.Api.Models.EmployeeFullDto'
        '401':
          description: Unauthorized
      security:
        - asc_auth_key:
            - read
            - write
      description: >-
        Sets the required activation status to the list of users with the IDs
        specified in the request.
  /api/2.0/people/type/{type}:
    put:
      tags:
        - People / User type
      summary: Change a user type
      operationId: updateUserType
      parameters:
        - name: type
          in: path
          description: New user type
          required: true
          schema:
            $ref: '#/components/schemas/ASC.Core.Users.EmployeeType'
      requestBody:
        description: Update members
        content:
          application/json:
            schema:
              $ref: >-
                #/components/schemas/ASC.People.ApiModels.RequestDto.UpdateMembersRequestDto
      responses:
        '200':
          description: List of users with the detailed information
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ASC.Web.Api.Models.EmployeeFullDto'
        '401':
          description: Unauthorized
      security:
        - asc_auth_key:
            - read
            - write
      description: Changes a type for the users with the IDs specified in the request.
  /api/2.0/files/file/{fileId}/saveediting:
    put:
      tags:
        - Files / Files
      summary: Save file edits
      operationId: saveEditingFromForm
      parameters:
        - name: fileId
          in: path
          description: File ID
          required: true
          schema:
            type: integer
            format: int32
            example: 9846
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                FileExtension:
                  type: string
                  description: File extension
                  example: .txt
                DownloadUri:
                  type: string
                  description: URI to download a file
                  example: some text
                File:
                  type: string
                  description: Request file stream
                  format: binary
                Forcesave:
                  type: boolean
                  description: Specifies whether to force save a file or not
                  example: true
            encoding:
              FileExtension:
                style: form
              DownloadUri:
                style: form
              File:
                style: form
              Forcesave:
                style: form
      responses:
        '200':
          description: Saved file parameters
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/ASC.Files.Core.ApiModels.ResponseDto.FileDto.System.Int32
        '400':
          description: No file id or folder id toFolderId determine provider
        '401':
          description: Unauthorized
        '403':
          description: You do not have enough permissions to edit the file
      security:
        - asc_auth_key:
            - read
            - write
      description: Saves edits to a file with the ID specified in the request.
  /api/2.0/files/file/{fileId}/startedit:
    post:
      tags:
        - Files / Files
      summary: Start file editing
      operationId: startEdit
      parameters:
        - name: fileId
          in: path
          description: File ID
          required: true
          schema:
            type: integer
            format: int32
            example: 9846
      requestBody:
        description: Parameters for starting file editing
        content:
          application/json:
            schema:
              $ref: >-
                #/components/schemas/ASC.Files.Core.ApiModels.RequestDto.StartEdit
      responses:
        '200':
          description: File key for Document Service
          content:
            application/json:
              schema: {}
        '403':
          description: You don't have enough permission to view the file
      description: >-
        Informs about opening a file with the ID specified in the request for
        editing, locking it from being deleted or moved (this method is called
        by the mobile editors).
  /api/2.0/files/file/{fileId}/startfilling:
    put:
      tags:
        - Files / Files
      summary: Starts filling
      operationId: startFilling
      parameters:
        - name: fileId
          in: path
          description: File ID
          required: true
          schema:
            type: integer
            format: int32
            example: 9846
      responses:
        '200':
          description: Ok
        '401':
          description: Unauthorized
        '403':
          description: You do not have enough permissions to edit the file
      security:
        - asc_auth_key:
            - read
            - write
      description: Starts filling a file with the ID specified in the request.
  /api/2.0/files/file/{fileId}/trackeditfile:
    get:
      tags:
        - Files / Files
      summary: Track file editing
      operationId: trackEditFile
      parameters:
        - name: fileId
          in: path
          description: File ID
          required: true
          schema:
            type: integer
            format: int32
            example: 9846
        - name: tabId
          in: query
          description: Tab ID
          schema:
            type: string
            format: uuid
            example: 75a5f745-f697-4418-b38d-0fe0d277e258
        - name: docKeyForTrack
          in: query
          description: Document key for tracking
          schema:
            type: string
            example: some text
        - name: isFinish
          in: query
          description: Specifies whether to finish file tracking or not
          schema:
            type: boolean
            example: true
      responses:
        '200':
          description: File changes
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/System.Collections.Generic.KeyValuePair.System.Boolean.System.String
        '403':
          description: You don't have enough permission to perform the operation
      description: Tracks file changes when editing.
  /api/2.0/files/file/{fileId}/openedit:
    get:
      tags:
        - Files / Files
      summary: Open a file
      operationId: openEdit
      parameters:
        - name: fileId
          in: path
          description: File ID
          required: true
          schema:
            type: integer
            format: int32
            example: 9846
        - name: version
          in: query
          description: File version
          schema:
            type: integer
            format: int32
            example: 1234
        - name: view
          in: query
          description: Specifies if a document will be opened for viewing only or not
          schema:
            type: boolean
            example: true
        - name: editorType
          in: query
          description: Editor type
          schema:
            $ref: >-
              #/components/schemas/ASC.Web.Files.Services.DocumentService.EditorType
        - name: edit
          in: query
          description: Edit
          schema:
            type: boolean
            example: true
        - name: fill
          in: query
          description: Fill
          schema:
            type: boolean
            example: true
      responses:
        '200':
          description: Configuration parameters
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/ASC.Files.Core.ApiModels.ResponseDto.ConfigurationDto.System.Int32
        '403':
          description: You don't have enough permission to view the file
      description: >-
        Returns the initialization configuration of a file to open it in the
        editor.
  /api/2.0/files/file/{fileId}/presigned:
    get:
      tags:
        - Files / Files
      summary: Get file download link asynchronously
      operationId: getPresignedFileUri
      parameters:
        - name: fileId
          in: path
          description: File ID
          required: true
          schema:
            type: integer
            format: int32
            example: 9846
      responses:
        '200':
          description: File download link
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/ASC.Files.Core.Helpers.DocumentService_FileLink
        '401':
          description: Unauthorized
      security:
        - asc_auth_key:
            - read
            - write
      description: >-
        Returns a link to download a file with the ID specified in the request
        asynchronously.
  /api/2.0/files/file/referencedata:
    post:
      tags:
        - Files / Files
      summary: Get reference data
      operationId: getReferenceData
      requestBody:
        content:
          application/json:
            schema:
              $ref: >-
                #/components/schemas/ASC.Files.Core.ApiModels.RequestDto.GetReferenceDataDto.System.Int32
      responses:
        '200':
          description: File reference data
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/ASC.Web.Files.Services.DocumentService.FileReference
        '401':
          description: Unauthorized
      security:
        - asc_auth_key:
            - read
            - write
      description: >-
        Returns the reference data to uniquely identify a file in its system and
        check the availability of insering data into the destination spreadsheet
        by the external link.
  /api/2.0/files/file/{fileId}/protectusers:
    get:
      tags:
        - Files / Files
      summary: Get users with the access to the protected file
      operationId: protectUsers
      parameters:
        - name: fileId
          in: path
          description: File ID
          required: true
          schema:
            type: integer
            format: int32
            example: 9846
      responses:
        '200':
          description: List of users with their access rights to the protected file
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: >-
                    #/components/schemas/ASC.Web.Files.Services.WCFService.MentionWrapper
        '401':
          description: Unauthorized
      security:
        - asc_auth_key:
            - read
            - write
      description: >-
        Returns a list of users with their access rights to the protected file
        with the ID specified in the request.
  /api/2.0/files/file/{fileId}/log:
    get:
      tags:
        - Files / Files
      summary: Get file history
      operationId: getFileHistory
      parameters:
        - name: fileId
          in: path
          description: File ID
          required: true
          schema:
            type: integer
            format: int32
            example: 9846
        - name: fromDate
          in: query
          description: Start date
          schema:
            $ref: '#/components/schemas/ASC.Api.Core.ApiDateTime'
        - name: toDate
          in: query
          description: End date
          schema:
            $ref: '#/components/schemas/ASC.Api.Core.ApiDateTime'
      responses:
        '200':
          description: List of actions performed on the file
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/ASC.Files.Core.ApiModels.ResponseDto.HistoryDto
        '401':
          description: Unauthorized
        '403':
          description: You don't have enough permission to perform the operation
        '404':
          description: The required file was not found
      security:
        - asc_auth_key:
            - read
            - write
      description: >-
        Get the list of actions performed on the file with the specified
        identifier
  /api/2.0/files/file/{fileId}/history:
    put:
      tags:
        - Files / Files
      summary: Change version history
      operationId: changeHistory
      parameters:
        - name: fileId
          in: path
          description: File Id
          required: true
          schema:
            type: integer
            format: int32
            example: 9846
      requestBody:
        description: File
        content:
          application/json:
            schema:
              $ref: >-
                #/components/schemas/ASC.Files.Core.ApiModels.RequestDto.ChangeHistory
      responses:
        '200':
          description: Updated information about file versions
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/ASC.Files.Core.ApiModels.ResponseDto.FileDto.System.Int32
        '401':
          description: Unauthorized
        '403':
          description: You do not have enough permissions to edit the file
      security:
        - asc_auth_key:
            - read
            - write
      description: >-
        Changes the version history of a file with the ID specified in the
        request.
    get:
      tags:
        - Files / Files
      summary: Get file versions
      operationId: getFileVersionInfo
      parameters:
        - name: fileId
          in: path
          description: File ID
          required: true
          schema:
            type: integer
            format: int32
            example: 9846
      responses:
        '200':
          description: >-
            Information about file versions: folder ID, version, version group,
            content length, pure content length, file status, URL to view a
            file, web URL, file type, file extension, comment, encrypted or not,
            thumbnail URL, thumbnail status, locked or not, user ID who locked a
            file, denies file downloading or not, denies file sharing or not,
            file accessibility
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/ASC.Files.Core.ApiModels.ResponseDto.FileDto.System.Int32
      description: >-
        Returns the detailed information about all the available file versions
        with the ID specified in the request.
  /api/2.0/files/file/{fileId}/presigneduri:
    get:
      tags:
        - Files / Files
      summary: Get file download link
      operationId: getPresignedUri
      parameters:
        - name: fileId
          in: path
          description: File ID
          required: true
          schema:
            type: integer
            format: int32
            example: 9846
      responses:
        '200':
          description: File download link
          content:
            application/json:
              schema:
                type: string
        '401':
          description: Unauthorized
      security:
        - asc_auth_key:
            - read
            - write
      description: Returns a link to download a file with the ID specified in the request.
  /api/2.0/files/file/{fileId}/isformpdf:
    get:
      tags:
        - Files / Files
      summary: Check the PDF file
      operationId: isFormPDF
      parameters:
        - name: fileId
          in: path
          description: File ID
          required: true
          schema:
            type: integer
            format: int32
            example: 9846
      responses:
        '200':
          description: >-
            Boolean value: true - the PDF file is form, false - the PDF file is
            not a form
          content:
            application/json:
              schema:
                type: boolean
        '401':
          description: Unauthorized
      security:
        - asc_auth_key:
            - read
            - write
      description: Checks if the PDF file is form or not.
  /api/2.0/files/file/{fileId}/copyas:
    post:
      tags:
        - Files / Files
      summary: Copy a file
      operationId: copyFileAs
      parameters:
        - name: fileId
          in: path
          description: File id
          required: true
          schema:
            type: integer
            format: int32
            example: 9846
      requestBody:
        description: File
        content:
          application/json:
            schema:
              $ref: >-
                #/components/schemas/ASC.Files.Core.ApiModels.RequestDto.CopyAs.System.Text.Json.JsonElement
      responses:
        '200':
          description: Copied file entry information
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/ASC.Files.Core.ApiModels.ResponseDto.FileEntryDto
        '400':
          description: No file id or folder id toFolderId determine provider
        '401':
          description: Unauthorized
        '403':
          description: You don't have enough permission to create
        '404':
          description: File not found
      security:
        - asc_auth_key:
            - read
            - write
      description: >-
        Copies (and converts if possible) an existing file to the specified
        folder.
  /api/2.0/files/{folderId}/file:
    post:
      tags:
        - Files / Files
      summary: Create a file
      description: >-
        Creates a new file in the specified folder with the title specified in
        the request.

         **Note**: If a file extension is different from DOCX/XLSX/PPTX and refers to one of the known text, spreadsheet, or presentation formats, it will be changed to DOCX/XLSX/PPTX accordingly. If the file extension is not specified or is unknown, the DOCX extension will be added to the file title.
      operationId: createFile
      parameters:
        - name: folderId
          in: path
          description: Folder ID
          required: true
          schema:
            type: integer
            format: int32
            example: 9846
      requestBody:
        description: File
        content:
          application/json:
            schema:
              $ref: >-
                #/components/schemas/ASC.Files.Core.ApiModels.RequestDto.CreateFile.System.Text.Json.JsonElement
      responses:
        '200':
          description: New file information
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/ASC.Files.Core.ApiModels.ResponseDto.FileDto.System.Int32
        '401':
          description: Unauthorized
      security:
        - asc_auth_key:
            - read
            - write
  /api/2.0/files/{folderId}/html:
    post:
      tags:
        - Files / Files
      summary: Create an HTML file
      operationId: createHtmlFile
      parameters:
        - name: folderId
          in: path
          description: Folder ID
          required: true
          schema:
            type: integer
            format: int32
            example: 9846
      requestBody:
        description: File
        content:
          application/json:
            schema:
              $ref: >-
                #/components/schemas/ASC.Files.Core.ApiModels.RequestDto.CreateTextOrHtmlFile
      responses:
        '200':
          description: New file information
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/ASC.Files.Core.ApiModels.ResponseDto.FileDto.System.Int32
        '401':
          description: Unauthorized
        '403':
          description: You don't have enough permission to create
      security:
        - asc_auth_key:
            - read
            - write
      description: >-
        Creates an HTML (.html) file in the selected folder with the title and
        contents specified in the request.
  /api/2.0/files/{folderId}/text:
    post:
      tags:
        - Files / Files
      summary: Create a txt file
      operationId: createTextFile
      parameters:
        - name: folderId
          in: path
          description: Folder ID
          required: true
          schema:
            type: integer
            format: int32
            example: 9846
      requestBody:
        description: File
        content:
          application/json:
            schema:
              $ref: >-
                #/components/schemas/ASC.Files.Core.ApiModels.RequestDto.CreateTextOrHtmlFile
      responses:
        '200':
          description: New file information
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/ASC.Files.Core.ApiModels.ResponseDto.FileDto.System.Int32
        '401':
          description: Unauthorized
      security:
        - asc_auth_key:
            - read
            - write
      description: >-
        Creates a text (.txt) file in the selected folder with the title and
        contents specified in the request.
  /api/2.0/files/file/{fileId}:
    delete:
      tags:
        - Files / Files
      summary: Delete a file
      operationId: deleteFile
      parameters:
        - name: fileId
          in: path
          description: File ID
          required: true
          schema:
            type: integer
            format: int32
            example: 9846
      requestBody:
        description: File
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ASC.Files.Core.ApiModels.RequestDto.Delete'
      responses:
        '200':
          description: List of file operations
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/ASC.Files.Core.ApiModels.ResponseDto.FileOperationDto
        '401':
          description: Unauthorized
      security:
        - asc_auth_key:
            - read
            - write
      description: Deletes a file with the ID specified in the request.
    get:
      tags:
        - Files / Files
      summary: Get file information
      operationId: getFileInfo
      parameters:
        - name: fileId
          in: path
          description: File ID
          required: true
          schema:
            type: integer
            format: int32
            example: 9846
        - name: version
          in: query
          description: File version
          schema:
            type: integer
            format: int32
            example: 1234
      responses:
        '200':
          description: File information
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/ASC.Files.Core.ApiModels.ResponseDto.FileDto.System.Int32
      description: >-
        Returns the detailed information about a file with the ID specified in
        the request.
    put:
      tags:
        - Files / Files
      summary: Update a file
      operationId: updateFile
      parameters:
        - name: fileId
          in: path
          description: File ID
          required: true
          schema:
            type: integer
            format: int32
            example: 9846
      requestBody:
        description: File
        content:
          application/json:
            schema:
              $ref: >-
                #/components/schemas/ASC.Files.Core.ApiModels.RequestDto.UpdateFile
      responses:
        '200':
          description: Updated file information
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/ASC.Files.Core.ApiModels.ResponseDto.FileDto.System.Int32
        '403':
          description: You do not have enough permissions to edit the file
      description: >-
        Updates the information of the selected file with the parameters
        specified in the request.
  /api/2.0/files/file/fillresult:
    get:
      tags:
        - Files / Files
      summary: Gets fill result
      operationId: getFillResult
      parameters:
        - name: fillingSessionId
          in: query
          description: Filling session id
          schema:
            type: string
            example: some text
      responses:
        '200':
          description: Ok
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/ASC.Files.Core.ApiModels.ResponseDto.FillingFormResultDto.System.Int32
      description: Gets fill result
  /api/2.0/files/file/{fileId}/edit/diff:
    get:
      tags:
        - Files / Files
      summary: Get changes URL
      operationId: getEditDiffUrl
      parameters:
        - name: fileId
          in: path
          description: File ID
          required: true
          schema:
            type: integer
            format: int32
            example: 9846
        - name: version
          in: query
          description: File version
          schema:
            type: integer
            format: int32
            example: 1234
      responses:
        '200':
          description: File version history data
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ASC.Files.Core.EditHistoryDataDto'
      description: Returns a URL to the changes of a file version specified in the request.
  /api/2.0/files/file/{fileId}/edit/history:
    get:
      tags:
        - Files / Files
      summary: Get version history
      operationId: getEditHistory
      parameters:
        - name: fileId
          in: path
          description: File ID
          required: true
          schema:
            type: integer
            format: int32
            example: 9846
      responses:
        '200':
          description: Version history data
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/ASC.Files.Core.ApiModels.ResponseDto.EditHistoryDto
      description: >-
        Returns the version history of a file with the ID specified in the
        request.
  /api/2.0/files/file/{fileId}/lock:
    put:
      tags:
        - Files / Files
      summary: Lock a file
      operationId: lockFile
      parameters:
        - name: fileId
          in: path
          description: File ID
          required: true
          schema:
            type: integer
            format: int32
            example: 9846
      requestBody:
        description: Parameters for locking a file
        content:
          application/json:
            schema:
              $ref: >-
                #/components/schemas/ASC.Files.Core.ApiModels.RequestDto.LockFileParameters
      responses:
        '200':
          description: Locked file information
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/ASC.Files.Core.ApiModels.ResponseDto.FileDto.System.Int32
        '401':
          description: Unauthorized
      security:
        - asc_auth_key:
            - read
            - write
      description: Locks a file with the ID specified in the request.
  /api/2.0/files/file/{fileId}/restoreversion:
    get:
      tags:
        - Files / Files
      summary: Restore a file version
      operationId: restoreVersion
      parameters:
        - name: fileId
          in: path
          description: File ID
          required: true
          schema:
            type: integer
            format: int32
            example: 9846
        - name: version
          in: query
          description: File version
          schema:
            type: integer
            format: int32
            example: 1234
        - name: url
          in: query
          description: File version URL
          schema:
            type: string
            example: some text
      responses:
        '200':
          description: >-
            Version history data: file ID, key, file version, version group, a
            user who updated a file, creation time, history changes in the
            string format, list of history changes, server version
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/ASC.Files.Core.ApiModels.ResponseDto.EditHistoryDto
        '400':
          description: No file id or folder id toFolderId determine provider
        '403':
          description: You do not have enough permissions to edit the file
      description: Restores a file version specified in the request.
  /api/2.0/files/file/{id}/link:
    post:
      tags:
        - Files / Files
      summary: Create primary external link
      operationId: createPrimaryExternalLink
      parameters:
        - name: id
          in: path
          description: File ID
          required: true
          schema:
            type: integer
            format: int32
            example: 9846
      requestBody:
        description: External link parameters
        content:
          application/json:
            schema:
              $ref: >-
                #/components/schemas/ASC.Files.Core.ApiModels.RequestDto.FileLinkRequest
      responses:
        '200':
          description: File security information
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/ASC.Files.Core.ApiModels.ResponseDto.FileShareDto
        '401':
          description: Unauthorized
        '404':
          description: Not Found
      security:
        - asc_auth_key:
            - read
            - write
      description: >-
        Creates a primary external link by the identifier specified in the
        request.
    get:
      tags:
        - Files / Files
      summary: Get primary external link
      operationId: getFilePrimaryExternalLink
      parameters:
        - name: id
          in: path
          description: File ID
          required: true
          schema:
            type: integer
            format: int32
            example: 9846
      responses:
        '200':
          description: File security information
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/ASC.Files.Core.ApiModels.ResponseDto.FileShareDto
        '404':
          description: Not Found
      description: >-
        Returns the primary external link by the identifier specified in the
        request.
  /api/2.0/files/{fileId}/order:
    put:
      tags:
        - Files / Files
      summary: Sets order of a file with ID specified in the request
      operationId: setOrder
      parameters:
        - name: fileId
          in: path
          description: File ID
          required: true
          schema:
            type: integer
            format: int32
            example: 9846
      requestBody:
        description: Order
        content:
          application/json:
            schema:
              $ref: >-
                #/components/schemas/ASC.Files.Core.ApiModels.RequestDto.OrderRequestDto
      responses:
        '200':
          description: Order is set
        '401':
          description: Unauthorized
        '403':
          description: You don't have enough permission to perform the operation
        '404':
          description: Not Found
      security:
        - asc_auth_key:
            - read
            - write
      description: Sets order of a file with ID specified in the request
  /api/2.0/files/order:
    put:
      tags:
        - Files / Files
      summary: Sets order
      operationId: setFilesOrder
      requestBody:
        content:
          application/json:
            schema:
              $ref: >-
                #/components/schemas/ASC.Files.Core.ApiModels.RequestDto.OrdersRequestDto.System.Int32
      responses:
        '200':
          description: Order is set
        '401':
          description: Unauthorized
      security:
        - asc_auth_key:
            - read
            - write
      description: Sets order
  /api/2.0/files/file/{id}/links:
    get:
      tags:
        - Files / Files
      summary: Get file external links
      operationId: getLinks
      parameters:
        - name: id
          in: path
          description: File ID
          required: true
          schema:
            type: integer
            format: int32
            example: 9846
      responses:
        '200':
          description: File security information
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/ASC.Files.Core.ApiModels.ResponseDto.FileShareDto
        '401':
          description: Unauthorized
      security:
        - asc_auth_key:
            - read
            - write
      description: >-
        Returns the external links of a file with the ID specified in the
        request.
    put:
      tags:
        - Files / Files
      summary: Set an external link
      operationId: setExternalLink
      parameters:
        - name: id
          in: path
          description: File ID
          required: true
          schema:
            type: integer
            format: int32
            example: 9846
      requestBody:
        description: External link parameters
        content:
          application/json:
            schema:
              $ref: >-
                #/components/schemas/ASC.Files.Core.ApiModels.RequestDto.FileLinkRequest
      responses:
        '200':
          description: File security information
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/ASC.Files.Core.ApiModels.ResponseDto.FileShareDto
        '401':
          description: Unauthorized
      security:
        - asc_auth_key:
            - read
            - write
      description: Sets an external link to a file with the ID specified in the request.
  /api/2.0/files/file/{id}/saveaspdf:
    post:
      tags:
        - Files / Files
      summary: Save as pdf
      operationId: saveAsPdf
      parameters:
        - name: id
          in: path
          description: File ID
          required: true
          schema:
            type: integer
            format: int32
            example: 9846
      requestBody:
        description: Parameters for saving file as pdf
        content:
          application/json:
            schema:
              $ref: >-
                #/components/schemas/ASC.Files.Core.ApiModels.RequestDto.SaveAsPdf.System.Int32
      responses:
        '200':
          description: New file information
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/ASC.Files.Core.ApiModels.ResponseDto.FileDto.System.Int32
        '401':
          description: Unauthorized
        '404':
          description: File not found
      security:
        - asc_auth_key:
            - read
            - write
      description: >-
        Saves a file with the identifier specified in the request as a PDF
        document
  /api/2.0/files/@my/file:
    post:
      tags:
        - Files / Files
      summary: Create a file in the "My documents" section
      description: >-
        Creates a new file in the "My documents" section with the title
        specified in the request.

         **Note**: If a file extension is different from DOCX/XLSX/PPTX and refers to one of the known text, spreadsheet, or presentation formats, it will be changed to DOCX/XLSX/PPTX accordingly. If the file extension is not specified or is unknown, the DOCX extension will be added to the file title.
      operationId: createFileMyDocuments
      requestBody:
        content:
          application/json:
            schema:
              $ref: >-
                #/components/schemas/ASC.Files.Core.ApiModels.RequestDto.CreateFile.System.Text.Json.JsonElement
      responses:
        '200':
          description: New file information
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/ASC.Files.Core.ApiModels.ResponseDto.FileDto.System.Int32
        '401':
          description: Unauthorized
      security:
        - asc_auth_key:
            - read
            - write
  /api/2.0/files/@my/html:
    post:
      tags:
        - Files / Files
      summary: Create an HTML file in the "My documents" section
      operationId: createHtmlFileInMy
      requestBody:
        content:
          application/json:
            schema:
              $ref: >-
                #/components/schemas/ASC.Files.Core.ApiModels.RequestDto.CreateTextOrHtmlFile
      responses:
        '200':
          description: New file information
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/ASC.Files.Core.ApiModels.ResponseDto.FileDto.System.Int32
        '401':
          description: Unauthorized
        '403':
          description: You don't have enough permission to create
      security:
        - asc_auth_key:
            - read
            - write
      description: >-
        Creates an HTML (.html) file in the "My documents" section with the
        title and contents specified in the request.
  /api/2.0/files/@my/text:
    post:
      tags:
        - Files / Files
      summary: Create a text file in the "My documents" section
      operationId: createTextFileInMy
      requestBody:
        content:
          application/json:
            schema:
              $ref: >-
                #/components/schemas/ASC.Files.Core.ApiModels.RequestDto.CreateTextOrHtmlFile
      responses:
        '200':
          description: New file information
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/ASC.Files.Core.ApiModels.ResponseDto.FileDto.System.Int32
        '401':
          description: Unauthorized
      security:
        - asc_auth_key:
            - read
            - write
      description: >-
        Creates a text (.txt) file in the "My documents" section with the title
        and contents specified in the request.
  /api/2.0/files/thumbnails:
    post:
      tags:
        - Files / Files
      summary: Create thumbnails
      operationId: createThumbnails
      requestBody:
        content:
          application/json:
            schema:
              $ref: >-
                #/components/schemas/ASC.Files.Core.ApiModels.RequestDto.BaseBatchRequestDto
      responses:
        '200':
          description: List of file IDs
          content:
            application/json:
              schema: {}
      description: Creates thumbnails for the files with the IDs specified in the request.
  /api/2.0/files/masterform/{fileId}/checkfillformdraft:
    post:
      tags:
        - Files / Files
      summary: Check the form draft
      operationId: checkFillFormDraft
      parameters:
        - name: fileId
          in: path
          description: File ID
          required: true
          schema:
            type: integer
            format: int32
            example: 9846
      requestBody:
        description: File
        content:
          application/json:
            schema:
              $ref: >-
                #/components/schemas/ASC.Files.Core.ApiModels.RequestDto.CheckFillFormDraft
      responses:
        '200':
          description: Link to the form
          content:
            application/json:
              schema: {}
        '403':
          description: You don't have enough permission to view the file
      description: Checks if the current file is a form draft which can be filled out.
  /api/2.0/files/templates:
    post:
      tags:
        - Files / Files
      summary: Add template files
      operationId: addTemplates
      requestBody:
        content:
          application/json:
            schema:
              $ref: >-
                #/components/schemas/ASC.Files.Core.ApiModels.RequestDto.TemplatesRequestDto
      responses:
        '200':
          description: 'Boolean value: true if the operation is successful'
          content:
            application/json:
              schema:
                type: boolean
        '401':
          description: Unauthorized
      security:
        - asc_auth_key:
            - read
            - write
      description: Adds files with the IDs specified in the request to the template list.
    delete:
      tags:
        - Files / Files
      summary: Delete template files
      operationId: deleteTemplates
      requestBody:
        description: File IDs
        content:
          application/json:
            schema:
              type: array
              items:
                type: integer
                format: int32
              description: File IDs
              example:
                - 1234
      responses:
        '200':
          description: 'Boolean value: true if the operation is successful'
          content:
            application/json:
              schema:
                type: boolean
        '401':
          description: Unauthorized
      security:
        - asc_auth_key:
            - read
            - write
      description: >-
        Removes files with the IDs specified in the request from the template
        list.
  /api/2.0/files/recent:
    delete:
      tags:
        - Files / Files
      summary: Delete recent files
      operationId: deleteRecent
      requestBody:
        content:
          application/json:
            schema:
              $ref: >-
                #/components/schemas/ASC.Files.Core.ApiModels.RequestDto.BaseBatchRequestDto
      responses:
        '200':
          description: No content
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Microsoft.AspNetCore.Mvc.NoContentResult'
        '401':
          description: Unauthorized
      security:
        - asc_auth_key:
            - read
            - write
      description: >-
        Removes files with the IDs specified in the request from the "Recent"
        section.
  /api/2.0/files/file/{fileId}/edit_session:
    post:
      tags:
        - Files / Files
      summary: Create the editing session
      operationId: createEditSession
      parameters:
        - name: fileId
          in: path
          description: File ID
          required: true
          schema:
            type: integer
            format: int32
            example: 9846
        - name: fileSize
          in: query
          description: File size in bytes
          schema:
            type: integer
            format: int64
            example: 1234
      responses:
        '200':
          description: Information about created session
          content:
            application/json:
              schema: {}
        '401':
          description: Unauthorized
        '403':
          description: You don't have enough permission to edit the file
      security:
        - asc_auth_key:
            - read
            - write
      description: >-
        Creates a session to edit the existing file with multiple chunks (needed
        for WebDAV).
  /api/2.0/files/folder/{folderId}/log:
    get:
      tags:
        - Files / Folders
      summary: Get folder history
      operationId: getFolderHistory
      parameters:
        - name: folderId
          in: path
          description: File ID
          required: true
          schema:
            type: integer
            format: int32
            example: 9846
        - name: fromDate
          in: query
          description: Start date
          schema:
            $ref: '#/components/schemas/ASC.Api.Core.ApiDateTime'
        - name: toDate
          in: query
          description: End date
          schema:
            $ref: '#/components/schemas/ASC.Api.Core.ApiDateTime'
      responses:
        '200':
          description: List of actions in the folder
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/ASC.Files.Core.ApiModels.ResponseDto.HistoryDto
        '401':
          description: Unauthorized
        '403':
          description: You don't have enough permission to perform the operation
        '404':
          description: The required folder was not found
      security:
        - asc_auth_key:
            - read
            - write
      description: Get the activity history of a folder with a specified identifier
  /api/2.0/files/folder/{folderId}:
    post:
      tags:
        - Files / Folders
      summary: Create a folder
      operationId: createFolder
      parameters:
        - name: folderId
          in: path
          description: Folder ID
          required: true
          schema:
            type: integer
            format: int32
            example: 9846
      requestBody:
        description: Folder
        content:
          application/json:
            schema:
              $ref: >-
                #/components/schemas/ASC.Files.Core.ApiModels.RequestDto.CreateFolder
      responses:
        '200':
          description: New folder parameters
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/ASC.Files.Core.ApiModels.ResponseDto.FolderDto.System.Int32
        '401':
          description: Unauthorized
      security:
        - asc_auth_key:
            - read
            - write
      description: >-
        Creates a new folder with the title specified in the request. The parent
        folder ID can be also specified.
    delete:
      tags:
        - Files / Folders
      summary: Delete a folder
      operationId: deleteFolder
      parameters:
        - name: folderId
          in: path
          description: Folder ID
          required: true
          schema:
            type: integer
            format: int32
            example: 9846
      requestBody:
        description: Parameters for deleting a folder
        content:
          application/json:
            schema:
              $ref: >-
                #/components/schemas/ASC.Files.Core.ApiModels.RequestDto.DeleteFolder
      responses:
        '200':
          description: List of file operations
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/ASC.Files.Core.ApiModels.ResponseDto.FileOperationDto
        '401':
          description: Unauthorized
      security:
        - asc_auth_key:
            - read
            - write
      description: Deletes a folder with the ID specified in the request.
    get:
      tags:
        - Files / Folders
      summary: Get folder information
      operationId: getFolderInfo
      parameters:
        - name: folderId
          in: path
          description: Folder ID
          required: true
          schema:
            type: integer
            format: int32
            example: 9846
      responses:
        '200':
          description: Folder parameters
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/ASC.Files.Core.ApiModels.ResponseDto.FolderDto.System.Int32
      description: >-
        Returns the detailed information about a folder with the ID specified in
        the request.
    put:
      tags:
        - Files / Folders
      summary: Rename a folder
      operationId: renameFolder
      parameters:
        - name: folderId
          in: path
          description: Folder ID
          required: true
          schema:
            type: integer
            format: int32
            example: 9846
      requestBody:
        description: Folder
        content:
          application/json:
            schema:
              $ref: >-
                #/components/schemas/ASC.Files.Core.ApiModels.RequestDto.CreateFolder
      responses:
        '200':
          description: Folder parameters
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/ASC.Files.Core.ApiModels.ResponseDto.FolderDto.System.Int32
        '401':
          description: Unauthorized
        '403':
          description: You don't have enough permission to rename the folder
      security:
        - asc_auth_key:
            - read
            - write
      description: Renames the selected folder with a new title specified in the request.
  /api/2.0/files/folder/{folderId}/order:
    put:
      tags:
        - Files / Folders
      summary: Sets file order in the folder with ID specified in the request
      operationId: setFileOrder
      parameters:
        - name: folderId
          in: path
          description: Folder ID
          required: true
          schema:
            type: integer
            format: int32
            example: 9846
      requestBody:
        description: Order
        content:
          application/json:
            schema:
              $ref: >-
                #/components/schemas/ASC.Files.Core.ApiModels.RequestDto.OrderRequestDto
      responses:
        '200':
          description: OK
        '401':
          description: Unauthorized
      security:
        - asc_auth_key:
            - read
            - write
      description: Sets file order in the folder with ID specified in the request
  /api/2.0/files/{folderId}:
    get:
      tags:
        - Files / Folders
      summary: Get a folder by ID
      operationId: getFolder
      parameters:
        - name: folderId
          in: path
          description: Folder ID
          required: true
          schema:
            type: integer
            format: int32
            example: 9846
        - name: userIdOrGroupId
          in: query
          description: User or group ID
          schema:
            type: string
            format: uuid
            example: 75a5f745-f697-4418-b38d-0fe0d277e258
        - name: filterType
          in: query
          description: Filter type
          schema:
            $ref: '#/components/schemas/ASC.Files.Core.FilterType'
        - name: roomId
          in: query
          description: Room ID
          schema:
            type: integer
            format: int32
            example: 9846
        - name: searchInContent
          in: query
          description: Specifies whether to search within the section contents or not
          schema:
            type: boolean
            example: true
        - name: withsubfolders
          in: query
          description: Specifies whether to return sections with or without subfolders
          schema:
            type: boolean
            example: true
        - name: excludeSubject
          in: query
          description: Specifies whether to exclude a subject or not
          schema:
            type: boolean
            example: true
        - name: applyFilterOption
          in: query
          description: >-
            Specifies whether to return only files, only folders or all elements
            from the specified folder
          schema:
            $ref: '#/components/schemas/ASC.Files.Core.Core.ApplyFilterOption'
        - name: extension
          in: query
          description: Specifies whether to search for a specific file extension
          schema:
            type: string
            example: .txt
        - name: searchArea
          in: query
          description: Search area
          schema:
            $ref: '#/components/schemas/ASC.Files.Core.VirtualRooms.SearchArea'
      responses:
        '200':
          description: Folder contents
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/ASC.Files.Core.ApiModels.ResponseDto.FolderContentDto.System.Int32
        '403':
          description: You don't have enough permission to view the folder content
        '404':
          description: The required folder was not found
      description: >-
        Returns the detailed list of files and folders located in the folder
        with the ID specified in the request.
  /api/2.0/files/folder/{folderId}/path:
    get:
      tags:
        - Files / Folders
      summary: Get the folder path
      operationId: getFolderPath
      parameters:
        - name: folderId
          in: path
          description: Folder ID
          required: true
          schema:
            type: integer
            format: int32
            example: 9846
      responses:
        '200':
          description: List of file entry information
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/ASC.Files.Core.ApiModels.ResponseDto.FileEntryDto
        '401':
          description: Unauthorized
        '403':
          description: You don't have enough permission to view the folder content
      security:
        - asc_auth_key:
            - read
            - write
      description: Returns a path to the folder with the ID specified in the request.
  /api/2.0/files/{folderId}/subfolders:
    get:
      tags:
        - Files / Folders
      summary: Get subfolders
      operationId: getFolders
      parameters:
        - name: folderId
          in: path
          description: Folder ID
          required: true
          schema:
            type: integer
            format: int32
            example: 9846
      responses:
        '200':
          description: List of file entry information
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/ASC.Files.Core.ApiModels.ResponseDto.FileEntryDto
        '401':
          description: Unauthorized
        '403':
          description: You don't have enough permission to view the folder content
      security:
        - asc_auth_key:
            - read
            - write
      description: >-
        Returns a list of all the subfolders from a folder with the ID specified
        in the request.
  /api/2.0/files/{folderId}/news:
    get:
      tags:
        - Files / Folders
      summary: Get new folder items
      operationId: getNewItems
      parameters:
        - name: folderId
          in: path
          description: Folder ID
          required: true
          schema:
            type: integer
            format: int32
            example: 9846
      responses:
        '200':
          description: List of file entry information
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/ASC.Files.Core.ApiModels.ResponseDto.FileEntryDto
        '401':
          description: Unauthorized
        '403':
          description: You don't have enough permission to view the folder content
      security:
        - asc_auth_key:
            - read
            - write
      description: >-
        Returns a list of all the new items from a folder with the ID specified
        in the request.
  /api/2.0/files/filesusedspace:
    get:
      tags:
        - Files / Folders
      summary: Get used space of files
      operationId: getFilesUsedSpace
      responses:
        '200':
          description: Used space of files in the root folders
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/ASC.Files.Core.ApiModels.ResponseDto.FilesStatisticsResultDto
        '401':
          description: Unauthorized
      security:
        - asc_auth_key:
            - read
            - write
      description: Returns the used space of files in the root folders.
  /api/2.0/files/folder/{id}/link:
    get:
      tags:
        - Files / Folders
      summary: Get primary external link
      operationId: getFolderPrimaryExternalLink
      parameters:
        - name: id
          in: path
          description: Folder Id
          required: true
          schema:
            type: integer
            format: int32
            example: 9846
      responses:
        '200':
          description: Folder security information
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/ASC.Files.Core.ApiModels.ResponseDto.FileShareDto
        '404':
          description: Not Found
      description: >-
        Returns the primary external link by the identifier specified in the
        request.
  /api/2.0/files/@my:
    get:
      tags:
        - Files / Folders
      summary: Get the "My documents" section
      operationId: getMyFolder
      parameters:
        - name: userIdOrGroupId
          in: query
          description: User or group ID
          schema:
            type: string
            format: uuid
            example: 75a5f745-f697-4418-b38d-0fe0d277e258
        - name: filterType
          in: query
          description: Filter type
          schema:
            $ref: '#/components/schemas/ASC.Files.Core.FilterType'
        - name: searchInContent
          in: query
          description: Specifies whether to return sections with or without subfolders
          schema:
            type: boolean
            example: true
        - name: withsubfolders
          in: query
          description: Specifies whether to return sections with or without subfolders
          schema:
            type: boolean
            example: true
        - name: applyFilterOption
          in: query
          description: >-
            Specifies whether to return only files, only folders or all elements
            from the specified folder
          schema:
            $ref: '#/components/schemas/ASC.Files.Core.Core.ApplyFilterOption'
      responses:
        '200':
          description: The "My documents" section contents
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/ASC.Files.Core.ApiModels.ResponseDto.FolderContentDto.System.Int32
        '401':
          description: Unauthorized
        '403':
          description: You don't have enough permission to view the folder content
        '404':
          description: The required folder was not found
      security:
        - asc_auth_key:
            - read
            - write
      description: >-
        Returns the detailed list of files and folders located in the "My
        documents" section.
  /api/2.0/files/@privacy:
    get:
      tags:
        - Files / Folders
      summary: Get the "Private Room" section
      operationId: getPrivacyFolder
      parameters:
        - name: userIdOrGroupId
          in: query
          description: User or group ID
          schema:
            type: string
            format: uuid
            example: 75a5f745-f697-4418-b38d-0fe0d277e258
        - name: filterType
          in: query
          description: Filter type
          schema:
            $ref: '#/components/schemas/ASC.Files.Core.FilterType'
        - name: searchInContent
          in: query
          description: Specifies whether to return sections with or without subfolders
          schema:
            type: boolean
            example: true
        - name: withsubfolders
          in: query
          description: Specifies whether to return sections with or without subfolders
          schema:
            type: boolean
            example: true
      responses:
        '200':
          description: The "Private Room" section contents
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/ASC.Files.Core.ApiModels.ResponseDto.FolderContentDto.System.Int32
        '401':
          description: Unauthorized
        '403':
          description: You don't have enough permission to view the folder content
        '404':
          description: The required folder was not found
      security:
        - asc_auth_key:
            - read
            - write
      description: >-
        Returns the detailed list of files and folders located in the "Private
        Room" section.
  /api/2.0/files/@root:
    get:
      tags:
        - Files / Folders
      summary: Get filtered sections
      operationId: getRootFolders
      parameters:
        - name: userIdOrGroupId
          in: query
          description: User or group ID
          schema:
            type: string
            format: uuid
            example: 75a5f745-f697-4418-b38d-0fe0d277e258
        - name: filterType
          in: query
          description: Filter type
          schema:
            $ref: '#/components/schemas/ASC.Files.Core.FilterType'
        - name: withsubfolders
          in: query
          description: Specifies whether to return sections with or without subfolders
          schema:
            type: boolean
            example: true
        - name: withoutTrash
          in: query
          description: Specifies whether to return the "Trash" section or not
          schema:
            type: boolean
            example: true
        - name: searchInContent
          in: query
          description: Specifies whether to return sections with or without subfolders
          schema:
            type: boolean
            example: true
      responses:
        '200':
          description: List of section contents with the following parameters
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/ASC.Files.Core.ApiModels.ResponseDto.FolderContentDto.System.Int32
        '401':
          description: Unauthorized
        '403':
          description: You don't have enough permission to view the folder content
        '404':
          description: The required folder was not found
      security:
        - asc_auth_key:
            - read
            - write
      description: >-
        Returns all the sections matching the parameters specified in the
        request.
  /api/2.0/files/@trash:
    get:
      tags:
        - Files / Folders
      summary: Get the "Trash" section
      operationId: getTrashFolder
      parameters:
        - name: userIdOrGroupId
          in: query
          description: User or group ID
          schema:
            type: string
            format: uuid
            example: 75a5f745-f697-4418-b38d-0fe0d277e258
        - name: filterType
          in: query
          description: Filter type
          schema:
            $ref: '#/components/schemas/ASC.Files.Core.FilterType'
        - name: searchInContent
          in: query
          description: Specifies whether to return sections with or without subfolders
          schema:
            type: boolean
            example: true
        - name: withsubfolders
          in: query
          description: Specifies whether to return sections with or without subfolders
          schema:
            type: boolean
            example: true
        - name: applyFilterOption
          in: query
          description: >-
            Specifies whether to return only files, only folders or all elements
            from the specified folder
          schema:
            $ref: '#/components/schemas/ASC.Files.Core.Core.ApplyFilterOption'
      responses:
        '200':
          description: The "Trash" section contents
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/ASC.Files.Core.ApiModels.ResponseDto.FolderContentDto.System.Int32
        '401':
          description: Unauthorized
        '403':
          description: You don't have enough permission to view the folder content
        '404':
          description: The required folder was not found
      security:
        - asc_auth_key:
            - read
            - write
      description: >-
        Returns the detailed list of files and folders located in the "Trash"
        section.
  /api/2.0/files/{folderId}/upload/check:
    post:
      tags:
        - Files / Folders
      summary: Checks upload
      operationId: checkUpload
      parameters:
        - name: folderId
          in: path
          description: Folder ID
          required: true
          schema:
            type: integer
            format: int32
            example: 9846
      requestBody:
        description: Parameters for checking files uploading
        content:
          application/json:
            schema:
              $ref: >-
                #/components/schemas/ASC.Files.Core.ApiModels.RequestDto.CheckUploadRequest
      responses:
        '200':
          description: Inserted file
          content:
            application/json:
              schema:
                type: array
                items:
                  type: string
        '401':
          description: Unauthorized
      security:
        - asc_auth_key:
            - read
            - write
      description: Checks upload
  /api/2.0/files/{folderId}/insert:
    post:
      tags:
        - Files / Folders
      summary: Insert a file
      operationId: insertFile
      parameters:
        - name: folderId
          in: path
          description: Folder ID
          required: true
          schema:
            type: integer
            format: int32
            example: 9846
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                InsertFile.File:
                  type: string
                  description: File
                  format: binary
                InsertFile.Title:
                  type: string
                  description: File name
                  example: legacy_1080p_small_wooden_mouse
                InsertFile.CreateNewIfExist:
                  type: boolean
                  description: >-
                    Specifies whether to create a new file if it already exists
                    or not
                  example: true
                InsertFile.KeepConvertStatus:
                  type: boolean
                  description: Specifies whether to keep the file converting status or not
                  example: true
                InsertFile.Stream.CanRead:
                  type: boolean
                  example: true
                InsertFile.Stream.CanWrite:
                  type: boolean
                  example: true
                InsertFile.Stream.CanSeek:
                  type: boolean
                  example: true
                InsertFile.Stream.CanTimeout:
                  type: boolean
                  example: true
                InsertFile.Stream.Length:
                  type: integer
                  format: int64
                  example: 1234
                InsertFile.Stream.Position:
                  type: integer
                  format: int64
                  example: 1234
                InsertFile.Stream.ReadTimeout:
                  type: integer
                  format: int32
                  example: 1234
                InsertFile.Stream.WriteTimeout:
                  type: integer
                  format: int32
                  example: 1234
            encoding:
              InsertFile.File:
                style: form
              InsertFile.Title:
                style: form
              InsertFile.CreateNewIfExist:
                style: form
              InsertFile.KeepConvertStatus:
                style: form
              InsertFile.Stream.CanRead:
                style: form
              InsertFile.Stream.CanWrite:
                style: form
              InsertFile.Stream.CanSeek:
                style: form
              InsertFile.Stream.CanTimeout:
                style: form
              InsertFile.Stream.Length:
                style: form
              InsertFile.Stream.Position:
                style: form
              InsertFile.Stream.ReadTimeout:
                style: form
              InsertFile.Stream.WriteTimeout:
                style: form
      responses:
        '200':
          description: Inserted file
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/ASC.Files.Core.ApiModels.ResponseDto.FileDto.System.Int32
        '401':
          description: Unauthorized
        '403':
          description: You don't have enough permission to create
        '404':
          description: Folder not found
      security:
        - asc_auth_key:
            - read
            - write
      description: >-
        Inserts a file specified in the request to the selected folder by single
        file uploading.
  /api/2.0/files/{folderId}/upload:
    post:
      tags:
        - Files / Folders
      summary: Upload a file
      description: "Uploads a file specified in the request to the selected folder by single file uploading or standart multipart/form-data method.\n\n **Note**:  You can upload files in two different ways:\r\n <ol>\r\n<li>Using single file upload. You should set the Content-Type and Content-Disposition headers to specify a file name and content type, and send the file to the request body.</li>\r\n<li>Using standart multipart/form-data method.</li>\r\n</ol>"
      operationId: uploadFile
      parameters:
        - name: folderId
          in: path
          description: Folder ID
          required: true
          schema:
            type: integer
            format: int32
            example: 9846
      requestBody:
        description: Upload data
        content:
          application/json:
            schema:
              $ref: >-
                #/components/schemas/ASC.Files.Core.ApiModels.RequestDto.UploadRequestDto
      responses:
        '200':
          description: Inserted file
          content:
            application/json:
              schema: {}
        '401':
          description: Unauthorized
        '403':
          description: You don't have enough permission to create
        '404':
          description: Folder not found
      security:
        - asc_auth_key:
            - read
            - write
  /api/2.0/files/@my/insert:
    post:
      tags:
        - Files / Folders
      summary: Insert a file to the "My documents" section
      operationId: insertFileToMyFromBody
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                File:
                  type: string
                  description: File
                  format: binary
                Title:
                  type: string
                  description: File name
                  example: legacy_1080p_small_wooden_mouse
                CreateNewIfExist:
                  type: boolean
                  description: >-
                    Specifies whether to create a new file if it already exists
                    or not
                  example: true
                KeepConvertStatus:
                  type: boolean
                  description: Specifies whether to keep the file converting status or not
                  example: true
                Stream.CanRead:
                  type: boolean
                  example: true
                Stream.CanWrite:
                  type: boolean
                  example: true
                Stream.CanSeek:
                  type: boolean
                  example: true
                Stream.CanTimeout:
                  type: boolean
                  example: true
                Stream.Length:
                  type: integer
                  format: int64
                  example: 1234
                Stream.Position:
                  type: integer
                  format: int64
                  example: 1234
                Stream.ReadTimeout:
                  type: integer
                  format: int32
                  example: 1234
                Stream.WriteTimeout:
                  type: integer
                  format: int32
                  example: 1234
            encoding:
              File:
                style: form
              Title:
                style: form
              CreateNewIfExist:
                style: form
              KeepConvertStatus:
                style: form
              Stream.CanRead:
                style: form
              Stream.CanWrite:
                style: form
              Stream.CanSeek:
                style: form
              Stream.CanTimeout:
                style: form
              Stream.Length:
                style: form
              Stream.Position:
                style: form
              Stream.ReadTimeout:
                style: form
              Stream.WriteTimeout:
                style: form
      responses:
        '200':
          description: Inserted file
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/ASC.Files.Core.ApiModels.ResponseDto.FileDto.System.Int32
        '401':
          description: Unauthorized
        '403':
          description: You don't have enough permission to create
        '404':
          description: Folder not found
      security:
        - asc_auth_key:
            - read
            - write
      description: >-
        Inserts a file specified in the request to the "My documents" section by
        single file uploading.
  /api/2.0/files/@my/upload:
    post:
      tags:
        - Files / Folders
      summary: Upload a file to the "My documents" section
      description: "Uploads a file specified in the request to the \"My documents\" section by single file uploading or standart multipart/form-data method.\n\n **Note**:  You can upload files in two different ways:\r\n <ol>\r\n<li>Using single file upload. You should set the Content-Type and Content-Disposition headers to specify a file name and content type, and send the file to the request body.</li>\r\n<li>Using standart multipart/form-data method.</li>\r\n</ol>"
      operationId: uploadFileToMy
      parameters:
        - name: inDto
          in: query
          description: Request parameters for uploading a file
          schema:
            $ref: >-
              #/components/schemas/ASC.Files.Core.ApiModels.RequestDto.UploadRequestDto
      responses:
        '200':
          description: Uploaded file(s)
          content:
            application/json:
              schema: {}
        '401':
          description: Unauthorized
        '403':
          description: You don't have enough permission to create
        '404':
          description: File not found
      security:
        - asc_auth_key:
            - read
            - write
  /api/2.0/files/file/{fileId}/checkconversion:
    get:
      tags:
        - Files / Operations
      summary: Get conversion status
      operationId: checkConversion
      parameters:
        - name: fileId
          in: path
          description: File ID
          required: true
          schema:
            type: integer
            format: int32
            example: 9846
        - name: start
          in: query
          description: Specifies if a conversion operation is started or not
          schema:
            type: boolean
            example: true
      responses:
        '200':
          description: Conversion result
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/ASC.Files.Core.ApiModels.ResponseDto.ConversationResultDto
        '401':
          description: Unauthorized
      security:
        - asc_auth_key:
            - read
            - write
      description: >-
        Checks the conversion status of a file with the ID specified in the
        request.
    put:
      tags:
        - Files / Operations
      summary: Start file conversion
      operationId: startConversion
      parameters:
        - name: fileId
          in: path
          description: File ID
          required: true
          schema:
            type: integer
            format: int32
            example: 9846
      requestBody:
        description: Check conversion
        content:
          application/json:
            schema:
              $ref: >-
                #/components/schemas/ASC.Files.Core.ApiModels.RequestDto.CheckConversionRequestDto.System.Int32
      responses:
        '200':
          description: Conversion result
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/ASC.Files.Core.ApiModels.ResponseDto.ConversationResultDto
        '401':
          description: Unauthorized
      security:
        - asc_auth_key:
            - read
            - write
      description: >-
        Starts a conversion operation of a file with the ID specified in the
        request.
  /api/2.0/files/file/{fileId}/comment:
    put:
      tags:
        - Files / Operations
      summary: Update a comment
      operationId: updateComment
      parameters:
        - name: fileId
          in: path
          description: File ID
          required: true
          schema:
            type: integer
            format: int32
            example: 9846
      requestBody:
        description: Parameters for updating a comment
        content:
          application/json:
            schema:
              $ref: >-
                #/components/schemas/ASC.Files.Core.ApiModels.RequestDto.UpdateComment
      responses:
        '200':
          description: Updated comment
          content:
            application/json:
              schema: {}
        '401':
          description: Unauthorized
      security:
        - asc_auth_key:
            - read
            - write
      description: Updates a comment in a file with the ID specified in the request.
  /api/2.0/files/fileops/bulkdownload:
    put:
      tags:
        - Files / Operations
      summary: Bulk download
      operationId: bulkDownload
      requestBody:
        content:
          application/json:
            schema:
              $ref: >-
                #/components/schemas/ASC.Files.Core.ApiModels.RequestDto.DownloadRequestDto
      responses:
        '200':
          description: List of file operations
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/ASC.Files.Core.ApiModels.ResponseDto.FileOperationDto
        '403':
          description: You don't have enough permission to download
      description: >-
        Starts the download process of files and folders with the IDs specified
        in the request.
  /api/2.0/files/fileops/copy:
    put:
      tags:
        - Files / Operations
      summary: Copy to a folder
      operationId: copyBatchItems
      requestBody:
        content:
          application/json:
            schema:
              $ref: >-
                #/components/schemas/ASC.Files.Core.ApiModels.RequestDto.BatchRequestDto
      responses:
        '200':
          description: List of file operations
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/ASC.Files.Core.ApiModels.ResponseDto.FileOperationDto
        '401':
          description: Unauthorized
        '403':
          description: You don't have enough permission to copy
      security:
        - asc_auth_key:
            - read
            - write
      description: >-
        Copies all the selected files and folders to the folder with the ID
        specified in the request.
  /api/2.0/files/fileops/delete:
    put:
      tags:
        - Files / Operations
      summary: Delete files and folders
      operationId: deleteBatchItems
      requestBody:
        content:
          application/json:
            schema:
              $ref: >-
                #/components/schemas/ASC.Files.Core.ApiModels.RequestDto.DeleteBatchRequestDto
      responses:
        '200':
          description: List of file operations
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/ASC.Files.Core.ApiModels.ResponseDto.FileOperationDto
        '401':
          description: Unauthorized
        '403':
          description: You don't have enough permission to delete
      security:
        - asc_auth_key:
            - read
            - write
      description: Deletes the files and folders with the IDs specified in the request.
  /api/2.0/files/fileops/emptytrash:
    put:
      tags:
        - Files / Operations
      summary: Empty the "Trash" folder
      operationId: emptyTrash
      responses:
        '200':
          description: List of file operations
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/ASC.Files.Core.ApiModels.ResponseDto.FileOperationDto
        '401':
          description: Unauthorized
      security:
        - asc_auth_key:
            - read
            - write
      description: Deletes all the files and folders from the "Trash" folder.
  /api/2.0/files/fileops:
    get:
      tags:
        - Files / Operations
      summary: Get active operations
      operationId: getOperationStatuses
      responses:
        '200':
          description: List of file operations
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/ASC.Files.Core.ApiModels.ResponseDto.FileOperationDto
      description: Returns a list of all the active operations.
  /api/2.0/files/fileops/markasread:
    put:
      tags:
        - Files / Operations
      summary: Mark as read
      operationId: markAsRead
      requestBody:
        content:
          application/json:
            schema:
              $ref: >-
                #/components/schemas/ASC.Files.Core.ApiModels.RequestDto.BaseBatchRequestDto
      responses:
        '200':
          description: List of file operations
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/ASC.Files.Core.ApiModels.ResponseDto.FileOperationDto
        '401':
          description: Unauthorized
      security:
        - asc_auth_key:
            - read
            - write
      description: >-
        Marks the files and folders with the IDs specified in the request as
        read.
  /api/2.0/files/fileops/move:
    put:
      tags:
        - Files / Operations
      summary: Move to a folder
      operationId: moveBatchItems
      requestBody:
        content:
          application/json:
            schema:
              $ref: >-
                #/components/schemas/ASC.Files.Core.ApiModels.RequestDto.BatchRequestDto
      responses:
        '200':
          description: List of file operations
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/ASC.Files.Core.ApiModels.ResponseDto.FileOperationDto
        '401':
          description: Unauthorized
        '403':
          description: You don't have enough permission to move
      security:
        - asc_auth_key:
            - read
            - write
      description: >-
        Moves all the selected files and folders to the folder with the ID
        specified in the request.
    get:
      tags:
        - Files / Operations
      summary: Check files and folders for conflicts
      operationId: moveOrCopyBatchCheck
      parameters:
        - name: inDto
          in: query
          description: Request parameters for copying/moving files
          schema:
            $ref: >-
              #/components/schemas/ASC.Files.Core.ApiModels.RequestDto.BatchRequestDto
      responses:
        '200':
          description: List of file entry information
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/ASC.Files.Core.ApiModels.ResponseDto.FileEntryDto
        '401':
          description: Unauthorized
        '403':
          description: You don't have enough permission to create
      security:
        - asc_auth_key:
            - read
            - write
      description: >-
        Checks a batch of files and folders for conflicts when moving or copying
        them to the folder with the ID specified in the request.
  /api/2.0/files/fileops/duplicate:
    put:
      tags:
        - Files / Operations
      summary: Duplicates all the selected files and folders
      operationId: duplicateBatchItems
      requestBody:
        content:
          application/json:
            schema:
              $ref: >-
                #/components/schemas/ASC.Files.Core.ApiModels.RequestDto.DuplicateRequestDto
      responses:
        '200':
          description: List of file operations
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/ASC.Files.Core.ApiModels.ResponseDto.FileOperationDto
        '401':
          description: Unauthorized
        '403':
          description: You don't have enough permission to duplicate
      security:
        - asc_auth_key:
            - read
            - write
      description: Duplicates all the selected files and folders
  /api/2.0/files/fileops/checkdestfolder:
    get:
      tags:
        - Files / Operations
      summary: Moves or copies
      operationId: moveOrCopyDestFolderCheck
      parameters:
        - name: inDto
          in: query
          description: Request parameters for copying/moving files
          schema:
            $ref: >-
              #/components/schemas/ASC.Files.Core.ApiModels.RequestDto.BatchRequestDto
      responses:
        '200':
          description: Result
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/ASC.Files.Core.ApiModels.ResponseDto.CheckDestFolderDto
        '401':
          description: Unauthorized
        '403':
          description: You don't have enough permission to create
      security:
        - asc_auth_key:
            - read
            - write
      description: Moves or copies
  /api/2.0/files/fileops/terminate/{id}:
    put:
      tags:
        - Files / Operations
      summary: Finish active operations
      operationId: terminateTasks
      parameters:
        - name: id
          in: path
          description: Operation ID
          required: true
          schema:
            type: string
            example: '9846'
      responses:
        '200':
          description: List of file operations
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/ASC.Files.Core.ApiModels.ResponseDto.FileOperationDto
      description: >-
        Finishes an operation with the ID specified in the request or all the
        active operations.
  /api/2.0/files/{folderId}/upload/create_session:
    post:
      tags:
        - Files / Operations
      summary: Chunked upload
      description: "Creates a session to upload large files in multiple chunks to the folder with the ID specified in the request.\n\n **Note**: Each chunk can have different length but the length should be multiple of <b>512</b> and greater or equal to <b>10 mb</b>. Last chunk can have any size.\r\nAfter the initial response to the request with the <b>200 OK</b> status, you must get the <em>location</em> field value from the response. Send all your chunks to this location.\r\nEach chunk must be sent in the exact order the chunks appear in the file.\r\nAfter receiving each chunk, the server will respond with the current information about the upload session if no errors occurred.\r\nWhen the number of bytes uploaded is equal to the number of bytes you sent in the initial request, the server responds with the <b>201 Created</b> status and sends you information about the uploaded file."
      operationId: createUploadSession
      parameters:
        - name: folderId
          in: path
          description: Folder ID
          required: true
          schema:
            type: integer
            format: int32
            example: 9846
      requestBody:
        description: Session
        content:
          application/json:
            schema:
              $ref: >-
                #/components/schemas/ASC.Files.Core.ApiModels.RequestDto.SessionRequest
      responses:
        '200':
          description: Information about created session
          content:
            application/json:
              schema: {}
        '401':
          description: Unauthorized
        '403':
          description: You don't have enough permission to create
      security:
        - asc_auth_key:
            - read
            - write
  /api/2.0/files/rooms/roomquota:
    put:
      tags:
        - Files / Quota
      summary: Change a room quota limit
      operationId: updateRoomsQuota
      requestBody:
        content:
          application/json:
            schema:
              $ref: >-
                #/components/schemas/ASC.Files.Core.ApiModels.RequestDto.UpdateRoomsQuotaRequestDto.System.Int32
      responses:
        '200':
          description: List of rooms with the detailed information
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/ASC.Files.Core.ApiModels.ResponseDto.FolderDto.System.Int32
        '401':
          description: Unauthorized
      security:
        - asc_auth_key:
            - read
            - write
      description: >-
        Changes a quota limit for the rooms with the IDs specified in the
        request.
  /api/2.0/files/rooms/resetquota:
    put:
      tags:
        - Files / Quota
      summary: Reset a room quota limit
      operationId: resetRoomQuota
      requestBody:
        content:
          application/json:
            schema:
              $ref: >-
                #/components/schemas/ASC.Files.Core.ApiModels.RequestDto.UpdateRoomsRoomIdsRequestDto.System.Int32
      responses:
        '200':
          description: List of rooms with the detailed information
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/ASC.Files.Core.ApiModels.ResponseDto.FolderDto.System.Int32
        '401':
          description: Unauthorized
      security:
        - asc_auth_key:
            - read
            - write
      description: >-
        Resets a quota limit for the rooms with the IDs specified in the
        request.
  /api/2.0/files/rooms:
    post:
      tags:
        - Files / Rooms
      summary: Create a room
      operationId: createRoom
      requestBody:
        content:
          application/json:
            schema:
              $ref: >-
                #/components/schemas/ASC.Files.Core.ApiModels.RequestDto.CreateRoomRequestDto
      responses:
        '200':
          description: Room information
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/ASC.Files.Core.ApiModels.ResponseDto.FolderDto.System.Int32
        '401':
          description: Unauthorized
      security:
        - asc_auth_key:
            - read
            - write
      description: Creates a room in the "Rooms" section.
    get:
      tags:
        - Files / Rooms
      summary: Get rooms
      operationId: getRoomsFolder
      parameters:
        - name: type
          in: query
          description: Filter by room type
          style: deepObject
          schema:
            type: array
            items:
              $ref: >-
                #/components/schemas/ASC.Files.Core.ApiModels.RequestDto.RoomType
        - name: subjectId
          in: query
          description: Filter by user ID
          schema:
            type: string
            example: some text
        - name: searchInContent
          in: query
          description: Specifies whether to search within the section contents or not
          schema:
            type: boolean
            example: true
        - name: withSubfolders
          in: query
          description: Specifies whether to return sections with or without subfolders
          schema:
            type: boolean
            example: true
        - name: searchArea
          in: query
          description: Room search area (Active, Archive, Any)
          schema:
            $ref: '#/components/schemas/ASC.Files.Core.VirtualRooms.SearchArea'
        - name: withoutTags
          in: query
          description: Specifies whether to search by tags or not
          schema:
            type: boolean
            example: true
        - name: tags
          in: query
          description: Tags in the serialized format
          schema:
            type: string
            example: some text
        - name: excludeSubject
          in: query
          description: Specifies whether to exclude a subject or not
          schema:
            type: boolean
            example: true
        - name: provider
          in: query
          description: >-
            Filter by provider name (None, Box, DropBox, GoogleDrive, kDrive,
            OneDrive, WebDav)
          schema:
            $ref: '#/components/schemas/ASC.Files.Core.ProviderFilter'
        - name: subjectFilter
          in: query
          description: Filter by subject (Owner - 1, Member - 1)
          schema:
            $ref: '#/components/schemas/ASC.Files.Core.Core.SubjectFilter'
        - name: quotaFilter
          in: query
          description: Filter by quota (Default - 1, Custom - 2)
          schema:
            $ref: '#/components/schemas/ASC.Core.QuotaFilter'
        - name: storageFilter
          in: query
          description: Filter by storage (Internal - 1, ThirdParty - 2)
          schema:
            $ref: '#/components/schemas/ASC.Files.Core.Core.StorageFilter'
      responses:
        '200':
          description: Returns the contents of the "Rooms" section
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/ASC.Files.Core.ApiModels.ResponseDto.FolderContentDto.System.Int32
        '401':
          description: Unauthorized
        '403':
          description: You don't have enough permission to view the room content
      security:
        - asc_auth_key:
            - read
            - write
      description: >-
        Returns the contents of the "Rooms" section by the parameters specified
        in the request.
  /api/2.0/files/rooms/{id}:
    get:
      tags:
        - Files / Rooms
      summary: Get room information
      operationId: getRoomInfo
      parameters:
        - name: id
          in: path
          description: Room Id
          required: true
          schema:
            type: integer
            format: int32
            example: 9846
      responses:
        '200':
          description: Room information
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/ASC.Files.Core.ApiModels.ResponseDto.FolderDto.System.Int32
      description: Returns the room information.
    put:
      tags:
        - Files / Rooms
      summary: Rename a room
      operationId: updateRoom
      parameters:
        - name: id
          in: path
          description: Room ID
          required: true
          schema:
            type: integer
            format: int32
            example: 9846
      requestBody:
        description: Update room
        content:
          application/json:
            schema:
              $ref: >-
                #/components/schemas/ASC.Files.Core.ApiModels.RequestDto.UpdateRoomRequest
      responses:
        '200':
          description: Updated room information
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/ASC.Files.Core.ApiModels.ResponseDto.FolderDto.System.Int32
        '401':
          description: Unauthorized
      security:
        - asc_auth_key:
            - read
            - write
      description: Renames a room with the ID specified in  the request.
    delete:
      tags:
        - Files / Rooms
      summary: Remove a room
      operationId: deleteRoom
      parameters:
        - name: id
          in: path
          description: Room ID
          required: true
          schema:
            type: integer
            format: int32
            example: 9846
      requestBody:
        description: Parameters for deleting a room
        content:
          application/json:
            schema:
              $ref: >-
                #/components/schemas/ASC.Files.Core.ApiModels.RequestDto.DeleteRoomRequest
      responses:
        '200':
          description: File operation
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/ASC.Files.Core.ApiModels.ResponseDto.FileOperationDto
        '401':
          description: Unauthorized
      security:
        - asc_auth_key:
            - read
            - write
      description: Removes a room with the ID specified in the request.
  /api/2.0/files/rooms/{id}/archive:
    put:
      tags:
        - Files / Rooms
      summary: Archive a room
      operationId: archiveRoom
      parameters:
        - name: id
          in: path
          description: Room ID
          required: true
          schema:
            type: integer
            format: int32
            example: 9846
      requestBody:
        description: Parameters for archiving a room
        content:
          application/json:
            schema:
              $ref: >-
                #/components/schemas/ASC.Files.Core.ApiModels.RequestDto.ArchiveRoomRequest
      responses:
        '200':
          description: File operation
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/ASC.Files.Core.ApiModels.ResponseDto.FileOperationDto
        '401':
          description: Unauthorized
      security:
        - asc_auth_key:
            - read
            - write
      description: >-
        Moves a room with the ID specified in the request to the "Archive"
        section.
  /api/2.0/files/rooms/{id}/unarchive:
    put:
      tags:
        - Files / Rooms
      summary: Unarchive a room
      operationId: unarchiveRoom
      parameters:
        - name: id
          in: path
          description: Room ID
          required: true
          schema:
            type: integer
            format: int32
            example: 9846
      requestBody:
        description: Parameters for archiving a room
        content:
          application/json:
            schema:
              $ref: >-
                #/components/schemas/ASC.Files.Core.ApiModels.RequestDto.ArchiveRoomRequest
      responses:
        '200':
          description: File operation
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/ASC.Files.Core.ApiModels.ResponseDto.FileOperationDto
        '401':
          description: Unauthorized
      security:
        - asc_auth_key:
            - read
            - write
      description: >-
        Moves a room with the ID specified in the request from the "Archive"
        section to the "Rooms" section.
  /api/2.0/files/rooms/{id}/share:
    put:
      tags:
        - Files / Rooms
      summary: Set room access rights
      operationId: setRoomSecurity
      parameters:
        - name: id
          in: path
          description: Room ID
          required: true
          schema:
            type: integer
            format: int32
            example: 9846
      requestBody:
        description: Room invitation
        content:
          application/json:
            schema:
              $ref: >-
                #/components/schemas/ASC.Files.Core.ApiModels.RequestDto.RoomInvitationRequest
      responses:
        '200':
          description: Room security information
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/ASC.Files.Core.ApiModels.ResponseDto.RoomSecurityDto
        '401':
          description: Unauthorized
      security:
        - asc_auth_key:
            - read
            - write
      description: Sets the access rights to a room with the ID specified in the request.
    get:
      tags:
        - Files / Rooms
      summary: Get room access rights
      operationId: getRoomSecurityInfo
      parameters:
        - name: id
          in: path
          description: Room ID
          required: true
          schema:
            type: integer
            format: int32
            example: 9846
        - name: filterType
          in: query
          description: Share filter type
          schema:
            $ref: '#/components/schemas/ASC.Files.Core.Security.ShareFilterType'
      responses:
        '200':
          description: Security information of room files
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/ASC.Files.Core.ApiModels.ResponseDto.FileShareDto
        '401':
          description: Unauthorized
      security:
        - asc_auth_key:
            - read
            - write
      description: >-
        Returns the access rights of a room with the ID specified in the
        request.
  /api/2.0/files/rooms/{id}/links:
    put:
      tags:
        - Files / Rooms
      summary: Set an external or invitation link
      operationId: setLink
      parameters:
        - name: id
          in: path
          description: Room ID
          required: true
          schema:
            type: integer
            format: int32
            example: 9846
      requestBody:
        description: Room link
        content:
          application/json:
            schema:
              $ref: >-
                #/components/schemas/ASC.Files.Core.ApiModels.RequestDto.RoomLinkRequest
      responses:
        '200':
          description: Room security information
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/ASC.Files.Core.ApiModels.ResponseDto.FileShareDto
        '401':
          description: Unauthorized
      security:
        - asc_auth_key:
            - read
            - write
      description: >-
        Sets an external or invitation link with the ID specified in the
        request.
    get:
      tags:
        - Files / Rooms
      summary: Get room links
      operationId: getRoomLinks
      parameters:
        - name: id
          in: path
          description: Room ID
          required: true
          schema:
            type: integer
            format: int32
            example: 9846
        - name: type
          in: query
          description: Link type
          schema:
            $ref: '#/components/schemas/ASC.Files.Core.ApiModels.ResponseDto.LinkType'
      responses:
        '200':
          description: Room security information
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/ASC.Files.Core.ApiModels.ResponseDto.FileShareDto
        '401':
          description: Unauthorized
      security:
        - asc_auth_key:
            - read
            - write
      description: Returns the links of a room with the ID specified in the request.
  /api/2.0/files/rooms/{id}/link:
    get:
      tags:
        - Files / Rooms
      summary: Get primary external link
      operationId: getRoomsPrimaryExternalLink
      parameters:
        - name: id
          in: path
          description: Room Id
          required: true
          schema:
            type: integer
            format: int32
            example: 9846
      responses:
        '200':
          description: Room security information
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/ASC.Files.Core.ApiModels.ResponseDto.FileShareDto
        '401':
          description: Unauthorized
        '404':
          description: Not Found
      security:
        - asc_auth_key:
            - read
            - write
      description: >-
        Returns the primary external link of a room with the ID specified in the
        request.
  /api/2.0/files/rooms/{id}/tags:
    put:
      tags:
        - Files / Rooms
      summary: Add room tags
      operationId: addTags
      parameters:
        - name: id
          in: path
          description: Room Id
          required: true
          schema:
            type: integer
            format: int32
            example: 9846
      requestBody:
        description: Batch tags
        content:
          application/json:
            schema:
              $ref: >-
                #/components/schemas/ASC.Files.Core.ApiModels.RequestDto.BatchTagsRequestDto
      responses:
        '200':
          description: Room information
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/ASC.Files.Core.ApiModels.ResponseDto.FolderDto.System.Int32
        '401':
          description: Unauthorized
        '403':
          description: You don't have permission to edit the room
      security:
        - asc_auth_key:
            - read
            - write
      description: Adds the tags to a room with the ID specified in the request.
    delete:
      tags:
        - Files / Rooms
      summary: Remove room tags
      operationId: deleteTags
      parameters:
        - name: id
          in: path
          description: Room Id
          required: true
          schema:
            type: integer
            format: int32
            example: 9846
      requestBody:
        description: Batch tags
        content:
          application/json:
            schema:
              $ref: >-
                #/components/schemas/ASC.Files.Core.ApiModels.RequestDto.BatchTagsRequestDto
      responses:
        '200':
          description: Room information
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/ASC.Files.Core.ApiModels.ResponseDto.FolderDto.System.Int32
        '401':
          description: Unauthorized
        '403':
          description: You don't have permission to edit the room
      security:
        - asc_auth_key:
            - read
            - write
      description: Removes the tags from a room with the ID specified in the request.
  /api/2.0/files/rooms/{id}/logo:
    post:
      tags:
        - Files / Rooms
      summary: Create a room logo
      operationId: createRoomLogo
      parameters:
        - name: id
          in: path
          description: Room Id
          required: true
          schema:
            type: integer
            format: int32
            example: 9846
      requestBody:
        description: Logo
        content:
          application/json:
            schema:
              $ref: >-
                #/components/schemas/ASC.Files.Core.ApiModels.RequestDto.LogoRequest
      responses:
        '200':
          description: Room information
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/ASC.Files.Core.ApiModels.ResponseDto.FolderDto.System.Int32
        '401':
          description: Unauthorized
        '404':
          description: The required room was not found
      security:
        - asc_auth_key:
            - read
            - write
      description: Creates a logo for a room with the ID specified in the request.
    delete:
      tags:
        - Files / Rooms
      summary: Remove a room logo
      operationId: deleteRoomLogo
      parameters:
        - name: id
          in: path
          description: Room Id
          required: true
          schema:
            type: integer
            format: int32
            example: 9846
      responses:
        '200':
          description: Room information
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/ASC.Files.Core.ApiModels.ResponseDto.FolderDto.System.Int32
        '401':
          description: Unauthorized
      security:
        - asc_auth_key:
            - read
            - write
      description: Removes a logo from a room with the ID specified in the request.
  /api/2.0/files/rooms/{id}/cover:
    post:
      tags:
        - Files / Rooms
      summary: Changes room cover
      operationId: changeRoomCover
      parameters:
        - name: id
          in: path
          description: Room ID
          required: true
          schema:
            type: integer
            format: int32
            example: 9846
      requestBody:
        description: Parameters to change the room cover
        content:
          application/json:
            schema:
              $ref: >-
                #/components/schemas/ASC.Files.Core.ApiModels.RequestDto.CoverRequestDto
      responses:
        '200':
          description: Room cover
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/ASC.Files.Core.ApiModels.ResponseDto.FolderDto.System.Int32
        '401':
          description: Unauthorized
        '403':
          description: You don't have permission to change cover
        '404':
          description: The required room was not found
      security:
        - asc_auth_key:
            - read
            - write
      description: Changes room cover
  /api/2.0/files/rooms/covers:
    get:
      tags:
        - Files / Rooms
      summary: Gets covers
      operationId: getCovers
      responses:
        '200':
          description: Gets room cover
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: >-
                    #/components/schemas/ASC.Files.Core.ApiModels.ResponseDto.CoversResultDto
        '401':
          description: Unauthorized
      security:
        - asc_auth_key:
            - read
            - write
      description: Gets covers
  /api/2.0/files/rooms/{id}/pin:
    put:
      tags:
        - Files / Rooms
      summary: Pin a room
      operationId: pinRoom
      parameters:
        - name: id
          in: path
          description: Room Id
          required: true
          schema:
            type: integer
            format: int32
            example: 9846
      responses:
        '200':
          description: Room information
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/ASC.Files.Core.ApiModels.ResponseDto.FolderDto.System.Int32
        '401':
          description: Unauthorized
      security:
        - asc_auth_key:
            - read
            - write
      description: Pins a room with the ID specified in the request to the top of the list.
  /api/2.0/files/rooms/{id}/unpin:
    put:
      tags:
        - Files / Rooms
      summary: Unpin a room
      operationId: unpinRoom
      parameters:
        - name: id
          in: path
          description: Room Id
          required: true
          schema:
            type: integer
            format: int32
            example: 9846
      responses:
        '200':
          description: Room information
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/ASC.Files.Core.ApiModels.ResponseDto.FolderDto.System.Int32
        '401':
          description: Unauthorized
      security:
        - asc_auth_key:
            - read
            - write
      description: >-
        Unpins a room with the ID specified in the request from the top of the
        list.
  /api/2.0/files/rooms/{id}/resend:
    post:
      tags:
        - Files / Rooms
      summary: Resend room invitations
      operationId: resendEmailInvitations
      parameters:
        - name: id
          in: path
          description: Room Id
          required: true
          schema:
            type: integer
            format: int32
            example: 9846
      requestBody:
        description: User invitation
        content:
          application/json:
            schema:
              $ref: >-
                #/components/schemas/ASC.Files.Core.ApiModels.RequestDto.UserInvitation
      responses:
        '200':
          description: OK
        '401':
          description: Unauthorized
      security:
        - asc_auth_key:
            - read
            - write
      description: >-
        Resends the email invitations to a room with the ID specified in the
        request to the selected users.
  /api/2.0/files/rooms/{id}/reorder:
    put:
      tags:
        - Files / Rooms
      summary: Reorders to a room with ID specified in the request
      operationId: reorder
      parameters:
        - name: id
          in: path
          description: Room Id
          required: true
          schema:
            type: integer
            format: int32
            example: 9846
      responses:
        '200':
          description: Room information
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/ASC.Files.Core.ApiModels.ResponseDto.FolderDto.System.Int32
        '401':
          description: Unauthorized
      security:
        - asc_auth_key:
            - read
            - write
      description: Reorders to a room with ID specified in the request
  /api/2.0/files/rooms/{id}/news:
    get:
      tags:
        - Files / Rooms
      summary: Get new room items
      operationId: getNewRoomItems
      parameters:
        - name: id
          in: path
          description: Room Id
          required: true
          schema:
            type: integer
            format: int32
            example: 9846
      responses:
        '200':
          description: List of file entry information
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: >-
                    #/components/schemas/ASC.Files.Core.ApiModels.ResponseDto.NewItemsDto.ASC.Files.Core.ApiModels.ResponseDto.FileEntryDto
        '401':
          description: Unauthorized
      security:
        - asc_auth_key:
            - read
            - write
      description: >-
        Returns a list of all the new items from a room with the ID specified in
        the request.
  /api/2.0/files/rooms/thirdparty/{id}:
    post:
      tags:
        - Files / Rooms
      summary: Create a third-party room
      operationId: createRoomThirdParty
      parameters:
        - name: id
          in: path
          description: >-
            ID of the folder in the third-party storage in which the contents of
            the room will be stored
          required: true
          schema:
            type: string
            example: '9846'
      requestBody:
        description: ThirdParty room
        content:
          application/json:
            schema:
              $ref: >-
                #/components/schemas/ASC.Files.Core.ApiModels.RequestDto.CreateThirdPartyRoom
      responses:
        '200':
          description: Room information
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/ASC.Files.Core.ApiModels.ResponseDto.FolderDto.System.String
        '401':
          description: Unauthorized
      security:
        - asc_auth_key:
            - read
            - write
      description: Creates a room in the "Rooms" section stored in a third-party storage.
  /api/2.0/files/tags:
    post:
      tags:
        - Files / Rooms
      summary: Create a tag
      operationId: createTag
      requestBody:
        content:
          application/json:
            schema:
              $ref: >-
                #/components/schemas/ASC.Files.Core.ApiModels.RequestDto.CreateTagRequestDto
      responses:
        '200':
          description: New tag name
          content:
            application/json:
              schema: {}
        '401':
          description: Unauthorized
        '403':
          description: You don't have enough permission to perform the operation
      security:
        - asc_auth_key:
            - read
            - write
      description: Creates a custom tag with the parameters specified in the request.
    get:
      tags:
        - Files / Rooms
      summary: Get tags
      operationId: getTagsInfo
      responses:
        '200':
          description: List of tag names
          content:
            application/json:
              schema: {}
        '401':
          description: Unauthorized
      security:
        - asc_auth_key:
            - read
            - write
      description: Returns a list of custom tags.
    delete:
      tags:
        - Files / Rooms
      summary: Delete tags
      operationId: deleteCustomTags
      requestBody:
        content:
          application/json:
            schema:
              $ref: >-
                #/components/schemas/ASC.Files.Core.ApiModels.RequestDto.BatchTagsRequestDto
      responses:
        '200':
          description: Ok
        '401':
          description: Unauthorized
        '403':
          description: You don't have enough permission to perform the operation
      security:
        - asc_auth_key:
            - read
            - write
      description: Deletes a bunch of custom tags specified in the request.
  /api/2.0/files/logos:
    post:
      tags:
        - Files / Rooms
      summary: Upload an image for room logo
      operationId: uploadRoomLogo
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                FormCollection:
                  type: array
                  items:
                    $ref: >-
                      #/components/schemas/System.Collections.Generic.KeyValuePair.System.String.Microsoft.Extensions.Primitives.StringValues
                  description: Image data
            encoding:
              FormCollection:
                style: form
      responses:
        '200':
          description: Upload result
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/ASC.Files.Core.ApiModels.ResponseDto.UploadResultDto
        '401':
          description: Unauthorized
        '403':
          description: No permissions to perform this action
      security:
        - asc_auth_key:
            - read
            - write
      description: Uploads a temporary image to create a room logo.
  /api/2.0/files/rooms/{id}/indexexport:
    post:
      tags:
        - Files / Rooms
      summary: Starts room index export
      operationId: startRoomIndexExport
      parameters:
        - name: id
          in: path
          description: Room Id
          required: true
          schema:
            type: integer
            format: int32
            example: 9846
      responses:
        '200':
          description: Ok
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/ASC.Files.Core.ApiModels.ResponseDto.DocumentBuilderTaskDto
        '401':
          description: Unauthorized
        '501':
          description: Folder indexing is turned off
      security:
        - asc_auth_key:
            - read
            - write
      description: Starts room index export
  /api/2.0/files/rooms/indexexport:
    get:
      tags:
        - Files / Rooms
      summary: Gets room index export
      operationId: getRoomIndexExport
      responses:
        '200':
          description: Ok
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/ASC.Files.Core.ApiModels.ResponseDto.DocumentBuilderTaskDto
        '401':
          description: Unauthorized
      security:
        - asc_auth_key:
            - read
            - write
      description: Gets room index export
    delete:
      tags:
        - Files / Rooms
      summary: Terminates room index export
      operationId: terminateRoomIndexExport
      responses:
        '200':
          description: Ok
        '401':
          description: Unauthorized
      security:
        - asc_auth_key:
            - read
            - write
      description: Terminates room index export
  /api/2.0/files/rooms/news:
    get:
      tags:
        - Files / Rooms
      summary: Gets room new items
      operationId: getRoomsNewItems
      responses:
        '200':
          description: List of new items
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: >-
                    #/components/schemas/ASC.Files.Core.ApiModels.ResponseDto.NewItemsDto.ASC.Files.Core.ApiModels.ResponseDto.RoomNewItemsDto
        '401':
          description: Unauthorized
      security:
        - asc_auth_key:
            - read
            - write
      description: Gets room new items
  /api/2.0/files/docservice:
    put:
      tags:
        - Files / Settings
      summary: Check the document service URL
      operationId: checkDocServiceUrl
      requestBody:
        content:
          application/json:
            schema:
              $ref: >-
                #/components/schemas/ASC.Files.Core.ApiModels.RequestDto.CheckDocServiceUrlRequestDto
      responses:
        '200':
          description: >-
            Document service information: the Document Server address, the
            Document Server address in the local private network, the Community
            Server address
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/ASC.Files.Core.ApiModels.ResponseDto.DocServiceUrlDto
        '400':
          description: >-
            Invalid input urls/Mixed Active Content is not allowed. HTTPS
            address for Document Server is required
        '401':
          description: Unauthorized
      security:
        - asc_auth_key:
            - read
            - write
      description: Checks the document service location.
  /api/2.0/files/thirdparty:
    put:
      tags:
        - Files / Settings
      summary: Change the third-party settings access
      operationId: changeAccessToThirdparty
      requestBody:
        content:
          application/json:
            schema:
              $ref: >-
                #/components/schemas/ASC.Files.Core.ApiModels.RequestDto.SettingsRequestDto
      responses:
        '200':
          description: 'Boolean value: true if the operation is successful'
          content:
            application/json:
              schema:
                type: boolean
        '401':
          description: Unauthorized
      security:
        - asc_auth_key:
            - read
            - write
      description: Changes the access to the third-party settings.
    get:
      tags:
        - Files / Third-party integration
      summary: Get third-party accounts
      operationId: getThirdPartyAccounts
      responses:
        '200':
          description: List of connected providers information
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/ASC.Web.Files.Services.WCFService.ThirdPartyParams
        '401':
          description: Unauthorized
      security:
        - asc_auth_key:
            - read
            - write
      description: Returns a list of all the connected third-party accounts.
    post:
      tags:
        - Files / Third-party integration
      summary: Save a third-party account
      description: >-
        Saves the third-party storage service account. For WebDav, Yandex,
        kDrive and SharePoint, the login and password are used for
        authentication. For other providers, the authentication is performed
        using a token received via OAuth 2.0.

         **Note**: List of provider keys: DropboxV2, Box, WebDav, Yandex, OneDrive, SharePoint, GoogleDrive, kDrive.
      operationId: saveThirdParty
      requestBody:
        content:
          application/json:
            schema:
              $ref: >-
                #/components/schemas/ASC.Files.Core.ApiModels.RequestDto.ThirdPartyRequestDto
      responses:
        '200':
          description: Connected provider folder
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/ASC.Files.Core.ApiModels.ResponseDto.FolderDto.System.String
        '401':
          description: Unauthorized
      security:
        - asc_auth_key:
            - read
            - write
  /api/2.0/files/changedeleteconfrim:
    put:
      tags:
        - Files / Settings
      summary: Confirm the file deletion
      operationId: changeDeleteConfirm
      requestBody:
        content:
          application/json:
            schema:
              $ref: >-
                #/components/schemas/ASC.Files.Core.ApiModels.RequestDto.SettingsRequestDto
      responses:
        '200':
          description: 'Boolean value: true if the operation is successful'
          content:
            application/json:
              schema:
                type: boolean
        '401':
          description: Unauthorized
      security:
        - asc_auth_key:
            - read
            - write
      description: Specifies whether to confirm the file deletion or not.
  /api/2.0/files/settings/downloadtargz:
    put:
      tags:
        - Files / Settings
      summary: Change the archive format (using body parameters)
      operationId: changeDownloadZipFromBody
      requestBody:
        content:
          application/json:
            schema:
              $ref: >-
                #/components/schemas/ASC.Files.Core.ApiModels.RequestDto.DisplayRequestDto
      responses:
        '200':
          description: Archive
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ASC.Web.Files.Core.Compress.ICompress'
        '401':
          description: Unauthorized
      security:
        - asc_auth_key:
            - read
            - write
      description: >-
        Changes the format of the downloaded archive from .zip to .tar.gz. This
        method uses the body parameters.
  /api/2.0/files/settings/external:
    put:
      tags:
        - Files / Settings
      summary: Change the external sharing ability
      operationId: externalShare
      requestBody:
        content:
          application/json:
            schema:
              $ref: >-
                #/components/schemas/ASC.Files.Core.ApiModels.RequestDto.DisplayRequestDto
      responses:
        '200':
          description: 'Boolean value: true if the parameter is enabled'
          content:
            application/json:
              schema:
                type: boolean
        '401':
          description: Unauthorized
      security:
        - asc_auth_key:
            - read
            - write
      description: Changes the ability to share a file externally.
  /api/2.0/files/settings/externalsocialmedia:
    put:
      tags:
        - Files / Settings
      summary: Change the external sharing ability on social networks
      operationId: externalShareSocialMedia
      requestBody:
        content:
          application/json:
            schema:
              $ref: >-
                #/components/schemas/ASC.Files.Core.ApiModels.RequestDto.DisplayRequestDto
      responses:
        '200':
          description: 'Boolean value: true if the parameter is enabled'
          content:
            application/json:
              schema:
                type: boolean
        '401':
          description: Unauthorized
      security:
        - asc_auth_key:
            - read
            - write
      description: Changes the ability to share a file externally on social networks.
  /api/2.0/files/forcesave:
    put:
      tags:
        - Files / Settings
      summary: Change the forcasaving ability
      operationId: forcesave
      responses:
        '200':
          description: 'Boolean value: true if the parameter is enabled'
          content:
            application/json:
              schema:
                type: boolean
        '401':
          description: Unauthorized
      security:
        - asc_auth_key:
            - read
            - write
      description: Changes the ability to force save a file.
  /api/2.0/files/settings:
    get:
      tags:
        - Files / Settings
      summary: Get file settings
      operationId: getFilesSettings
      responses:
        '200':
          description: File settings
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/ASC.Files.Core.ApiModels.ResponseDto.FilesSettingsDto
      description: Returns all the file settings.
  /api/2.0/files/info:
    get:
      tags:
        - Files / Settings
      summary: Get the Documents information
      operationId: getModule
      responses:
        '200':
          description: >-
            Module information: ID, product class name, title, description, icon
            URL, large icon URL, start URL, primary or nor, help URL
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ASC.Api.Core.Module'
        '401':
          description: Unauthorized
      security:
        - asc_auth_key:
            - read
            - write
      description: Returns the information about the Documents module.
  /api/2.0/files/@privacy/available:
    get:
      tags:
        - Files / Settings
      summary: Check the Private Room availability
      operationId: isAvailablePrivacyRoomSettings
      responses:
        '200':
          description: 'Boolean value: true if the Private Room settings are available'
          content:
            application/json:
              schema:
                type: boolean
        '401':
          description: Unauthorized
      security:
        - asc_auth_key:
            - read
            - write
      description: Checks if the Private Room settings are available or not.
  /api/2.0/files/storeforcesave:
    put:
      tags:
        - Files / Settings
      summary: Change the ability to store the forcesaved files
      operationId: storeForcesave
      responses:
        '200':
          description: 'Boolean value: true if the operation is successful'
          content:
            application/json:
              schema:
                type: boolean
        '401':
          description: Unauthorized
      security:
        - asc_auth_key:
            - read
            - write
      description: Changes the ability to store the forcesaved file versions.
  /api/2.0/files/storeoriginal:
    put:
      tags:
        - Files / Settings
      summary: Change the ability to upload original formats
      operationId: storeOriginal
      requestBody:
        content:
          application/json:
            schema:
              $ref: >-
                #/components/schemas/ASC.Files.Core.ApiModels.RequestDto.SettingsRequestDto
      responses:
        '200':
          description: 'Boolean value: true if the operation is successful'
          content:
            application/json:
              schema:
                type: boolean
        '401':
          description: Unauthorized
      security:
        - asc_auth_key:
            - read
            - write
      description: Changes the ability to upload documents in the original formats as well.
  /api/2.0/files/keepnewfilename:
    put:
      tags:
        - Files / Settings
      summary: Ask a new file name
      operationId: keepNewFileName
      requestBody:
        content:
          application/json:
            schema:
              $ref: >-
                #/components/schemas/ASC.Files.Core.ApiModels.RequestDto.SettingsRequestDto
      responses:
        '200':
          description: 'Boolean value: true if the operation is successful'
          content:
            application/json:
              schema:
                type: boolean
        '401':
          description: Unauthorized
      security:
        - asc_auth_key:
            - read
            - write
      description: Specifies whether to ask a user for a file name on creation or not.
  /api/2.0/files/displayfileextension:
    put:
      tags:
        - Files / Settings
      summary: Display a file extension
      operationId: displayFileExtension
      requestBody:
        content:
          application/json:
            schema:
              $ref: >-
                #/components/schemas/ASC.Files.Core.ApiModels.RequestDto.SettingsRequestDto
      responses:
        '200':
          description: 'Boolean value: true if the parameter is enabled'
          content:
            application/json:
              schema:
                type: boolean
        '401':
          description: Unauthorized
      security:
        - asc_auth_key:
            - read
            - write
      description: Specifies whether to display a file extension or not.
  /api/2.0/files/updateifexist:
    put:
      tags:
        - Files / Settings
      summary: Update a file version if it exists
      operationId: updateIfExist
      requestBody:
        content:
          application/json:
            schema:
              $ref: >-
                #/components/schemas/ASC.Files.Core.ApiModels.RequestDto.SettingsRequestDto
      responses:
        '200':
          description: 'Boolean value: true if the operation is successful'
          content:
            application/json:
              schema:
                type: boolean
        '401':
          description: Unauthorized
      security:
        - asc_auth_key:
            - read
            - write
      description: Updates a file version if a file with such a name already exists.
  /api/2.0/files/settings/autocleanup:
    get:
      tags:
        - Files / Settings
      summary: Get the trash bin auto-clearing setting
      operationId: getAutomaticallyCleanUp
      responses:
        '200':
          description: >-
            The auto-clearing setting properties: auto-clearing or not, a time
            interval when the auto-clearing will be performed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ASC.Files.Core.AutoCleanUpData'
        '401':
          description: Unauthorized
      security:
        - asc_auth_key:
            - read
            - write
      description: Returns the trash bin auto-clearing setting.
    put:
      tags:
        - Files / Settings
      summary: Update the trash bin auto-clearing setting
      operationId: changeAutomaticallyCleanUp
      requestBody:
        content:
          application/json:
            schema:
              $ref: >-
                #/components/schemas/ASC.Files.Core.ApiModels.RequestDto.AutoCleanupRequestDto
      responses:
        '200':
          description: >-
            The auto-clearing setting properties: auto-clearing or not, a time
            interval when the auto-clearing will be performed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ASC.Files.Core.AutoCleanUpData'
        '401':
          description: Unauthorized
      security:
        - asc_auth_key:
            - read
            - write
      description: Updates the trash bin auto-clearing setting.
  /api/2.0/files/settings/dafaultaccessrights:
    put:
      tags:
        - Files / Settings
      summary: Change the default access rights
      operationId: changeDefaultAccessRights
      requestBody:
        description: >-
          Sharing rights (None, ReadWrite, Read, Restrict, Varies, Review,
          Comment, FillForms, CustomFilter, RoomAdmin, Editing, Collaborator)
        content:
          application/json:
            schema:
              type: array
              items:
                anyOf:
                  - enum:
                      - None
                      - ReadWrite
                      - Read
                      - Restrict
                      - Varies
                      - Review
                      - Comment
                      - FillForms
                      - CustomFilter
                      - RoomManager
                      - Editing
                      - ContentCreator
                    type: string
                    description: >-
                      [None - None, ReadWrite - Read and write, Read - Read,
                      Restrict - Restrict, Varies - Varies, Review - Review,
                      Comment - Comment, FillForms - Fill forms, CustomFilter -
                      Custom filter, RoomManager - Room manager, Editing -
                      Editing, ContentCreator - Content creator]
                    example: None
                  - enum:
                      - 0
                      - 1
                      - 2
                      - 3
                      - 4
                      - 5
                      - 6
                      - 7
                      - 8
                      - 9
                      - 10
                      - 11
                    type: integer
                    description: >-
                      [0 - None, 1 - Read and write, 2 - Read, 3 - Restrict, 4 -
                      Varies, 5 - Review, 6 - Comment, 7 - Fill forms, 8 -
                      Custom filter, 9 - Room manager, 10 - Editing, 11 -
                      Content creator]
                    example: 0
              description: >-
                Sharing rights (None, ReadWrite, Read, Restrict, Varies, Review,
                Comment, FillForms, CustomFilter, RoomAdmin, Editing,
                Collaborator)
      responses:
        '200':
          description: >-
            Updated sharing rights (None, ReadWrite, Read, Restrict, Varies,
            Review, Comment, FillForms, CustomFilter, RoomAdmin, Editing,
            Collaborator)
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ASC.Files.Core.Security.FileShare'
        '401':
          description: Unauthorized
      security:
        - asc_auth_key:
            - read
            - write
      description: Changes the default access rights in the sharing settings.
  /api/2.0/files/settings/openeditorinsametab:
    put:
      tags:
        - Files / Settings
      summary: Open document in same browser tab
      operationId: setOpenEditorInSameTab
      requestBody:
        content:
          application/json:
            schema:
              $ref: >-
                #/components/schemas/ASC.Files.Core.ApiModels.RequestDto.SettingsRequestDto
      responses:
        '200':
          description: 'Boolean value: true if the parameter is enabled'
          content:
            application/json:
              schema:
                type: boolean
        '401':
          description: Unauthorized
      security:
        - asc_auth_key:
            - read
            - write
      description: Change the ability to open in a document in the same browser tab
  /api/2.0/files/thirdparty/capabilities:
    get:
      tags:
        - Files / Third-party integration
      summary: Get providers
      description: |-
        Returns a list of the available providers.

         **Note**: Available provider keys: DropboxV2, Box, WebDav, Yandex, OneDrive, SharePoint, GoogleDrive, kDrive.
      operationId: capabilities
      responses:
        '200':
          description: List of provider keys
          content:
            application/json:
              schema:
                type: array
                items:
                  type: array
                  items:
                    type: string
        '401':
          description: Unauthorized
      security:
        - asc_auth_key:
            - read
            - write
  /api/2.0/files/thirdparty/{providerId}:
    delete:
      tags:
        - Files / Third-party integration
      summary: Remove a third-party account
      operationId: deleteThirdParty
      parameters:
        - name: providerId
          in: path
          description: Provider ID
          required: true
          schema:
            type: integer
            format: int32
            example: 1234
      responses:
        '200':
          description: Third-party folder ID
          content:
            application/json:
              schema: {}
        '401':
          description: Unauthorized
      security:
        - asc_auth_key:
            - read
            - write
      description: >-
        Removes the third-party storage service account with the ID specified in
        the request.
  /api/2.0/files/thirdparty/common:
    get:
      tags:
        - Files / Third-party integration
      summary: Get common third-party services
      operationId: getCommonThirdPartyFolders
      responses:
        '200':
          description: List of common third-party folderst
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/ASC.Files.Core.ApiModels.ResponseDto.FolderDto.System.String
        '401':
          description: Unauthorized
      security:
        - asc_auth_key:
            - read
            - write
      description: >-
        Returns a list of the third-party services connected to the "Common"
        section.
  /api/2.0/files/thirdparty/backup:
    get:
      tags:
        - Files / Third-party integration
      summary: Get a third-party account backup
      operationId: getBackupThirdPartyAccount
      responses:
        '200':
          description: Folder for the third-party account backup
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/ASC.Files.Core.ApiModels.ResponseDto.FolderDto.System.String
        '401':
          description: Unauthorized
      security:
        - asc_auth_key:
            - read
            - write
      description: Return a backup of the connected third-party account.
    post:
      tags:
        - Files / Third-party integration
      summary: Save a third-party account backup
      description: |-
        Saves a backup of the connected third-party account.

         **Note**: List of provider key: DropboxV2, Box, WebDav, Yandex, OneDrive, SharePoint, GoogleDrive, kDrive
      operationId: saveThirdPartyBackup
      requestBody:
        content:
          application/json:
            schema:
              $ref: >-
                #/components/schemas/ASC.Files.Core.ApiModels.RequestDto.ThirdPartyBackupRequestDto
      responses:
        '200':
          description: Folder for the third-party account backup
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/ASC.Files.Core.ApiModels.ResponseDto.FolderDto.System.String
        '401':
          description: Unauthorized
      security:
        - asc_auth_key:
            - read
            - write
  /api/2.0/files/thirdparty/providers:
    get:
      tags:
        - Files / Third-party integration
      summary: Get all providers
      description: |-
        Returns a list of the all providers.

         **Note**: Available provider keys: Dropbox, Box, WebDav, OneDrive, GoogleDrive, kDrive, ownCloud, Nextcloud
      operationId: getAllProviders
      responses:
        '200':
          description: List of provider
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: >-
                    #/components/schemas/ASC.Files.Core.ApiModels.ResponseDto.ProviderDto
        '401':
          description: Unauthorized
      security:
        - asc_auth_key:
            - read
            - write
  /api/2.0/backup/getbackupschedule:
    get:
      tags:
        - Backup
      summary: Get the backup schedule
      operationId: getBackupSchedule
      responses:
        '200':
          description: Backup schedule
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/ASC.Data.Backup.BackupAjaxHandler_Schedule
        '401':
          description: Unauthorized
        '402':
          description: Your pricing plan does not support this option
      security:
        - asc_auth_key:
            - read
            - write
      description: Returns the backup schedule of the current portal.
  /api/2.0/backup/createbackupschedule:
    post:
      tags:
        - Backup
      summary: Create the backup schedule
      operationId: createBackupSchedule
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ASC.Data.Backup.ApiModels.BackupScheduleDto'
      responses:
        '200':
          description: 'Boolean value: true if the operation is successful'
          content:
            application/json:
              schema:
                type: boolean
        '400':
          description: BackupStored must be 1 - 30 or backup can not start as dump
        '401':
          description: Unauthorized
        '402':
          description: Your pricing plan does not support this option
        '403':
          description: You don't have enough permission to create
        '404':
          description: The required folder was not found
      security:
        - asc_auth_key:
            - read
            - write
      description: >-
        Creates the backup schedule of the current portal with the parameters
        specified in the request.
  /api/2.0/backup/deletebackupschedule:
    delete:
      tags:
        - Backup
      summary: Delete the backup schedule
      operationId: deleteBackupSchedule
      responses:
        '200':
          description: 'Boolean value: true if the operation is successful'
          content:
            application/json:
              schema:
                type: boolean
        '401':
          description: Unauthorized
        '402':
          description: Your pricing plan does not support this option
      security:
        - asc_auth_key:
            - read
            - write
      description: Deletes the backup schedule of the current portal.
  /api/2.0/backup/startbackup:
    post:
      tags:
        - Backup
      summary: Start the backup
      operationId: startBackup
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ASC.Data.Backup.ApiModels.BackupDto'
      responses:
        '200':
          description: >-
            Backup progress: completed or not, progress percentage, error,
            tenant ID, backup progress item (Backup, Restore, Transfer), link
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ASC.Data.Backup.Contracts.BackupProgress'
        '400':
          description: Wrong folder type or backup can`t start as dump
        '401':
          description: Unauthorized
        '402':
          description: Your pricing plan does not support this option
        '403':
          description: You don't have enough permission to create
        '404':
          description: The required folder was not found
      security:
        - asc_auth_key:
            - read
            - write
      description: >-
        Starts the backup of the current portal with the parameters specified in
        the request.
  /api/2.0/backup/getbackupprogress:
    get:
      tags:
        - Backup
      summary: Get the backup progress
      operationId: getBackupProgress
      responses:
        '200':
          description: >-
            Backup progress: completed or not, progress percentage, error,
            tenant ID, backup progress item (Backup, Restore, Transfer), link
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ASC.Data.Backup.Contracts.BackupProgress'
        '401':
          description: Unauthorized
        '402':
          description: Your pricing plan does not support this option
      security:
        - asc_auth_key:
            - read
            - write
      description: Returns the progress of the started backup.
  /api/2.0/backup/getbackuphistory:
    get:
      tags:
        - Backup
      summary: Get the backup history
      operationId: getBackupHistory
      responses:
        '200':
          description: List of backup history records
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/ASC.Data.Backup.Contracts.BackupHistoryRecord
        '401':
          description: Unauthorized
        '402':
          description: Your pricing plan does not support this option
      security:
        - asc_auth_key:
            - read
            - write
      description: Returns the history of the started backup.
  /api/2.0/backup/deletebackup/{id}:
    delete:
      tags:
        - Backup
      summary: Delete the backup
      operationId: deleteBackup
      parameters:
        - name: id
          in: path
          description: Backup Id
          required: true
          schema:
            type: string
            format: uuid
            example: 75a5f745-f697-4418-b38d-0fe0d277e258
      responses:
        '200':
          description: 'Boolean value: true if the operation is successful'
          content:
            application/json:
              schema:
                type: boolean
        '401':
          description: Unauthorized
        '402':
          description: Your pricing plan does not support this option
      security:
        - asc_auth_key:
            - read
            - write
      description: Deletes the backup with the ID specified in the request.
  /api/2.0/backup/deletebackuphistory:
    delete:
      tags:
        - Backup
      summary: Delete the backup history
      operationId: deleteBackupHistory
      responses:
        '200':
          description: 'Boolean value: true if the operation is successful'
          content:
            application/json:
              schema:
                type: boolean
        '401':
          description: Unauthorized
        '402':
          description: Your pricing plan does not support this option
      security:
        - asc_auth_key:
            - read
            - write
      description: Deletes the backup history of the current portal.
  /api/2.0/backup/startrestore:
    post:
      tags:
        - Backup
      summary: Start the restoring process
      operationId: startBackupRestore
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ASC.Data.Backup.ApiModels.BackupRestoreDto'
      responses:
        '200':
          description: >-
            Backup progress: completed or not, progress percentage, error,
            tenant ID, backup progress item (Backup, Restore, Transfer), link
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ASC.Data.Backup.Contracts.BackupProgress'
        '400':
          description: Backup can not start as dump
        '401':
          description: Unauthorized
        '402':
          description: Your pricing plan does not support this option
        '403':
          description: You don't have enough permission to create
        '404':
          description: The required file or folder was not found
      security:
        - asc_auth_key:
            - read
            - write
      description: >-
        Starts the data restoring process of the current portal with the
        parameters specified in the request.
  /api/2.0/backup/getrestoreprogress:
    get:
      tags:
        - Backup
      summary: Get the restoring progress
      operationId: getRestoreProgress
      responses:
        '200':
          description: >-
            Backup progress: completed or not, progress percentage, error,
            tenant ID, backup progress item (Backup, Restore, Transfer), link
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ASC.Data.Backup.Contracts.BackupProgress'
      description: Returns the progress of the started restoring process.
components:
  schemas:
    ASC.Api.Collections.ItemKeyValuePair.System.String.ASC.Web.Api.ApiModel.RequestsDto.LogoRequestsDto:
      type: object
      properties:
        key:
          type: string
          nullable: true
          example: some text
        value:
          $ref: >-
            #/components/schemas/ASC.Web.Api.ApiModel.RequestsDto.LogoRequestsDto
      additionalProperties: false
    ASC.Api.Collections.ItemKeyValuePair.System.String.System.Boolean:
      type: object
      properties:
        key:
          type: string
          nullable: true
          example: some text
        value:
          type: boolean
          example: true
      additionalProperties: false
    ASC.Api.Collections.ItemKeyValuePair.System.String.System.String:
      type: object
      properties:
        key:
          type: string
          nullable: true
          example: some text
        value:
          type: string
          nullable: true
          example: some text
      additionalProperties: false
    ASC.Api.Core.ApiDateTime:
      type: object
      properties:
        utcTime:
          type: string
          description: UtcTime
          format: date-time
          readOnly: true
          example: '2008-04-10T06:30:00.0000000+04:00'
        timeZoneOffset:
          type: string
          description: TimeZoneOffset
          format: date-span
          readOnly: true
          example: '00:00:00'
      additionalProperties: false
    ASC.Api.Core.Module:
      type: object
      properties:
        id:
          type: string
          description: ID
          format: uuid
          example: aae1e103-bca5-9fa1-ba8c-42058b4abf28
        appName:
          type: string
          description: Product class name
          nullable: true
          example: some text
        title:
          type: string
          description: Title
          nullable: true
          example: legacy_1080p_small_wooden_mouse
        link:
          type: string
          description: Start link
          nullable: true
          example: some text
        iconUrl:
          type: string
          description: Icon URL
          nullable: true
          example: some text
        imageUrl:
          type: string
          description: Large image URL
          nullable: true
          example: some text
        helpUrl:
          type: string
          description: Help URL
          nullable: true
          example: some text
        description:
          type: string
          description: Description
          nullable: true
          example: some text
        isPrimary:
          type: boolean
          description: Specifies if the module is primary or not
          example: true
      additionalProperties: false
    ASC.Api.Settings.Smtp.SmtpOperationStatusRequestsDto:
      type: object
      properties:
        completed:
          type: boolean
          description: Specifies if the SMTP operation is completed or not
          example: true
        id:
          type: string
          description: SMTP operation ID
          nullable: true
          example: '{some-random-guid}'
        error:
          type: string
          description: SMTP operation error
          nullable: true
          example: ''
        status:
          type: string
          description: SMTP operation status
          nullable: true
          example: ''
        percents:
          type: integer
          description: Percentage of SMTP operation completion
          format: int32
          example: 0
      additionalProperties: false
    ASC.AuditTrail.Types.ActionType:
      oneOf:
        - enum:
            - None
            - Create
            - Update
            - Delete
            - Link
            - Unlink
            - Attach
            - Detach
            - Send
            - Import
            - Export
            - UpdateAccess
            - Download
            - Upload
            - Copy
            - Move
            - Reassigns
            - Follow
            - Unfollow
            - Logout
          type: string
          description: >-
            [None - None, Create - Create, Update - Update, Delete - Delete,
            Link - Link, Unlink - Unlink, Attach - Attach, Detach - Detach, Send
            - Send, Import - Import, Export - Export, UpdateAccess - Update
            access, Download - Download, Upload - Upload, Copy - Copy, Move -
            Move, Reassigns - Reassigns, Follow - Follow, Unfollow - Unfollow,
            Logout - Logout]
          example: None
        - enum:
            - 0
            - 1
            - 2
            - 3
            - 4
            - 5
            - 6
            - 7
            - 8
            - 9
            - 10
            - 11
            - 12
            - 13
            - 14
            - 15
            - 16
            - 17
            - 18
            - 19
          type: integer
          description: >-
            [0 - None, 1 - Create, 2 - Update, 3 - Delete, 4 - Link, 5 - Unlink,
            6 - Attach, 7 - Detach, 8 - Send, 9 - Import, 10 - Export, 11 -
            Update access, 12 - Download, 13 - Upload, 14 - Copy, 15 - Move, 16
            - Reassigns, 17 - Follow, 18 - Unfollow, 19 - Logout]
          example: 0
    ASC.AuditTrail.Types.EntryType:
      oneOf:
        - enum:
            - None
            - File
            - Folder
            - User
            - Group
            - Room
            - Tag
          type: string
          description: >-
            [None - None, File - File, Folder - Folder, User - User, Group -
            Group, Room - Room, Tag - Tag]
          example: None
        - enum:
            - 0
            - 1
            - 2
            - 23
            - 24
            - 25
            - 26
          type: integer
          description: >-
            [0 - None, 1 - File, 2 - Folder, 23 - User, 24 - Group, 25 - Room,
            26 - Tag]
          example: 0
    ASC.AuditTrail.Types.ModuleType:
      oneOf:
        - enum:
            - None
            - Files
            - Folders
            - DocumentsSettings
            - Companies
            - Persons
            - Contacts
            - CrmTasks
            - Opportunities
            - Invoices
            - Cases
            - CommonCrmSettings
            - ContactsSettings
            - ContactTypes
            - InvoiceSettings
            - OtherCrmSettings
            - Users
            - Groups
            - Projects
            - Milestones
            - Tasks
            - Discussions
            - TimeTracking
            - Reports
            - ProjectsSettings
            - General
            - Products
            - Rooms
            - OAuth
          type: string
          description: >-
            [None - None, Files - Files, Folders - Folders, DocumentsSettings -
            Documents settings, Companies - Companies, Persons - Persons,
            Contacts - Contacts, CrmTasks - Crm tasks, Opportunities -
            Opportunities, Invoices - Invoices, Cases - Cases, CommonCrmSettings
            - Common crm settings, ContactsSettings - Contacts settings,
            ContactTypes - Contact types, InvoiceSettings - Invoice settings,
            OtherCrmSettings - Other crm settings, Users - Users, Groups -
            Groups, Projects - Projects, Milestones - Milestones, Tasks - Tasks,
            Discussions - Discussions, TimeTracking - Time tracking, Reports -
            Reports, ProjectsSettings - Projects settings, General - General,
            Products - Products, Rooms - Rooms, OAuth - OAuth]
          example: None
        - enum:
            - 0
            - 1
            - 2
            - 3
            - 4
            - 5
            - 6
            - 7
            - 8
            - 9
            - 10
            - 11
            - 12
            - 13
            - 14
            - 15
            - 16
            - 17
            - 18
            - 19
            - 20
            - 21
            - 22
            - 23
            - 24
            - 25
            - 26
            - 27
            - 28
          type: integer
          description: >-
            [0 - None, 1 - Files, 2 - Folders, 3 - Documents settings, 4 -
            Companies, 5 - Persons, 6 - Contacts, 7 - Crm tasks, 8 -
            Opportunities, 9 - Invoices, 10 - Cases, 11 - Common crm settings,
            12 - Contacts settings, 13 - Contact types, 14 - Invoice settings,
            15 - Other crm settings, 16 - Users, 17 - Groups, 18 - Projects, 19
            - Milestones, 20 - Tasks, 21 - Discussions, 22 - Time tracking, 23 -
            Reports, 24 - Projects settings, 25 - General, 26 - Products, 27 -
            Rooms, 28 - OAuth]
          example: 0
    ASC.AuditTrail.Types.ProductType:
      oneOf:
        - enum:
            - None
            - Documents
            - Login
            - Others
            - People
            - Settings
          type: string
          description: >-
            [None - None, Documents - Documents, Login - Login, Others - Others,
            People - People, Settings - Settings]
          example: None
        - enum:
            - 0
            - 2
            - 3
            - 4
            - 5
            - 7
          type: integer
          description: >-
            [0 - None, 2 - Documents, 3 - Login, 4 - Others, 5 - People, 7 -
            Settings]
          example: 0
    ASC.Core.Billing.Quota:
      type: object
      properties:
        id:
          type: integer
          description: ID
          format: int32
          example: 9846
        quantity:
          type: integer
          description: Quantity
          format: int32
          example: 1234
      additionalProperties: false
    ASC.Core.Billing.Tariff:
      type: object
      properties:
        id:
          type: integer
          description: ID
          format: int32
          example: 9846
        state:
          $ref: '#/components/schemas/ASC.Core.Billing.TariffState'
        dueDate:
          type: string
          description: Due date
          format: date-time
          example: '2008-04-10T06:30:00.0000000+04:00'
        delayDueDate:
          type: string
          description: Delay due date
          format: date-time
          example: '2008-04-10T06:30:00.0000000+04:00'
        licenseDate:
          type: string
          description: License date
          format: date-time
          example: '2008-04-10T06:30:00.0000000+04:00'
        customerId:
          type: string
          description: Customer ID
          nullable: true
          example: some text
        quotas:
          type: array
          items:
            $ref: '#/components/schemas/ASC.Core.Billing.Quota'
          description: List of quotas
          nullable: true
      additionalProperties: false
    ASC.Core.Billing.TariffState:
      oneOf:
        - enum:
            - Trial
            - Paid
            - Delay
            - NotPaid
          type: string
          description: '[Trial - Trial, Paid - Paid, Delay - Delay, NotPaid - Not paid]'
          example: Trial
        - enum:
            - 0
            - 1
            - 2
            - 3
          type: integer
          description: '[0 - Trial, 1 - Paid, 2 - Delay, 3 - Not paid]'
          example: 0
    ASC.Core.Common.EF.FireBaseUser:
      type: object
      properties:
        id:
          type: integer
          description: ID
          format: int32
          example: 9846
        userId:
          type: string
          description: User ID
          format: uuid
          example: aae1e103-bca5-9fa1-ba8c-42058b4abf28
        tenantId:
          type: integer
          description: Tenant ID
          format: int32
          example: 1234
        firebaseDeviceToken:
          type: string
          description: Firebase device token
          nullable: true
          example: some text
        application:
          type: string
          description: Application
          nullable: true
          example: some text
        isSubscribed:
          type: boolean
          description: Specifies if the user is subscribed to the push notifications or not
          nullable: true
          example: true
        tenant:
          $ref: '#/components/schemas/ASC.Core.Common.EF.Model.DbTenant'
      additionalProperties: false
    ASC.Core.Common.EF.Model.DbTenant:
      type: object
      properties:
        id:
          type: integer
          description: Id
          format: int32
          example: 9846
        name:
          type: string
          description: Name
          nullable: true
          example: Winfield Upton
        alias:
          type: string
          description: Alias
          nullable: true
          example: some text
        mappedDomain:
          type: string
          description: Mapped domain
          nullable: true
          example: some text
        version:
          type: integer
          description: Version
          format: int32
          example: 1234
        version_Changed:
          type: string
          description: Version_changed
          format: date-time
          nullable: true
          example: '2008-04-10T06:30:00.0000000+04:00'
        versionChanged:
          type: string
          description: Version changed
          format: date-time
          example: '2008-04-10T06:30:00.0000000+04:00'
        language:
          type: string
          description: Language
          nullable: true
          example: some text
        timeZone:
          type: string
          description: Time zone
          nullable: true
          example: some text
        trustedDomainsRaw:
          type: string
          description: Trusted domains raw
          nullable: true
          example: some text
        trustedDomainsEnabled:
          $ref: '#/components/schemas/ASC.Core.Tenants.TenantTrustedDomainsType'
        status:
          $ref: '#/components/schemas/ASC.Core.Tenants.TenantStatus'
        statusChanged:
          type: string
          description: Status changed
          format: date-time
          nullable: true
          example: '2008-04-10T06:30:00.0000000+04:00'
        statusChangedHack:
          type: string
          description: Status changed hack
          format: date-time
          example: '2008-04-10T06:30:00.0000000+04:00'
        creationDateTime:
          type: string
          description: Creation date time
          format: date-time
          example: '2008-04-10T06:30:00.0000000+04:00'
        ownerId:
          type: string
          description: Owner id
          format: uuid
          nullable: true
          example: 75a5f745-f697-4418-b38d-0fe0d277e258
        paymentId:
          type: string
          description: Payment id
          nullable: true
          example: some text
        industry:
          $ref: '#/components/schemas/ASC.Core.Tenants.TenantIndustry'
        lastModified:
          type: string
          description: Last modified
          format: date-time
          example: '2008-04-10T06:30:00.0000000+04:00'
        calls:
          type: boolean
          description: Calls
          example: true
        partner:
          $ref: '#/components/schemas/ASC.Core.Common.EF.Model.DbTenantPartner'
      additionalProperties: false
    ASC.Core.Common.EF.Model.DbTenantPartner:
      type: object
      properties:
        tenantId:
          type: integer
          description: Tenant id
          format: int32
          example: 1234
        partnerId:
          type: string
          description: Partner id
          nullable: true
          example: some text
        affiliateId:
          type: string
          description: Affiliate id
          nullable: true
          example: some text
        campaign:
          type: string
          description: Campaign
          nullable: true
          example: some text
      additionalProperties: false
    ASC.Core.Tenants.TenantAuditSettings:
      type: object
      properties:
        loginHistoryLifeTime:
          type: integer
          description: Login history lifetime
          format: int32
          example: 1234
        auditTrailLifeTime:
          type: integer
          description: Audit trail lifetime
          format: int32
          example: 1234
      additionalProperties: false
    ASC.Core.Tenants.TenantAuditSettingsWrapper:
      type: object
      properties:
        settings:
          $ref: '#/components/schemas/ASC.Core.Tenants.TenantAuditSettings'
      additionalProperties: false
      description: Audit trail settings
    ASC.Core.Tenants.TenantDomainValidator:
      type: object
      properties:
        regex:
          type: string
          description: Regex
          nullable: true
          readOnly: true
          example: some text
        minLength:
          type: integer
          description: Min length
          format: int32
          readOnly: true
          example: 1234
        maxLength:
          type: integer
          description: Max length
          format: int32
          readOnly: true
          example: 63
      additionalProperties: false
    ASC.Core.Tenants.TenantIndustry:
      oneOf:
        - enum:
            - Other
            - Accounting
            - AdvertisingMarketingPR
            - Banking
            - Consulting
            - Design
            - Education
            - Environment
            - FinancialServices
            - HealthCare
            - IT
            - Legal
            - Manufacturing
            - PublicSector
            - Publishing
            - RetailSales
            - Telecommunications
          type: string
          description: >-
            [Other - Other, Accounting - Accounting, AdvertisingMarketingPR -
            Advertising marketing PR, Banking - Banking, Consulting -
            Consulting, Design - Design, Education - Education, Environment -
            Environment, FinancialServices - Financial services, HealthCare -
            Health care, IT - IT, Legal - Legal, Manufacturing - Manufacturing,
            PublicSector - Public sector, Publishing - Publishing, RetailSales -
            Retail sales, Telecommunications - Telecommunications]
          example: Other
        - enum:
            - 0
            - 1
            - 2
            - 3
            - 4
            - 5
            - 6
            - 7
            - 8
            - 9
            - 10
            - 11
            - 12
            - 13
            - 14
            - 15
            - 16
          type: integer
          description: >-
            [0 - Other, 1 - Accounting, 2 - Advertising marketing PR, 3 -
            Banking, 4 - Consulting, 5 - Design, 6 - Education, 7 - Environment,
            8 - Financial services, 9 - Health care, 10 - IT, 11 - Legal, 12 -
            Manufacturing, 13 - Public sector, 14 - Publishing, 15 - Retail
            sales, 16 - Telecommunications]
          example: 0
    ASC.Core.Tenants.TenantQuota:
      type: object
      properties:
        tenantId:
          type: integer
          description: Tenant ID
          format: int32
          example: 1234
        name:
          type: string
          description: Name
          nullable: true
          example: Default
        price:
          type: number
          description: Price
          format: double
          example: 10
        priceCurrencySymbol:
          type: string
          description: Price currency symbol
          nullable: true
          example: some text
        productId:
          type: string
          description: Product ID
          nullable: true
          example: '9846'
        visible:
          type: boolean
          description: Specifies if the tenant quota is visible or not
          example: true
        features:
          type: string
          description: Tenant quota features
          nullable: true
          example: some text
        maxFileSize:
          type: integer
          description: Maximum file size
          format: int64
          example: 26214400
        maxTotalSize:
          type: integer
          description: Maximum total size
          format: int64
          example: 9223372036854776000
        countUser:
          type: integer
          description: Number of portal users
          format: int32
          example: 1234
        countRoomAdmin:
          type: integer
          description: Number of portal room administrators
          format: int32
          example: 1234
        usersInRoom:
          type: integer
          description: Number of room users
          format: int32
          example: 1234
        countRoom:
          type: integer
          description: Number of rooms
          format: int32
          example: 1234
        nonProfit:
          type: boolean
          description: Specifies if the tenant quota is nonprofit or not
          example: true
        trial:
          type: boolean
          description: Specifies if the tenant quota is trial or not
          example: true
        free:
          type: boolean
          description: Specifies if the tenant quota is free or not
          example: true
        update:
          type: boolean
          description: Specifies if the tenant quota is updated or not
          example: true
        audit:
          type: boolean
          description: Specifies if the audit trail is available or not
          example: true
        docsEdition:
          type: boolean
          description: Specifies if this tenant quota is Docs edition or not
          example: true
        ldap:
          type: boolean
          description: Specifies if the LDAP settings are available or not
          example: true
        sso:
          type: boolean
          description: Specifies if the SSO settings are available or not
          example: true
        statistic:
          type: boolean
          description: Specifies if the statistic settings are available or not
          example: true
        branding:
          type: boolean
          description: Specifies if the branding settings are available or not
          example: true
        customization:
          type: boolean
          description: Specifies if the customization settings are available or not
          example: true
        lifetime:
          type: boolean
          description: Specifies if the license is lifetime or not
          example: true
        custom:
          type: boolean
          description: Specifies if the custom domain URL is available or not
          example: true
        autoBackupRestore:
          type: boolean
          description: >-
            Specifies if the automatic Backup&Restore feature is available or
            not
          example: true
        oauth:
          type: boolean
          description: Specifies if Oauth is available or not
          example: true
        contentSearch:
          type: boolean
          description: Specifies if the content search is available or not
          example: true
        thirdParty:
          type: boolean
          description: Specifies if the third-party accounts linking is available or not
          example: true
      additionalProperties: false
    ASC.Core.Tenants.TenantQuotaSettings:
      type: object
      properties:
        enableQuota:
          type: boolean
          description: Specifies if the quota is enabled or not
          example: true
        quota:
          type: integer
          description: Quota
          format: int64
          example: 1234
        lastRecalculateDate:
          type: string
          description: Date of the last quota recalculation
          format: date-time
          nullable: true
          example: '2008-04-10T06:30:00.0000000+04:00'
      additionalProperties: false
    ASC.Core.Tenants.TenantRoomQuotaSettings:
      type: object
      properties:
        enableQuota:
          type: boolean
          description: Specifies if the quota is enabled or not
          example: true
        defaultQuota:
          type: integer
          description: Default quota
          format: int64
          example: 1234
        lastRecalculateDate:
          type: string
          description: Date of the last quota recalculation
          format: date-time
          nullable: true
          example: '2008-04-10T06:30:00.0000000+04:00'
      additionalProperties: false
    ASC.Core.Tenants.TenantStatus:
      oneOf:
        - enum:
            - Active
            - Suspended
            - RemovePending
            - Transfering
            - Restoring
            - Migrating
            - Encryption
          type: string
          description: >-
            [Active - Active, Suspended - Suspended, RemovePending - Remove
            pending, Transfering - Transfering, Restoring - Restoring, Migrating
            - Migrating, Encryption - Encryption]
          example: Active
        - enum:
            - 0
            - 1
            - 2
            - 3
            - 4
            - 5
            - 6
          type: integer
          description: >-
            [0 - Active, 1 - Suspended, 2 - Remove pending, 3 - Transfering, 4 -
            Restoring, 5 - Migrating, 6 - Encryption]
          example: 0
    ASC.Core.Tenants.TenantTrustedDomainsType:
      oneOf:
        - enum:
            - None
            - Custom
            - All
          type: string
          description: '[None - None, Custom - Custom, All - All]'
          example: None
        - enum:
            - 0
            - 1
            - 2
          type: integer
          description: '[0 - None, 1 - Custom, 2 - All]'
          example: 0
    ASC.Core.Users.EmployeeActivationStatus:
      oneOf:
        - enum:
            - NotActivated
            - Activated
            - Pending
            - AutoGenerated
          type: string
          description: >-
            [NotActivated - Not activated, Activated - Activated, Pending -
            Pending, AutoGenerated - Auto generated]
          example: NotActivated
        - enum:
            - 0
            - 1
            - 2
            - 4
          type: integer
          description: '[0 - Not activated, 1 - Activated, 2 - Pending, 4 - Auto generated]'
          example: 0
    ASC.Core.Users.EmployeeStatus:
      oneOf:
        - enum:
            - Active
            - Terminated
            - Pending
            - Default
            - All
          type: string
          description: >-
            [Active - Active, Terminated - Terminated, Pending - Pending,
            Default - Default, All - All]
          example: Active
        - enum:
            - 1
            - 2
            - 4
            - 5
            - 7
          type: integer
          description: '[1 - Active, 2 - Terminated, 4 - Pending, 5 - Default, 7 - All]'
          example: 1
    ASC.Core.Users.EmployeeType:
      oneOf:
        - enum:
            - All
            - RoomAdmin
            - Guest
            - DocSpaceAdmin
            - User
          type: string
          description: >-
            [All - All, RoomAdmin - Room admin, Guest - Guest, DocSpaceAdmin -
            DocSpace admin, User - User]
          example: All
        - enum:
            - 0
            - 1
            - 2
            - 3
            - 4
          type: integer
          description: '[0 - All, 1 - Room admin, 2 - Guest, 3 - DocSpace admin, 4 - User]'
          example: 0
    ASC.Core.Users.MobilePhoneActivationStatus:
      oneOf:
        - enum:
            - NotActivated
            - Activated
          type: string
          description: '[NotActivated - Not activated, Activated - Activated]'
          example: NotActivated
        - enum:
            - 0
            - 1
          type: integer
          description: '[0 - Not activated, 1 - Activated]'
          example: 0
    ASC.Core.Users.UserInfo:
      type: object
      properties:
        id:
          type: string
          description: ID
          format: uuid
          example: aae1e103-bca5-9fa1-ba8c-42058b4abf28
        firstName:
          type: string
          description: First name
          nullable: true
          example: Winfield
        lastName:
          type: string
          description: Last name
          nullable: true
          example: Wyman
        userName:
          type: string
          description: Username
          nullable: true
          example: some text
        birthDate:
          type: string
          description: Birthday
          format: date-time
          nullable: true
          example: '2008-04-10T06:30:00.0000000+04:00'
        sex:
          type: boolean
          description: Sex (male or female)
          nullable: true
          example: true
        status:
          $ref: '#/components/schemas/ASC.Core.Users.EmployeeStatus'
        activationStatus:
          $ref: '#/components/schemas/ASC.Core.Users.EmployeeActivationStatus'
        terminatedDate:
          type: string
          description: The date and time when the user account was terminated
          format: date-time
          nullable: true
          example: '2008-04-10T06:30:00.0000000+04:00'
        title:
          type: string
          description: Title
          nullable: true
          example: legacy_1080p_small_wooden_mouse
        workFromDate:
          type: string
          description: Registration date
          format: date-time
          nullable: true
          example: '2008-04-10T06:30:00.0000000+04:00'
        email:
          type: string
          description: Email
          format: email
          nullable: true
          example: Sydney_Roberts4@hotmail.com
        contacts:
          type: string
          description: List of contacts in the string format
          nullable: true
          example: some text
        contactsList:
          type: array
          items:
            type: string
          description: List of contacts
          nullable: true
          example:
            - some text
        location:
          type: string
          description: Location
          nullable: true
          example: 001 Schroeder Run, New Tabithaport, Colombia
        notes:
          type: string
          description: Notes
          nullable: true
          example: some text
        removed:
          type: boolean
          description: Specifies if the user account was removed or not
          example: true
        lastModified:
          type: string
          description: Last modified date
          format: date-time
          example: '2008-04-10T06:30:00.0000000+04:00'
        tenantId:
          type: integer
          description: Tenant ID
          format: int32
          example: 1234
        isActive:
          type: boolean
          description: Spceifies if the user is active or not
          readOnly: true
          example: true
        cultureName:
          type: string
          description: Language
          nullable: true
          example: some text
        mobilePhone:
          type: string
          description: Mobile phone
          nullable: true
          example: some text
        mobilePhoneActivationStatus:
          $ref: '#/components/schemas/ASC.Core.Users.MobilePhoneActivationStatus'
        sid:
          type: string
          description: LDAP user identificator
          nullable: true
          example: some text
        ldapQouta:
          type: integer
          description: LDAP user quota attribute
          format: int64
          example: 1234
        ssoNameId:
          type: string
          description: SSO SAML user identificator
          nullable: true
          example: some text
        ssoSessionId:
          type: string
          description: SSO SAML user session identificator
          nullable: true
          example: some text
        createDate:
          type: string
          description: Creation date
          format: date-time
          example: '2008-04-10T06:30:00.0000000+04:00'
        createdBy:
          type: string
          format: uuid
          nullable: true
          example: 75a5f745-f697-4418-b38d-0fe0d277e258
        spam:
          type: boolean
          nullable: true
          example: true
        checkActivation:
          type: boolean
          readOnly: true
          example: true
      additionalProperties: false
    ASC.Data.Storage.Configuration.CdnStorageSettings:
      type: object
      properties:
        module:
          type: string
          nullable: true
          example: some text
        props:
          type: object
          additionalProperties:
            type: string
            nullable: true
          nullable: true
          example:
            - key: some text
              value: some text
      additionalProperties: false
    ASC.Data.Storage.Configuration.StorageSettings:
      type: object
      properties:
        module:
          type: string
          nullable: true
          example: some text
        props:
          type: object
          additionalProperties:
            type: string
            nullable: true
          nullable: true
          example:
            - key: some text
              value: some text
      additionalProperties: false
    ASC.IPSecurity.IPRestriction:
      type: object
      properties:
        ip:
          type: string
          nullable: true
          example: some text
        forAdmin:
          type: boolean
          example: true
        id:
          type: integer
          format: int32
          example: 9846
        tenantId:
          type: integer
          format: int32
          example: 1234
      additionalProperties: false
    ASC.IPSecurity.IPRestrictionsSettings:
      type: object
      properties:
        enable:
          type: boolean
          example: true
      additionalProperties: false
    ASC.IPSecurity.IpRestrictionBase:
      type: object
      properties:
        ip:
          type: string
          nullable: true
          example: some text
        forAdmin:
          type: boolean
          example: true
      additionalProperties: false
    ASC.MessagingSystem.Core.MessageAction:
      oneOf:
        - enum:
            - LoginSuccess
            - LoginSuccessViaSocialAccount
            - LoginFailInvalidCombination
            - LoginFailSocialAccountNotFound
            - LoginFailDisabledProfile
            - LoginFail
            - Logout
            - LoginSuccessViaSms
            - LoginFailViaSms
            - LoginFailIpSecurity
            - LoginSuccessViaApi
            - LoginSuccessViaSocialApp
            - LoginSuccessViaApiSms
            - LoginFailViaApi
            - LoginFailViaApiSms
            - LoginSuccessViaSSO
            - SessionStarted
            - SessionCompleted
            - LoginFailViaSSO
            - LoginSuccessViaApiSocialAccount
            - LoginFailViaApiSocialAccount
            - LoginSuccesViaTfaApp
            - LoginFailViaTfaApp
            - LoginFailBruteForce
            - LoginSuccessViaApiTfa
            - LoginFailViaApiTfa
            - LoginFailRecaptcha
            - UserCreated
            - GuestCreated
            - UserCreatedViaInvite
            - GuestCreatedViaInvite
            - UserActivated
            - GuestActivated
            - UserUpdated
            - UserUpdatedLanguage
            - UserAddedAvatar
            - UserDeletedAvatar
            - UserUpdatedAvatarThumbnails
            - UserLinkedSocialAccount
            - UserUnlinkedSocialAccount
            - UserSentActivationInstructions
            - UserSentEmailChangeInstructions
            - UserSentPasswordChangeInstructions
            - UserSentDeleteInstructions
            - UserUpdatedPassword
            - UserDeleted
            - UsersUpdatedType
            - UsersUpdatedStatus
            - UsersSentActivationInstructions
            - UsersDeleted
            - SentInviteInstructions
            - UserImported
            - GuestImported
            - GroupCreated
            - GroupUpdated
            - GroupDeleted
            - UserUpdatedMobileNumber
            - UserDataReassigns
            - UserDataRemoving
            - UserConnectedTfaApp
            - UserDisconnectedTfaApp
            - UserLogoutActiveConnections
            - UserLogoutActiveConnection
            - UserLogoutActiveConnectionsForUser
            - SendJoinInvite
            - FileCreated
            - FileRenamed
            - FileUpdated
            - FileCreatedVersion
            - FileDeletedVersion
            - FileUpdatedRevisionComment
            - FileLocked
            - FileUnlocked
            - FileUpdatedAccess
            - FileDownloaded
            - FileDownloadedAs
            - FileUploaded
            - FileImported
            - FileCopied
            - FileCopiedWithOverwriting
            - FileMoved
            - FileMovedWithOverwriting
            - FileMovedToTrash
            - FileDeleted
            - FolderCreated
            - FolderRenamed
            - FolderUpdatedAccess
            - FolderCopied
            - FolderCopiedWithOverwriting
            - FolderMoved
            - FolderMovedWithOverwriting
            - FolderMovedToTrash
            - FolderDeleted
            - ThirdPartyCreated
            - ThirdPartyUpdated
            - ThirdPartyDeleted
            - DocumentsThirdPartySettingsUpdated
            - DocumentsOverwritingSettingsUpdated
            - DocumentsUploadingFormatsSettingsUpdated
            - UserFileUpdated
            - FileConverted
            - FileSendAccessLink
            - DocumentServiceLocationSetting
            - AuthorizationKeysSetting
            - FullTextSearchSetting
            - StartTransferSetting
            - StartBackupSetting
            - LicenseKeyUploaded
            - FileChangeOwner
            - FileRestoreVersion
            - DocumentSendToSign
            - DocumentSignComplete
            - UserUpdatedEmail
            - DocumentsStoreForcesave
            - DocumentsForcesave
            - StartStorageEncryption
            - PrivacyRoomEnable
            - PrivacyRoomDisable
            - StartStorageDecryption
            - FileOpenedForChange
            - FileMarkedAsFavorite
            - FileRemovedFromFavorite
            - FolderDownloaded
            - FileRemovedFromList
            - FolderRemovedFromList
            - FileExternalLinkAccessUpdated
            - TrashEmptied
            - FileRevisionDownloaded
            - FileMarkedAsRead
            - FileReaded
            - FolderMarkedAsRead
            - FolderUpdatedAccessFor
            - FileUpdatedAccessFor
            - DocumentsExternalShareSettingsUpdated
            - RoomCreated
            - RoomRenamed
            - RoomArchived
            - RoomUnarchived
            - RoomDeleted
            - RoomUpdateAccessForUser
            - TagCreated
            - TagsDeleted
            - AddedRoomTags
            - DeletedRoomTags
            - RoomLogoCreated
            - RoomLogoDeleted
            - RoomInvitationLinkUpdated
            - DocumentsKeepNewFileNameSettingsUpdated
            - RoomRemoveUser
            - RoomCreateUser
            - RoomInvitationLinkCreated
            - RoomInvitationLinkDeleted
            - RoomExternalLinkCreated
            - RoomExternalLinkUpdated
            - RoomExternalLinkDeleted
            - FileExternalLinkCreated
            - FileExternalLinkUpdated
            - FileExternalLinkDeleted
            - RoomGroupAdded
            - RoomUpdateAccessForGroup
            - RoomGroupRemove
            - RoomExternalLinkRevoked
            - RoomExternalLinkRenamed
            - FileUploadedWithOverwriting
            - RoomCopied
            - DocumentsDisplayFileExtensionUpdated
            - RoomColorChanged
            - RoomCoverChanged
            - RoomIndexingChanged
            - RoomDenyDownloadChanged
            - RoomIndexExportSaved
            - FolderIndexChanged
            - FolderIndexReordered
            - RoomDenyDownloadEnabled
            - RoomDenyDownloadDisabled
            - FileIndexChanged
            - RoomWatermarkSet
            - RoomWatermarkDisabled
            - RoomIndexingEnabled
            - RoomIndexingDisabled
            - RoomLifeTimeSet
            - RoomLifeTimeDisabled
            - RoomInviteResend
            - LanguageSettingsUpdated
            - TimeZoneSettingsUpdated
            - DnsSettingsUpdated
            - TrustedMailDomainSettingsUpdated
            - PasswordStrengthSettingsUpdated
            - TwoFactorAuthenticationSettingsUpdated
            - AdministratorMessageSettingsUpdated
            - DefaultStartPageSettingsUpdated
            - ProductsListUpdated
            - AdministratorAdded
            - AdministratorOpenedFullAccess
            - AdministratorDeleted
            - UsersOpenedProductAccess
            - GroupsOpenedProductAccess
            - ProductAccessOpened
            - ProductAccessRestricted
            - ProductAddedAdministrator
            - ProductDeletedAdministrator
            - GreetingSettingsUpdated
            - TeamTemplateChanged
            - ColorThemeChanged
            - OwnerSentChangeOwnerInstructions
            - OwnerUpdated
            - OwnerSentPortalDeactivationInstructions
            - OwnerSentPortalDeleteInstructions
            - PortalDeactivated
            - PortalDeleted
            - LoginHistoryReportDownloaded
            - AuditTrailReportDownloaded
            - SSOEnabled
            - SSODisabled
            - PortalAccessSettingsUpdated
            - CookieSettingsUpdated
            - MailServiceSettingsUpdated
            - CustomNavigationSettingsUpdated
            - AuditSettingsUpdated
            - TwoFactorAuthenticationDisabled
            - TwoFactorAuthenticationEnabledBySms
            - TwoFactorAuthenticationEnabledByTfaApp
            - PortalRenamed
            - QuotaPerRoomChanged
            - QuotaPerRoomDisabled
            - QuotaPerUserChanged
            - QuotaPerUserDisabled
            - QuotaPerPortalChanged
            - QuotaPerPortalDisabled
            - FormSubmit
            - FormOpenedForFilling
            - CustomQuotaPerRoomDefault
            - CustomQuotaPerRoomChanged
            - CustomQuotaPerRoomDisabled
            - CustomQuotaPerUserDefault
            - CustomQuotaPerUserChanged
            - CustomQuotaPerUserDisabled
            - ContactAdminMailSent
            - RoomInviteLinkUsed
            - UserCreatedAndAddedToRoom
            - GuestCreatedAndAddedToRoom
            - ContactSalesMailSent
            - CreateClient
            - UpdateClient
            - RegenerateSecret
            - DeleteClient
            - ChangeClientActivation
            - ChangeClientVisibility
            - RevokeUserClient
            - GenerateAuthorizationCodeToken
            - GeneratePersonalAccessToken
            - None
          type: string
          description: >-
            [LoginSuccess - Login success, LoginSuccessViaSocialAccount - Login
            success via social account, LoginFailInvalidCombination - Login fail
            invalid combination, LoginFailSocialAccountNotFound - Login fail
            social account not found, LoginFailDisabledProfile - Login fail
            disabled profile, LoginFail - Login fail, Logout - Logout,
            LoginSuccessViaSms - Login success via sms, LoginFailViaSms - Login
            fail via sms, LoginFailIpSecurity - Login fail ip security,
            LoginSuccessViaApi - Login success via api, LoginSuccessViaSocialApp
            - Login success via social app, LoginSuccessViaApiSms - Login
            success via api sms, LoginFailViaApi - Login fail via api,
            LoginFailViaApiSms - Login fail via api sms, LoginSuccessViaSSO -
            Login success via SSO, SessionStarted - Session started,
            SessionCompleted - Session completed, LoginFailViaSSO - Login fail
            via SSO, LoginSuccessViaApiSocialAccount - Login success via api
            social account, LoginFailViaApiSocialAccount - Login fail via api
            social account, LoginSuccesViaTfaApp - Login succes via tfa app,
            LoginFailViaTfaApp - Login fail via Tfa app, LoginFailBruteForce -
            Login fail brute force, LoginSuccessViaApiTfa - Login success via
            api tfa, LoginFailViaApiTfa - Login fail via api tfa,
            LoginFailRecaptcha - Login fail recaptcha, UserCreated - User
            created, GuestCreated - Guest created, UserCreatedViaInvite - User
            created via invite, GuestCreatedViaInvite - Guest created via
            invite, UserActivated - User activated, GuestActivated - Guest
            activated, UserUpdated - User updated, UserUpdatedLanguage - User
            updated language, UserAddedAvatar - User added avatar,
            UserDeletedAvatar - User deleted avatar, UserUpdatedAvatarThumbnails
            - User updated avatar thumbnails, UserLinkedSocialAccount - User
            linked social account, UserUnlinkedSocialAccount - User unlinked
            social account, UserSentActivationInstructions - User sent
            activation instructions, UserSentEmailChangeInstructions - User sent
            email change instructions, UserSentPasswordChangeInstructions - User
            sent password change instructions, UserSentDeleteInstructions - User
            sent delete instructions, UserUpdatedPassword - User updated
            password, UserDeleted - User deleted, UsersUpdatedType - Users
            updated type, UsersUpdatedStatus - Users updated status,
            UsersSentActivationInstructions - Users sent activation
            instructions, UsersDeleted - Users deleted, SentInviteInstructions -
            Sent invite instructions, UserImported - User imported,
            GuestImported - Guest imported, GroupCreated - Group created,
            GroupUpdated - Group updated, GroupDeleted - Group deleted,
            UserUpdatedMobileNumber - User updated mobile number,
            UserDataReassigns - User data reassigns, UserDataRemoving - User
            data removing, UserConnectedTfaApp - User connected tfa app,
            UserDisconnectedTfaApp - User disconnected tfa app,
            UserLogoutActiveConnections - User logout active connections,
            UserLogoutActiveConnection - User logout active connection,
            UserLogoutActiveConnectionsForUser - User logout active connections
            for user, SendJoinInvite - Send join invite, FileCreated - File
            created, FileRenamed - File renamed, FileUpdated - File updated,
            FileCreatedVersion - File created version, FileDeletedVersion - File
            deleted version, FileUpdatedRevisionComment - File updated revision
            comment, FileLocked - File locked, FileUnlocked - File unlocked,
            FileUpdatedAccess - File updated access, FileDownloaded - File
            downloaded, FileDownloadedAs - File downloaded as, FileUploaded -
            File uploaded, FileImported - File imported, FileCopied - File
            copied, FileCopiedWithOverwriting - File copied with overwriting,
            FileMoved - File moved, FileMovedWithOverwriting - File moved with
            overwriting, FileMovedToTrash - File moved to trash, FileDeleted -
            File deleted, FolderCreated - Folder created, FolderRenamed - Folder
            renamed, FolderUpdatedAccess - Folder updated access, FolderCopied -
            Folder copied, FolderCopiedWithOverwriting - Folder copied with
            overwriting, FolderMoved - Folder moved, FolderMovedWithOverwriting
            - Folder moved with overwriting, FolderMovedToTrash - Folder moved
            to trash, FolderDeleted - Folder deleted, ThirdPartyCreated -
            ThirdParty created, ThirdPartyUpdated - ThirdParty updated,
            ThirdPartyDeleted - ThirdParty deleted,
            DocumentsThirdPartySettingsUpdated - Documents ThirdParty settings
            updated, DocumentsOverwritingSettingsUpdated - Documents overwriting
            settings updated, DocumentsUploadingFormatsSettingsUpdated -
            Documents uploading formats settings updated, UserFileUpdated - User
            file updated, FileConverted - File converted, FileSendAccessLink -
            File send access link, DocumentServiceLocationSetting - Document
            service location setting, AuthorizationKeysSetting - Authorization
            keys setting, FullTextSearchSetting - Full text search setting,
            StartTransferSetting - Start transfer setting, StartBackupSetting -
            Start backup setting, LicenseKeyUploaded - License key uploaded,
            FileChangeOwner - File change owner, FileRestoreVersion - File
            restore version, DocumentSendToSign - Document send to sign,
            DocumentSignComplete - Document sign complete, UserUpdatedEmail -
            User updated email, DocumentsStoreForcesave - Documents store
            forcesave, DocumentsForcesave - Documents forcesave,
            StartStorageEncryption - Start storage encryption, PrivacyRoomEnable
            - Privacy room enable, PrivacyRoomDisable - Privacy room disable,
            StartStorageDecryption - Start storage decryption,
            FileOpenedForChange - File opened for change, FileMarkedAsFavorite -
            File marked as favorite, FileRemovedFromFavorite - File removed from
            favorite, FolderDownloaded - Folder downloaded, FileRemovedFromList
            - File removed from list, FolderRemovedFromList - Folder removed
            from list, FileExternalLinkAccessUpdated - File external link access
            updated, TrashEmptied - Trash emptied, FileRevisionDownloaded - File
            revision downloaded, FileMarkedAsRead - File marked as read,
            FileReaded - File readed, FolderMarkedAsRead - Folder marked as
            read, FolderUpdatedAccessFor - Folder updated access for,
            FileUpdatedAccessFor - File updated access for,
            DocumentsExternalShareSettingsUpdated - Documents external share
            settings updated, RoomCreated - Room created, RoomRenamed - Room
            renamed, RoomArchived - Room archived, RoomUnarchived - Room
            unarchived, RoomDeleted - Room deleted, RoomUpdateAccessForUser -
            Room update access for user, TagCreated - Tag created, TagsDeleted -
            Tags deleted, AddedRoomTags - Added room tags, DeletedRoomTags -
            Deleted room tags, RoomLogoCreated - Room logo created,
            RoomLogoDeleted - Room logo deleted, RoomInvitationLinkUpdated -
            Room invitation link updated,
            DocumentsKeepNewFileNameSettingsUpdated - Documents keep new file
            name settings updated, RoomRemoveUser - Room remove user,
            RoomCreateUser - Room create user, RoomInvitationLinkCreated - Room
            invitation link created, RoomInvitationLinkDeleted - Room invitation
            link deleted, RoomExternalLinkCreated - Room external link created,
            RoomExternalLinkUpdated - Room external link updated,
            RoomExternalLinkDeleted - Room external link deleted,
            FileExternalLinkCreated - File external link created,
            FileExternalLinkUpdated - File external link updated,
            FileExternalLinkDeleted - File external link deleted, RoomGroupAdded
            - Room group added, RoomUpdateAccessForGroup - Room update access
            for group, RoomGroupRemove - Room group remove,
            RoomExternalLinkRevoked - Room external link revoked,
            RoomExternalLinkRenamed - Room external link renamed,
            FileUploadedWithOverwriting - File uploaded with overwriting,
            RoomCopied - Room copied, DocumentsDisplayFileExtensionUpdated -
            Documents display file extension updated, RoomColorChanged - Room
            color changed, RoomCoverChanged - Room cover changed,
            RoomIndexingChanged - Room indexing changed, RoomDenyDownloadChanged
            - Room deny download changed, RoomIndexExportSaved - Room index
            export saved, FolderIndexChanged - Folder index changed,
            FolderIndexReordered - Folder index reordered,
            RoomDenyDownloadEnabled - Room deny download enabled,
            RoomDenyDownloadDisabled - Room deny download disabled,
            FileIndexChanged - File index changed, RoomWatermarkSet - Room
            watermark set, RoomWatermarkDisabled - Room watermark disabled,
            RoomIndexingEnabled - Room index export saved, RoomIndexingDisabled
            - Room indexing disabled, RoomLifeTimeSet - Room life time set,
            RoomLifeTimeDisabled - Room life time disabled, RoomInviteResend -
            Room invite resend, LanguageSettingsUpdated - Language settings
            updated, TimeZoneSettingsUpdated - Time zone settings updated,
            DnsSettingsUpdated - Dns settings updated,
            TrustedMailDomainSettingsUpdated - Trusted mail domain settings
            updated, PasswordStrengthSettingsUpdated - Password strength
            settings updated, TwoFactorAuthenticationSettingsUpdated - Two
            factor authentication settings updated,
            AdministratorMessageSettingsUpdated - Administrator message settings
            updated, DefaultStartPageSettingsUpdated - Default start page
            settings updated, ProductsListUpdated - Products list updated,
            AdministratorAdded - Administrator added,
            AdministratorOpenedFullAccess - Administrator opened full access,
            AdministratorDeleted - Administrator deleted,
            UsersOpenedProductAccess - Users opened product access,
            GroupsOpenedProductAccess - Groups opened product access,
            ProductAccessOpened - Product access opened, ProductAccessRestricted
            - Product access restricted, ProductAddedAdministrator - Product
            added administrator, ProductDeletedAdministrator - Product deleted
            administrator, GreetingSettingsUpdated - Greeting settings updated,
            TeamTemplateChanged - Team template changed, ColorThemeChanged -
            Color theme changed, OwnerSentChangeOwnerInstructions - Owner sent
            change owner instructions, OwnerUpdated - Owner updated,
            OwnerSentPortalDeactivationInstructions - Owner sent portal
            deactivation instructions, OwnerSentPortalDeleteInstructions - Owner
            sent portal delete instructions, PortalDeactivated - Portal
            deactivated, PortalDeleted - Portal deleted,
            LoginHistoryReportDownloaded - Login history report downloaded,
            AuditTrailReportDownloaded - Audit trail report downloaded,
            SSOEnabled - SSO enabled, SSODisabled - SSO disabled,
            PortalAccessSettingsUpdated - Portal access settings updated,
            CookieSettingsUpdated - Cookie settings updated,
            MailServiceSettingsUpdated - Mail service settings updated,
            CustomNavigationSettingsUpdated - Custom navigation settings
            updated, AuditSettingsUpdated - Audit settings updated,
            TwoFactorAuthenticationDisabled - Two factor authentication
            disabled, TwoFactorAuthenticationEnabledBySms - Two factor
            authentication enabled by sms,
            TwoFactorAuthenticationEnabledByTfaApp - Two factor authentication
            enabled by tfa app, PortalRenamed - Portal renamed,
            QuotaPerRoomChanged - Quota per room changed, QuotaPerRoomDisabled -
            Quota per room disabled, QuotaPerUserChanged - Quota per user
            changed, QuotaPerUserDisabled - Quota per user disabled,
            QuotaPerPortalChanged - Quota per portal changed,
            QuotaPerPortalDisabled - Quota per portal disabled, FormSubmit -
            Form submit, FormOpenedForFilling - Form opened for filling,
            CustomQuotaPerRoomDefault - Custom quota per room default,
            CustomQuotaPerRoomChanged - Custom quota per room changed,
            CustomQuotaPerRoomDisabled - Custom quota per room disabled,
            CustomQuotaPerUserDefault - Custom quota per user default,
            CustomQuotaPerUserChanged - Custom quota per user changed,
            CustomQuotaPerUserDisabled - Custom quota per user disabled,
            ContactAdminMailSent - Contact admin mail sent, RoomInviteLinkUsed -
            Room invite link used, UserCreatedAndAddedToRoom - User created and
            added to room, GuestCreatedAndAddedToRoom - Guest created and added
            to room, ContactSalesMailSent - Contact sales mail sent,
            CreateClient - Create client, UpdateClient - Update client,
            RegenerateSecret - Regenerate secret, DeleteClient - Delete client,
            ChangeClientActivation - Change client activation,
            ChangeClientVisibility - Change client visibility, RevokeUserClient
            - Revoke user client, GenerateAuthorizationCodeToken - Generate
            authorization code token, GeneratePersonalAccessToken - Generate
            personal access token, None - None]
          example: LoginSuccess
        - enum:
            - 1000
            - 1001
            - 1002
            - 1003
            - 1004
            - 1005
            - 1006
            - 1007
            - 1008
            - 1009
            - 1010
            - 1011
            - 1012
            - 1013
            - 1014
            - 1015
            - 1016
            - 1017
            - 1018
            - 1019
            - 1020
            - 1021
            - 1022
            - 1023
            - 1024
            - 1025
            - 1026
            - 4000
            - 4001
            - 4002
            - 4003
            - 4004
            - 4005
            - 4006
            - 4007
            - 4008
            - 4009
            - 4010
            - 4011
            - 4012
            - 4013
            - 4014
            - 4015
            - 4016
            - 4017
            - 4018
            - 4019
            - 4020
            - 4021
            - 4022
            - 4023
            - 4024
            - 4025
            - 4026
            - 4027
            - 4028
            - 4029
            - 4030
            - 4031
            - 4032
            - 4033
            - 4034
            - 4035
            - 4036
            - 4037
            - 5000
            - 5001
            - 5002
            - 5003
            - 5004
            - 5005
            - 5006
            - 5007
            - 5008
            - 5009
            - 5010
            - 5011
            - 5012
            - 5013
            - 5014
            - 5015
            - 5016
            - 5017
            - 5018
            - 5019
            - 5020
            - 5021
            - 5022
            - 5023
            - 5024
            - 5025
            - 5026
            - 5027
            - 5028
            - 5029
            - 5030
            - 5031
            - 5032
            - 5033
            - 5034
            - 5035
            - 5036
            - 5037
            - 5038
            - 5039
            - 5040
            - 5041
            - 5042
            - 5043
            - 5044
            - 5045
            - 5046
            - 5047
            - 5048
            - 5049
            - 5050
            - 5051
            - 5052
            - 5053
            - 5054
            - 5055
            - 5056
            - 5057
            - 5058
            - 5059
            - 5060
            - 5061
            - 5062
            - 5063
            - 5064
            - 5065
            - 5066
            - 5068
            - 5069
            - 5070
            - 5071
            - 5072
            - 5073
            - 5074
            - 5075
            - 5076
            - 5077
            - 5078
            - 5079
            - 5080
            - 5081
            - 5082
            - 5083
            - 5084
            - 5085
            - 5086
            - 5087
            - 5088
            - 5089
            - 5090
            - 5091
            - 5092
            - 5093
            - 5094
            - 5095
            - 5096
            - 5097
            - 5098
            - 5099
            - 5100
            - 5101
            - 5102
            - 5103
            - 5104
            - 5105
            - 5106
            - 5107
            - 5108
            - 5109
            - 5110
            - 5111
            - 5112
            - 5113
            - 5114
            - 5115
            - 5116
            - 5117
            - 5118
            - 6000
            - 6001
            - 6002
            - 6003
            - 6004
            - 6005
            - 6006
            - 6007
            - 6008
            - 6009
            - 6010
            - 6011
            - 6012
            - 6013
            - 6014
            - 6015
            - 6016
            - 6017
            - 6018
            - 6019
            - 6020
            - 6021
            - 6022
            - 6023
            - 6024
            - 6025
            - 6026
            - 6027
            - 6028
            - 6029
            - 6030
            - 6031
            - 6032
            - 6033
            - 6034
            - 6035
            - 6036
            - 6037
            - 6038
            - 6039
            - 6040
            - 6041
            - 6042
            - 6043
            - 6044
            - 6045
            - 6046
            - 6047
            - 6048
            - 6049
            - 6050
            - 6051
            - 6052
            - 6053
            - 7000
            - 7001
            - 7002
            - 7003
            - 7004
            - 9901
            - 9902
            - 9903
            - 9904
            - 9905
            - 9906
            - 9907
            - 9908
            - 9909
            - -1
          type: integer
          description: >-
            [1000 - Login success, 1001 - Login success via social account, 1002
            - Login fail invalid combination, 1003 - Login fail social account
            not found, 1004 - Login fail disabled profile, 1005 - Login fail,
            1006 - Logout, 1007 - Login success via sms, 1008 - Login fail via
            sms, 1009 - Login fail ip security, 1010 - Login success via api,
            1011 - Login success via social app, 1012 - Login success via api
            sms, 1013 - Login fail via api, 1014 - Login fail via api sms, 1015
            - Login success via SSO, 1016 - Session started, 1017 - Session
            completed, 1018 - Login fail via SSO, 1019 - Login success via api
            social account, 1020 - Login fail via api social account, 1021 -
            Login succes via tfa app, 1022 - Login fail via Tfa app, 1023 -
            Login fail brute force, 1024 - Login success via api tfa, 1025 -
            Login fail via api tfa, 1026 - Login fail recaptcha, 4000 - User
            created, 4001 - Guest created, 4002 - User created via invite, 4003
            - Guest created via invite, 4004 - User activated, 4005 - Guest
            activated, 4006 - User updated, 4007 - User updated language, 4008 -
            User added avatar, 4009 - User deleted avatar, 4010 - User updated
            avatar thumbnails, 4011 - User linked social account, 4012 - User
            unlinked social account, 4013 - User sent activation instructions,
            4014 - User sent email change instructions, 4015 - User sent
            password change instructions, 4016 - User sent delete instructions,
            4017 - User updated password, 4018 - User deleted, 4019 - Users
            updated type, 4020 - Users updated status, 4021 - Users sent
            activation instructions, 4022 - Users deleted, 4023 - Sent invite
            instructions, 4024 - User imported, 4025 - Guest imported, 4026 -
            Group created, 4027 - Group updated, 4028 - Group deleted, 4029 -
            User updated mobile number, 4030 - User data reassigns, 4031 - User
            data removing, 4032 - User connected tfa app, 4033 - User
            disconnected tfa app, 4034 - User logout active connections, 4035 -
            User logout active connection, 4036 - User logout active connections
            for user, 4037 - Send join invite, 5000 - File created, 5001 - File
            renamed, 5002 - File updated, 5003 - File created version, 5004 -
            File deleted version, 5005 - File updated revision comment, 5006 -
            File locked, 5007 - File unlocked, 5008 - File updated access, 5009
            - File downloaded, 5010 - File downloaded as, 5011 - File uploaded,
            5012 - File imported, 5013 - File copied, 5014 - File copied with
            overwriting, 5015 - File moved, 5016 - File moved with overwriting,
            5017 - File moved to trash, 5018 - File deleted, 5019 - Folder
            created, 5020 - Folder renamed, 5021 - Folder updated access, 5022 -
            Folder copied, 5023 - Folder copied with overwriting, 5024 - Folder
            moved, 5025 - Folder moved with overwriting, 5026 - Folder moved to
            trash, 5027 - Folder deleted, 5028 - ThirdParty created, 5029 -
            ThirdParty updated, 5030 - ThirdParty deleted, 5031 - Documents
            ThirdParty settings updated, 5032 - Documents overwriting settings
            updated, 5033 - Documents uploading formats settings updated, 5034 -
            User file updated, 5035 - File converted, 5036 - File send access
            link, 5037 - Document service location setting, 5038 - Authorization
            keys setting, 5039 - Full text search setting, 5040 - Start transfer
            setting, 5041 - Start backup setting, 5042 - License key uploaded,
            5043 - File change owner, 5044 - File restore version, 5045 -
            Document send to sign, 5046 - Document sign complete, 5047 - User
            updated email, 5048 - Documents store forcesave, 5049 - Documents
            forcesave, 5050 - Start storage encryption, 5051 - Privacy room
            enable, 5052 - Privacy room disable, 5053 - Start storage
            decryption, 5054 - File opened for change, 5055 - File marked as
            favorite, 5056 - File removed from favorite, 5057 - Folder
            downloaded, 5058 - File removed from list, 5059 - Folder removed
            from list, 5060 - File external link access updated, 5061 - Trash
            emptied, 5062 - File revision downloaded, 5063 - File marked as
            read, 5064 - File readed, 5065 - Folder marked as read, 5066 -
            Folder updated access for, 5068 - File updated access for, 5069 -
            Documents external share settings updated, 5070 - Room created, 5071
            - Room renamed, 5072 - Room archived, 5073 - Room unarchived, 5074 -
            Room deleted, 5075 - Room update access for user, 5076 - Tag
            created, 5077 - Tags deleted, 5078 - Added room tags, 5079 - Deleted
            room tags, 5080 - Room logo created, 5081 - Room logo deleted, 5082
            - Room invitation link updated, 5083 - Documents keep new file name
            settings updated, 5084 - Room remove user, 5085 - Room create user,
            5086 - Room invitation link created, 5087 - Room invitation link
            deleted, 5088 - Room external link created, 5089 - Room external
            link updated, 5090 - Room external link deleted, 5091 - File
            external link created, 5092 - File external link updated, 5093 -
            File external link deleted, 5094 - Room group added, 5095 - Room
            update access for group, 5096 - Room group remove, 5097 - Room
            external link revoked, 5098 - Room external link renamed, 5099 -
            File uploaded with overwriting, 5100 - Room copied, 5101 - Documents
            display file extension updated, 5102 - Room color changed, 5103 -
            Room cover changed, 5104 - Room indexing changed, 5105 - Room deny
            download changed, 5106 - Room index export saved, 5107 - Folder
            index changed, 5108 - Folder index reordered, 5109 - Room deny
            download enabled, 5110 - Room deny download disabled, 5111 - File
            index changed, 5112 - Room watermark set, 5113 - Room watermark
            disabled, 5114 - Room index export saved, 5115 - Room indexing
            disabled, 5116 - Room life time set, 5117 - Room life time disabled,
            5118 - Room invite resend, 6000 - Language settings updated, 6001 -
            Time zone settings updated, 6002 - Dns settings updated, 6003 -
            Trusted mail domain settings updated, 6004 - Password strength
            settings updated, 6005 - Two factor authentication settings updated,
            6006 - Administrator message settings updated, 6007 - Default start
            page settings updated, 6008 - Products list updated, 6009 -
            Administrator added, 6010 - Administrator opened full access, 6011 -
            Administrator deleted, 6012 - Users opened product access, 6013 -
            Groups opened product access, 6014 - Product access opened, 6015 -
            Product access restricted, 6016 - Product added administrator, 6017
            - Product deleted administrator, 6018 - Greeting settings updated,
            6019 - Team template changed, 6020 - Color theme changed, 6021 -
            Owner sent change owner instructions, 6022 - Owner updated, 6023 -
            Owner sent portal deactivation instructions, 6024 - Owner sent
            portal delete instructions, 6025 - Portal deactivated, 6026 - Portal
            deleted, 6027 - Login history report downloaded, 6028 - Audit trail
            report downloaded, 6029 - SSO enabled, 6030 - SSO disabled, 6031 -
            Portal access settings updated, 6032 - Cookie settings updated, 6033
            - Mail service settings updated, 6034 - Custom navigation settings
            updated, 6035 - Audit settings updated, 6036 - Two factor
            authentication disabled, 6037 - Two factor authentication enabled by
            sms, 6038 - Two factor authentication enabled by tfa app, 6039 -
            Portal renamed, 6040 - Quota per room changed, 6041 - Quota per room
            disabled, 6042 - Quota per user changed, 6043 - Quota per user
            disabled, 6044 - Quota per portal changed, 6045 - Quota per portal
            disabled, 6046 - Form submit, 6047 - Form opened for filling, 6048 -
            Custom quota per room default, 6049 - Custom quota per room changed,
            6050 - Custom quota per room disabled, 6051 - Custom quota per user
            default, 6052 - Custom quota per user changed, 6053 - Custom quota
            per user disabled, 7000 - Contact admin mail sent, 7001 - Room
            invite link used, 7002 - User created and added to room, 7003 -
            Guest created and added to room, 7004 - Contact sales mail sent,
            9901 - Create client, 9902 - Update client, 9903 - Regenerate
            secret, 9904 - Delete client, 9905 - Change client activation, 9906
            - Change client visibility, 9907 - Revoke user client, 9908 -
            Generate authorization code token, 9909 - Generate personal access
            token, -1 - None]
          example: 1000
    ASC.Migration.Core.Models.Api.MigratingApiFiles:
      type: object
      properties:
        foldersCount:
          type: integer
          format: int32
          example: 1234
        filesCount:
          type: integer
          format: int32
          example: 1234
        bytesTotal:
          type: integer
          format: int64
          example: 1234
      additionalProperties: false
    ASC.Migration.Core.Models.Api.MigratingApiGroup:
      type: object
      properties:
        shouldImport:
          type: boolean
          example: true
        groupName:
          type: string
          nullable: true
          example: some text
        moduleName:
          type: string
          nullable: true
          example: some text
        userUidList:
          type: array
          items:
            type: string
          nullable: true
          example:
            - some text
      additionalProperties: false
    ASC.Migration.Core.Models.Api.MigratingApiUser:
      type: object
      properties:
        shouldImport:
          type: boolean
          example: true
        key:
          type: string
          nullable: true
          example: some text
        email:
          type: string
          format: email
          nullable: true
          example: Sydney_Roberts4@hotmail.com
        displayName:
          type: string
          nullable: true
          example: some text
        firstName:
          type: string
          nullable: true
          example: Winfield
        lastName:
          type: string
          nullable: true
          example: Wyman
        userType:
          $ref: '#/components/schemas/ASC.Core.Users.EmployeeType'
        migratingFiles:
          $ref: '#/components/schemas/ASC.Migration.Core.Models.Api.MigratingApiFiles'
      additionalProperties: false
    ASC.Migration.Core.Models.Api.MigrationApiInfo:
      type: object
      properties:
        migratorName:
          type: string
          nullable: true
          example: some text
        operation:
          type: string
          nullable: true
          example: some text
        failedArchives:
          type: array
          items:
            type: string
          nullable: true
          example:
            - some text
        users:
          type: array
          items:
            $ref: >-
              #/components/schemas/ASC.Migration.Core.Models.Api.MigratingApiUser
          nullable: true
        withoutEmailUsers:
          type: array
          items:
            $ref: >-
              #/components/schemas/ASC.Migration.Core.Models.Api.MigratingApiUser
          nullable: true
        existUsers:
          type: array
          items:
            $ref: >-
              #/components/schemas/ASC.Migration.Core.Models.Api.MigratingApiUser
          nullable: true
        groups:
          type: array
          items:
            $ref: >-
              #/components/schemas/ASC.Migration.Core.Models.Api.MigratingApiGroup
          nullable: true
        importPersonalFiles:
          type: boolean
          example: true
        importSharedFiles:
          type: boolean
          example: true
        importSharedFolders:
          type: boolean
          example: true
        importCommonFiles:
          type: boolean
          example: true
        importProjectFiles:
          type: boolean
          example: true
        importGroups:
          type: boolean
          example: true
        successedUsers:
          type: integer
          format: int32
          example: 1234
        failedUsers:
          type: integer
          format: int32
          example: 1234
        files:
          type: array
          items:
            type: string
          nullable: true
          example:
            - some text
        errors:
          type: array
          items:
            type: string
          nullable: true
          example:
            - some text
      additionalProperties: false
    ASC.Security.Cryptography.EmailValidationKeyModel:
      type: object
      properties:
        key:
          type: string
          description: Key
          nullable: true
          example: some text
        emplType:
          $ref: '#/components/schemas/ASC.Core.Users.EmployeeType'
        email:
          type: string
          description: Email
          format: email
          nullable: true
          example: Sydney_Roberts4@hotmail.com
        uiD:
          type: string
          description: User ID
          format: uuid
          nullable: true
          example: 75a5f745-f697-4418-b38d-0fe0d277e258
        type:
          $ref: '#/components/schemas/ASC.Web.Studio.Utility.ConfirmType'
        first:
          type: string
          description: Access an account for the first time or not
          nullable: true
          example: some text
        roomId:
          type: string
          description: Room ID
          nullable: true
          example: '9846'
      additionalProperties: false
      description: Confirmation email parameters
    ASC.Security.Cryptography.EmailValidationKeyProvider_ValidationResult:
      oneOf:
        - enum:
            - Ok
            - Invalid
            - Expired
            - TariffLimit
            - UserExisted
            - UserExcluded
            - QuotaFailed
          type: string
          description: >-
            [Ok - Ok, Invalid - Invalid, Expired - Expired, TariffLimit - Tariff
            limit, UserExisted - User existed, UserExcluded - User excluded,
            QuotaFailed - Quota failed]
          example: Ok
        - enum:
            - 0
            - 1
            - 2
            - 3
            - 4
            - 5
            - 6
          type: integer
          description: >-
            [0 - Ok, 1 - Invalid, 2 - Expired, 3 - Tariff limit, 4 - User
            existed, 5 - User excluded, 6 - Quota failed]
          example: 0
    ASC.Security.Cryptography.PasswordHasher:
      type: object
      properties:
        size:
          type: integer
          format: int32
          readOnly: true
          example: 1234
        iterations:
          type: integer
          format: int32
          readOnly: true
          example: 1234
        salt:
          type: string
          nullable: true
          readOnly: true
          example: some text
      additionalProperties: false
    ASC.Web.Api.ApiModel.RequestsDto.AdminMessageBaseSettingsRequestsDto:
      type: object
      properties:
        email:
          maxLength: 255
          minLength: 0
          type: string
          description: Email
          format: email
          nullable: true
          example: Sydney_Roberts4@hotmail.com
        culture:
          type: string
          description: Culture
          nullable: true
          example: some text
      additionalProperties: false
      description: Request parameters for administrator message settings
    ASC.Web.Api.ApiModel.RequestsDto.AdminMessageSettingsRequestsDto:
      type: object
      properties:
        email:
          maxLength: 255
          minLength: 0
          type: string
          description: Email
          format: email
          nullable: true
          example: Sydney_Roberts4@hotmail.com
        culture:
          type: string
          description: Culture
          nullable: true
          example: some text
        message:
          maxLength: 255
          minLength: 0
          type: string
          description: Message
          nullable: true
          example: some text
      additionalProperties: false
      description: Request parameters for administrator message settings
    ASC.Web.Api.ApiModel.RequestsDto.AuthRequestsDto:
      type: object
      properties:
        userName:
          type: string
          description: Username / email
          nullable: true
          example: some text
        password:
          type: string
          description: Password
          nullable: true
          example: vfmf2vO1Kp
        passwordHash:
          type: string
          description: Password hash
          nullable: true
          example: some text
        provider:
          type: string
          description: Provider type
          nullable: true
          example: some text
        accessToken:
          type: string
          description: Provider access token
          nullable: true
          example: some text
        serializedProfile:
          type: string
          description: Serialized user profile
          nullable: true
          example: some text
        code:
          type: string
          description: Two-factor authentication code
          nullable: true
          example: some text
        codeOAuth:
          type: string
          description: Code for getting a token
          nullable: true
          example: some text
        session:
          type: boolean
          description: Session based authentication or not
          example: true
        confirmData:
          $ref: '#/components/schemas/ASC.Web.Api.ApiModel.RequestsDto.ConfirmData'
        recaptchaType:
          $ref: '#/components/schemas/ASC.Web.Core.RecaptchaType'
        recaptchaResponse:
          type: string
          description: reCAPTCHA response
          nullable: true
          example: some text
        culture:
          type: string
          description: Culture
          nullable: true
          example: some text
      additionalProperties: false
      description: Authentication request parameters
    ASC.Web.Api.ApiModel.RequestsDto.AuthServiceRequestsDto:
      type: object
      properties:
        name:
          type: string
          description: Name
          nullable: true
          example: Winfield Upton
        title:
          type: string
          description: Title
          nullable: true
          example: legacy_1080p_small_wooden_mouse
        description:
          type: string
          description: Description
          nullable: true
          example: some text
        instruction:
          type: string
          description: Instruction
          nullable: true
          example: some text
        canSet:
          type: boolean
          description: Specifies if the authentication service can be set or not
          example: true
        props:
          type: array
          items:
            $ref: >-
              #/components/schemas/ASC.Web.Studio.UserControls.Management.AuthKey
          description: List of authorization keys
          nullable: true
      additionalProperties: false
      description: Request parameters for authorization service
    ASC.Web.Api.ApiModel.RequestsDto.ConfirmData:
      type: object
      properties:
        email:
          type: string
          description: Email address
          format: email
          nullable: true
          example: Sydney_Roberts4@hotmail.com
        first:
          type: boolean
          description: Access an account for the first time or not
          nullable: true
          example: true
        key:
          type: string
          description: Key
          nullable: true
          example: some text
      additionalProperties: false
    ASC.Web.Api.ApiModel.RequestsDto.GreetingSettingsRequestsDto:
      type: object
      properties:
        title:
          maxLength: 255
          minLength: 0
          type: string
          description: Tenant name
          nullable: true
          example: legacy_1080p_small_wooden_mouse
      additionalProperties: false
      description: Greeting settings
    ASC.Web.Api.ApiModel.RequestsDto.IpRestrictionsDto:
      type: object
      properties:
        ipRestrictions:
          type: array
          items:
            $ref: '#/components/schemas/ASC.IPSecurity.IpRestrictionBase'
          description: List of IP addresses
          nullable: true
        enable:
          type: boolean
          description: Enables IP restrictions or not
          nullable: true
          example: true
      additionalProperties: false
      description: New IP restriction settings
    ASC.Web.Api.ApiModel.RequestsDto.LogoRequestsDto:
      type: object
      properties:
        light:
          type: string
          description: Light theme logo
          nullable: true
          example: some text
        dark:
          type: string
          description: Dark theme logo
          nullable: true
          example: some text
      additionalProperties: false
    ASC.Web.Api.ApiModel.RequestsDto.MailDomainSettingsRequestsDto:
      type: object
      properties:
        type:
          $ref: '#/components/schemas/ASC.Core.Tenants.TenantTrustedDomainsType'
        domains:
          type: array
          items:
            type: string
          description: List of trusted domains
          nullable: true
          example:
            - some text
        inviteUsersAsVisitors:
          type: boolean
          description: Invites as a user or not
          example: true
      additionalProperties: false
      description: Request parameters for mail domain settings
    ASC.Web.Api.ApiModel.RequestsDto.MobileRequestsDto:
      type: object
      properties:
        mobilePhone:
          type: string
          description: Mobile phone
          nullable: true
          example: some text
      additionalProperties: false
      description: Mobile phone request parameters
    ASC.Web.Api.ApiModel.RequestsDto.OwnerIdSettingsRequestDto:
      type: object
      properties:
        ownerId:
          type: string
          description: Owner ID
          format: uuid
          example: 75a5f745-f697-4418-b38d-0fe0d277e258
      additionalProperties: false
      description: Settings request parameters
    ASC.Web.Api.ApiModel.RequestsDto.QuotaSettingsRequestsDto:
      type: object
      properties:
        enableQuota:
          type: boolean
          description: Specifies if the quota settings are enabled or not
          example: true
        defaultQuota:
          oneOf:
            - type: integer
              example: 1234
            - type: string
              example: some text
          description: Default quota value
      additionalProperties: false
      description: Request parameters for the user quota settings
    ASC.Web.Api.ApiModel.RequestsDto.SchemaBaseRequestsDto:
      type: object
      properties:
        id:
          type: string
          description: Team template ID
          nullable: true
          example: '9846'
      additionalProperties: false
      description: Team template parameters
    ASC.Web.Api.ApiModel.RequestsDto.SchemaRequestsDto:
      type: object
      properties:
        id:
          type: string
          description: Team template ID
          nullable: true
          example: '9846'
        name:
          type: string
          description: Team template name
          nullable: true
          example: Winfield Upton
        userCaption:
          type: string
          description: User caption
          nullable: true
          example: some text
        usersCaption:
          type: string
          description: Users caption
          nullable: true
          example: some text
        groupCaption:
          type: string
          description: Group caption
          nullable: true
          example: some text
        groupsCaption:
          type: string
          description: Groups caption
          nullable: true
          example: some text
        userPostCaption:
          type: string
          description: User status caption
          nullable: true
          example: some text
        regDateCaption:
          type: string
          description: Registration date caption
          nullable: true
          example: some text
        groupHeadCaption:
          type: string
          description: Group lead caption
          nullable: true
          example: some text
        guestCaption:
          type: string
          description: Guest caption
          nullable: true
          example: some text
        guestsCaption:
          type: string
          description: Guests caption
          nullable: true
          example: some text
      additionalProperties: false
      description: Team template parameters
    ASC.Web.Api.ApiModel.RequestsDto.SecurityRequestsDto:
      type: object
      properties:
        productId:
          type: string
          description: Product ID
          format: uuid
          example: aae1e103-bca5-9fa1-ba8c-42058b4abf28
        userId:
          type: string
          description: User ID
          format: uuid
          example: aae1e103-bca5-9fa1-ba8c-42058b4abf28
        administrator:
          type: boolean
          description: Administrator or not
          example: true
      additionalProperties: false
      description: Security request parameters
    ASC.Web.Api.ApiModel.RequestsDto.ShortenLinkRequestsDto:
      type: object
      properties:
        link:
          type: string
          description: Link
          nullable: true
          example: some text
      additionalProperties: false
      description: Shortened link request parameters
    ASC.Web.Api.ApiModel.RequestsDto.SsoSettingsRequestsDto:
      type: object
      properties:
        serializeSettings:
          type: string
          description: Serialized SSO settings
          nullable: true
          example: some text
      additionalProperties: false
      description: SSO settings request parameters
    ASC.Web.Api.ApiModel.RequestsDto.StorageEncryptionRequestsDto:
      type: object
      properties:
        notifyUsers:
          type: boolean
          description: >-
            Specifies if the users will be notified about the encryption process
            or note
          example: true
      additionalProperties: false
      description: Storage encryption request parameters
    ASC.Web.Api.ApiModel.RequestsDto.StorageRequestsDto:
      type: object
      properties:
        module:
          type: string
          description: Storage name
          nullable: true
          example: some text
        props:
          type: array
          items:
            $ref: >-
              #/components/schemas/ASC.Api.Collections.ItemKeyValuePair.System.String.System.String
          description: Storage properties
          nullable: true
      additionalProperties: false
      description: Storage settings request parameters
    ASC.Web.Api.ApiModel.RequestsDto.TenantQuotaSettingsRequestsDto:
      type: object
      properties:
        tenantId:
          type: integer
          description: Tenant ID
          format: int32
          example: 1234
        quota:
          type: integer
          description: Quota
          format: int64
          example: 1234
      additionalProperties: false
      description: Request parameters for the tenant quota settings
    ASC.Web.Api.ApiModel.RequestsDto.TfaRequestsDto:
      type: object
      properties:
        type:
          $ref: >-
            #/components/schemas/ASC.Web.Api.ApiModel.RequestsDto.TfaRequestsDtoType
        id:
          type: string
          description: User ID
          format: uuid
          nullable: true
          example: aae1e103-bca5-9fa1-ba8c-42058b4abf28
        trustedIps:
          type: array
          items:
            type: string
          description: List of trusted IP addresses
          nullable: true
          example:
            - some text
        mandatoryUsers:
          type: array
          items:
            type: string
            format: uuid
          description: List of users who must use the TFA verification
          nullable: true
          example:
            - 75a5f745-f697-4418-b38d-0fe0d277e258
        mandatoryGroups:
          type: array
          items:
            type: string
            format: uuid
          description: List of groups who must use the TFA verification
          nullable: true
          example:
            - 75a5f745-f697-4418-b38d-0fe0d277e258
      additionalProperties: false
      description: TFA settings request parameters
    ASC.Web.Api.ApiModel.RequestsDto.TfaRequestsDtoType:
      oneOf:
        - enum:
            - None
            - Sms
            - App
          type: string
          description: '[None - None, Sms - Sms, App - App]'
          example: None
        - enum:
            - 0
            - 1
            - 2
          type: integer
          description: '[0 - None, 1 - Sms, 2 - App]'
          example: 0
    ASC.Web.Api.ApiModel.RequestsDto.TfaSettingsDto:
      type: object
      properties:
        id:
          type: string
          description: ID
          nullable: true
          example: '9846'
        title:
          type: string
          description: Title
          nullable: true
          example: legacy_1080p_small_wooden_mouse
        enabled:
          type: boolean
          description: Specifies if the TFA settings are enabled or not
          example: true
        avaliable:
          type: boolean
          description: Specifies if the TFA settings are available or not
          example: true
        trustedIps:
          type: array
          items:
            type: string
          description: List of trusted IP addresses
          nullable: true
          example:
            - some text
        mandatoryUsers:
          type: array
          items:
            type: string
            format: uuid
          description: List of users who must use the TFA verification
          nullable: true
          example:
            - 75a5f745-f697-4418-b38d-0fe0d277e258
        mandatoryGroups:
          type: array
          items:
            type: string
            format: uuid
          description: List of groups who must use the TFA verification
          nullable: true
          example:
            - 75a5f745-f697-4418-b38d-0fe0d277e258
      additionalProperties: false
    ASC.Web.Api.ApiModel.RequestsDto.TfaValidateRequestsDto:
      type: object
      properties:
        code:
          type: string
          description: TFA code
          nullable: true
          example: some text
      additionalProperties: false
      description: TFA validation request parameters
    ASC.Web.Api.ApiModel.RequestsDto.TimezonesRequestsDto:
      type: object
      properties:
        id:
          type: string
          description: Time zone ID
          nullable: true
          example: '9846'
        displayName:
          type: string
          description: Time zone display name
          nullable: true
          example: some text
      additionalProperties: false
    ASC.Web.Api.ApiModel.RequestsDto.TipsRequestDto:
      type: object
      properties:
        show:
          type: boolean
          description: Specifies whether to show tips for the user or not
          example: true
      additionalProperties: false
      description: Settings request parameters
    ASC.Web.Api.ApiModel.RequestsDto.TurnOnAdminMessageSettingsRequestDto:
      type: object
      properties:
        turnOn:
          type: boolean
          description: Specifies if the administrator messages are enabled or not
          example: true
      additionalProperties: false
      description: Request parameters for administrator message settings
    ASC.Web.Api.ApiModel.RequestsDto.WebItemSecurityRequestsDto:
      type: object
      properties:
        id:
          type: string
          description: Module ID
          nullable: true
          example: '9846'
        enabled:
          type: boolean
          description: Specifies if the module security settings are enabled or not
          example: true
        subjects:
          type: array
          items:
            type: string
            format: uuid
          description: List of user/group IDs with the access to the module
          nullable: true
          example:
            - 75a5f745-f697-4418-b38d-0fe0d277e258
      additionalProperties: false
      description: Module request parameters
    ASC.Web.Api.ApiModel.RequestsDto.WebItemsSecurityRequestsDto:
      type: object
      properties:
        items:
          type: array
          items:
            $ref: >-
              #/components/schemas/ASC.Api.Collections.ItemKeyValuePair.System.String.System.Boolean
          description: Products with security information
          nullable: true
      additionalProperties: false
      description: Module request parameters
    ASC.Web.Api.ApiModel.RequestsDto.WebPluginRequests:
      type: object
      properties:
        enabled:
          type: boolean
          description: Enabled
          example: true
        settings:
          maxLength: 255
          minLength: 0
          type: string
          description: Settings
          nullable: true
          example: some text
      additionalProperties: false
      description: ''
    ASC.Web.Api.ApiModel.RequestsDto.WhiteLabelRequestsDto:
      type: object
      properties:
        logoText:
          maxLength: 30
          minLength: 0
          type: string
          description: Logo text
          nullable: true
          example: some text
        logo:
          type: array
          items:
            $ref: >-
              #/components/schemas/ASC.Api.Collections.ItemKeyValuePair.System.String.ASC.Web.Api.ApiModel.RequestsDto.LogoRequestsDto
          description: Tenant IDs with their logos (light or dark)
          nullable: true
      additionalProperties: false
      description: Request parameters for white label settings
    ASC.Web.Api.ApiModel.RequestsDto.WizardRequestsDto:
      type: object
      properties:
        email:
          type: string
          description: Email
          format: email
          nullable: true
          example: Sydney_Roberts4@hotmail.com
        passwordHash:
          type: string
          description: Password hash
          nullable: true
          example: some text
        lng:
          type: string
          description: Language
          nullable: true
          example: some text
        timeZone:
          type: string
          description: Time zone
          nullable: true
          example: some text
        amiId:
          type: string
          description: AMI ID
          nullable: true
          example: some text
        subscribeFromSite:
          type: boolean
          description: Subscribed from the site or not
          example: true
      additionalProperties: false
      description: Wizard settings request parameters
    ASC.Web.Api.ApiModel.ResponseDto.AuditEventDto:
      type: object
      properties:
        id:
          type: integer
          description: ID
          format: int32
          example: 9846
        date:
          $ref: '#/components/schemas/ASC.Api.Core.ApiDateTime'
        user:
          type: string
          description: User
          nullable: true
          example: some text
        userId:
          type: string
          description: User ID
          format: uuid
          example: aae1e103-bca5-9fa1-ba8c-42058b4abf28
        action:
          type: string
          description: Action
          nullable: true
          example: some text
        actionId:
          $ref: '#/components/schemas/ASC.MessagingSystem.Core.MessageAction'
        ip:
          type: string
          description: IP
          nullable: true
          example: some text
        country:
          type: string
          description: Country
          nullable: true
          example: some text
        city:
          type: string
          description: City
          nullable: true
          example: some text
        browser:
          type: string
          description: Browser
          nullable: true
          example: some text
        platform:
          type: string
          description: Platform
          nullable: true
          example: some text
        page:
          type: string
          description: Page
          nullable: true
          example: some text
        actionType:
          $ref: '#/components/schemas/ASC.AuditTrail.Types.ActionType'
        product:
          $ref: '#/components/schemas/ASC.AuditTrail.Types.ProductType'
        module:
          $ref: '#/components/schemas/ASC.AuditTrail.Types.ModuleType'
        target:
          type: array
          items:
            type: string
          description: List of targets
          nullable: true
          example:
            - some text
        entries:
          type: array
          items:
            $ref: '#/components/schemas/ASC.AuditTrail.Types.EntryType'
          description: List of entry types
          nullable: true
        context:
          type: string
          description: Context
          nullable: true
          example: some text
      additionalProperties: false
    ASC.Web.Api.ApiModel.ResponseDto.AuthenticationTokenDto:
      type: object
      properties:
        token:
          type: string
          description: Authentication token
          nullable: true
          example: abcde12345
        expires:
          type: string
          description: Token expiration time
          format: date-time
          example: '2008-04-10T06:30:00.0000000+04:00'
        sms:
          type: boolean
          description: Specifies if the authentication code is sent by SMS or not
          example: false
        phoneNoise:
          type: string
          description: Phone number
          nullable: true
          example: ''
        tfa:
          type: boolean
          description: Specifies if the two-factor application is used or not
          example: false
        tfaKey:
          type: string
          description: Two-factor authentication key
          nullable: true
          example: ''
        confirmUrl:
          type: string
          description: Confirmation email URL
          format: uri
          nullable: true
          example: some text
      additionalProperties: false
    ASC.Web.Api.ApiModel.ResponseDto.CapabilitiesDto:
      type: object
      properties:
        ldapEnabled:
          type: boolean
          description: Specifies if the LDAP settings are enabled or not
          example: false
        ldapDomain:
          type: string
          description: Ldap domain
          nullable: true
          example: some text
        providers:
          type: array
          items:
            type: string
          description: List of providers
          nullable: true
          example:
            - some text
        ssoLabel:
          type: string
          description: SP login label
          nullable: true
          example: ''
        oauthEnabled:
          type: boolean
          description: Specifies if OAuth is enabled or not
          example: true
        ssoUrl:
          type: string
          description: >-
            SSO URL. If this parameter is empty, then the SSO settings are
            disabled
          format: uri
          nullable: true
          example: ''
        identityServerEnabled:
          type: boolean
          example: true
      additionalProperties: false
    ASC.Web.Api.ApiModel.ResponseDto.DeepLinkDto:
      type: object
      properties:
        androidPackageName:
          type: string
          description: Android package name
          nullable: true
          example: some text
        url:
          type: string
          description: Url
          nullable: true
          example: some text
        iosPackageId:
          type: string
          description: Ios package id
          nullable: true
          example: some text
      additionalProperties: false
    ASC.Web.Api.ApiModel.ResponseDto.FirebaseDto:
      type: object
      properties:
        apiKey:
          type: string
          description: API key
          nullable: true
          example: some text
        authDomain:
          type: string
          description: Authentication domain
          nullable: true
          example: some text
        projectId:
          type: string
          description: Project ID
          nullable: true
          example: some text
        storageBucket:
          type: string
          description: Storage bucket
          nullable: true
          example: some text
        messagingSenderId:
          type: string
          description: Message sender ID
          nullable: true
          example: some text
        appId:
          type: string
          description: Application ID
          nullable: true
          example: some text
        measurementId:
          type: string
          description: Measurement ID
          nullable: true
          example: some text
        databaseURL:
          type: string
          description: Database URL
          nullable: true
          example: some text
      additionalProperties: false
    ASC.Web.Api.ApiModel.ResponseDto.FormGalleryDto:
      type: object
      properties:
        path:
          type: string
          description: Path
          nullable: true
          example: some text
        domain:
          type: string
          description: Domain
          nullable: true
          example: some text
        ext:
          type: string
          description: Ext
          nullable: true
          example: .txt
        uploadPath:
          type: string
          description: Upload path
          nullable: true
          example: some text
        uploadDomain:
          type: string
          description: Upload domain
          nullable: true
          example: some text
        uploadExt:
          type: string
          description: Upload ext
          nullable: true
          example: some text
        uploadDashboard:
          type: string
          description: Upload dashboard
          nullable: true
          example: some text
      additionalProperties: false
    ASC.Web.Api.ApiModel.ResponseDto.LoginEventDto:
      type: object
      properties:
        id:
          type: integer
          description: ID
          format: int32
          example: 9846
        date:
          $ref: '#/components/schemas/ASC.Api.Core.ApiDateTime'
        user:
          type: string
          description: User
          nullable: true
          example: some text
        userId:
          type: string
          description: User ID
          format: uuid
          example: aae1e103-bca5-9fa1-ba8c-42058b4abf28
        login:
          type: string
          description: Login
          nullable: true
          example: some text
        action:
          type: string
          description: Action
          nullable: true
          example: some text
        actionId:
          $ref: '#/components/schemas/ASC.MessagingSystem.Core.MessageAction'
        ip:
          type: string
          description: IP
          nullable: true
          example: some text
        country:
          type: string
          description: Country
          nullable: true
          example: some text
        city:
          type: string
          description: City
          nullable: true
          example: some text
        browser:
          type: string
          description: Browser
          nullable: true
          example: some text
        platform:
          type: string
          description: Platform
          nullable: true
          example: some text
        page:
          type: string
          description: Page
          nullable: true
          example: some text
      additionalProperties: false
    ASC.Web.Api.ApiModel.ResponseDto.PluginsDto:
      type: object
      properties:
        enabled:
          type: boolean
          description: Specifies if the plugins are enabled or not
          example: true
        upload:
          type: boolean
          description: Specifies if the plugins can be uploaded or not
          example: true
        delete:
          type: boolean
          description: Specifies if the plugins can be deleted or not
          example: true
      additionalProperties: false
    ASC.Web.Api.ApiModel.ResponseDto.SecurityDto:
      type: object
      properties:
        webItemId:
          type: string
          description: Module ID
          nullable: true
          example: '{00000000-0000-0000-0000-000000000000}'
        users:
          type: array
          items:
            $ref: '#/components/schemas/ASC.Web.Api.Models.EmployeeDto'
          description: List of users with the access to the module
          nullable: true
        groups:
          type: array
          items:
            $ref: '#/components/schemas/ASC.Web.Api.Models.GroupSummaryDto'
          description: List of groups with the access to the module
          nullable: true
        enabled:
          type: boolean
          description: Specifies if the security settings are enabled or not
          example: true
        isSubItem:
          type: boolean
          description: Specifies if this module is a subitem or not
          example: false
      additionalProperties: false
    ASC.Web.Api.ApiModel.ResponseDto.SettingsDto:
      type: object
      properties:
        timezone:
          type: string
          description: Time zone
          nullable: true
          example: UTC
        trustedDomains:
          type: array
          items:
            type: string
          description: List of trusted domains
          nullable: true
          example: mydomain.com
        trustedDomainsType:
          $ref: '#/components/schemas/ASC.Core.Tenants.TenantTrustedDomainsType'
        culture:
          type: string
          description: Language
          nullable: true
          example: en-US
        utcOffset:
          type: string
          description: UTC offset
          format: date-span
          example: '-8.5'
        utcHoursOffset:
          type: number
          description: UTC hours offset
          format: double
          example: -8.5
        greetingSettings:
          type: string
          description: Greeting settings
          nullable: true
          example: Web Office Applications
        ownerId:
          type: string
          description: Owner ID
          format: uuid
          example: 75a5f745-f697-4418-b38d-0fe0d277e258
        nameSchemaId:
          type: string
          description: Team template ID
          nullable: true
          example: some text
        enabledJoin:
          type: boolean
          description: Specifies if a user can join to the portal or not
          nullable: true
          example: true
        enableAdmMess:
          type: boolean
          description: Specifies if a user can send a message to the administrator or not
          nullable: true
          example: true
        thirdpartyEnable:
          type: boolean
          description: Specifies if a user can connect third-party providers or not
          nullable: true
          example: true
        docSpace:
          type: boolean
          description: Specifies if this is a DocSpace portal or not
          example: true
        standalone:
          type: boolean
          description: Specifies if this is a standalone portal or not
          example: true
        isAmi:
          type: boolean
          description: Specifies if this is a AMI instance or not
          example: true
        baseDomain:
          type: string
          description: Base domain
          nullable: true
          example: some text
        wizardToken:
          type: string
          description: Wizard token
          nullable: true
          example: some text
        passwordHash:
          $ref: '#/components/schemas/ASC.Security.Cryptography.PasswordHasher'
        firebase:
          $ref: '#/components/schemas/ASC.Web.Api.ApiModel.ResponseDto.FirebaseDto'
        version:
          type: string
          description: Version
          nullable: true
          example: some text
        recaptchaType:
          $ref: '#/components/schemas/ASC.Web.Core.RecaptchaType'
        recaptchaPublicKey:
          type: string
          description: ReCAPTCHA public key
          nullable: true
          example: some text
        debugInfo:
          type: boolean
          description: Specifies if the debug information will be sent or not
          example: true
        socketUrl:
          type: string
          description: Socket URL
          nullable: true
          example: some text
        tenantStatus:
          $ref: '#/components/schemas/ASC.Core.Tenants.TenantStatus'
        tenantAlias:
          type: string
          description: Tenant alias
          nullable: true
          example: some text
        helpLink:
          type: string
          description: Link to the help
          nullable: true
          example: some text
        forumLink:
          type: string
          description: Link to the forum
          nullable: true
          example: some text
        displayAbout:
          type: boolean
          description: Specifies whether to display the About section
          example: true
        apiDocsLink:
          type: string
          description: API documentation link
          nullable: true
          example: some text
        domainValidator:
          $ref: '#/components/schemas/ASC.Core.Tenants.TenantDomainValidator'
        zendeskKey:
          type: string
          description: Zendesk key
          nullable: true
          example: some text
        tagManagerId:
          type: string
          description: Tag manager ID
          nullable: true
          example: some text
        bookTrainingEmail:
          type: string
          description: Email for training booking
          nullable: true
          example: some text
        documentationEmail:
          type: string
          description: Documentation email
          nullable: true
          example: some text
        legalTerms:
          type: string
          description: Legal terms
          nullable: true
          example: some text
        licenseUrl:
          type: string
          description: License url
          nullable: true
          example: some text
        cookieSettingsEnabled:
          type: boolean
          description: Specifies whether the cookie settings are enabled
          example: true
        limitedAccessSpace:
          type: boolean
          description: Limited access space
          example: true
        userNameRegex:
          type: string
          description: User name validation regex
          nullable: true
          example: some text
        invitationLimit:
          type: integer
          description: Invitation limit
          format: int32
          nullable: true
          example: 1234
        plugins:
          $ref: '#/components/schemas/ASC.Web.Api.ApiModel.ResponseDto.PluginsDto'
        deepLink:
          $ref: '#/components/schemas/ASC.Web.Api.ApiModel.ResponseDto.DeepLinkDto'
        formGallery:
          $ref: '#/components/schemas/ASC.Web.Api.ApiModel.ResponseDto.FormGalleryDto'
        maxImageUploadSize:
          type: integer
          description: Max image upload size
          format: int64
          example: 1234
      additionalProperties: false
    ASC.Web.Api.ApiModel.ResponseDto.SmtpSettingsDto:
      type: object
      properties:
        host:
          type: string
          description: Host
          nullable: true
          example: mail.example.com
        port:
          maximum: 65535
          minimum: 1
          type: integer
          description: Port
          format: int32
          nullable: true
          example: 25
        senderAddress:
          type: string
          description: Sender address
          nullable: true
          example: notify@example.com
        senderDisplayName:
          type: string
          description: Sender display name
          nullable: true
          example: Postman
        credentialsUserName:
          maxLength: 255
          minLength: 0
          type: string
          description: Credentials username
          nullable: true
          example: notify@example.com
        credentialsUserPassword:
          type: string
          description: Credentials user password
          nullable: true
          example: '{password}'
        enableSSL:
          type: boolean
          description: Enables SSL or not
          example: false
        enableAuth:
          type: boolean
          description: Enables authentication or not
          example: true
        useNtlm:
          type: boolean
          description: Specifies whether to use NTLM or not
          example: false
        isDefaultSettings:
          type: boolean
          description: Specifies if the current settings are default or not
          example: false
      additionalProperties: false
      description: SMTP settings
    ASC.Web.Api.ApiModel.ResponseDto.StorageDto:
      type: object
      properties:
        id:
          type: string
          description: ID
          nullable: true
          example: '9846'
        title:
          type: string
          description: Title
          nullable: true
          example: legacy_1080p_small_wooden_mouse
        properties:
          type: array
          items:
            $ref: >-
              #/components/schemas/ASC.Web.Studio.UserControls.Management.AuthKey
          description: List of authentication keys
          nullable: true
        current:
          type: boolean
          description: Specifies if this is the current storage or not
          example: true
        isSet:
          type: boolean
          description: Specifies if this storage can be set or not
          example: true
      additionalProperties: false
    ASC.Web.Api.ApiModel.ResponseDto.UsageSpaceStatItemDto:
      type: object
      properties:
        name:
          type: string
          description: Name
          nullable: true
          example: Item name
        icon:
          type: string
          description: Icon
          nullable: true
          example: Item icon path
        disabled:
          type: boolean
          description: Specifies if the module space is disabled or not
          example: false
        size:
          type: string
          description: Size
          nullable: true
          example: 0 Byte
        url:
          type: string
          description: URL
          nullable: true
          example: Item url
      additionalProperties: false
    ASC.Web.Api.ApiModels.RequestsDto.CspRequestsDto:
      type: object
      properties:
        domains:
          type: array
          items:
            type: string
          description: Domains
          nullable: true
          example:
            - some text
      additionalProperties: false
    ASC.Web.Api.ApiModels.RequestsDto.CustomColorThemesSettingsRequestsDto:
      type: object
      properties:
        theme:
          $ref: >-
            #/components/schemas/ASC.Web.Core.Utility.Settings.CustomColorThemesSettingsItem
        selected:
          type: integer
          description: Selected or not
          format: int32
          nullable: true
          example: 1234
      additionalProperties: false
      description: Portal theme settings
    ASC.Web.Api.ApiModels.RequestsDto.FinishDto:
      type: object
      properties:
        isSendWelcomeEmail:
          type: boolean
          description: Is send welcome email
          example: true
      additionalProperties: false
    ASC.Web.Api.ApiModels.RequestsDto.FirebaseRequestsDto:
      type: object
      properties:
        firebaseDeviceToken:
          type: string
          description: Firebase device token
          nullable: true
          example: some text
        isSubscribed:
          type: boolean
          description: Specifies if the user is subscribed to the push notification or not
          example: true
      additionalProperties: false
      description: Firebase request parameters
    ASC.Web.Api.ApiModels.RequestsDto.LoginSettingsRequestDto:
      type: object
      properties:
        attemptCount:
          maximum: 9999
          minimum: 1
          type: integer
          description: Maximum number of the user attempts to log in
          format: int32
          example: 1234
        blockTime:
          maximum: 9999
          minimum: 1
          type: integer
          description: >-
            The duration of the account suspension for unsuccessful login
            attempts
          format: int32
          example: 1234
        checkPeriod:
          maximum: 9999
          minimum: 1
          type: integer
          description: Expected server response time
          format: int32
          example: 1234
      additionalProperties: false
      description: Login settings request parameters
    ASC.Web.Api.ApiModels.RequestsDto.NotificationSettingsRequestsDto:
      type: object
      properties:
        type:
          $ref: '#/components/schemas/ASC.Web.Core.Notify.NotificationType'
        isEnabled:
          type: boolean
          description: Specifies if the notification type is enabled or not
          example: true
      additionalProperties: false
      description: Notification settings request parameters
    ASC.Web.Api.ApiModels.RequestsDto.RoomsNotificationsSettingsRequestDto:
      type: object
      properties:
        roomsId:
          description: Room ID
          nullable: true
          example:
            int: 1234
            string: some text
            boolean: true
        mute:
          type: boolean
          description: Specifies if the room notifications are disabled or not
          example: true
      additionalProperties: false
      description: Request parameters for the room notification settings
    ASC.Web.Api.ApiModels.RequestsDto.WebhookRetryRequestsDto:
      type: object
      properties:
        ids:
          type: array
          items:
            type: integer
            format: int32
          description: List of webhook IDs
          nullable: true
          example:
            - 1234
      additionalProperties: false
      description: Request parameters to retry webhooks
    ASC.Web.Api.ApiModels.RequestsDto.WebhooksConfigRequestsDto:
      required:
        - name
        - uri
      type: object
      properties:
        id:
          type: integer
          description: ID
          format: int32
          example: 9846
        name:
          maxLength: 50
          minLength: 0
          type: string
          description: Name
          example: Winfield Upton
        uri:
          minLength: 1
          type: string
          description: URI
          example: some text
        secretKey:
          maxLength: 50
          minLength: 0
          type: string
          description: Secret key
          nullable: true
          example: some text
        enabled:
          type: boolean
          description: Enabled or not
          nullable: true
          example: true
        ssl:
          type: boolean
          description: SSL
          nullable: true
          example: true
      additionalProperties: false
      description: Webhook request parameters
    ASC.Web.Api.ApiModels.ResponseDto.ActiveConnectionsDto:
      type: object
      properties:
        loginEvent:
          type: integer
          description: Login event
          format: int32
          example: 1234
        items:
          type: array
          items:
            $ref: >-
              #/components/schemas/ASC.Web.Api.ApiModels.ResponseDto.ActiveConnectionsItemDto
          description: Items
          nullable: true
      additionalProperties: false
    ASC.Web.Api.ApiModels.ResponseDto.ActiveConnectionsItemDto:
      type: object
      properties:
        id:
          type: integer
          description: Id
          format: int32
          example: 9846
        tenantId:
          type: integer
          description: Tenant id
          format: int32
          example: 1234
        userId:
          type: string
          description: User id
          format: uuid
          example: aae1e103-bca5-9fa1-ba8c-42058b4abf28
        mobile:
          type: boolean
          description: Mobile
          example: true
        ip:
          type: string
          description: Ip
          nullable: true
          example: some text
        country:
          type: string
          description: Country
          nullable: true
          example: some text
        city:
          type: string
          description: City
          nullable: true
          example: some text
        browser:
          type: string
          description: Browser
          nullable: true
          example: some text
        platform:
          type: string
          description: Platform
          nullable: true
          example: some text
        date:
          $ref: '#/components/schemas/ASC.Api.Core.ApiDateTime'
        page:
          type: string
          description: Page
          nullable: true
          example: some text
      additionalProperties: false
    ASC.Web.Api.ApiModels.ResponseDto.AdditionalWhiteLabelSettingsDto:
      type: object
      properties:
        startDocsEnabled:
          type: boolean
          description: Specifies if the start document is enabled or not
          example: true
        helpCenterEnabled:
          type: boolean
          description: Specifies if the help center is enabled or not
          example: true
        feedbackAndSupportEnabled:
          type: boolean
          description: Specifies if feedback and support are available or not
          example: true
        feedbackAndSupportUrl:
          type: string
          description: Feedback and support URL
          nullable: true
          example: some text
        userForumEnabled:
          type: boolean
          description: Specifies if the user forum is enabled or not
          example: true
        userForumUrl:
          type: string
          description: User forum URL
          nullable: true
          example: some text
        videoGuidesEnabled:
          type: boolean
          description: Specifies if the video guides are enabled or not
          example: true
        videoGuidesUrl:
          type: string
          description: Video guides URL
          nullable: true
          example: some text
        salesEmail:
          type: string
          description: Sales email
          format: email
          nullable: true
          example: some text
        buyUrl:
          type: string
          description: URL to pay for the portal
          nullable: true
          example: some text
        licenseAgreementsEnabled:
          type: boolean
          description: Specifies if the license agreements are enabled or not
          example: true
        isDefault:
          type: boolean
          description: Specifies if these settings are default or not
          example: true
        licenseAgreementsUrl:
          type: string
          description: License agreements URL
          nullable: true
          example: some text
      additionalProperties: false
    ASC.Web.Api.ApiModels.ResponseDto.CompanyWhiteLabelSettingsDto:
      type: object
      properties:
        companyName:
          type: string
          description: Company name
          nullable: true
          example: some text
        site:
          type: string
          description: Site
          nullable: true
          example: some text
        email:
          type: string
          description: Email
          format: email
          nullable: true
          example: Sydney_Roberts4@hotmail.com
        address:
          type: string
          description: Address
          nullable: true
          example: some text
        phone:
          type: string
          description: Phone number
          nullable: true
          example: some text
        isLicensor:
          type: boolean
          description: Specifies if a company is a licensor or not
          example: true
        isDefault:
          type: boolean
          description: Specifies if these settings are default or not
          example: true
      additionalProperties: false
    ASC.Web.Api.ApiModels.ResponseDto.ConfirmDto:
      type: object
      properties:
        result:
          $ref: >-
            #/components/schemas/ASC.Security.Cryptography.EmailValidationKeyProvider_ValidationResult
        roomId:
          type: string
          description: Room id
          nullable: true
          example: '9846'
        title:
          type: string
          description: Title
          nullable: true
          example: legacy_1080p_small_wooden_mouse
      additionalProperties: false
    ASC.Web.Api.ApiModels.ResponseDto.CookieSettingsDto:
      type: object
      properties:
        lifeTime:
          type: integer
          description: Lifetime value in minutes
          format: int32
          example: 1234
        enabled:
          type: boolean
          description: Specifies if the cookie settings are enabled or not
          example: true
      additionalProperties: false
    ASC.Web.Api.ApiModels.ResponseDto.CspDto:
      type: object
      properties:
        domains:
          type: array
          items:
            type: string
          description: Domains
          nullable: true
          example:
            - some text
        header:
          type: string
          description: Header
          nullable: true
          example: some text
      additionalProperties: false
    ASC.Web.Api.ApiModels.ResponseDto.CustomColorThemesSettingsDto:
      type: object
      properties:
        themes:
          type: array
          items:
            $ref: >-
              #/components/schemas/ASC.Web.Core.Utility.Settings.CustomColorThemesSettingsItem
          description: Themes
          nullable: true
        selected:
          type: integer
          description: Selected
          format: int32
          example: 1234
        limit:
          type: integer
          description: Limit
          format: int32
          example: 1234
      additionalProperties: false
    ASC.Web.Api.ApiModels.ResponseDto.IsDefaultWhiteLabelLogosDto:
      type: object
      properties:
        name:
          type: string
          description: White label logo name
          nullable: true
          example: Winfield Upton
        default:
          type: boolean
          description: Specifies if the white label logo is default or not
          example: true
      additionalProperties: false
    ASC.Web.Api.ApiModels.ResponseDto.LoginSettingsDto:
      type: object
      properties:
        attemptCount:
          type: integer
          description: Maximum number of the user attempts to log in
          format: int32
          example: 1234
        blockTime:
          type: integer
          description: >-
            The time for which the user will be blocked after unsuccessful login
            attempts
          format: int32
          example: 1234
        checkPeriod:
          type: integer
          description: The time to wait for a response from the server
          format: int32
          example: 1234
        isDefault:
          type: boolean
          example: true
      additionalProperties: false
    ASC.Web.Api.ApiModels.ResponseDto.MigrationStatusDto:
      type: object
      properties:
        progress:
          type: number
          description: Migration progress
          format: double
          example: 1
        error:
          type: string
          description: Migration error
          nullable: true
          example: some text
        parseResult:
          $ref: '#/components/schemas/ASC.Migration.Core.Models.Api.MigrationApiInfo'
        isCompleted:
          type: boolean
          description: Specifies whether the migration is completed
          example: true
      additionalProperties: false
    ASC.Web.Api.ApiModels.ResponseDto.NotificationSettingsDto:
      type: object
      properties:
        type:
          $ref: '#/components/schemas/ASC.Web.Core.Notify.NotificationType'
        isEnabled:
          type: boolean
          description: Specifies if the notification type is enabled or not
          example: true
      additionalProperties: false
    ASC.Web.Api.ApiModels.ResponseDto.PasswordSettingsDto:
      type: object
      properties:
        minLength:
          type: integer
          description: Min length
          format: int32
          example: 1234
        upperCase:
          type: boolean
          description: Upper case
          example: true
        digits:
          type: boolean
          description: Digits
          example: true
        specSymbols:
          type: boolean
          description: Spec symbols
          example: true
        allowedCharactersRegexStr:
          type: string
          description: Allowed characters regex str
          nullable: true
          example: some text
        digitsRegexStr:
          type: string
          description: Digits regex str
          nullable: true
          example: some text
        upperCaseRegexStr:
          type: string
          description: Upper case regex str
          nullable: true
          example: some text
        specSymbolsRegexStr:
          type: string
          description: Spec symbols regex str
          nullable: true
          example: some text
      additionalProperties: false
    ASC.Web.Api.ApiModels.ResponseDto.RoomsNotificationSettingsDto:
      type: object
      properties:
        disabledRooms:
          type: array
          items:
            type: object
          description: List of rooms with the disabled notifications
          nullable: true
          example:
            - int: 1234
              string: some text
              boolean: true
      additionalProperties: false
    ASC.Web.Api.ApiModels.ResponseDto.TenantDto:
      type: object
      properties:
        affiliateId:
          type: string
          description: Affiliate ID
          nullable: true
          example: some text
        tenantAlias:
          type: string
          description: Tenant alias
          nullable: true
          example: some text
        calls:
          type: boolean
          description: Specifies if the calls are available for this tenant or not
          example: true
        campaign:
          type: string
          description: Campaign
          nullable: true
          example: some text
        creationDateTime:
          type: string
          description: Creation date and time
          format: date-time
          readOnly: true
          example: '2008-04-10T06:30:00.0000000+04:00'
        hostedRegion:
          type: string
          description: Hosted region
          nullable: true
          example: some text
        tenantId:
          type: integer
          description: Tenant ID
          format: int32
          readOnly: true
          example: 1234
        industry:
          $ref: '#/components/schemas/ASC.Core.Tenants.TenantIndustry'
        language:
          type: string
          description: Language
          nullable: true
          example: some text
        lastModified:
          type: string
          description: Last modified date
          format: date-time
          example: '2008-04-10T06:30:00.0000000+04:00'
        mappedDomain:
          type: string
          description: Mapped domain
          nullable: true
          example: some text
        name:
          type: string
          description: Name
          nullable: true
          example: Winfield Upton
        ownerId:
          type: string
          description: Owner ID
          format: uuid
          example: 75a5f745-f697-4418-b38d-0fe0d277e258
        paymentId:
          type: string
          description: Payment ID
          nullable: true
          example: some text
        spam:
          type: boolean
          description: Specifies if the ONLYOFFICE newsletter is allowed or not
          example: true
        status:
          $ref: '#/components/schemas/ASC.Core.Tenants.TenantStatus'
        statusChangeDate:
          type: string
          description: The date and time when the tenant status was changed
          format: date-time
          readOnly: true
          example: '2008-04-10T06:30:00.0000000+04:00'
        timeZone:
          type: string
          description: Time zone
          nullable: true
          example: some text
        trustedDomains:
          type: array
          items:
            type: string
          description: List of trusted domains
          nullable: true
          example:
            - some text
        trustedDomainsRaw:
          type: string
          description: Trusted domains in the string format
          nullable: true
          example: some text
        trustedDomainsType:
          $ref: '#/components/schemas/ASC.Core.Tenants.TenantTrustedDomainsType'
        version:
          type: integer
          description: Version
          format: int32
          example: 1234
        versionChanged:
          type: string
          description: The date and time when the tenant version was changed
          format: date-time
          example: '2008-04-10T06:30:00.0000000+04:00'
      additionalProperties: false
    ASC.Web.Api.ApiModels.ResponseDto.WebPluginDto:
      type: object
      properties:
        name:
          type: string
          description: Name
          nullable: true
          example: Winfield Upton
        version:
          type: string
          description: Version
          nullable: true
          example: some text
        description:
          type: string
          description: Description
          nullable: true
          example: some text
        license:
          type: string
          description: License
          nullable: true
          example: some text
        author:
          type: string
          description: Author
          nullable: true
          example: some text
        homePage:
          type: string
          description: Home page
          nullable: true
          example: some text
        pluginName:
          type: string
          description: PluginName
          nullable: true
          example: some text
        scopes:
          type: string
          description: Scopes
          nullable: true
          example: some text
        image:
          type: string
          description: Image
          nullable: true
          example: some text
        createBy:
          $ref: '#/components/schemas/ASC.Web.Api.Models.EmployeeDto'
        createOn:
          type: string
          description: Create on
          format: date-time
          example: '2008-04-10T06:30:00.0000000+04:00'
        enabled:
          type: boolean
          description: Enabled
          example: true
        system:
          type: boolean
          description: System
          example: true
        url:
          type: string
          description: Url
          nullable: true
          example: some text
        settings:
          type: string
          description: Settings
          nullable: true
          example: some text
      additionalProperties: false
    ASC.Web.Api.ApiModels.ResponseDto.WebhooksConfigDto:
      type: object
      properties:
        id:
          type: integer
          description: ID
          format: int32
          example: 9846
        name:
          type: string
          description: Name
          nullable: true
          example: Winfield Upton
        uri:
          type: string
          description: URI
          nullable: true
          example: some text
        secretKey:
          type: string
          description: Secret key
          nullable: true
          example: some text
        enabled:
          type: boolean
          description: Specifies if the webhooks are enabled or not
          example: true
        ssl:
          type: boolean
          description: SSL
          example: true
      additionalProperties: false
    ASC.Web.Api.ApiModels.ResponseDto.WebhooksConfigWithStatusDto:
      type: object
      properties:
        configs:
          $ref: >-
            #/components/schemas/ASC.Web.Api.ApiModels.ResponseDto.WebhooksConfigDto
        status:
          type: integer
          description: Status
          format: int32
          example: 1234
      additionalProperties: false
    ASC.Web.Api.ApiModels.ResponseDto.WebhooksLogDto:
      type: object
      properties:
        id:
          type: integer
          description: ID
          format: int32
          example: 9846
        configName:
          type: string
          description: Config name
          nullable: true
          example: some text
        creationTime:
          type: string
          description: Creation time
          format: date-time
          example: '2008-04-10T06:30:00.0000000+04:00'
        method:
          type: string
          description: Method
          nullable: true
          example: some text
        route:
          type: string
          description: Route
          nullable: true
          example: some text
        requestHeaders:
          type: string
          description: Request headers
          nullable: true
          example: some text
        requestPayload:
          type: string
          description: Request payload
          nullable: true
          example: some text
        responseHeaders:
          type: string
          description: Response headers
          nullable: true
          example: some text
        responsePayload:
          type: string
          description: Response payload
          nullable: true
          example: some text
        status:
          type: integer
          description: Status
          format: int32
          example: 1234
        delivery:
          type: string
          description: Delivery time
          format: date-time
          nullable: true
          example: '2008-04-10T06:30:00.0000000+04:00'
      additionalProperties: false
    ASC.Web.Api.ApiModels.ResponseDto.WhiteLabelItemDto:
      type: object
      properties:
        name:
          type: string
          description: File name
          nullable: true
          example: Winfield Upton
        size:
          $ref: '#/components/schemas/SixLabors.ImageSharp.Size'
        path:
          $ref: >-
            #/components/schemas/ASC.Web.Api.ApiModels.ResponseDto.WhiteLabelItemPathDto
      additionalProperties: false
    ASC.Web.Api.ApiModels.ResponseDto.WhiteLabelItemPathDto:
      type: object
      properties:
        light:
          type: string
          description: Path to the light theme logo
          nullable: true
          example: some text
        dark:
          type: string
          description: Path to the dark theme logo
          nullable: true
          example: some text
      additionalProperties: false
    ASC.Web.Api.Models.CookieSettingsRequestsDto:
      type: object
      properties:
        lifeTime:
          type: integer
          description: Lifetime value in minutes
          format: int32
          example: 1234
        enabled:
          type: boolean
          description: Specifies if the cookie settings are enabled or not
          example: true
      additionalProperties: false
      description: Cookies settings request parameters
    ASC.Web.Api.Models.DnsSettingsRequestsDto:
      type: object
      properties:
        dnsName:
          type: string
          description: DNS
          nullable: true
          example: some text
        enable:
          type: boolean
          description: Enabled or not
          example: true
      additionalProperties: false
      description: DNS settings request parameters
    ASC.Web.Api.Models.EmployeeDto:
      type: object
      properties:
        id:
          type: string
          description: ID
          format: uuid
          example: '{00000000-0000-0000-0000-000000000000}'
        displayName:
          type: string
          description: Display name
          nullable: true
          example: Mike Zanyatski
        title:
          type: string
          description: Title
          nullable: true
          example: Manager
        avatar:
          type: string
          description: Avatar
          nullable: true
          example: some text
        avatarOriginal:
          type: string
          description: Original size avatar
          nullable: true
          example: some text
        avatarMax:
          type: string
          description: Maximum size avatar
          nullable: true
          example: some text
        avatarMedium:
          type: string
          description: Medium size avatar
          nullable: true
          example: some text
        avatarSmall:
          type: string
          description: Small avatar
          nullable: true
          example: url to small avatar
        profileUrl:
          type: string
          description: Profile URL
          nullable: true
          example: some text
        hasAvatar:
          type: boolean
          description: Specifies if the user has an avatar or not
          example: true
        isAnonim:
          type: boolean
          description: Specifies if the user is an anonim or not
          example: true
      additionalProperties: false
    ASC.Web.Api.Models.GroupSummaryDto:
      type: object
      properties:
        id:
          type: string
          description: ID
          format: uuid
          example: '{00000000-0000-0000-0000-000000000000}'
        name:
          type: string
          description: Name
          nullable: true
          example: Group Name
        manager:
          type: string
          description: Manager
          nullable: true
          example: Jake.Zazhitski
      additionalProperties: false
    ASC.Web.Api.Models.PasswordSettingsRequestsDto:
      type: object
      properties:
        minLength:
          type: integer
          description: Minimum password length
          format: int32
          example: 1234
        upperCase:
          type: boolean
          description: Specifies if the password must include the uppercase letters or not
          example: true
        digits:
          type: boolean
          description: Specifies if the password must include the digits or not
          example: true
        specSymbols:
          type: boolean
          description: Specifies if the password must include the special symbols or not
          example: true
      additionalProperties: false
      description: Password settings
    ASC.Web.Core.Notify.NotificationType:
      oneOf:
        - enum:
            - Badges
            - RoomsActivity
            - DailyFeed
            - UsefullTips
          type: string
          description: >-
            [Badges - Badges, RoomsActivity - Rooms activity, DailyFeed - Daily
            feed, UsefullTips - Usefull tips]
          example: Badges
        - enum:
            - 0
            - 1
            - 2
            - 3
          type: integer
          description: '[0 - Badges, 1 - Rooms activity, 2 - Daily feed, 3 - Usefull tips]'
          example: 0
    ASC.Web.Core.RecaptchaType:
      oneOf:
        - enum:
            - Default
            - AndroidV2
            - iOSV2
            - hCaptcha
          type: string
          description: >-
            [Default - Default, AndroidV2 - AndroidV2, iOSV2 - iOSV2, hCaptcha -
            hCaptcha]
          example: Default
        - enum:
            - 0
            - 1
            - 2
            - 3
          type: integer
          description: '[0 - Default, 1 - AndroidV2, 2 - iOSV2, 3 - hCaptcha]'
          example: 0
    ASC.Web.Core.Utility.Settings.CustomColorThemesSettingsColorItem:
      type: object
      properties:
        accent:
          type: string
          description: Accent color
          nullable: true
          example: '#4781D1'
        buttons:
          type: string
          description: Button color
          nullable: true
          example: '#5299E0'
      additionalProperties: false
    ASC.Web.Core.Utility.Settings.CustomColorThemesSettingsItem:
      type: object
      properties:
        id:
          type: integer
          description: Theme ID
          format: int32
          example: 1
        name:
          type: string
          description: Theme name
          nullable: true
          example: blue
        main:
          $ref: >-
            #/components/schemas/ASC.Web.Core.Utility.Settings.CustomColorThemesSettingsColorItem
        text:
          $ref: >-
            #/components/schemas/ASC.Web.Core.Utility.Settings.CustomColorThemesSettingsColorItem
      additionalProperties: false
    ASC.Web.Core.Utility.Settings.WizardSettings:
      type: object
      properties:
        completed:
          type: boolean
          description: Specifies if the Wizard settings are completed or not
          example: true
      additionalProperties: false
    ASC.Web.Core.WhiteLabel.AdditionalWhiteLabelSettings:
      type: object
      properties:
        startDocsEnabled:
          type: boolean
          description: Specifies if the start document is enabled or not
          example: true
        helpCenterEnabled:
          type: boolean
          description: Specifies if the help center is enabled or not
          example: true
        feedbackAndSupportEnabled:
          type: boolean
          description: Specifies if feedback and support are available or not
          example: true
        feedbackAndSupportUrl:
          type: string
          description: Feedback and support URL
          nullable: true
          example: some text
        userForumEnabled:
          type: boolean
          description: Specifies if the user forum is enabled or not
          example: true
        userForumUrl:
          type: string
          description: User forum URL
          nullable: true
          example: some text
        videoGuidesEnabled:
          type: boolean
          description: Specifies if the video guides are enabled or not
          example: true
        videoGuidesUrl:
          type: string
          description: Video guides URL
          nullable: true
          example: some text
        salesEmail:
          type: string
          description: Sales email
          nullable: true
          example: some text
        buyUrl:
          type: string
          description: URL to pay for the portal
          nullable: true
          example: some text
        licenseAgreementsEnabled:
          type: boolean
          description: Specifies if the license agreements are enabled or not
          example: true
        licenseAgreementsUrl:
          type: string
          description: License agreements URL
          nullable: true
          example: some text
      additionalProperties: false
    ASC.Web.Core.WhiteLabel.AdditionalWhiteLabelSettingsWrapper:
      type: object
      properties:
        settings:
          $ref: >-
            #/components/schemas/ASC.Web.Core.WhiteLabel.AdditionalWhiteLabelSettings
      additionalProperties: false
      description: Additional white label settings
    ASC.Web.Core.WhiteLabel.CompanyWhiteLabelSettings:
      type: object
      properties:
        companyName:
          maxLength: 255
          minLength: 0
          type: string
          description: Company name
          nullable: true
          example: some text
        site:
          maxLength: 255
          minLength: 0
          type: string
          description: Site
          format: uri
          nullable: true
          example: some text
        email:
          maxLength: 255
          minLength: 0
          type: string
          description: Email address
          format: email
          nullable: true
          example: Sydney_Roberts4@hotmail.com
        address:
          maxLength: 255
          minLength: 0
          type: string
          description: Address
          nullable: true
          example: some text
        phone:
          maxLength: 255
          minLength: 0
          type: string
          description: Phone
          format: tel
          nullable: true
          example: some text
        IsLicensor:
          type: boolean
          description: Specifies if a company is a licensor or not
          example: true
      additionalProperties: false
    ASC.Web.Core.WhiteLabel.CompanyWhiteLabelSettingsWrapper:
      type: object
      properties:
        settings:
          $ref: >-
            #/components/schemas/ASC.Web.Core.WhiteLabel.CompanyWhiteLabelSettings
      additionalProperties: false
      description: Company white label settings
    ASC.Web.Studio.Core.CustomNavigationItem:
      type: object
      properties:
        id:
          type: string
          description: Id
          format: uuid
          example: aae1e103-bca5-9fa1-ba8c-42058b4abf28
        label:
          type: string
          description: Label
          nullable: true
          example: Label
        url:
          type: string
          description: URL
          nullable: true
          example: Url
        bigImg:
          type: string
          description: Big image
          nullable: true
          example: >-
            data:image\/png;base64,iVBORw0KGgoAAAANSUhEUgAAAGQAAABkAgMAAAANjH3HAAAADFBMVEUAAADJycnJycnJycmiuNtHAAAAA3RSTlMAf4C\/aSLHAAAAyElEQVR4Xu3NsQ3CMBSE4YubFB4ilHQegdGSjWACvEpGoEyBYiL05AdnXUGHolx10lf82MmOpfLeo5UoJUhBlpKkRCnhUy7b9XCWkqQMUkYlXVHSf8kTvkHKqKQrSnopg5SRxTMklLmS1MwaSWpmCSQ1MyOzWGZCYrEMEFksA4QqlAFuJJYBcCKxjM3FMySeIfEMC2dMOONCGZZgmdr1ly3TSrJMK9EyJBaaGrHQikYstAiJZRYSyiQEdyg5S8Evckih\/YPscsdej0H6dc0TYw4AAAAASUVORK5CYII=
        smallImg:
          type: string
          description: Small image
          nullable: true
          example: >-
            data:image\/png;base64,iVBORw0KGgoAAAANSUhEUgAAABAAAAAQCAYAAAAf8\/9hAAAAUUlEQVR4AWMY\/KC5o\/cAEP9HxxgKcSpCGELYADyu2E6mAQjNxBlAWPNxkHdwGkBIM3KYYDUAr2ZCAE+oH8eujrAXDsA0k2EAAtDXAGLx4MpsADUgvkRKUlqfAAAAAElFTkSuQmCC
        showInMenu:
          type: boolean
          description: Show in menu or not
          example: true
        showOnHomePage:
          type: boolean
          description: Show on home page or not
          example: true
      additionalProperties: false
      description: Custom navigation parameters
    ASC.Web.Studio.Core.EmailActivationSettings:
      type: object
      properties:
        show:
          type: boolean
          description: Shown or hidden
          example: true
      additionalProperties: false
      description: Email activation settings
    ASC.Web.Studio.Core.TipsSettings:
      type: object
      properties:
        show:
          type: boolean
          description: Specifies if the tips will be shown or not
          example: true
      additionalProperties: false
      description: ''
    ASC.Web.Studio.UserControls.Management.AuthKey:
      type: object
      properties:
        name:
          type: string
          description: Name
          nullable: true
          example: Winfield Upton
        value:
          type: string
          description: Value
          nullable: true
          example: some text
        title:
          type: string
          description: Title
          nullable: true
          example: legacy_1080p_small_wooden_mouse
      additionalProperties: false
    ASC.Web.Studio.UserControls.Management.SingleSignOnSettings.SsoCertificate:
      type: object
      properties:
        selfSigned:
          type: boolean
          description: Specifies if a certificate is self-signed or not
          example: true
        crt:
          type: string
          description: Certificate
          nullable: true
          example: some text
        key:
          type: string
          description: Key
          nullable: true
          example: some text
        action:
          type: string
          description: Action
          nullable: true
          example: some text
        domainName:
          type: string
          description: Domain name
          nullable: true
          example: some text
        startDate:
          type: string
          description: Start date
          format: date-time
          example: '2008-04-10T06:30:00.0000000+04:00'
        expiredDate:
          type: string
          description: Expiration date
          format: date-time
          example: '2008-04-10T06:30:00.0000000+04:00'
      additionalProperties: false
    ASC.Web.Studio.UserControls.Management.SingleSignOnSettings.SsoFieldMapping:
      type: object
      properties:
        firstName:
          type: string
          description: First name
          nullable: true
          example: Winfield
        lastName:
          type: string
          description: Last name
          nullable: true
          example: Wyman
        email:
          type: string
          description: Email
          format: email
          nullable: true
          example: Sydney_Roberts4@hotmail.com
        title:
          type: string
          description: Title
          nullable: true
          example: legacy_1080p_small_wooden_mouse
        location:
          type: string
          description: Location
          nullable: true
          example: 001 Schroeder Run, New Tabithaport, Colombia
        phone:
          type: string
          description: Phone
          nullable: true
          example: some text
      additionalProperties: false
    ASC.Web.Studio.UserControls.Management.SingleSignOnSettings.SsoIdpCertificateAdvanced:
      type: object
      properties:
        verifyAlgorithm:
          type: string
          description: Verification algorithm
          nullable: true
          example: some text
        verifyAuthResponsesSign:
          type: boolean
          description: >-
            Specifies if the signatures of the SAML authentication responses
            sent to SP will be verified or not
          example: true
        verifyLogoutRequestsSign:
          type: boolean
          description: >-
            Specifies if the signatures of the SAML logout requests sent to SP
            will be verified or not
          example: true
        verifyLogoutResponsesSign:
          type: boolean
          description: >-
            Specifies if the signatures of the SAML logout responses sent to SP
            will be verified or not
          example: true
        decryptAlgorithm:
          type: string
          description: Decryption algorithm
          nullable: true
          example: some text
        decryptAssertions:
          type: boolean
          description: Specifies if the assertions will be decrypted or not
          example: true
      additionalProperties: false
    ASC.Web.Studio.UserControls.Management.SingleSignOnSettings.SsoIdpSettings:
      type: object
      properties:
        entityId:
          type: string
          description: Entity ID
          nullable: true
          example: some text
        ssoUrl:
          type: string
          description: SSO URL
          nullable: true
          example: some text
        ssoBinding:
          type: string
          description: SSO binding
          nullable: true
          example: some text
        sloUrl:
          type: string
          description: SLO URL
          nullable: true
          example: some text
        sloBinding:
          type: string
          description: SLO binding
          nullable: true
          example: some text
        nameIdFormat:
          type: string
          description: Name ID format
          nullable: true
          example: some text
      additionalProperties: false
    ASC.Web.Studio.UserControls.Management.SingleSignOnSettings.SsoSettingsV2:
      type: object
      properties:
        enableSso:
          type: boolean
          description: Specifies if SSO is enabled or not
          nullable: true
          example: true
        idpSettings:
          $ref: >-
            #/components/schemas/ASC.Web.Studio.UserControls.Management.SingleSignOnSettings.SsoIdpSettings
        idpCertificates:
          type: array
          items:
            $ref: >-
              #/components/schemas/ASC.Web.Studio.UserControls.Management.SingleSignOnSettings.SsoCertificate
          description: List of IDP certificates
          nullable: true
        idpCertificateAdvanced:
          $ref: >-
            #/components/schemas/ASC.Web.Studio.UserControls.Management.SingleSignOnSettings.SsoIdpCertificateAdvanced
        spLoginLabel:
          type: string
          description: SP login label
          nullable: true
          example: some text
        spCertificates:
          type: array
          items:
            $ref: >-
              #/components/schemas/ASC.Web.Studio.UserControls.Management.SingleSignOnSettings.SsoCertificate
          description: List of SP certificates
          nullable: true
        spCertificateAdvanced:
          $ref: >-
            #/components/schemas/ASC.Web.Studio.UserControls.Management.SingleSignOnSettings.SsoSpCertificateAdvanced
        fieldMapping:
          $ref: >-
            #/components/schemas/ASC.Web.Studio.UserControls.Management.SingleSignOnSettings.SsoFieldMapping
        hideAuthPage:
          type: boolean
          description: Specifies if the authentication page will be hidden or not
          example: true
        usersType:
          type: integer
          description: Users type (RoomAdmin, User, DocSpaceAdmin)
          format: int32
          example: 1234
      additionalProperties: false
    ASC.Web.Studio.UserControls.Management.SingleSignOnSettings.SsoSpCertificateAdvanced:
      type: object
      properties:
        signingAlgorithm:
          type: string
          description: Signing algorithm
          nullable: true
          example: some text
        signAuthRequests:
          type: boolean
          description: >-
            Specifies if SP will sign the SAML authentication requests sent to
            IdP or not
          example: true
        signLogoutRequests:
          type: boolean
          description: >-
            Specifies if SP will sign the SAML logout requests sent to IdP or
            not
          example: true
        signLogoutResponses:
          type: boolean
          description: Specifies if sign the SAML logout responses sent to IdP or not
          example: true
        encryptAlgorithm:
          type: string
          description: Encryption algorithm
          nullable: true
          example: some text
        decryptAlgorithm:
          type: string
          description: Decryption algorithm
          nullable: true
          example: some text
        encryptAssertions:
          type: boolean
          description: Specifies if the assertions will be encrypted or not
          example: true
      additionalProperties: false
    ASC.Web.Studio.Utility.ConfirmType:
      oneOf:
        - enum:
            - EmpInvite
            - LinkInvite
            - PortalSuspend
            - PortalContinue
            - PortalRemove
            - DnsChange
            - PortalOwnerChange
            - Activation
            - EmailChange
            - EmailActivation
            - PasswordChange
            - ProfileRemove
            - PhoneActivation
            - PhoneAuth
            - Auth
            - TfaActivation
            - TfaAuth
            - Wizard
          type: string
          description: >-
            [EmpInvite - Emp invite, LinkInvite - Link invite, PortalSuspend -
            Portal suspend, PortalContinue - Portal continue, PortalRemove -
            Portal remove, DnsChange - Dns change, PortalOwnerChange - Portal
            owner change, Activation - Activation, EmailChange - Email change,
            EmailActivation - Email activation, PasswordChange - Password
            change, ProfileRemove - Profile remove, PhoneActivation - Phone
            activation, PhoneAuth - Phone auth, Auth - Auth, TfaActivation - Tfa
            activation, TfaAuth - Tfa auth, Wizard - Wizard]
          example: EmpInvite
        - enum:
            - 0
            - 1
            - 2
            - 3
            - 4
            - 5
            - 6
            - 7
            - 8
            - 9
            - 10
            - 11
            - 12
            - 13
            - 14
            - 15
            - 16
            - 17
          type: integer
          description: >-
            [0 - Emp invite, 1 - Link invite, 2 - Portal suspend, 3 - Portal
            continue, 4 - Portal remove, 5 - Dns change, 6 - Portal owner
            change, 7 - Activation, 8 - Email change, 9 - Email activation, 10 -
            Password change, 11 - Profile remove, 12 - Phone activation, 13 -
            Phone auth, 14 - Auth, 15 - Tfa activation, 16 - Tfa auth, 17 -
            Wizard]
          example: 0
      description: ''
    ASC.Webhooks.Core.Webhook:
      type: object
      properties:
        id:
          type: integer
          description: ID
          format: int32
          example: 9846
        route:
          type: string
          description: Route
          nullable: true
          example: some text
        method:
          type: string
          description: Method
          nullable: true
          example: some text
        disable:
          type: boolean
          description: Specifies if a webhook is disabled or not
          example: true
        name:
          type: string
          description: Name
          nullable: true
          readOnly: true
          example: Winfield Upton
        description:
          type: string
          description: Description
          nullable: true
          readOnly: true
          example: some text
      additionalProperties: false
    ASC.Webhooks.Core.WebhookGroupStatus:
      oneOf:
        - enum:
            - None
            - NotSent
            - Status2xx
            - Status3xx
            - Status4xx
            - Status5xx
          type: string
          description: >-
            [None - None, NotSent - Not sent, Status2xx - Status2xx, Status3xx -
            Status3xx, Status4xx - Status4xx, Status5xx - Status5xx]
          example: None
        - enum:
            - 0
            - 1
            - 2
            - 4
            - 8
            - 16
          type: integer
          description: >-
            [0 - None, 1 - Not sent, 2 - Status2xx, 4 - Status3xx, 8 -
            Status4xx, 16 - Status5xx]
          example: 0
    Google.Authenticator.SetupCode:
      type: object
      properties:
        account:
          type: string
          nullable: true
          readOnly: true
          example: some text
        manualEntryKey:
          type: string
          nullable: true
          readOnly: true
          example: some text
        qrCodeSetupImageUrl:
          type: string
          nullable: true
          readOnly: true
          example: some text
      additionalProperties: false
    SixLabors.ImageSharp.Size:
      type: object
      properties:
        width:
          type: integer
          format: int32
          example: 1234
        height:
          type: integer
          format: int32
          example: 1234
        isEmpty:
          type: boolean
          readOnly: true
          example: true
      additionalProperties: false
    ASC.Common.Threading.DistributedTaskStatus:
      oneOf:
        - enum:
            - Created
            - Running
            - Completed
            - Canceled
            - Failted
          type: string
          description: >-
            [Created - Created, Running - Running, Completed - Completed,
            Canceled - Canceled, Failted - Failted]
          example: Created
        - enum:
            - 0
            - 1
            - 2
            - 3
            - 4
          type: integer
          description: '[0 - Created, 1 - Running, 2 - Completed, 3 - Canceled, 4 - Failted]'
          example: 0
    ASC.Core.AccountLoginType:
      oneOf:
        - enum:
            - SSO
            - LDAP
            - Standart
          type: string
          description: '[SSO - SSO, LDAP - LDAP, Standart - Standart]'
          example: SSO
        - enum:
            - 0
            - 1
            - 2
          type: integer
          description: '[0 - SSO, 1 - LDAP, 2 - Standart]'
          example: 0
    ASC.Core.Common.Core.Area:
      enum:
        - 0
        - 1
        - 2
      type: integer
      format: int32
    ASC.Core.Payments:
      oneOf:
        - enum:
            - Paid
            - Free
          type: string
          description: '[Paid - Paid, Free - Free]'
          example: Paid
        - enum:
            - 0
            - 1
          type: integer
          description: '[0 - Paid, 1 - Free]'
          example: 0
    ASC.Core.QuotaFilter:
      oneOf:
        - enum:
            - All
            - Default
            - Custom
          type: string
          description: '[All - All, Default - Default, Custom - Custom]'
          example: All
        - enum:
            - 0
            - 1
            - 2
          type: integer
          description: '[0 - All, 1 - Default, 2 - Custom]'
          example: 0
    ASC.People.ApiModels.RequestDto.ContactsRequest:
      type: object
      properties:
        contacts:
          type: array
          items:
            $ref: '#/components/schemas/ASC.Web.Api.Models.Contact'
          description: List of user contacts
          nullable: true
      additionalProperties: false
      description: Parameters for updating user contacts
    ASC.People.ApiModels.RequestDto.DarkThemeSettingsRequestDto:
      type: object
      properties:
        theme:
          $ref: '#/components/schemas/ASC.Web.Core.Users.DarkThemeSettingsType'
      additionalProperties: false
      description: Theme settings request parameters
    ASC.People.ApiModels.RequestDto.EmailMemberRequestDto:
      type: object
      properties:
        email:
          maxLength: 255
          minLength: 0
          type: string
          description: Email
          format: email
          nullable: true
          example: Sydney_Roberts4@hotmail.com
      additionalProperties: false
      description: Member request parameters
    ASC.People.ApiModels.RequestDto.GroupRequestDto:
      type: object
      properties:
        groupManager:
          type: string
          description: Group manager ID
          format: uuid
          example: 75a5f745-f697-4418-b38d-0fe0d277e258
        groupName:
          type: string
          description: Group name
          nullable: true
          example: some text
        members:
          type: array
          items:
            type: string
            format: uuid
          description: List of group member IDs
          nullable: true
          example:
            - 75a5f745-f697-4418-b38d-0fe0d277e258
      additionalProperties: false
      description: Group request parameters
    ASC.People.ApiModels.RequestDto.InviteUsersRequestDto:
      required:
        - invitations
      type: object
      properties:
        invitations:
          type: array
          items:
            $ref: >-
              #/components/schemas/ASC.People.ApiModels.RequestDto.UserInvitation
          description: List of user invitations
        culture:
          type: string
          description: Culture
          nullable: true
          example: some text
      additionalProperties: false
      description: Request parameters for inviting users
    ASC.People.ApiModels.RequestDto.LinkAccountRequestDto:
      type: object
      properties:
        serializedProfile:
          type: string
          description: Third-party profile in the serialized format
          nullable: true
          example: some text
      additionalProperties: false
      description: Request parameters for linking accounts
    ASC.People.ApiModels.RequestDto.MemberBaseRequestDto:
      type: object
      properties:
        email:
          maxLength: 255
          minLength: 0
          type: string
          description: Email
          format: email
          nullable: true
          example: Sydney_Roberts4@hotmail.com
        password:
          type: string
          description: Password
          nullable: true
          example: vfmf2vO1Kp
        passwordHash:
          type: string
          description: Password hash
          nullable: true
          example: some text
      additionalProperties: false
      description: Request parameters for setting new password
    ASC.People.ApiModels.RequestDto.MemberRequestDto:
      type: object
      properties:
        email:
          maxLength: 255
          minLength: 0
          type: string
          description: Email
          format: email
          nullable: true
          example: Sydney_Roberts4@hotmail.com
        password:
          type: string
          description: Password
          nullable: true
          example: vfmf2vO1Kp
        passwordHash:
          type: string
          description: Password hash
          nullable: true
          example: some text
        type:
          $ref: '#/components/schemas/ASC.Core.Users.EmployeeType'
        isUser:
          type: boolean
          description: Specifies if this is a guest or a user
          nullable: true
          example: true
        firstName:
          maxLength: 255
          minLength: 0
          type: string
          description: First name
          nullable: true
          example: Winfield
        lastName:
          maxLength: 255
          minLength: 0
          type: string
          description: Last name
          nullable: true
          example: Wyman
        department:
          type: array
          items:
            type: string
            format: uuid
          description: List of user departments
          nullable: true
          example:
            - 75a5f745-f697-4418-b38d-0fe0d277e258
        title:
          maxLength: 255
          minLength: 0
          type: string
          description: Title
          nullable: true
          example: legacy_1080p_small_wooden_mouse
        location:
          type: string
          description: Location
          nullable: true
          example: 001 Schroeder Run, New Tabithaport, Colombia
        sex:
          $ref: '#/components/schemas/ASC.People.ApiModels.RequestDto.SexEnum'
        birthday:
          $ref: '#/components/schemas/ASC.Api.Core.ApiDateTime'
        worksfrom:
          $ref: '#/components/schemas/ASC.Api.Core.ApiDateTime'
        comment:
          type: string
          description: Comment
          nullable: true
          example: some text
        contacts:
          type: array
          items:
            $ref: '#/components/schemas/ASC.Web.Api.Models.Contact'
          description: List of user contacts
          nullable: true
        files:
          type: string
          description: Avatar photo URL
          nullable: true
          example: some text
        fromInviteLink:
          type: boolean
          description: Specifies if the user is added via the invitation link or not
          example: true
        key:
          type: string
          description: Key
          nullable: true
          example: some text
        cultureName:
          type: string
          description: Language
          nullable: true
          example: some text
        target:
          type: string
          description: Target
          format: uuid
          example: 75a5f745-f697-4418-b38d-0fe0d277e258
        spam:
          type: boolean
          description: Spam
          nullable: true
          example: true
      additionalProperties: false
      description: Member request parameters
    ASC.People.ApiModels.RequestDto.MembersRequest:
      type: object
      properties:
        members:
          type: array
          items:
            type: string
            format: uuid
          description: List of group member IDs
          nullable: true
          example:
            - 75a5f745-f697-4418-b38d-0fe0d277e258
      additionalProperties: false
      description: Group request parameters
    ASC.People.ApiModels.RequestDto.SetManagerRequest:
      type: object
      properties:
        userId:
          type: string
          description: User ID
          format: uuid
          example: aae1e103-bca5-9fa1-ba8c-42058b4abf28
      additionalProperties: false
      description: Request parameters for setting a group manager
    ASC.People.ApiModels.RequestDto.SexEnum:
      oneOf:
        - enum:
            - Female
            - Male
          type: string
          description: '[Female - Female, Male - Male]'
          example: Female
        - enum:
            - 0
            - 1
          type: integer
          description: '[0 - Female, 1 - Male]'
          example: 0
    ASC.People.ApiModels.RequestDto.SignupAccountRequestDto:
      type: object
      properties:
        serializedProfile:
          type: string
          description: Third-party profile in the serialized format
          nullable: true
          example: some text
        employeeType:
          $ref: '#/components/schemas/ASC.Core.Users.EmployeeType'
        firstName:
          type: string
          description: First name
          nullable: true
          example: Winfield
        lastName:
          type: string
          description: Last name
          nullable: true
          example: Wyman
        email:
          type: string
          description: Email address
          format: email
          nullable: true
          example: Sydney_Roberts4@hotmail.com
        passwordHash:
          type: string
          description: Password hash
          nullable: true
          example: some text
        key:
          type: string
          description: Link key
          nullable: true
          example: some text
        culture:
          type: string
          description: Culture
          nullable: true
          example: some text
      additionalProperties: false
      description: Request parameters for creating a third-party account
    ASC.People.ApiModels.RequestDto.StartReassignRequestDto:
      type: object
      properties:
        fromUserId:
          type: string
          description: User ID whose data will be reassigned to another user
          format: uuid
          example: 75a5f745-f697-4418-b38d-0fe0d277e258
        toUserId:
          type: string
          description: User ID to whom all the data will be reassigned
          format: uuid
          example: 75a5f745-f697-4418-b38d-0fe0d277e258
        deleteProfile:
          type: boolean
          description: >-
            Specifies whether to delete a profile when the data reassignment
            will be finished or not
          example: true
      additionalProperties: false
      description: Request parameters for starting the reassignment process
    ASC.People.ApiModels.RequestDto.TerminateRequestDto:
      type: object
      properties:
        userId:
          type: string
          description: User ID whose data is reassigned/removed
          format: uuid
          example: aae1e103-bca5-9fa1-ba8c-42058b4abf28
      additionalProperties: false
      description: Request parameters for terminating the reassignment process
    ASC.People.ApiModels.RequestDto.ThumbnailsRequest:
      type: object
      properties:
        tmpFile:
          type: string
          description: Path to the temporary file
          nullable: true
          example: some text
        x:
          type: integer
          description: Horizontal coordinate
          format: int32
          example: 1234
        'y':
          type: integer
          description: Vertical coordinate
          format: int32
          example: 1234
        width:
          type: integer
          description: Thumbnail width
          format: int32
          example: 1234
        height:
          type: integer
          description: Thumbnail height
          format: int32
          example: 1234
      additionalProperties: false
      description: Thumbnail request parameters
    ASC.People.ApiModels.RequestDto.UpdateGroupRequest:
      type: object
      properties:
        groupManager:
          type: string
          description: Group manager ID
          format: uuid
          example: 75a5f745-f697-4418-b38d-0fe0d277e258
        groupName:
          type: string
          description: Group name
          nullable: true
          example: some text
        membersToAdd:
          type: array
          items:
            type: string
            format: uuid
          description: List of user IDs to add to the group
          nullable: true
          example:
            - 75a5f745-f697-4418-b38d-0fe0d277e258
        membersToRemove:
          type: array
          items:
            type: string
            format: uuid
          description: List of user IDs to remove from the group
          nullable: true
          example:
            - 75a5f745-f697-4418-b38d-0fe0d277e258
      additionalProperties: false
      description: Group request parameters
    ASC.People.ApiModels.RequestDto.UpdateMemberRequestDto:
      type: object
      properties:
        email:
          maxLength: 255
          minLength: 0
          type: string
          description: Email
          format: email
          nullable: true
          example: Sydney_Roberts4@hotmail.com
        password:
          type: string
          description: Password
          nullable: true
          example: vfmf2vO1Kp
        passwordHash:
          type: string
          description: Password hash
          nullable: true
          example: some text
        type:
          $ref: '#/components/schemas/ASC.Core.Users.EmployeeType'
        isUser:
          type: boolean
          description: Specifies if this is a guest or a user
          nullable: true
          example: true
        firstName:
          maxLength: 255
          minLength: 0
          type: string
          description: First name
          nullable: true
          example: Winfield
        lastName:
          maxLength: 255
          minLength: 0
          type: string
          description: Last name
          nullable: true
          example: Wyman
        department:
          type: array
          items:
            type: string
            format: uuid
          description: List of user departments
          nullable: true
          example:
            - 75a5f745-f697-4418-b38d-0fe0d277e258
        title:
          maxLength: 255
          minLength: 0
          type: string
          description: Title
          nullable: true
          example: legacy_1080p_small_wooden_mouse
        location:
          type: string
          description: Location
          nullable: true
          example: 001 Schroeder Run, New Tabithaport, Colombia
        sex:
          $ref: '#/components/schemas/ASC.People.ApiModels.RequestDto.SexEnum'
        birthday:
          $ref: '#/components/schemas/ASC.Api.Core.ApiDateTime'
        worksfrom:
          $ref: '#/components/schemas/ASC.Api.Core.ApiDateTime'
        comment:
          type: string
          description: Comment
          nullable: true
          example: some text
        contacts:
          type: array
          items:
            $ref: '#/components/schemas/ASC.Web.Api.Models.Contact'
          description: List of user contacts
          nullable: true
        files:
          type: string
          description: Avatar photo URL
          nullable: true
          example: some text
        fromInviteLink:
          type: boolean
          description: Specifies if the user is added via the invitation link or not
          example: true
        key:
          type: string
          description: Key
          nullable: true
          example: some text
        cultureName:
          type: string
          description: Language
          nullable: true
          example: some text
        target:
          type: string
          description: Target
          format: uuid
          example: 75a5f745-f697-4418-b38d-0fe0d277e258
        spam:
          type: boolean
          description: Spam
          nullable: true
          example: true
        userId:
          type: string
          description: User ID
          nullable: true
          example: '9846'
        disable:
          type: boolean
          description: Specifies whether to disable a user or not
          nullable: true
          example: true
      additionalProperties: false
      description: Request parameters for updating user information
    ASC.People.ApiModels.RequestDto.UpdateMembersQuotaRequestDto:
      type: object
      properties:
        userIds:
          type: array
          items:
            type: string
            format: uuid
          description: List of user IDs
          nullable: true
          example:
            - 75a5f745-f697-4418-b38d-0fe0d277e258
        quota:
          oneOf:
            - type: integer
              example: 1234
            - type: string
              example: some text
          description: Quota
      additionalProperties: false
      description: Request parameters for updating user information
    ASC.People.ApiModels.RequestDto.UpdateMembersRequestDto:
      type: object
      properties:
        userIds:
          type: array
          items:
            type: string
            format: uuid
          description: List of user IDs
          nullable: true
          example:
            - 75a5f745-f697-4418-b38d-0fe0d277e258
        resendAll:
          type: boolean
          description: >-
            Specifies whether to resend invitation letters to all the users or
            not
          example: true
      additionalProperties: false
      description: Request parameters for updating user information
    ASC.People.ApiModels.RequestDto.UpdatePhotoMemberRequest:
      type: object
      properties:
        files:
          type: string
          description: Avatar photo URL
          nullable: true
          example: some text
      additionalProperties: false
      description: Request parameters for updating user photo
    ASC.People.ApiModels.RequestDto.UserInvitation:
      type: object
      properties:
        email:
          type: string
          description: Email address
          format: email
          nullable: true
          example: Sydney_Roberts4@hotmail.com
        type:
          $ref: '#/components/schemas/ASC.Core.Users.EmployeeType'
      additionalProperties: false
    ASC.People.ApiModels.ResponseDto.AccountInfoDto:
      type: object
      properties:
        provider:
          type: string
          description: Provider
          nullable: true
          example: some text
        url:
          type: string
          description: URL
          format: uri
          nullable: true
          example: some text
        linked:
          type: boolean
          description: Specifies if an account is linked or not
          example: true
        class:
          type: string
          description: Class
          nullable: true
          example: some text
      additionalProperties: false
    ASC.People.ApiModels.ResponseDto.FileUploadResultDto:
      type: object
      properties:
        success:
          type: boolean
          description: Specifies if the operation is successful or not
          example: true
        data:
          description: Data
          nullable: true
          example:
            int: 1234
            string: some text
            boolean: true
        message:
          type: string
          description: Message
          nullable: true
          example: some text
      additionalProperties: false
      description: File upload result dto
    ASC.People.ApiModels.ResponseDto.GroupDto:
      type: object
      properties:
        name:
          type: string
          description: Name
          nullable: true
          example: Winfield Upton
        parent:
          type: string
          description: Parent
          format: uuid
          nullable: true
          example: 75a5f745-f697-4418-b38d-0fe0d277e258
        category:
          type: string
          description: Category
          format: uuid
          example: 75a5f745-f697-4418-b38d-0fe0d277e258
        id:
          type: string
          description: ID
          format: uuid
          example: aae1e103-bca5-9fa1-ba8c-42058b4abf28
        isLDAP:
          type: boolean
          description: Specifies if the LDAP settings are enabled for the group or not
          example: true
        manager:
          $ref: '#/components/schemas/ASC.Web.Api.Models.EmployeeFullDto'
        members:
          type: array
          items:
            $ref: '#/components/schemas/ASC.Web.Api.Models.EmployeeFullDto'
          description: List of members
          nullable: true
        shared:
          type: boolean
          description: Shared
          nullable: true
          example: true
        membersCount:
          type: integer
          description: Members count
          format: int32
          example: 1234
      additionalProperties: false
    ASC.People.ApiModels.ResponseDto.TaskProgressResponseDto:
      type: object
      properties:
        id:
          type: string
          description: ID
          nullable: true
          example: '9846'
        error:
          type: string
          description: Error
          nullable: true
          example: some text
        percentage:
          type: integer
          description: Percentage
          format: int32
          example: 1234
        isCompleted:
          type: boolean
          description: IsCompleted
          example: true
        status:
          $ref: '#/components/schemas/ASC.Common.Threading.DistributedTaskStatus'
      additionalProperties: false
    ASC.People.ApiModels.ResponseDto.ThumbnailsDataDto:
      type: object
      properties:
        original:
          type: string
          description: Original photo
          nullable: true
          example: default_user_photo_size_1280-1280.png
        retina:
          type: string
          description: Retina
          nullable: true
          example: default_user_photo_size_360-360.png
        max:
          type: string
          description: Maximum size
          nullable: true
          example: default_user_photo_size_200-200.png
        big:
          type: string
          description: Big
          nullable: true
          example: default_user_photo_size_82-82.png
        medium:
          type: string
          description: Medium
          nullable: true
          example: default_user_photo_size_48-48.png
        small:
          type: string
          description: Small
          nullable: true
          example: default_user_photo_size_32-32.png
      additionalProperties: false
    ASC.Web.Api.Models.Contact:
      type: object
      properties:
        type:
          type: string
          description: Contact type
          nullable: true
          example: GTalk
        value:
          type: string
          description: Contact value
          nullable: true
          example: my@gmail.com
      additionalProperties: false
    ASC.Web.Api.Models.EmployeeFullDto:
      type: object
      properties:
        id:
          type: string
          description: ID
          format: uuid
          example: '{00000000-0000-0000-0000-000000000000}'
        displayName:
          type: string
          description: Display name
          nullable: true
          example: Mike Zanyatski
        title:
          type: string
          description: Title
          nullable: true
          example: Manager
        avatar:
          type: string
          description: Avatar
          nullable: true
          example: some text
        avatarOriginal:
          type: string
          description: Original size avatar
          nullable: true
          example: some text
        avatarMax:
          type: string
          description: Maximum size avatar
          nullable: true
          example: some text
        avatarMedium:
          type: string
          description: Medium size avatar
          nullable: true
          example: some text
        avatarSmall:
          type: string
          description: Small avatar
          nullable: true
          example: url to small avatar
        profileUrl:
          type: string
          description: Profile URL
          nullable: true
          example: some text
        hasAvatar:
          type: boolean
          description: Specifies if the user has an avatar or not
          example: true
        isAnonim:
          type: boolean
          description: Specifies if the user is an anonim or not
          example: true
        firstName:
          type: string
          description: First name
          nullable: true
          example: Mike
        lastName:
          type: string
          description: Last name
          nullable: true
          example: Zanyatski
        userName:
          type: string
          description: Username
          nullable: true
          example: Mike.Zanyatski
        email:
          type: string
          description: Email
          format: email
          nullable: true
          example: my@gmail.com
        contacts:
          type: array
          items:
            $ref: '#/components/schemas/ASC.Web.Api.Models.Contact'
          description: List of contacts
          nullable: true
        birthday:
          $ref: '#/components/schemas/ASC.Api.Core.ApiDateTime'
        sex:
          type: string
          description: Sex
          nullable: true
          example: male
        status:
          $ref: '#/components/schemas/ASC.Core.Users.EmployeeStatus'
        activationStatus:
          $ref: '#/components/schemas/ASC.Core.Users.EmployeeActivationStatus'
        terminated:
          $ref: '#/components/schemas/ASC.Api.Core.ApiDateTime'
        department:
          type: string
          description: Department
          nullable: true
          example: Marketing
        workFrom:
          $ref: '#/components/schemas/ASC.Api.Core.ApiDateTime'
        groups:
          type: array
          items:
            $ref: '#/components/schemas/ASC.Web.Api.Models.GroupSummaryDto'
          description: List of groups
          nullable: true
        location:
          type: string
          description: Location
          nullable: true
          example: Palo Alto
        notes:
          type: string
          description: Notes
          nullable: true
          example: Notes to worker
        isAdmin:
          type: boolean
          description: Specifies if the user is an administrator or not
          example: false
        isRoomAdmin:
          type: boolean
          description: Specifies if the user is a room administrator or not
          example: true
        isLDAP:
          type: boolean
          description: Specifies if the LDAP settings are enabled for the user or not
          example: false
        listAdminModules:
          type: array
          items:
            type: string
          description: List of administrator modules
          nullable: true
          example: '["projects", "crm"]'
        isOwner:
          type: boolean
          description: Specifies if the user is a portal owner or not
          example: true
        isVisitor:
          type: boolean
          description: Specifies if the user is a portal visitor or not
          example: true
        isCollaborator:
          type: boolean
          description: Specifies if the user is a portal collaborator or not
          example: true
        cultureName:
          type: string
          description: Language
          nullable: true
          example: en-EN
        mobilePhone:
          type: string
          description: Mobile phone number
          nullable: true
          example: some text
        mobilePhoneActivationStatus:
          $ref: '#/components/schemas/ASC.Core.Users.MobilePhoneActivationStatus'
        isSSO:
          type: boolean
          description: Specifies if the SSO settings are enabled for the user or not
          example: false
        theme:
          $ref: '#/components/schemas/ASC.Web.Core.Users.DarkThemeSettingsType'
        quotaLimit:
          type: integer
          description: Quota limit
          format: int64
          nullable: true
          example: 1234
        usedSpace:
          type: number
          description: Portal used space
          format: double
          nullable: true
          example: 12345
        shared:
          type: boolean
          description: Shared
          nullable: true
          example: true
        isCustomQuota:
          type: boolean
          description: Specifies if the user has a custom quota or not
          nullable: true
          example: true
        loginEventId:
          type: integer
          description: Current login event ID
          format: int32
          nullable: true
          example: 1234
        createdBy:
          $ref: '#/components/schemas/ASC.Web.Api.Models.EmployeeDto'
        registrationDate:
          $ref: '#/components/schemas/ASC.Api.Core.ApiDateTime'
      additionalProperties: false
    ASC.Web.Core.Users.DarkThemeSettings:
      type: object
      properties:
        theme:
          $ref: '#/components/schemas/ASC.Web.Core.Users.DarkThemeSettingsType'
      additionalProperties: false
      description: ''
    ASC.Web.Core.Users.DarkThemeSettingsType:
      oneOf:
        - enum:
            - Base
            - Dark
            - System
          type: string
          description: '[Base - Base, Dark - Dark, System - System]'
          example: Base
        - enum:
            - 0
            - 1
            - 2
          type: integer
          description: '[0 - Base, 1 - Dark, 2 - System]'
          example: 0
    Microsoft.AspNetCore.Mvc.NoContentResult:
      type: object
      properties:
        statusCode:
          type: integer
          format: int32
          example: 1234
      additionalProperties: false
    System.Collections.Generic.KeyValuePair.System.String.Microsoft.Extensions.Primitives.StringValues:
      type: object
      properties:
        key:
          type: string
          nullable: true
          example: some text
        value:
          type: array
          items:
            type: string
          example:
            - some text
      additionalProperties: false
    ASC.FederatedLogin.OAuth20Token:
      type: object
      properties:
        access_token:
          type: string
          nullable: true
          example: some text
        refresh_token:
          type: string
          nullable: true
          example: some text
        expires_in:
          type: integer
          format: int64
          example: 1234
        client_id:
          type: string
          nullable: true
          example: some text
        client_secret:
          type: string
          nullable: true
          example: some text
        redirect_uri:
          type: string
          format: uri
          nullable: true
          example: some text
        timestamp:
          type: string
          format: date-time
          example: '2008-04-10T06:30:00.0000000+04:00'
        isExpired:
          type: boolean
          readOnly: true
          example: true
      additionalProperties: false
    ASC.Files.Core.ApiModels.FileShareParams:
      type: object
      properties:
        shareTo:
          type: string
          description: ID of the user with whom we want to share a file
          format: uuid
          example: 75a5f745-f697-4418-b38d-0fe0d277e258
        email:
          type: string
          description: User email address
          format: email
          nullable: true
          example: Sydney_Roberts4@hotmail.com
        access:
          $ref: '#/components/schemas/ASC.Files.Core.Security.FileShare'
      additionalProperties: false
    ASC.Files.Core.ApiModels.RequestDto.ArchiveRoomRequest:
      type: object
      properties:
        deleteAfter:
          type: boolean
          description: >-
            Specifies whether to archive a room after the editing session is
            finished or not
          example: true
      additionalProperties: false
      description: Parameters for archiving a room
    ASC.Files.Core.ApiModels.RequestDto.AutoCleanupRequestDto:
      type: object
      properties:
        set:
          type: boolean
          description: Enables the auto-clearing or not
          example: true
        gap:
          $ref: '#/components/schemas/ASC.Files.Core.DateToAutoCleanUp'
      additionalProperties: false
      description: Auto-clearing request parameters
    ASC.Files.Core.ApiModels.RequestDto.BaseBatchRequestDto:
      type: object
      properties:
        folderIds:
          type: array
          items:
            anyOf:
              - type: integer
                example: 1234
              - type: string
                example: some text
          description: List of folder IDs
          nullable: true
        fileIds:
          type: array
          items:
            anyOf:
              - type: integer
                example: 1234
              - type: string
                example: some text
          description: List of file IDs
          nullable: true
      additionalProperties: false
      description: Base batch request parameters
    ASC.Files.Core.ApiModels.RequestDto.BatchRequestDto:
      type: object
      properties:
        folderIds:
          type: array
          items:
            anyOf:
              - type: integer
                example: 1234
              - type: string
                example: some text
          description: List of folder IDs
          nullable: true
        fileIds:
          type: array
          items:
            anyOf:
              - type: integer
                example: 1234
              - type: string
                example: some text
          description: List of file IDs
          nullable: true
        destFolderId:
          oneOf:
            - type: integer
              example: 1234
            - type: string
              example: some text
          description: Destination folder ID
        conflictResolveType:
          $ref: >-
            #/components/schemas/ASC.Web.Files.Services.WCFService.FileOperations.FileConflictResolveType
        deleteAfter:
          type: boolean
          description: >-
            Specifies whether to delete a folder after the editing session is
            finished or not
          example: true
        content:
          type: boolean
          description: Content
          example: true
      additionalProperties: false
      description: Request parameters for copying/moving files
    ASC.Files.Core.ApiModels.RequestDto.BatchTagsRequestDto:
      type: object
      properties:
        names:
          type: array
          items:
            type: string
          description: Tag names
          nullable: true
          example:
            - some text
      additionalProperties: false
      description: Request parameters for adding tags
    ASC.Files.Core.ApiModels.RequestDto.ChangeHistory:
      type: object
      properties:
        version:
          type: integer
          description: File version
          format: int32
          example: 1234
        continueVersion:
          type: boolean
          description: Marks as a version or revision
          example: true
      additionalProperties: false
      description: Parameters for changing version history
    ASC.Files.Core.ApiModels.RequestDto.CheckConversionRequestDto.System.Int32:
      type: object
      properties:
        fileId:
          type: integer
          description: File ID
          format: int32
          example: 9846
        sync:
          type: boolean
          description: Specifies if the conversion process is synchronous or not
          example: true
        startConvert:
          type: boolean
          description: Specifies whether to start a conversion process or not
          example: true
        version:
          type: integer
          description: File version
          format: int32
          example: 1234
        password:
          type: string
          description: Password
          nullable: true
          example: vfmf2vO1Kp
        outputType:
          type: string
          description: Output type
          nullable: true
          example: some text
        createNewIfExist:
          type: boolean
          description: Create new if exists
          example: true
      additionalProperties: false
      description: Request parameters for starting file conversion
    ASC.Files.Core.ApiModels.RequestDto.CheckDocServiceUrlRequestDto:
      type: object
      properties:
        docServiceUrl:
          type: string
          description: The Document Server address
          nullable: true
          example: some text
        docServiceUrlInternal:
          type: string
          description: The Document Server address in the local private network
          nullable: true
          example: some text
        docServiceUrlPortal:
          type: string
          description: The Community Server address
          nullable: true
          example: some text
      additionalProperties: false
      description: Request parameters for checking the document service location
    ASC.Files.Core.ApiModels.RequestDto.CheckFillFormDraft:
      type: object
      properties:
        version:
          type: integer
          description: File version
          format: int32
          example: 1234
        action:
          type: string
          description: Action with a form
          nullable: true
          example: some text
        requestView:
          type: boolean
          description: Specifies whether to request a form for viewing or not
          readOnly: true
          example: true
        requestEmbedded:
          type: boolean
          description: Specifies whether to request an embedded form or not
          readOnly: true
          example: true
      additionalProperties: false
      description: Parameters for checking a form draft
    ASC.Files.Core.ApiModels.RequestDto.CheckUploadRequest:
      type: object
      properties:
        filesTitle:
          type: array
          items:
            type: string
          description: File title
          nullable: true
          example:
            - some text
      additionalProperties: false
      description: Parameters for checking files uploading
    ASC.Files.Core.ApiModels.RequestDto.CopyAs.System.Text.Json.JsonElement:
      type: object
      properties:
        destTitle:
          type: string
          description: Destination file title
          nullable: true
          example: some text
        destFolderId:
          oneOf:
            - type: integer
              example: 1234
            - type: string
              example: some text
          description: Destination folder ID
        enableExternalExt:
          type: boolean
          description: >-
            Specifies whether to allow the creation of external extension files
            or not
          example: true
        password:
          type: string
          description: Password
          nullable: true
          example: vfmf2vO1Kp
        toForm:
          type: boolean
          description: Convert to form
          example: true
      additionalProperties: false
      description: Parameters for copying a file
    ASC.Files.Core.ApiModels.RequestDto.CoverRequestDto:
      type: object
      properties:
        color:
          type: string
          description: Color
          nullable: true
          example: some text
        cover:
          type: string
          description: Cover
          nullable: true
          example: some text
      additionalProperties: false
      description: Parameters to change the room cover
    ASC.Files.Core.ApiModels.RequestDto.CreateFile.System.Text.Json.JsonElement:
      type: object
      properties:
        title:
          maxLength: 165
          minLength: 0
          type: string
          description: File title
          nullable: true
          example: legacy_1080p_small_wooden_mouse
        templateId:
          oneOf:
            - type: integer
              example: 1234
            - type: string
              example: some text
          description: Template file ID
        enableExternalExt:
          type: boolean
          description: >-
            Specifies whether to allow the creation of external extension files
            or not
          example: true
        formId:
          type: integer
          description: Form ID
          format: int32
          example: 1234
      additionalProperties: false
      description: Parameters for creating a file
    ASC.Files.Core.ApiModels.RequestDto.CreateFolder:
      type: object
      properties:
        title:
          maxLength: 165
          minLength: 0
          type: string
          description: Folder title
          nullable: true
          example: legacy_1080p_small_wooden_mouse
      additionalProperties: false
      description: 'Parameters for creating a folder: Title (string) - new folder title'
    ASC.Files.Core.ApiModels.RequestDto.CreateRoomRequestDto:
      type: object
      properties:
        title:
          maxLength: 170
          minLength: 0
          type: string
          description: Room name
          nullable: true
          example: legacy_1080p_small_wooden_mouse
        quota:
          type: integer
          description: Room quota
          format: int64
          nullable: true
          example: 1234
        indexing:
          type: boolean
          description: Indexing
          nullable: true
          example: true
        denyDownload:
          type: boolean
          description: Room quota
          nullable: true
          example: true
        lifetime:
          $ref: '#/components/schemas/ASC.Files.Core.ApiModels.RoomDataLifetimeDto'
        watermark:
          $ref: >-
            #/components/schemas/ASC.Files.Core.ApiModels.RequestDto.WatermarkRequestDto
        logo:
          $ref: '#/components/schemas/ASC.Files.Core.ApiModels.RequestDto.LogoRequest'
        tags:
          type: array
          items:
            type: string
          description: List of tags
          nullable: true
          example:
            - some text
        color:
          maxLength: 6
          minLength: 0
          type: string
          description: Color
          nullable: true
          example: some text
        cover:
          maxLength: 50
          minLength: 0
          type: string
          description: Cover
          nullable: true
          example: some text
        roomType:
          $ref: '#/components/schemas/ASC.Files.Core.ApiModels.RequestDto.RoomType'
        private:
          type: boolean
          description: Private
          example: true
        share:
          type: array
          items:
            $ref: '#/components/schemas/ASC.Files.Core.ApiModels.FileShareParams'
          description: Collection of sharing parameters
          nullable: true
      additionalProperties: false
      description: Request parameters for creating a room
    ASC.Files.Core.ApiModels.RequestDto.CreateTagRequestDto:
      type: object
      properties:
        name:
          maxLength: 255
          minLength: 0
          type: string
          description: Tag name
          nullable: true
          example: Winfield Upton
      additionalProperties: false
      description: Request parameters for creating a tag
    ASC.Files.Core.ApiModels.RequestDto.CreateTextOrHtmlFile:
      required:
        - title
      type: object
      properties:
        title:
          maxLength: 165
          minLength: 0
          type: string
          description: File title
          example: legacy_1080p_small_wooden_mouse
        content:
          type: string
          description: File contents
          nullable: true
          example: some text
        createNewIfExist:
          type: boolean
          description: Create new if exist
          example: true
      additionalProperties: false
      description: Parameters for creating an HTML file
    ASC.Files.Core.ApiModels.RequestDto.CreateThirdPartyRoom:
      type: object
      properties:
        createAsNewFolder:
          type: boolean
          description: Create as new folder
          example: true
        title:
          type: string
          description: Room name
          nullable: true
          example: legacy_1080p_small_wooden_mouse
        roomType:
          $ref: '#/components/schemas/ASC.Files.Core.ApiModels.RequestDto.RoomType'
        private:
          type: boolean
          description: Private
          example: true
        indexing:
          type: boolean
          description: Indexing
          example: true
        denyDownload:
          type: boolean
          description: Deny download
          example: true
        color:
          type: string
          description: Color
          nullable: true
          example: some text
        cover:
          type: string
          description: Cover
          nullable: true
          example: some text
        tags:
          type: array
          items:
            type: string
          description: Tags
          nullable: true
          example:
            - some text
        logo:
          $ref: '#/components/schemas/ASC.Files.Core.ApiModels.RequestDto.LogoRequest'
      additionalProperties: false
      description: Parameters for creating a room
    ASC.Files.Core.ApiModels.RequestDto.Delete:
      type: object
      properties:
        deleteAfter:
          type: boolean
          description: >-
            Specifies whether to delete a file after the editing session is
            finished or not
          example: true
        immediately:
          type: boolean
          description: >-
            Specifies whether to move a file to the \"Trash\" folder or delete
            it immediately
          example: true
      additionalProperties: false
      description: Parameters for deleting a file
    ASC.Files.Core.ApiModels.RequestDto.DeleteBatchRequestDto:
      type: object
      properties:
        folderIds:
          type: array
          items:
            anyOf:
              - type: integer
                example: 1234
              - type: string
                example: some text
          description: List of folder IDs
          nullable: true
        fileIds:
          type: array
          items:
            anyOf:
              - type: integer
                example: 1234
              - type: string
                example: some text
          description: List of file IDs
          nullable: true
        deleteAfter:
          type: boolean
          description: >-
            Specifies whether to delete a file after the editing session is
            finished or not
          example: true
        immediately:
          type: boolean
          description: >-
            Specifies whether to move a file to the \"Trash\" folder or delete
            it immediately
          example: true
      additionalProperties: false
      description: Request parameters for deleting files
    ASC.Files.Core.ApiModels.RequestDto.DeleteFolder:
      type: object
      properties:
        deleteAfter:
          type: boolean
          description: >-
            Specifies whether to delete a folder after the editing session is
            finished or not
          example: true
        immediately:
          type: boolean
          description: >-
            Specifies whether to move a folder to the \"Trash\" folder or delete
            it immediately
          example: true
      additionalProperties: false
      description: Parameters for deleting a folder
    ASC.Files.Core.ApiModels.RequestDto.DeleteRoomRequest:
      type: object
      properties:
        deleteAfter:
          type: boolean
          description: >-
            Specifies whether to delete a room after the editing session is
            finished or not
          example: true
      additionalProperties: false
      description: Parameters for deleting a room
    ASC.Files.Core.ApiModels.RequestDto.DisplayRequestDto:
      type: object
      properties:
        set:
          type: boolean
          description: Specifies whether to set the specified settings or not
          example: true
      additionalProperties: false
      description: Settings request parameters
    ASC.Files.Core.ApiModels.RequestDto.DownloadRequestDto:
      type: object
      properties:
        folderIds:
          type: array
          items:
            anyOf:
              - type: integer
                example: 1234
              - type: string
                example: some text
          description: List of folder IDs
          nullable: true
        fileIds:
          type: array
          items:
            anyOf:
              - type: integer
                example: 1234
              - type: string
                example: some text
          description: List of file IDs
          nullable: true
        fileConvertIds:
          type: array
          items:
            $ref: >-
              #/components/schemas/ASC.Files.Core.ApiModels.RequestDto.DownloadRequestItemDto
          description: List of file IDs which will be converted
          nullable: true
      additionalProperties: false
      description: Request parameters for downloading files
    ASC.Files.Core.ApiModels.RequestDto.DownloadRequestItemDto:
      type: object
      properties:
        key:
          oneOf:
            - type: integer
              example: 1234
            - type: string
              example: some text
        value:
          type: string
          nullable: true
          example: some text
        password:
          type: string
          nullable: true
          example: vfmf2vO1Kp
      additionalProperties: false
    ASC.Files.Core.ApiModels.RequestDto.DuplicateRequestDto:
      type: object
      properties:
        folderIds:
          type: array
          items:
            anyOf:
              - type: integer
                example: 1234
              - type: string
                example: some text
          description: List of folder IDs
          nullable: true
        fileIds:
          type: array
          items:
            anyOf:
              - type: integer
                example: 1234
              - type: string
                example: some text
          description: List of file IDs
          nullable: true
      additionalProperties: false
    ASC.Files.Core.ApiModels.RequestDto.FileLinkRequest:
      type: object
      properties:
        linkId:
          type: string
          description: Link ID
          format: uuid
          example: 75a5f745-f697-4418-b38d-0fe0d277e258
        access:
          $ref: '#/components/schemas/ASC.Files.Core.Security.FileShare'
        expirationDate:
          $ref: '#/components/schemas/ASC.Api.Core.ApiDateTime'
        internal:
          type: boolean
          description: Link scope
          example: true
        primary:
          type: boolean
          description: Primary link flag
          example: true
      additionalProperties: false
      description: External link parameters
    ASC.Files.Core.ApiModels.RequestDto.GetReferenceDataDto.System.Int32:
      type: object
      properties:
        fileKey:
          type: integer
          description: >-
            The unique document identifier used by the service to get a link to
            the file
          format: int32
          example: 1234
        instanceId:
          type: string
          description: The unique system identifier
          nullable: true
          example: '9846'
        sourceFileId:
          type: integer
          description: Source file ID
          format: int32
          example: 1234
        path:
          type: string
          description: The file name or relative path for the formula editor
          nullable: true
          example: some text
        link:
          type: string
          description: Link to file
          nullable: true
          example: some text
      additionalProperties: false
      description: Request parameters for getting reference data
    ASC.Files.Core.ApiModels.RequestDto.LockFileParameters:
      type: object
      properties:
        lockFile:
          type: boolean
          description: Specifies whether to lock a file or not
          example: true
      additionalProperties: false
      description: Parameters for locking a file
    ASC.Files.Core.ApiModels.RequestDto.LogoRequest:
      type: object
      properties:
        tmpFile:
          type: string
          description: The path to the temporary image file
          nullable: true
          example: some text
        x:
          type: integer
          description: The X coordinate of the rectangle starting point
          format: int32
          example: 1234
        'y':
          type: integer
          description: The Y coordinate of the rectangle starting point
          format: int32
          example: 1234
        width:
          type: integer
          description: The rectangle width
          format: int32
          example: 1234
        height:
          type: integer
          description: The rectangle height
          format: int32
          example: 1234
      additionalProperties: false
      description: Logo request parameters
    ASC.Files.Core.ApiModels.RequestDto.OrderRequestDto:
      type: object
      properties:
        order:
          maximum: 2147483647
          minimum: 1
          type: integer
          description: Order
          format: int32
          example: 1234
      additionalProperties: false
      description: Order request parameters
    ASC.Files.Core.ApiModels.RequestDto.OrdersItemRequestDto.System.Int32:
      type: object
      properties:
        order:
          maximum: 2147483647
          minimum: 1
          type: integer
          description: Order
          format: int32
          example: 1234
        entryId:
          type: integer
          format: int32
          example: 1234
        entryType:
          $ref: '#/components/schemas/ASC.Files.Core.FileEntryType'
      additionalProperties: false
    ASC.Files.Core.ApiModels.RequestDto.OrdersRequestDto.System.Int32:
      type: object
      properties:
        items:
          type: array
          items:
            $ref: >-
              #/components/schemas/ASC.Files.Core.ApiModels.RequestDto.OrdersItemRequestDto.System.Int32
          nullable: true
      additionalProperties: false
    ASC.Files.Core.ApiModels.RequestDto.RoomInvitation:
      type: object
      properties:
        email:
          type: string
          description: Email address
          format: email
          nullable: true
          example: Sydney_Roberts4@hotmail.com
        id:
          type: string
          description: ID of the user with whom we want to share a room
          format: uuid
          example: aae1e103-bca5-9fa1-ba8c-42058b4abf28
        access:
          $ref: '#/components/schemas/ASC.Files.Core.Security.FileShare'
      additionalProperties: false
    ASC.Files.Core.ApiModels.RequestDto.RoomInvitationRequest:
      type: object
      properties:
        invitations:
          type: array
          items:
            $ref: >-
              #/components/schemas/ASC.Files.Core.ApiModels.RequestDto.RoomInvitation
          description: Collection of invitation parameters
          nullable: true
        notify:
          type: boolean
          description: Notifies users about the shared room or not
          example: true
        message:
          type: string
          description: Message to send when notifying about the shared room
          nullable: true
          example: some text
        culture:
          type: string
          description: Culture
          nullable: true
          example: some text
      additionalProperties: false
      description: Request parameters for inviting users to a room
    ASC.Files.Core.ApiModels.RequestDto.RoomLinkRequest:
      type: object
      properties:
        linkId:
          type: string
          description: Link ID
          format: uuid
          example: 75a5f745-f697-4418-b38d-0fe0d277e258
        access:
          $ref: '#/components/schemas/ASC.Files.Core.Security.FileShare'
        expirationDate:
          $ref: '#/components/schemas/ASC.Api.Core.ApiDateTime'
        title:
          maxLength: 255
          minLength: 0
          type: string
          description: Link name
          nullable: true
          example: legacy_1080p_small_wooden_mouse
        linkType:
          $ref: '#/components/schemas/ASC.Files.Core.ApiModels.ResponseDto.LinkType'
        password:
          maxLength: 255
          minLength: 0
          type: string
          description: Link password
          nullable: true
          example: vfmf2vO1Kp
        denyDownload:
          type: boolean
          description: Specifies whether downloading a file from a link is disabled or not
          example: true
      additionalProperties: false
      description: Link parameters
    ASC.Files.Core.ApiModels.RequestDto.RoomType:
      oneOf:
        - enum:
            - FillingFormsRoom
            - EditingRoom
            - CustomRoom
            - PublicRoom
            - VirtualDataRoom
          type: string
          description: >-
            [FillingFormsRoom - Form filling room, EditingRoom - Collaboration
            room, CustomRoom - Custom room, PublicRoom - Public room,
            VirtualDataRoom - Virtual data room]
          example: FillingFormsRoom
        - enum:
            - 1
            - 2
            - 5
            - 6
            - 8
          type: integer
          description: >-
            [1 - Form filling room, 2 - Collaboration room, 5 - Custom room, 6 -
            Public room, 8 - Virtual data room]
          example: 1
    ASC.Files.Core.ApiModels.RequestDto.SaveAsPdf.System.Int32:
      type: object
      properties:
        folderId:
          type: integer
          description: Folder ID
          format: int32
          example: 9846
        title:
          type: string
          description: File title
          nullable: true
          example: legacy_1080p_small_wooden_mouse
      additionalProperties: false
      description: Parameters for saving file as pdf
    ASC.Files.Core.ApiModels.RequestDto.SessionRequest:
      type: object
      properties:
        fileName:
          type: string
          description: File name
          nullable: true
          example: some text
        fileSize:
          type: integer
          description: File length in bytes
          format: int64
          example: 1234
        relativePath:
          type: string
          description: Relative path to the folder
          nullable: true
          example: some text
        createOn:
          $ref: '#/components/schemas/ASC.Api.Core.ApiDateTime'
        encrypted:
          type: boolean
          description: Specifies whether to encrypt a file or not
          example: true
        createNewIfExist:
          type: boolean
          description: Create new if exists
          example: true
      additionalProperties: false
      description: Session parameters
    ASC.Files.Core.ApiModels.RequestDto.SettingsRequestDto:
      type: object
      properties:
        set:
          type: boolean
          description: Specifies whether to set the specified settings or not
          example: true
      additionalProperties: false
      description: Settings request parameters
    ASC.Files.Core.ApiModels.RequestDto.StartEdit:
      type: object
      properties:
        editingAlone:
          type: boolean
          description: >-
            Specifies whether to share a file with other users for editing or
            not
          example: true
      additionalProperties: false
      description: Parameters for starting file editing
    ASC.Files.Core.ApiModels.RequestDto.TemplatesRequestDto:
      type: object
      properties:
        fileIds:
          type: array
          items:
            type: integer
            format: int32
          description: List of file IDs
          nullable: true
          example:
            - 1234
      additionalProperties: false
      description: Request parameters for adding files to the template list
    ASC.Files.Core.ApiModels.RequestDto.ThirdPartyBackupRequestDto:
      type: object
      properties:
        url:
          type: string
          description: Connection URL for the sharepoint
          nullable: true
          example: some text
        login:
          type: string
          description: Login
          nullable: true
          example: some text
        password:
          type: string
          description: Password
          nullable: true
          example: vfmf2vO1Kp
        token:
          type: string
          description: Authentication token
          nullable: true
          example: some text
        customerTitle:
          type: string
          description: Customer title
          nullable: true
          example: some text
        providerKey:
          type: string
          description: Provider key
          nullable: true
          example: some text
      additionalProperties: false
      description: Third-party backup request parameters
    ASC.Files.Core.ApiModels.RequestDto.ThirdPartyRequestDto:
      type: object
      properties:
        url:
          type: string
          description: Connection URL for the sharepoint
          nullable: true
          example: some text
        login:
          type: string
          description: Login
          nullable: true
          example: some text
        password:
          type: string
          description: Password
          nullable: true
          example: vfmf2vO1Kp
        token:
          type: string
          description: Authentication token
          nullable: true
          example: some text
        customerTitle:
          type: string
          description: Customer title
          nullable: true
          example: some text
        providerKey:
          type: string
          description: Provider key
          nullable: true
          example: some text
        providerId:
          type: integer
          description: Provider ID
          format: int32
          nullable: true
          example: 1234
      additionalProperties: false
      description: Third-party request parameters
    ASC.Files.Core.ApiModels.RequestDto.UpdateComment:
      type: object
      properties:
        version:
          type: integer
          description: File version
          format: int32
          example: 1234
        comment:
          type: string
          description: Comment text
          nullable: true
          example: some text
      additionalProperties: false
      description: Parameters for updating a comment
    ASC.Files.Core.ApiModels.RequestDto.UpdateFile:
      type: object
      properties:
        title:
          type: string
          description: File title
          nullable: true
          example: legacy_1080p_small_wooden_mouse
        lastVersion:
          type: integer
          description: Number of the latest file version
          format: int32
          example: 1234
      additionalProperties: false
      description: Parameters for updating a file
    ASC.Files.Core.ApiModels.RequestDto.UpdateRoomRequest:
      type: object
      properties:
        title:
          maxLength: 170
          minLength: 0
          type: string
          description: Room name
          nullable: true
          example: legacy_1080p_small_wooden_mouse
        quota:
          type: integer
          description: Room quota
          format: int64
          nullable: true
          example: 1234
        indexing:
          type: boolean
          description: Indexing
          nullable: true
          example: true
        denyDownload:
          type: boolean
          description: Room quota
          nullable: true
          example: true
        lifetime:
          $ref: '#/components/schemas/ASC.Files.Core.ApiModels.RoomDataLifetimeDto'
        watermark:
          $ref: >-
            #/components/schemas/ASC.Files.Core.ApiModels.RequestDto.WatermarkRequestDto
        logo:
          $ref: '#/components/schemas/ASC.Files.Core.ApiModels.RequestDto.LogoRequest'
        tags:
          type: array
          items:
            type: string
          description: List of tags
          nullable: true
          example:
            - some text
        color:
          maxLength: 6
          minLength: 0
          type: string
          description: Color
          nullable: true
          example: some text
        cover:
          maxLength: 50
          minLength: 0
          type: string
          description: Cover
          nullable: true
          example: some text
      additionalProperties: false
      description: Parameters for updating a room
    ASC.Files.Core.ApiModels.RequestDto.UpdateRoomsQuotaRequestDto.System.Int32:
      type: object
      properties:
        roomIds:
          type: array
          items:
            anyOf:
              - type: integer
                example: 1234
              - type: string
                example: some text
          description: List of room IDs
          nullable: true
        quota:
          type: integer
          description: Room quota
          format: int64
          example: 1234
      additionalProperties: false
      description: Request parameters for updating room
    ASC.Files.Core.ApiModels.RequestDto.UpdateRoomsRoomIdsRequestDto.System.Int32:
      type: object
      properties:
        roomIds:
          type: array
          items:
            anyOf:
              - type: integer
                example: 1234
              - type: string
                example: some text
          description: List of room IDs
          nullable: true
      additionalProperties: false
      description: Request parameters for updating room
    ASC.Files.Core.ApiModels.RequestDto.UploadRequestDto:
      type: object
      properties:
        file:
          type: string
          description: File
          format: binary
          nullable: true
        contentType:
          $ref: '#/components/schemas/System.Net.Mime.ContentType'
        contentDisposition:
          $ref: '#/components/schemas/System.Net.Mime.ContentDisposition'
        files:
          type: array
          items:
            type: string
            format: binary
          description: List of files when specified as multipart/form-data
          nullable: true
        createNewIfExist:
          type: boolean
          description: Specifies whether to create a new file if it already exists or not
          example: true
        storeOriginalFileFlag:
          type: boolean
          description: >-
            Specifies whether to upload documents in the original formats as
            well or not
          nullable: true
          example: true
        keepConvertStatus:
          type: boolean
          description: Specifies whether to keep the file converting status or not
          example: true
        stream:
          type: string
          description: Request input stream
          format: binary
          nullable: true
      additionalProperties: false
      description: Request parameters for uploading a file
    ASC.Files.Core.ApiModels.RequestDto.UserInvitation:
      type: object
      properties:
        usersIds:
          type: array
          items:
            type: string
            format: uuid
          description: List of user IDs
          nullable: true
          example:
            - 75a5f745-f697-4418-b38d-0fe0d277e258
        resendAll:
          type: boolean
          description: Resend all
          example: true
      additionalProperties: false
      description: User invitation parameters
    ASC.Files.Core.ApiModels.RequestDto.WatermarkRequestDto:
      type: object
      properties:
        enabled:
          type: boolean
          description: Specifies whether watermarks are on or off
          nullable: true
          example: true
        additions:
          $ref: '#/components/schemas/ASC.Files.Core.VirtualRooms.WatermarkAdditions'
        text:
          maxLength: 255
          minLength: 0
          type: string
          description: Watermark Text
          nullable: true
          example: some text
        rotate:
          type: integer
          description: Watermark text and image rotate
          format: int32
          example: 1234
        imageScale:
          type: integer
          description: Watermark image scale
          format: int32
          example: 1234
        imageUrl:
          type: string
          description: The path to the temporary image file
          nullable: true
          example: some text
        imageHeight:
          type: number
          description: Watermark image height
          format: double
          example: -8.5
        imageWidth:
          type: number
          description: Watermark image width
          format: double
          example: -8.5
      additionalProperties: false
      description: Request parameters for adding watermarks
    ASC.Files.Core.ApiModels.ResponseDto.AnonymousConfigDto:
      type: object
      properties:
        request:
          type: boolean
          description: Request
          example: true
      additionalProperties: false
    ASC.Files.Core.ApiModels.ResponseDto.CheckDestFolderDto:
      type: object
      properties:
        result:
          $ref: >-
            #/components/schemas/ASC.Files.Core.ApiModels.ResponseDto.CheckDestFolderResult
        files:
          type: array
          items:
            $ref: >-
              #/components/schemas/ASC.Files.Core.ApiModels.ResponseDto.FileEntryDto
          description: Files
          nullable: true
      additionalProperties: false
    ASC.Files.Core.ApiModels.ResponseDto.CheckDestFolderResult:
      oneOf:
        - enum:
            - AllAllowed
            - PartAllowed
            - NoneAllowed
          type: string
          description: >-
            [AllAllowed - All allowed, PartAllowed - Part allowed, NoneAllowed -
            None allowed]
          example: AllAllowed
        - enum:
            - 0
            - 1
            - 2
          type: integer
          description: '[0 - All allowed, 1 - Part allowed, 2 - None allowed]'
          example: 0
    ASC.Files.Core.ApiModels.ResponseDto.ConfigurationDto.System.Int32:
      type: object
      properties:
        document:
          $ref: >-
            #/components/schemas/ASC.Files.Core.ApiModels.ResponseDto.DocumentConfigDto
        documentType:
          type: string
          description: Document type
          nullable: true
          example: some text
        editorConfig:
          $ref: >-
            #/components/schemas/ASC.Files.Core.ApiModels.ResponseDto.EditorConfigurationDto
        editorType:
          $ref: >-
            #/components/schemas/ASC.Web.Files.Services.DocumentService.EditorType
        editorUrl:
          type: string
          description: Editor URL
          format: uri
          nullable: true
          example: some text
        token:
          type: string
          description: Token
          nullable: true
          example: some text
        type:
          type: string
          description: Platform type
          nullable: true
          example: some text
        file:
          $ref: >-
            #/components/schemas/ASC.Files.Core.ApiModels.ResponseDto.FileDto.System.Int32
        errorMessage:
          type: string
          description: Error message
          nullable: true
          example: some text
        startFilling:
          type: boolean
          description: Specifies if the filling has started or not
          nullable: true
          example: true
        fillingSessionId:
          type: string
          description: Filling session Id
          nullable: true
          example: some text
      additionalProperties: false
    ASC.Files.Core.ApiModels.ResponseDto.ConversationResultDto:
      type: object
      properties:
        id:
          type: string
          description: Operation ID
          nullable: true
          example: '9846'
        Operation:
          $ref: >-
            #/components/schemas/ASC.Web.Files.Services.WCFService.FileOperations.FileOperationType
        progress:
          type: integer
          description: Operation progress
          format: int32
          example: 1234
        source:
          type: string
          description: Source file
          nullable: true
          example: some text
        result:
          description: Resulting file
          nullable: true
          example:
            int: 1234
            string: some text
            boolean: true
        error:
          type: string
          description: Error
          nullable: true
          example: some text
        processed:
          type: string
          description: Specifies if the operation is processed or not
          nullable: true
          example: some text
      additionalProperties: false
      description: Result of file conversation operation.
    ASC.Files.Core.ApiModels.ResponseDto.CoversResultDto:
      type: object
      properties:
        id:
          type: string
          nullable: true
          example: '9846'
        data:
          type: string
          nullable: true
          example: some text
      additionalProperties: false
    ASC.Files.Core.ApiModels.ResponseDto.CustomerConfigDto:
      type: object
      properties:
        address:
          type: string
          description: Address
          nullable: true
          example: some text
        logo:
          type: string
          description: Logo
          nullable: true
          example: some text
        logoDark:
          type: string
          description: Dark logo
          nullable: true
          example: some text
        mail:
          type: string
          description: Mail
          nullable: true
          example: some text
        name:
          type: string
          description: Name
          nullable: true
          example: Winfield Upton
        www:
          type: string
          description: Site
          nullable: true
          example: some text
      additionalProperties: false
    ASC.Files.Core.ApiModels.ResponseDto.CustomizationConfigDto:
      type: object
      properties:
        about:
          type: boolean
          description: About
          example: true
        customer:
          $ref: >-
            #/components/schemas/ASC.Files.Core.ApiModels.ResponseDto.CustomerConfigDto
        anonymous:
          $ref: >-
            #/components/schemas/ASC.Files.Core.ApiModels.ResponseDto.AnonymousConfigDto
        feedback:
          $ref: >-
            #/components/schemas/ASC.Web.Files.Services.DocumentService.FeedbackConfig
        forcesave:
          type: boolean
          description: Forcesave
          nullable: true
          example: true
        goback:
          $ref: >-
            #/components/schemas/ASC.Web.Files.Services.DocumentService.GobackConfig
        logo:
          $ref: >-
            #/components/schemas/ASC.Files.Core.ApiModels.ResponseDto.LogoConfigDto
        mentionShare:
          type: boolean
          description: MentionShare
          example: true
        reviewDisplay:
          type: string
          description: Review display
          nullable: true
          example: some text
        submitForm:
          type: boolean
          description: Submit form
          example: true
      additionalProperties: false
    ASC.Files.Core.ApiModels.ResponseDto.DocServiceUrlDto:
      required:
        - docServicePortalUrl
        - docServiceUrl
        - docServiceUrlApi
        - docServiceUrlInternal
        - isDefault
        - version
      type: object
      properties:
        version:
          type: string
          description: Version
          nullable: true
          example: some text
        docServiceUrlApi:
          type: string
          description: Doc service url api
          nullable: true
          example: some text
        docServiceUrl:
          type: string
          description: Doc service url
          nullable: true
          example: some text
        docServiceUrlInternal:
          type: string
          description: Doc service url internal
          nullable: true
          example: some text
        docServicePortalUrl:
          type: string
          description: Doc service portal url
          nullable: true
          example: some text
        isDefault:
          type: boolean
          description: Is default
          example: true
      additionalProperties: false
    ASC.Files.Core.ApiModels.ResponseDto.DocumentBuilderTaskDto:
      type: object
      properties:
        id:
          type: string
          description: Id
          nullable: true
          example: '9846'
        error:
          type: string
          description: Error
          nullable: true
          example: some text
        percentage:
          type: integer
          description: Percentage
          format: int32
          example: 1234
        isCompleted:
          type: boolean
          description: Is completed
          example: true
        status:
          $ref: '#/components/schemas/ASC.Common.Threading.DistributedTaskStatus'
        resultFileId:
          description: Result file id
          nullable: true
          example:
            int: 1234
            string: some text
            boolean: true
        resultFileName:
          type: string
          description: Result file name
          nullable: true
          example: some text
        resultFileUrl:
          type: string
          description: Result file url
          nullable: true
          example: some text
      additionalProperties: false
    ASC.Files.Core.ApiModels.ResponseDto.DocumentConfigDto:
      type: object
      properties:
        fileType:
          type: string
          description: File type
          nullable: true
          example: some text
        info:
          $ref: >-
            #/components/schemas/ASC.Files.Core.ApiModels.ResponseDto.InfoConfigDto
        isLinkedForMe:
          type: boolean
          description: Is linked for me
          example: true
        key:
          type: string
          description: Key
          nullable: true
          example: some text
        permissions:
          $ref: >-
            #/components/schemas/ASC.Web.Files.Services.DocumentService.PermissionsConfig
        sharedLinkParam:
          type: string
          description: Shared link param
          nullable: true
          example: some text
        sharedLinkKey:
          type: string
          description: Shared link key
          nullable: true
          example: some text
        referenceData:
          $ref: >-
            #/components/schemas/ASC.Web.Files.Services.DocumentService.FileReferenceData
        title:
          type: string
          description: Title
          nullable: true
          example: legacy_1080p_small_wooden_mouse
        url:
          type: string
          description: Url
          format: uri
          nullable: true
          example: some text
        options:
          $ref: '#/components/schemas/ASC.Web.Files.Services.DocumentService.Options'
      additionalProperties: false
    ASC.Files.Core.ApiModels.ResponseDto.DraftLocation.System.Int32:
      type: object
      properties:
        folderId:
          type: integer
          description: InProcess folder ID
          format: int32
          example: 9846
        folderTitle:
          type: string
          description: InProcess folder title
          nullable: true
          example: some text
        fileId:
          type: integer
          description: Draft ID
          format: int32
          example: 9846
        fileTitle:
          type: string
          description: Draft title
          nullable: true
          example: some text
      additionalProperties: false
    ASC.Files.Core.ApiModels.ResponseDto.EditHistoryChangesWrapper:
      type: object
      properties:
        user:
          $ref: '#/components/schemas/ASC.Files.Core.EditHistoryAuthor'
        created:
          $ref: '#/components/schemas/ASC.Api.Core.ApiDateTime'
      additionalProperties: false
    ASC.Files.Core.ApiModels.ResponseDto.EditHistoryDto:
      type: object
      properties:
        id:
          type: integer
          description: File ID
          format: int32
          example: 1234
        key:
          type: string
          description: Key
          nullable: true
          example: some text
        version:
          type: integer
          description: File version
          format: int32
          example: 1234
        versionGroup:
          type: integer
          description: Version group
          format: int32
          example: 1234
        user:
          $ref: '#/components/schemas/ASC.Files.Core.EditHistoryAuthor'
        created:
          $ref: '#/components/schemas/ASC.Api.Core.ApiDateTime'
        changesHistory:
          type: string
          description: History changes in the string format
          nullable: true
          example: some text
        changes:
          type: array
          items:
            $ref: >-
              #/components/schemas/ASC.Files.Core.ApiModels.ResponseDto.EditHistoryChangesWrapper
          description: List of history changes
          nullable: true
        serverVersion:
          type: string
          description: Server version
          nullable: true
          example: some text
      additionalProperties: false
    ASC.Files.Core.ApiModels.ResponseDto.EditorConfigurationDto:
      type: object
      properties:
        callbackUrl:
          type: string
          description: Callback url
          format: uri
          nullable: true
          example: some text
        coEditing:
          $ref: >-
            #/components/schemas/ASC.Web.Files.Services.DocumentService.CoEditingConfig
        createUrl:
          type: string
          description: Create url
          nullable: true
          example: some text
        customization:
          $ref: >-
            #/components/schemas/ASC.Files.Core.ApiModels.ResponseDto.CustomizationConfigDto
        embedded:
          $ref: >-
            #/components/schemas/ASC.Web.Files.Services.DocumentService.EmbeddedConfig
        encryptionKeys:
          $ref: >-
            #/components/schemas/ASC.Web.Files.Services.DocumentService.EncryptionKeysConfig
        lang:
          type: string
          description: Lang
          nullable: true
          example: some text
        mode:
          type: string
          description: Mode
          nullable: true
          example: some text
        modeWrite:
          type: boolean
          description: Mode write
          example: true
        plugins:
          $ref: >-
            #/components/schemas/ASC.Web.Files.Services.DocumentService.PluginsConfig
        recent:
          type: array
          items:
            $ref: >-
              #/components/schemas/ASC.Web.Files.Services.DocumentService.RecentConfig
          description: Recent
          nullable: true
        templates:
          type: array
          items:
            $ref: >-
              #/components/schemas/ASC.Web.Files.Services.DocumentService.TemplatesConfig
          description: Templates
          nullable: true
        user:
          $ref: >-
            #/components/schemas/ASC.Web.Files.Services.DocumentService.UserConfig
      additionalProperties: false
    ASC.Files.Core.ApiModels.ResponseDto.FileDto.System.Int32:
      type: object
      properties:
        title:
          type: string
          description: Title
          nullable: true
          example: Some titile.txt/ Some title
        access:
          $ref: '#/components/schemas/ASC.Files.Core.Security.FileShare'
        shared:
          type: boolean
          description: Specifies if the file is shared or not
          example: false
        created:
          $ref: '#/components/schemas/ASC.Api.Core.ApiDateTime'
        createdBy:
          $ref: '#/components/schemas/ASC.Web.Api.Models.EmployeeDto'
        updated:
          $ref: '#/components/schemas/ASC.Api.Core.ApiDateTime'
        autoDelete:
          $ref: '#/components/schemas/ASC.Api.Core.ApiDateTime'
        rootFolderType:
          $ref: '#/components/schemas/ASC.Files.Core.FolderType'
        parentRoomType:
          $ref: '#/components/schemas/ASC.Files.Core.FolderType'
        updatedBy:
          $ref: '#/components/schemas/ASC.Web.Api.Models.EmployeeDto'
        providerItem:
          type: boolean
          description: Provider is specified or not
          nullable: true
          example: true
        providerKey:
          type: string
          description: Provider key
          nullable: true
          example: some text
        providerId:
          type: integer
          description: Provider ID
          format: int32
          nullable: true
          example: 1234
        order:
          type: string
          description: Order
          nullable: true
          example: some text
        id:
          type: integer
          description: Id
          format: int32
          example: 10
        rootFolderId:
          type: integer
          description: Root folder id
          format: int32
          example: 1234
        originId:
          type: integer
          description: Origin id
          format: int32
          example: 1234
        originRoomId:
          type: integer
          description: Origin room id
          format: int32
          example: 1234
        originTitle:
          type: string
          description: Origin title
          nullable: true
          example: some text
        originRoomTitle:
          type: string
          description: Origin room title
          nullable: true
          example: some text
        canShare:
          type: boolean
          description: Can share
          example: true
        security:
          type: object
          properties:
            Read:
              type: boolean
            Comment:
              type: boolean
            FillForms:
              type: boolean
            Review:
              type: boolean
            Create:
              type: boolean
            Edit:
              type: boolean
            Delete:
              type: boolean
            CustomFilter:
              type: boolean
            EditRoom:
              type: boolean
            Rename:
              type: boolean
            ReadHistory:
              type: boolean
            Lock:
              type: boolean
            EditHistory:
              type: boolean
            CopyTo:
              type: boolean
            Copy:
              type: boolean
            MoveTo:
              type: boolean
            Move:
              type: boolean
            Pin:
              type: boolean
            Mute:
              type: boolean
            EditAccess:
              type: boolean
            Duplicate:
              type: boolean
            SubmitToFormGallery:
              type: boolean
            Download:
              type: boolean
            Convert:
              type: boolean
            CopySharedLink:
              type: boolean
            ReadLinks:
              type: boolean
            Reconnect:
              type: boolean
            CreateRoomFrom:
              type: boolean
            CopyLink:
              type: boolean
            Embed:
              type: boolean
            ChangeOwner:
              type: boolean
            IndexExport:
              type: boolean
          additionalProperties: false
          description: Security
          nullable: true
          example:
            - value: true
        requestToken:
          type: string
          nullable: true
          example: some text
        folderId:
          type: integer
          description: Folder ID
          format: int32
          example: 9846
        version:
          type: integer
          description: Version
          format: int32
          example: 3
        versionGroup:
          type: integer
          description: Version group
          format: int32
          example: 1
        contentLength:
          type: string
          description: Content length
          nullable: true
          example: '12345'
        pureContentLength:
          type: integer
          description: Pure content length
          format: int64
          nullable: true
          example: 1234
        fileStatus:
          $ref: '#/components/schemas/ASC.Files.Core.FileStatus'
        mute:
          type: boolean
          description: Muted or not
          example: false
        viewUrl:
          type: string
          description: URL to view a file
          format: uri
          nullable: true
          example: https://www.onlyoffice.com/viewfile?fileid=2221
        webUrl:
          type: string
          description: Web URL
          format: uri
          nullable: true
          example: some text
        fileType:
          $ref: '#/components/schemas/ASC.Web.Core.Files.FileType'
        fileExst:
          type: string
          description: File extension
          nullable: true
          example: .txt
        comment:
          type: string
          description: Comment
          nullable: true
          example: some text
        encrypted:
          type: boolean
          description: Encrypted or not
          nullable: true
          example: false
        thumbnailUrl:
          type: string
          description: Thumbnail URL
          format: uri
          nullable: true
          example: some text
        thumbnailStatus:
          $ref: '#/components/schemas/ASC.Files.Core.Thumbnail'
        locked:
          type: boolean
          description: Locked or not
          nullable: true
          example: true
        lockedBy:
          type: string
          description: User ID who locked a file
          nullable: true
          example: some text
        hasDraft:
          type: boolean
          description: Is there a draft or not
          nullable: true
          example: false
        isForm:
          type: boolean
          description: Is there a form or not
          nullable: true
          example: false
        startFilling:
          type: boolean
          description: Specifies if the filling has started or not
          nullable: true
          example: false
        inProcessFolderId:
          type: integer
          description: InProcess folder ID
          format: int32
          nullable: true
          example: 1234
        inProcessFolderTitle:
          type: string
          description: InProcess folder title
          nullable: true
          example: some text
        draftLocation:
          $ref: >-
            #/components/schemas/ASC.Files.Core.ApiModels.ResponseDto.DraftLocation.System.Int32
        viewAccessibility:
          type: object
          properties:
            ImageView:
              type: boolean
            MediaView:
              type: boolean
            WebView:
              type: boolean
            WebEdit:
              type: boolean
            WebReview:
              type: boolean
            WebCustomFilterEditing:
              type: boolean
            WebRestrictedEditing:
              type: boolean
            WebComment:
              type: boolean
            CoAuhtoring:
              type: boolean
            CanConvert:
              type: boolean
            MustConvert:
              type: boolean
          additionalProperties: false
          description: File accessibility
          nullable: true
          example:
            - value: true
        availableExternalRights:
          type: object
          additionalProperties:
            type: boolean
          description: Available external rights
          nullable: true
          example:
            - key: some text
              value: true
        lastOpened:
          $ref: '#/components/schemas/ASC.Api.Core.ApiDateTime'
        expired:
          $ref: '#/components/schemas/ASC.Api.Core.ApiDateTime'
        fileEntryType:
          $ref: '#/components/schemas/ASC.Files.Core.FileEntryType'
      additionalProperties: false
    ASC.Files.Core.ApiModels.ResponseDto.FileEntryDto:
      type: object
      properties:
        title:
          type: string
          description: Title
          nullable: true
          example: Some titile.txt/ Some title
        access:
          $ref: '#/components/schemas/ASC.Files.Core.Security.FileShare'
        shared:
          type: boolean
          description: Specifies if the file is shared or not
          example: false
        created:
          $ref: '#/components/schemas/ASC.Api.Core.ApiDateTime'
        createdBy:
          $ref: '#/components/schemas/ASC.Web.Api.Models.EmployeeDto'
        updated:
          $ref: '#/components/schemas/ASC.Api.Core.ApiDateTime'
        autoDelete:
          $ref: '#/components/schemas/ASC.Api.Core.ApiDateTime'
        rootFolderType:
          $ref: '#/components/schemas/ASC.Files.Core.FolderType'
        parentRoomType:
          $ref: '#/components/schemas/ASC.Files.Core.FolderType'
        updatedBy:
          $ref: '#/components/schemas/ASC.Web.Api.Models.EmployeeDto'
        providerItem:
          type: boolean
          description: Provider is specified or not
          nullable: true
          example: true
        providerKey:
          type: string
          description: Provider key
          nullable: true
          example: some text
        providerId:
          type: integer
          description: Provider ID
          format: int32
          nullable: true
          example: 1234
        order:
          type: string
          description: Order
          nullable: true
          example: some text
        fileEntryType:
          $ref: '#/components/schemas/ASC.Files.Core.FileEntryType'
      additionalProperties: false
    ASC.Files.Core.ApiModels.ResponseDto.FileOperationDto:
      type: object
      properties:
        id:
          type: string
          description: Operation ID
          nullable: true
          example: '9846'
        Operation:
          $ref: >-
            #/components/schemas/ASC.Web.Files.Services.WCFService.FileOperations.FileOperationType
        progress:
          type: integer
          description: Operation progress
          format: int32
          example: 100
        error:
          type: string
          description: Error
          nullable: true
          example: ''
        processed:
          type: string
          description: Processing status
          nullable: true
          example: '1'
        finished:
          type: boolean
          description: Specifies if the operation is finished or not
          example: true
        url:
          type: string
          description: URL
          format: uri
          nullable: true
          example: some text
        files:
          type: array
          items:
            $ref: >-
              #/components/schemas/ASC.Files.Core.ApiModels.ResponseDto.FileEntryDto
          description: List of files
          nullable: true
        folders:
          type: array
          items:
            $ref: >-
              #/components/schemas/ASC.Files.Core.ApiModels.ResponseDto.FileEntryDto
          description: List of folders
          nullable: true
      additionalProperties: false
    ASC.Files.Core.ApiModels.ResponseDto.FileShareDto:
      type: object
      properties:
        access:
          $ref: '#/components/schemas/ASC.Files.Core.Security.FileShare'
        sharedTo:
          description: A user who has the access to the specified file
          nullable: true
          example:
            int: 1234
            string: some text
            boolean: true
        isLocked:
          type: boolean
          description: Specifies if the file is locked by this user or not
          example: false
        isOwner:
          type: boolean
          description: Specifies if this user is an owner of the specified file or not
          example: true
        canEditAccess:
          type: boolean
          description: >-
            Spceifies if this user can edit the access to the specified file or
            not
          example: true
        subjectType:
          $ref: '#/components/schemas/ASC.Files.Core.Security.SubjectType'
      additionalProperties: false
    ASC.Files.Core.ApiModels.ResponseDto.FilesSettingsDto:
      type: object
      properties:
        extsImagePreviewed:
          type: array
          items:
            type: string
          description: Exts image previewed
          nullable: true
          example:
            - some text
        extsMediaPreviewed:
          type: array
          items:
            type: string
          description: Exts media previewed
          nullable: true
          example:
            - some text
        extsWebPreviewed:
          type: array
          items:
            type: string
          description: Exts web previewed
          nullable: true
          example:
            - some text
        extsWebEdited:
          type: array
          items:
            type: string
          description: Exts web edited
          nullable: true
          example:
            - some text
        extsWebEncrypt:
          type: array
          items:
            type: string
          description: Exts web encrypt
          nullable: true
          example:
            - some text
        extsWebReviewed:
          type: array
          items:
            type: string
          description: Exts web reviewed
          nullable: true
          example:
            - some text
        extsWebCustomFilterEditing:
          type: array
          items:
            type: string
          description: Exts web custom filter editing
          nullable: true
          example:
            - some text
        extsWebRestrictedEditing:
          type: array
          items:
            type: string
          description: Exts web restricted editing
          nullable: true
          example:
            - some text
        extsWebCommented:
          type: array
          items:
            type: string
          description: Exts web commented
          nullable: true
          example:
            - some text
        extsWebTemplate:
          type: array
          items:
            type: string
          description: Exts web template
          nullable: true
          example:
            - some text
        extsCoAuthoring:
          type: array
          items:
            type: string
          description: Exts co authoring
          nullable: true
          example:
            - some text
        extsMustConvert:
          type: array
          items:
            type: string
          description: Exts must convert
          nullable: true
          example:
            - some text
        extsConvertible:
          type: object
          additionalProperties:
            type: array
            items:
              type: string
            nullable: true
          description: Exts convertible
          nullable: true
          example:
            - key: some text
              value:
                - some text
        extsUploadable:
          type: array
          items:
            type: string
          description: Exts uploadable
          nullable: true
          example:
            - some text
        extsArchive:
          type: array
          items:
            type: string
          description: Exts archive
          nullable: true
          example:
            - some text
        extsVideo:
          type: array
          items:
            type: string
          description: Exts video
          nullable: true
          example:
            - some text
        extsAudio:
          type: array
          items:
            type: string
          description: Exts audio
          nullable: true
          example:
            - some text
        extsImage:
          type: array
          items:
            type: string
          description: Exts image
          nullable: true
          example:
            - some text
        extsSpreadsheet:
          type: array
          items:
            type: string
          description: Exts spreadsheet
          nullable: true
          example:
            - some text
        extsPresentation:
          type: array
          items:
            type: string
          description: Exts presentation
          nullable: true
          example:
            - some text
        extsDocument:
          type: array
          items:
            type: string
          description: Exts document
          nullable: true
          example:
            - some text
        internalFormats:
          type: object
          properties:
            Unknown:
              type: string
            Archive:
              type: string
            Video:
              type: string
            Audio:
              type: string
            Image:
              type: string
            Spreadsheet:
              type: string
            Presentation:
              type: string
            Document:
              type: string
            Pdf:
              type: string
          additionalProperties: false
          description: Internal formats
          nullable: true
          example:
            - value: some text
        masterFormExtension:
          type: string
          description: Master form extension
          nullable: true
          example: some text
        paramVersion:
          type: string
          description: Param version
          nullable: true
          example: some text
        paramOutType:
          type: string
          description: Param out type
          nullable: true
          example: some text
        fileDownloadUrlString:
          type: string
          description: File download url string
          format: uri
          nullable: true
          example: some text
        fileWebViewerUrlString:
          type: string
          description: File web viewer url string
          nullable: true
          example: some text
        fileWebViewerExternalUrlString:
          type: string
          description: File web viewer external url string
          format: uri
          nullable: true
          example: some text
        fileWebEditorUrlString:
          type: string
          description: File web editor url string
          nullable: true
          example: some text
        fileWebEditorExternalUrlString:
          type: string
          description: File web editor external url string
          format: uri
          nullable: true
          example: some text
        fileRedirectPreviewUrlString:
          type: string
          description: File redirect preview url string
          format: uri
          nullable: true
          example: some text
        fileThumbnailUrlString:
          type: string
          description: File thumbnail url string
          format: uri
          nullable: true
          example: some text
        confirmDelete:
          type: boolean
          description: Confirm delete
          example: true
        enableThirdParty:
          type: boolean
          description: EnableT third party
          example: true
        externalShare:
          type: boolean
          description: External share
          example: true
        externalShareSocialMedia:
          type: boolean
          description: External share social media
          example: true
        storeOriginalFiles:
          type: boolean
          description: Store original files
          example: true
        keepNewFileName:
          type: boolean
          description: Keep new file name
          example: true
        displayFileExtension:
          type: boolean
          description: Display file extension
          example: true
        convertNotify:
          type: boolean
          description: Convert notify
          example: true
        hideConfirmConvertSave:
          type: boolean
          description: HideC confirm convert save
          example: true
        hideConfirmConvertOpen:
          type: boolean
          description: Hide confirm convert open
          example: true
        defaultOrder:
          $ref: '#/components/schemas/ASC.Files.Core.OrderBy'
        forcesave:
          type: boolean
          description: Forcesave
          example: true
        storeForcesave:
          type: boolean
          description: Store forcesave
          example: true
        recentSection:
          type: boolean
          description: Recent section
          example: true
        favoritesSection:
          type: boolean
          description: Favorites section
          example: true
        templatesSection:
          type: boolean
          description: Templates section
          example: true
        downloadTarGz:
          type: boolean
          description: Download tar gz
          example: true
        automaticallyCleanUp:
          $ref: '#/components/schemas/ASC.Files.Core.AutoCleanUpData'
        canSearchByContent:
          type: boolean
          description: Can search by content
          example: true
        defaultSharingAccessRights:
          type: array
          items:
            anyOf:
              - enum:
                  - None
                  - ReadWrite
                  - Read
                  - Restrict
                  - Varies
                  - Review
                  - Comment
                  - FillForms
                  - CustomFilter
                  - RoomManager
                  - Editing
                  - ContentCreator
                type: string
                description: >-
                  [None - None, ReadWrite - Read and write, Read - Read,
                  Restrict - Restrict, Varies - Varies, Review - Review, Comment
                  - Comment, FillForms - Fill forms, CustomFilter - Custom
                  filter, RoomManager - Room manager, Editing - Editing,
                  ContentCreator - Content creator]
                example: None
              - enum:
                  - 0
                  - 1
                  - 2
                  - 3
                  - 4
                  - 5
                  - 6
                  - 7
                  - 8
                  - 9
                  - 10
                  - 11
                type: integer
                description: >-
                  [0 - None, 1 - Read and write, 2 - Read, 3 - Restrict, 4 -
                  Varies, 5 - Review, 6 - Comment, 7 - Fill forms, 8 - Custom
                  filter, 9 - Room manager, 10 - Editing, 11 - Content creator]
                example: 0
          description: Default sharing access rights
          nullable: true
        maxUploadThreadCount:
          type: integer
          description: Max upload thread count
          format: int32
          example: 1234
        chunkUploadSize:
          type: integer
          description: Chunk upload size
          format: int64
          example: 1234
        openEditorInSameTab:
          type: boolean
          description: Open editor in same tab
          example: true
      additionalProperties: false
    ASC.Files.Core.ApiModels.ResponseDto.FilesStatisticsFolder:
      type: object
      properties:
        title:
          type: string
          description: Folder title
          nullable: true
          example: legacy_1080p_small_wooden_mouse
        usedSpace:
          type: integer
          description: Used space
          format: int64
          example: 1234
      additionalProperties: false
    ASC.Files.Core.ApiModels.ResponseDto.FilesStatisticsResultDto:
      type: object
      properties:
        myDocumentsUsedSpace:
          $ref: >-
            #/components/schemas/ASC.Files.Core.ApiModels.ResponseDto.FilesStatisticsFolder
        trashUsedSpace:
          $ref: >-
            #/components/schemas/ASC.Files.Core.ApiModels.ResponseDto.FilesStatisticsFolder
        archiveUsedSpace:
          $ref: >-
            #/components/schemas/ASC.Files.Core.ApiModels.ResponseDto.FilesStatisticsFolder
        roomsUsedSpace:
          $ref: >-
            #/components/schemas/ASC.Files.Core.ApiModels.ResponseDto.FilesStatisticsFolder
      additionalProperties: false
    ASC.Files.Core.ApiModels.ResponseDto.FillingFormResultDto.System.Int32:
      type: object
      properties:
        formNumber:
          type: integer
          description: Form number
          format: int32
          example: 1234
        completedForm:
          $ref: >-
            #/components/schemas/ASC.Files.Core.ApiModels.ResponseDto.FileDto.System.Int32
        originalForm:
          $ref: >-
            #/components/schemas/ASC.Files.Core.ApiModels.ResponseDto.FileDto.System.Int32
        manager:
          $ref: '#/components/schemas/ASC.Web.Api.Models.EmployeeFullDto'
        roomId:
          type: integer
          description: Room Id
          format: int32
          example: 9846
        isRoomMember:
          type: boolean
          description: Is room member
          example: true
      additionalProperties: false
    ASC.Files.Core.ApiModels.ResponseDto.FolderContentDto.System.Int32:
      type: object
      properties:
        files:
          type: array
          items:
            $ref: >-
              #/components/schemas/ASC.Files.Core.ApiModels.ResponseDto.FileEntryDto
          description: List of files
          nullable: true
        folders:
          type: array
          items:
            $ref: >-
              #/components/schemas/ASC.Files.Core.ApiModels.ResponseDto.FileEntryDto
          description: List of folders
          nullable: true
        current:
          $ref: >-
            #/components/schemas/ASC.Files.Core.ApiModels.ResponseDto.FolderDto.System.Int32
        pathParts:
          description: Folder path
          nullable: true
          example: '{key = "Key", path = "//path//to//folder"}'
        startIndex:
          type: integer
          description: Folder start index
          format: int32
          example: 0
        count:
          type: integer
          description: Number of folder elements
          format: int32
          example: 4
        total:
          type: integer
          description: Total number of elements in the folder
          format: int32
          example: 4
        new:
          type: integer
          description: New element index
          format: int32
          example: 1234
      additionalProperties: false
    ASC.Files.Core.ApiModels.ResponseDto.FolderDto.System.Int32:
      type: object
      properties:
        title:
          type: string
          description: Title
          nullable: true
          example: Some titile.txt/ Some title
        access:
          $ref: '#/components/schemas/ASC.Files.Core.Security.FileShare'
        shared:
          type: boolean
          description: Specifies if the file is shared or not
          example: false
        created:
          $ref: '#/components/schemas/ASC.Api.Core.ApiDateTime'
        createdBy:
          $ref: '#/components/schemas/ASC.Web.Api.Models.EmployeeDto'
        updated:
          $ref: '#/components/schemas/ASC.Api.Core.ApiDateTime'
        autoDelete:
          $ref: '#/components/schemas/ASC.Api.Core.ApiDateTime'
        rootFolderType:
          $ref: '#/components/schemas/ASC.Files.Core.FolderType'
        parentRoomType:
          $ref: '#/components/schemas/ASC.Files.Core.FolderType'
        updatedBy:
          $ref: '#/components/schemas/ASC.Web.Api.Models.EmployeeDto'
        providerItem:
          type: boolean
          description: Provider is specified or not
          nullable: true
          example: true
        providerKey:
          type: string
          description: Provider key
          nullable: true
          example: some text
        providerId:
          type: integer
          description: Provider ID
          format: int32
          nullable: true
          example: 1234
        order:
          type: string
          description: Order
          nullable: true
          example: some text
        id:
          type: integer
          description: Id
          format: int32
          example: 10
        rootFolderId:
          type: integer
          description: Root folder id
          format: int32
          example: 1234
        originId:
          type: integer
          description: Origin id
          format: int32
          example: 1234
        originRoomId:
          type: integer
          description: Origin room id
          format: int32
          example: 1234
        originTitle:
          type: string
          description: Origin title
          nullable: true
          example: some text
        originRoomTitle:
          type: string
          description: Origin room title
          nullable: true
          example: some text
        canShare:
          type: boolean
          description: Can share
          example: true
        security:
          type: object
          properties:
            Read:
              type: boolean
            Comment:
              type: boolean
            FillForms:
              type: boolean
            Review:
              type: boolean
            Create:
              type: boolean
            Edit:
              type: boolean
            Delete:
              type: boolean
            CustomFilter:
              type: boolean
            EditRoom:
              type: boolean
            Rename:
              type: boolean
            ReadHistory:
              type: boolean
            Lock:
              type: boolean
            EditHistory:
              type: boolean
            CopyTo:
              type: boolean
            Copy:
              type: boolean
            MoveTo:
              type: boolean
            Move:
              type: boolean
            Pin:
              type: boolean
            Mute:
              type: boolean
            EditAccess:
              type: boolean
            Duplicate:
              type: boolean
            SubmitToFormGallery:
              type: boolean
            Download:
              type: boolean
            Convert:
              type: boolean
            CopySharedLink:
              type: boolean
            ReadLinks:
              type: boolean
            Reconnect:
              type: boolean
            CreateRoomFrom:
              type: boolean
            CopyLink:
              type: boolean
            Embed:
              type: boolean
            ChangeOwner:
              type: boolean
            IndexExport:
              type: boolean
          additionalProperties: false
          description: Security
          nullable: true
          example:
            - value: true
        requestToken:
          type: string
          nullable: true
          example: some text
        parentId:
          type: integer
          description: Parent folder ID
          format: int32
          example: 10
        filesCount:
          type: integer
          description: Number of files
          format: int32
          example: 5
        foldersCount:
          type: integer
          description: Number of folders
          format: int32
          example: 7
        isShareable:
          type: boolean
          description: Specifies if a folder is shareable or not
          nullable: true
          example: true
        isFavorite:
          type: boolean
          description: Specifies if a folder is favorite or not
          nullable: true
          example: true
        new:
          type: integer
          description: Number for a new folder
          format: int32
          example: 1234
        mute:
          type: boolean
          description: Specifies if a folder is muted or not
          example: true
        tags:
          type: array
          items:
            type: string
          description: List of tags
          nullable: true
          example:
            - some text
        logo:
          $ref: '#/components/schemas/ASC.Files.Core.VirtualRooms.Logo'
        pinned:
          type: boolean
          description: Specifies if a folder is pinned or not
          example: true
        roomType:
          $ref: '#/components/schemas/ASC.Files.Core.ApiModels.RequestDto.RoomType'
        private:
          type: boolean
          description: Specifies if a folder is private or not
          example: true
        indexing:
          type: boolean
          description: Indexing
          example: true
        denyDownload:
          type: boolean
          description: Deny download
          example: true
        lifetime:
          $ref: '#/components/schemas/ASC.Files.Core.ApiModels.RoomDataLifetimeDto'
        watermark:
          $ref: >-
            #/components/schemas/ASC.Files.Core.ApiModels.ResponseDto.WatermarkDto
        type:
          $ref: '#/components/schemas/ASC.Files.Core.FolderType'
        inRoom:
          type: boolean
          description: InRoom
          nullable: true
          example: true
        quotaLimit:
          type: integer
          description: Quota
          format: int64
          nullable: true
          example: 1234
        isCustomQuota:
          type: boolean
          description: Specifies if the room has a custom quota or not
          nullable: true
          example: true
        usedSpace:
          type: integer
          description: Counter
          format: int64
          nullable: true
          example: 1234
        external:
          type: boolean
          description: Specifies if the link external
          nullable: true
          example: true
        passwordProtected:
          type: boolean
          description: Specifies if the password protected
          nullable: true
          example: true
        expired:
          type: boolean
          description: Expired
          nullable: true
          example: true
        fileEntryType:
          $ref: '#/components/schemas/ASC.Files.Core.FileEntryType'
      additionalProperties: false
    ASC.Files.Core.ApiModels.ResponseDto.FolderDto.System.String:
      type: object
      properties:
        title:
          type: string
          description: Title
          nullable: true
          example: Some titile.txt/ Some title
        access:
          $ref: '#/components/schemas/ASC.Files.Core.Security.FileShare'
        shared:
          type: boolean
          description: Specifies if the file is shared or not
          example: false
        created:
          $ref: '#/components/schemas/ASC.Api.Core.ApiDateTime'
        createdBy:
          $ref: '#/components/schemas/ASC.Web.Api.Models.EmployeeDto'
        updated:
          $ref: '#/components/schemas/ASC.Api.Core.ApiDateTime'
        autoDelete:
          $ref: '#/components/schemas/ASC.Api.Core.ApiDateTime'
        rootFolderType:
          $ref: '#/components/schemas/ASC.Files.Core.FolderType'
        parentRoomType:
          $ref: '#/components/schemas/ASC.Files.Core.FolderType'
        updatedBy:
          $ref: '#/components/schemas/ASC.Web.Api.Models.EmployeeDto'
        providerItem:
          type: boolean
          description: Provider is specified or not
          nullable: true
          example: true
        providerKey:
          type: string
          description: Provider key
          nullable: true
          example: some text
        providerId:
          type: integer
          description: Provider ID
          format: int32
          nullable: true
          example: 1234
        order:
          type: string
          description: Order
          nullable: true
          example: some text
        id:
          type: string
          description: Id
          nullable: true
          example: 10
        rootFolderId:
          type: string
          description: Root folder id
          nullable: true
          example: some text
        originId:
          type: string
          description: Origin id
          nullable: true
          example: some text
        originRoomId:
          type: string
          description: Origin room id
          nullable: true
          example: some text
        originTitle:
          type: string
          description: Origin title
          nullable: true
          example: some text
        originRoomTitle:
          type: string
          description: Origin room title
          nullable: true
          example: some text
        canShare:
          type: boolean
          description: Can share
          example: true
        security:
          type: object
          properties:
            Read:
              type: boolean
            Comment:
              type: boolean
            FillForms:
              type: boolean
            Review:
              type: boolean
            Create:
              type: boolean
            Edit:
              type: boolean
            Delete:
              type: boolean
            CustomFilter:
              type: boolean
            EditRoom:
              type: boolean
            Rename:
              type: boolean
            ReadHistory:
              type: boolean
            Lock:
              type: boolean
            EditHistory:
              type: boolean
            CopyTo:
              type: boolean
            Copy:
              type: boolean
            MoveTo:
              type: boolean
            Move:
              type: boolean
            Pin:
              type: boolean
            Mute:
              type: boolean
            EditAccess:
              type: boolean
            Duplicate:
              type: boolean
            SubmitToFormGallery:
              type: boolean
            Download:
              type: boolean
            Convert:
              type: boolean
            CopySharedLink:
              type: boolean
            ReadLinks:
              type: boolean
            Reconnect:
              type: boolean
            CreateRoomFrom:
              type: boolean
            CopyLink:
              type: boolean
            Embed:
              type: boolean
            ChangeOwner:
              type: boolean
            IndexExport:
              type: boolean
          additionalProperties: false
          description: Security
          nullable: true
          example:
            - value: true
        requestToken:
          type: string
          nullable: true
          example: some text
        parentId:
          type: string
          description: Parent folder ID
          nullable: true
          example: 10
        filesCount:
          type: integer
          description: Number of files
          format: int32
          example: 5
        foldersCount:
          type: integer
          description: Number of folders
          format: int32
          example: 7
        isShareable:
          type: boolean
          description: Specifies if a folder is shareable or not
          nullable: true
          example: true
        isFavorite:
          type: boolean
          description: Specifies if a folder is favorite or not
          nullable: true
          example: true
        new:
          type: integer
          description: Number for a new folder
          format: int32
          example: 1234
        mute:
          type: boolean
          description: Specifies if a folder is muted or not
          example: true
        tags:
          type: array
          items:
            type: string
          description: List of tags
          nullable: true
          example:
            - some text
        logo:
          $ref: '#/components/schemas/ASC.Files.Core.VirtualRooms.Logo'
        pinned:
          type: boolean
          description: Specifies if a folder is pinned or not
          example: true
        roomType:
          $ref: '#/components/schemas/ASC.Files.Core.ApiModels.RequestDto.RoomType'
        private:
          type: boolean
          description: Specifies if a folder is private or not
          example: true
        indexing:
          type: boolean
          description: Indexing
          example: true
        denyDownload:
          type: boolean
          description: Deny download
          example: true
        lifetime:
          $ref: '#/components/schemas/ASC.Files.Core.ApiModels.RoomDataLifetimeDto'
        watermark:
          $ref: >-
            #/components/schemas/ASC.Files.Core.ApiModels.ResponseDto.WatermarkDto
        type:
          $ref: '#/components/schemas/ASC.Files.Core.FolderType'
        inRoom:
          type: boolean
          description: InRoom
          nullable: true
          example: true
        quotaLimit:
          type: integer
          description: Quota
          format: int64
          nullable: true
          example: 1234
        isCustomQuota:
          type: boolean
          description: Specifies if the room has a custom quota or not
          nullable: true
          example: true
        usedSpace:
          type: integer
          description: Counter
          format: int64
          nullable: true
          example: 1234
        external:
          type: boolean
          description: Specifies if the link external
          nullable: true
          example: true
        passwordProtected:
          type: boolean
          description: Specifies if the password protected
          nullable: true
          example: true
        expired:
          type: boolean
          description: Expired
          nullable: true
          example: true
        fileEntryType:
          $ref: '#/components/schemas/ASC.Files.Core.FileEntryType'
      additionalProperties: false
    ASC.Files.Core.ApiModels.ResponseDto.HistoryDto:
      type: object
      properties:
        action:
          $ref: '#/components/schemas/ASC.Files.Core.Core.Entries.HistoryAction'
        initiator:
          $ref: '#/components/schemas/ASC.Web.Api.Models.EmployeeDto'
        date:
          $ref: '#/components/schemas/ASC.Api.Core.ApiDateTime'
        data:
          $ref: '#/components/schemas/ASC.Files.Core.Core.Entries.HistoryData'
        related:
          type: array
          items:
            $ref: >-
              #/components/schemas/ASC.Files.Core.ApiModels.ResponseDto.HistoryDto
          description: Related
          nullable: true
      additionalProperties: false
    ASC.Files.Core.ApiModels.ResponseDto.InfoConfigDto:
      type: object
      properties:
        favorite:
          type: boolean
          description: Favorite
          nullable: true
          example: true
        folder:
          type: string
          description: Folder
          nullable: true
          example: some text
        owner:
          type: string
          description: Owner
          nullable: true
          example: some text
        sharingSettings:
          type: array
          items:
            $ref: >-
              #/components/schemas/ASC.Web.Files.Services.WCFService.AceShortWrapper
          description: Sharing settings
          nullable: true
        type:
          $ref: >-
            #/components/schemas/ASC.Web.Files.Services.DocumentService.EditorType
        uploaded:
          type: string
          description: Uploaded
          nullable: true
          example: some text
      additionalProperties: false
    ASC.Files.Core.ApiModels.ResponseDto.LinkType:
      oneOf:
        - enum:
            - Invitation
            - External
          type: string
          description: '[Invitation - Invitation, External - External]'
          example: Invitation
        - enum:
            - 0
            - 1
          type: integer
          description: '[0 - Invitation, 1 - External]'
          example: 0
    ASC.Files.Core.ApiModels.ResponseDto.LogoConfigDto:
      type: object
      properties:
        image:
          type: string
          description: Image
          nullable: true
          example: some text
        imageDark:
          type: string
          description: Image dark
          nullable: true
          example: some text
        imageEmbedded:
          type: string
          description: Image embedded
          nullable: true
          example: some text
        url:
          type: string
          description: Url
          nullable: true
          example: some text
        visible:
          type: boolean
          description: Visible
          example: true
      additionalProperties: false
    ASC.Files.Core.ApiModels.ResponseDto.NewItemsDto.ASC.Files.Core.ApiModels.ResponseDto.FileEntryDto:
      type: object
      properties:
        date:
          $ref: '#/components/schemas/ASC.Api.Core.ApiDateTime'
        items:
          type: array
          items:
            $ref: >-
              #/components/schemas/ASC.Files.Core.ApiModels.ResponseDto.FileEntryDto
          description: Items
          nullable: true
      additionalProperties: false
    ASC.Files.Core.ApiModels.ResponseDto.NewItemsDto.ASC.Files.Core.ApiModels.ResponseDto.RoomNewItemsDto:
      type: object
      properties:
        date:
          $ref: '#/components/schemas/ASC.Api.Core.ApiDateTime'
        items:
          type: array
          items:
            $ref: >-
              #/components/schemas/ASC.Files.Core.ApiModels.ResponseDto.RoomNewItemsDto
          description: Items
          nullable: true
      additionalProperties: false
    ASC.Files.Core.ApiModels.ResponseDto.ProviderDto:
      type: object
      properties:
        name:
          type: string
          description: Provider name
          nullable: true
          example: Winfield Upton
        key:
          type: string
          description: Provider key
          nullable: true
          example: some text
        connected:
          type: boolean
          description: Connected flag
          example: true
        oauth:
          type: boolean
          description: Oauth flag
          example: true
        redirectUrl:
          type: string
          description: Redirect url
          nullable: true
          example: some text
        requiredConnectionUrl:
          type: boolean
          description: Required connection url flag
          example: true
        clientId:
          type: string
          description: Oauth client id
          nullable: true
          example: some text
      additionalProperties: false
    ASC.Files.Core.ApiModels.ResponseDto.RoomNewItemsDto:
      type: object
      properties:
        room:
          $ref: >-
            #/components/schemas/ASC.Files.Core.ApiModels.ResponseDto.FileEntryDto
        items:
          type: array
          items:
            $ref: >-
              #/components/schemas/ASC.Files.Core.ApiModels.ResponseDto.FileEntryDto
          description: Items
          nullable: true
      additionalProperties: false
    ASC.Files.Core.ApiModels.ResponseDto.RoomSecurityDto:
      type: object
      properties:
        members:
          type: array
          items:
            $ref: >-
              #/components/schemas/ASC.Files.Core.ApiModels.ResponseDto.FileShareDto
          description: List of room members
          nullable: true
        warning:
          type: string
          description: Warning
          nullable: true
          example: some text
      additionalProperties: false
    ASC.Files.Core.ApiModels.ResponseDto.UploadResultDto:
      type: object
      properties:
        success:
          type: boolean
          description: Specifies if the operation is successful or not
          example: true
        data:
          description: Data
          nullable: true
          example:
            int: 1234
            string: some text
            boolean: true
        message:
          type: string
          description: Message
          nullable: true
          example: some text
      additionalProperties: false
    ASC.Files.Core.ApiModels.ResponseDto.WatermarkDto:
      type: object
      properties:
        additions:
          $ref: '#/components/schemas/ASC.Files.Core.VirtualRooms.WatermarkAdditions'
        text:
          type: string
          description: Watermark Text
          nullable: true
          example: some text
        rotate:
          type: integer
          description: Watermark text and image rotate
          format: int32
          example: 1234
        imageScale:
          type: integer
          description: Watermark image scale
          format: int32
          example: 1234
        imageUrl:
          type: string
          description: Watermark image url
          nullable: true
          example: some text
        imageHeight:
          type: number
          description: Watermark image height
          format: double
          example: -8.5
        imageWidth:
          type: number
          description: Watermark image width
          format: double
          example: -8.5
      additionalProperties: false
      description: ''
    ASC.Files.Core.ApiModels.RoomDataLifetimeDto:
      type: object
      properties:
        deletePermanently:
          type: boolean
          description: Specifies action
          example: true
        period:
          $ref: >-
            #/components/schemas/ASC.Files.Core.VirtualRooms.RoomDataLifetimePeriod
        value:
          maximum: 999
          minimum: 1
          type: integer
          description: Specifies time period value
          format: int32
          nullable: true
          example: 1234
        enabled:
          type: boolean
          description: Enabled
          nullable: true
          example: true
      additionalProperties: false
      description: ''
    ASC.Files.Core.AuthData:
      type: object
      properties:
        login:
          type: string
          description: Login
          nullable: true
          example: some text
        password:
          type: string
          description: Password
          nullable: true
          example: vfmf2vO1Kp
        rawToken:
          type: string
          description: Raw token
          nullable: true
          example: some text
        url:
          type: string
          description: Url
          format: uri
          nullable: true
          example: some text
        provider:
          type: string
          description: Provider
          nullable: true
          example: some text
        token:
          $ref: '#/components/schemas/ASC.FederatedLogin.OAuth20Token'
      additionalProperties: false
    ASC.Files.Core.AutoCleanUpData:
      type: object
      properties:
        isAutoCleanUp:
          type: boolean
          description: Specifies if the auto-clearing setting is enabled or not
          example: true
        gap:
          $ref: '#/components/schemas/ASC.Files.Core.DateToAutoCleanUp'
      additionalProperties: false
    ASC.Files.Core.Core.ApplyFilterOption:
      oneOf:
        - enum:
            - All
            - Files
            - Folders
          type: string
          description: '[All - All, Files - Files, Folders - Folders]'
          example: All
        - enum:
            - 0
            - 1
            - 2
          type: integer
          description: '[0 - All, 1 - Files, 2 - Folders]'
          example: 0
    ASC.Files.Core.Core.Entries.HistoryAction:
      type: object
      properties:
        id:
          $ref: '#/components/schemas/ASC.MessagingSystem.Core.MessageAction'
        key:
          type: string
          nullable: true
          example: some text
      additionalProperties: false
    ASC.Files.Core.Core.Entries.HistoryData:
      type: object
      properties:
        initiatorName:
          type: string
          nullable: true
          readOnly: true
          example: some text
      additionalProperties: false
    ASC.Files.Core.Core.StorageFilter:
      oneOf:
        - enum:
            - None
            - Internal
            - ThirdParty
          type: string
          description: '[None - None, Internal - Internal, ThirdParty - ThirdParty]'
          example: None
        - enum:
            - 0
            - 1
            - 2
          type: integer
          description: '[0 - None, 1 - Internal, 2 - ThirdParty]'
          example: 0
    ASC.Files.Core.Core.SubjectFilter:
      oneOf:
        - enum:
            - Owner
            - Member
          type: string
          description: '[Owner - Owner, Member - Member]'
          example: Owner
        - enum:
            - 0
            - 1
          type: integer
          description: '[0 - Owner, 1 - Member]'
          example: 0
    ASC.Files.Core.DateToAutoCleanUp:
      oneOf:
        - enum:
            - OneWeek
            - TwoWeeks
            - OneMonth
            - ThirtyDays
            - TwoMonths
            - ThreeMonths
          type: string
          description: >-
            [OneWeek - One week, TwoWeeks - Two weeks, OneMonth - One month,
            ThirtyDays - Thirty days, TwoMonths - Two months, ThreeMonths -
            Three months]
          example: OneWeek
        - enum:
            - 1
            - 2
            - 3
            - 4
            - 5
            - 6
          type: integer
          description: >-
            [1 - One week, 2 - Two weeks, 3 - One month, 4 - Thirty days, 5 -
            Two months, 6 - Three months]
          example: 1
    ASC.Files.Core.EditHistoryAuthor:
      type: object
      properties:
        id:
          type: string
          description: Id
          nullable: true
          example: '9846'
        name:
          type: string
          description: Name
          nullable: true
          example: Winfield Upton
      additionalProperties: false
    ASC.Files.Core.EditHistoryDataDto:
      type: object
      properties:
        changesUrl:
          type: string
          description: URL to the file changes
          format: uri
          nullable: true
          example: some text
        key:
          type: string
          description: Key
          nullable: true
          example: some text
        previous:
          $ref: '#/components/schemas/ASC.Files.Core.EditHistoryUrl'
        token:
          type: string
          description: Token
          nullable: true
          example: some text
        url:
          type: string
          description: File URL
          format: uri
          nullable: true
          example: some text
        version:
          type: integer
          description: File version
          format: int32
          example: 1234
        fileType:
          type: string
          description: File type
          nullable: true
          example: some text
      additionalProperties: false
    ASC.Files.Core.EditHistoryUrl:
      type: object
      properties:
        key:
          type: string
          description: Key
          nullable: true
          example: some text
        url:
          type: string
          description: Url
          format: uri
          nullable: true
          example: some text
        fileType:
          type: string
          description: File type
          nullable: true
          example: some text
      additionalProperties: false
    ASC.Files.Core.FileEntryType:
      enum:
        - 1
        - 2
      type: integer
      format: int32
    ASC.Files.Core.FileStatus:
      oneOf:
        - enum:
            - None
            - IsEditing
            - IsNew
            - IsConverting
            - IsOriginal
            - IsEditingAlone
            - IsFavorite
            - IsTemplate
            - IsFillFormDraft
          type: string
          description: >-
            [None - None, IsEditing - Is editing, IsNew - Is new, IsConverting -
            Is converting, IsOriginal - Is original, IsEditingAlone - Is editing
            alone, IsFavorite - Is favorite, IsTemplate - Is template,
            IsFillFormDraft - Is fill form draft]
          example: None
        - enum:
            - 0
            - 1
            - 2
            - 4
            - 8
            - 16
            - 32
            - 64
            - 128
          type: integer
          description: >-
            [0 - None, 1 - Is editing, 2 - Is new, 4 - Is converting, 8 - Is
            original, 16 - Is editing alone, 32 - Is favorite, 64 - Is template,
            128 - Is fill form draft]
          example: 0
    ASC.Files.Core.FilterType:
      oneOf:
        - enum:
            - None
            - FilesOnly
            - FoldersOnly
            - DocumentsOnly
            - PresentationsOnly
            - SpreadsheetsOnly
            - ImagesOnly
            - ByUser
            - ByDepartment
            - ArchiveOnly
            - ByExtension
            - MediaOnly
            - FillingFormsRooms
            - EditingRooms
            - CustomRooms
            - PublicRooms
            - Pdf
            - PdfForm
          type: string
          description: >-
            [None - None, FilesOnly - Files  only, FoldersOnly - Folders only,
            DocumentsOnly - Documents only, PresentationsOnly - Presentations
            only, SpreadsheetsOnly - Spreadsheets only, ImagesOnly - Images
            only, ByUser - By user, ByDepartment - By department, ArchiveOnly -
            Archive only, ByExtension - By extension, MediaOnly - Media only,
            FillingFormsRooms - Filling forms rooms, EditingRooms - Editing
            rooms, CustomRooms - Custom rooms, PublicRooms - Public rooms, Pdf -
            Pdf, PdfForm - Pdf form]
          example: None
        - enum:
            - 0
            - 1
            - 2
            - 3
            - 4
            - 5
            - 7
            - 8
            - 9
            - 10
            - 11
            - 12
            - 13
            - 14
            - 17
            - 20
            - 22
            - 23
          type: integer
          description: >-
            [0 - None, 1 - Files  only, 2 - Folders only, 3 - Documents only, 4
            - Presentations only, 5 - Spreadsheets only, 7 - Images only, 8 - By
            user, 9 - By department, 10 - Archive only, 11 - By extension, 12 -
            Media only, 13 - Filling forms rooms, 14 - Editing rooms, 17 -
            Custom rooms, 20 - Public rooms, 22 - Pdf, 23 - Pdf form]
          example: 0
    ASC.Files.Core.FolderType:
      oneOf:
        - enum:
            - DEFAULT
            - COMMON
            - BUNCH
            - TRASH
            - USER
            - SHARE
            - Projects
            - Favorites
            - Recent
            - Templates
            - Privacy
            - VirtualRooms
            - FillingFormsRoom
            - EditingRoom
            - CustomRoom
            - Archive
            - ThirdpartyBackup
            - PublicRoom
            - ReadyFormFolder
            - InProcessFormFolder
            - FormFillingFolderDone
            - FormFillingFolderInProgress
            - VirtualDataRoom
          type: string
          description: >-
            [DEFAULT - Default, COMMON - Coomon, BUNCH - Bunch, TRASH - Trash,
            USER - User, SHARE - Share, Projects - Projects, Favorites -
            Favourites, Recent - Recent, Templates - Templates, Privacy -
            Privacy, VirtualRooms - Virtual rooms, FillingFormsRoom - Filling
            forms room, EditingRoom - Editing room, CustomRoom - Custom room,
            Archive - Archive, ThirdpartyBackup - Thirdparty backup, PublicRoom
            - Public room, ReadyFormFolder - Ready form folder,
            InProcessFormFolder - In process form folder, FormFillingFolderDone
            - Form filling folder done, FormFillingFolderInProgress - Form
            filling folder in progress, VirtualDataRoom - Virtual Data Room]
          example: DEFAULT
        - enum:
            - 0
            - 1
            - 2
            - 3
            - 5
            - 6
            - 8
            - 10
            - 11
            - 12
            - 13
            - 14
            - 15
            - 16
            - 19
            - 20
            - 21
            - 22
            - 25
            - 26
            - 27
            - 28
            - 29
          type: integer
          description: >-
            [0 - Default, 1 - Coomon, 2 - Bunch, 3 - Trash, 5 - User, 6 - Share,
            8 - Projects, 10 - Favourites, 11 - Recent, 12 - Templates, 13 -
            Privacy, 14 - Virtual rooms, 15 - Filling forms room, 16 - Editing
            room, 19 - Custom room, 20 - Archive, 21 - Thirdparty backup, 22 -
            Public room, 25 - Ready form folder, 26 - In process form folder, 27
            - Form filling folder done, 28 - Form filling folder in progress, 29
            - Virtual Data Room]
          example: 0
    ASC.Files.Core.Helpers.DocumentService_FileLink:
      type: object
      properties:
        filetype:
          type: string
          description: File type
          nullable: true
          example: some text
        token:
          type: string
          description: Token
          nullable: true
          example: some text
        url:
          type: string
          description: Url
          format: uri
          nullable: true
          example: some text
      additionalProperties: false
    ASC.Files.Core.OrderBy:
      type: object
      properties:
        is_asc:
          type: boolean
          description: Is asc
          example: true
        property:
          $ref: '#/components/schemas/ASC.Files.Core.SortedByType'
      additionalProperties: false
    ASC.Files.Core.ProviderFilter:
      oneOf:
        - enum:
            - None
            - Box
            - DropBox
            - GoogleDrive
            - kDrive
            - OneDrive
            - SharePoint
            - WebDav
            - Yandex
            - Storage
          type: string
          description: >-
            [None - None, Box - Box, DropBox - DropBox, GoogleDrive -
            GoogleDrive, kDrive - kDrive, OneDrive - OneDrive, SharePoint -
            SharePoint, WebDav - WebDav, Yandex - Yandex, Storage - Storage]
          example: None
        - enum:
            - 0
            - 1
            - 2
            - 3
            - 4
            - 5
            - 6
            - 7
            - 8
            - 9
          type: integer
          description: >-
            [0 - None, 1 - Box, 2 - DropBox, 3 - GoogleDrive, 4 - kDrive, 5 -
            OneDrive, 6 - SharePoint, 7 - WebDav, 8 - Yandex, 9 - Storage]
          example: 0
    ASC.Files.Core.Security.FileShare:
      oneOf:
        - enum:
            - None
            - ReadWrite
            - Read
            - Restrict
            - Varies
            - Review
            - Comment
            - FillForms
            - CustomFilter
            - RoomManager
            - Editing
            - ContentCreator
          type: string
          description: >-
            [None - None, ReadWrite - Read and write, Read - Read, Restrict -
            Restrict, Varies - Varies, Review - Review, Comment - Comment,
            FillForms - Fill forms, CustomFilter - Custom filter, RoomManager -
            Room manager, Editing - Editing, ContentCreator - Content creator]
          example: None
        - enum:
            - 0
            - 1
            - 2
            - 3
            - 4
            - 5
            - 6
            - 7
            - 8
            - 9
            - 10
            - 11
          type: integer
          description: >-
            [0 - None, 1 - Read and write, 2 - Read, 3 - Restrict, 4 - Varies, 5
            - Review, 6 - Comment, 7 - Fill forms, 8 - Custom filter, 9 - Room
            manager, 10 - Editing, 11 - Content creator]
          example: 0
    ASC.Files.Core.Security.ShareFilterType:
      oneOf:
        - enum:
            - UserOrGroup
            - InvitationLink
            - ExternalLink
            - AdditionalExternalLink
            - PrimaryExternalLink
            - User
            - Group
          type: string
          description: >-
            [UserOrGroup - User or group, InvitationLink - Invitation link,
            ExternalLink - External link, AdditionalExternalLink - Additional
            external link, PrimaryExternalLink - Primary external link, User -
            User, Group - Group]
          example: UserOrGroup
        - enum:
            - 0
            - 1
            - 2
            - 4
            - 8
            - 16
            - 32
          type: integer
          description: >-
            [0 - User or group, 1 - Invitation link, 2 - External link, 4 -
            Additional external link, 8 - Primary external link, 16 - User, 32 -
            Group]
          example: 0
    ASC.Files.Core.Security.SubjectType:
      oneOf:
        - enum:
            - User
            - ExternalLink
            - Group
            - InvitationLink
            - PrimaryExternalLink
          type: string
          description: >-
            [User - User, ExternalLink - External link, Group - Group,
            InvitationLink - Invitation link, PrimaryExternalLink - Primary
            external link]
          example: User
        - enum:
            - 0
            - 1
            - 2
            - 3
            - 4
          type: integer
          description: >-
            [0 - User, 1 - External link, 2 - Group, 3 - Invitation link, 4 -
            Primary external link]
          example: 0
    ASC.Files.Core.SortedByType:
      oneOf:
        - enum:
            - DateAndTime
            - AZ
            - Size
            - Author
            - Type
            - New
            - DateAndTimeCreation
            - RoomType
            - Tags
            - Room
            - CustomOrder
            - LastOpened
            - UsedSpace
          type: string
          description: >-
            [DateAndTime - Date and time, AZ - AZ, Size - Size, Author - Author,
            Type - Type, New - New, DateAndTimeCreation - Date and time
            creation, RoomType - Room type, Tags - Tags, Room - Room,
            CustomOrder - Custom order, LastOpened - Last opened, UsedSpace -
            Used space]
          example: DateAndTime
        - enum:
            - 0
            - 1
            - 2
            - 3
            - 4
            - 5
            - 6
            - 7
            - 8
            - 9
            - 10
            - 11
            - 12
          type: integer
          description: >-
            [0 - Date and time, 1 - AZ, 2 - Size, 3 - Author, 4 - Type, 5 - New,
            6 - Date and time creation, 7 - Room type, 8 - Tags, 9 - Room, 10 -
            Custom order, 11 - Last opened, 12 - Used space]
          example: 0
    ASC.Files.Core.Thumbnail:
      oneOf:
        - enum:
            - Waiting
            - Created
            - Error
            - NotRequired
            - Creating
          type: string
          description: >-
            [Waiting - Waiting, Created - Created, Error - Error, NotRequired -
            Not required, Creating - Creating]
          example: Waiting
        - enum:
            - 0
            - 1
            - 2
            - 3
            - 4
          type: integer
          description: >-
            [0 - Waiting, 1 - Created, 2 - Error, 3 - Not required, 4 -
            Creating]
          example: 0
    ASC.Files.Core.VirtualRooms.Logo:
      type: object
      properties:
        original:
          type: string
          description: Original
          nullable: true
          example: some text
        large:
          type: string
          description: Large
          nullable: true
          example: some text
        medium:
          type: string
          description: Medium
          nullable: true
          example: some text
        small:
          type: string
          description: Small
          nullable: true
          example: some text
        color:
          type: string
          description: Color
          nullable: true
          example: some text
        cover:
          $ref: '#/components/schemas/ASC.Files.Core.VirtualRooms.LogoCover'
      additionalProperties: false
    ASC.Files.Core.VirtualRooms.LogoCover:
      type: object
      properties:
        id:
          type: string
          nullable: true
          example: '9846'
        data:
          type: string
          nullable: true
          example: some text
      additionalProperties: false
    ASC.Files.Core.VirtualRooms.RoomDataLifetimePeriod:
      enum:
        - 0
        - 1
        - 2
      type: integer
      format: int32
    ASC.Files.Core.VirtualRooms.SearchArea:
      oneOf:
        - enum:
            - Active
            - Archive
            - Any
            - RecentByLinks
          type: string
          description: >-
            [Active - Active, Archive - Archive, Any - Any, RecentByLinks -
            Recent by links]
          example: Active
        - enum:
            - 0
            - 1
            - 2
            - 3
          type: integer
          description: '[0 - Active, 1 - Archive, 2 - Any, 3 - Recent by links]'
          example: 0
    ASC.Files.Core.VirtualRooms.WatermarkAdditions:
      oneOf:
        - enum:
            - UserName
            - UserEmail
            - UserIpAdress
            - CurrentDate
            - RoomName
          type: string
          description: >-
            [UserName - User name, UserEmail - User email, UserIpAdress - User
            ip adress, CurrentDate - Current date, RoomName - Room name]
          example: UserName
        - enum:
            - 1
            - 2
            - 4
            - 8
            - 16
          type: integer
          description: >-
            [1 - User name, 2 - User email, 4 - User ip adress, 8 - Current
            date, 16 - Room name]
          example: 1
    ASC.Web.Core.Files.FileType:
      oneOf:
        - enum:
            - Unknown
            - Archive
            - Video
            - Audio
            - Image
            - Spreadsheet
            - Presentation
            - Document
            - Pdf
          type: string
          description: >-
            [Unknown - Unknown, Archive - Archive, Video - Video, Audio - Audio,
            Image - Image, Spreadsheet - Spreadsheet, Presentation -
            Presentation, Document - Document, Pdf - Pdf]
          example: Unknown
        - enum:
            - 0
            - 1
            - 2
            - 3
            - 4
            - 5
            - 6
            - 7
            - 10
          type: integer
          description: >-
            [0 - Unknown, 1 - Archive, 2 - Video, 3 - Audio, 4 - Image, 5 -
            Spreadsheet, 6 - Presentation, 7 - Document, 10 - Pdf]
          example: 0
    ASC.Web.Files.Core.Compress.ICompress:
      type: object
      additionalProperties: false
      description: Archiving Class Unification Interface
    ASC.Web.Files.Services.DocumentService.CoEditingConfig:
      type: object
      properties:
        change:
          type: boolean
          description: Change
          example: true
        fast:
          type: boolean
          description: Fast
          example: true
        mode:
          $ref: >-
            #/components/schemas/ASC.Web.Files.Services.DocumentService.CoEditingConfigMode
      additionalProperties: false
    ASC.Web.Files.Services.DocumentService.CoEditingConfigMode:
      enum:
        - 0
        - 1
      type: integer
      format: int32
    ASC.Web.Files.Services.DocumentService.EditorType:
      oneOf:
        - enum:
            - Desktop
            - Mobile
            - Embedded
          type: string
          description: '[Desktop - Desktop, Mobile - Mobile, Embedded - Embedded]'
          example: Desktop
        - enum:
            - 0
            - 1
            - 2
          type: integer
          description: '[0 - Desktop, 1 - Mobile, 2 - Embedded]'
          example: 0
    ASC.Web.Files.Services.DocumentService.EmbeddedConfig:
      type: object
      properties:
        embedUrl:
          type: string
          description: Embed url
          nullable: true
          readOnly: true
          example: some text
        saveUrl:
          type: string
          description: Save url
          nullable: true
          readOnly: true
          example: some text
        shareLinkParam:
          type: string
          description: Share link param
          nullable: true
          example: some text
        shareUrl:
          type: string
          description: Share url
          nullable: true
          readOnly: true
          example: some text
        toolbarDocked:
          type: string
          description: Toolbar docked
          nullable: true
          readOnly: true
          example: some text
      additionalProperties: false
    ASC.Web.Files.Services.DocumentService.EncryptionKeysConfig:
      type: object
      properties:
        cryptoEngineId:
          type: string
          description: Crypto engine id
          nullable: true
          readOnly: true
          example: some text
        privateKeyEnc:
          type: string
          description: Private key enc
          nullable: true
          example: some text
        publicKey:
          type: string
          description: Public key
          nullable: true
          example: some text
      additionalProperties: false
    ASC.Web.Files.Services.DocumentService.FeedbackConfig:
      type: object
      properties:
        url:
          type: string
          description: Url
          nullable: true
          example: some text
        visible:
          type: boolean
          description: Visible
          readOnly: true
          example: true
      additionalProperties: false
    ASC.Web.Files.Services.DocumentService.FileReference:
      type: object
      properties:
        referenceData:
          $ref: >-
            #/components/schemas/ASC.Web.Files.Services.DocumentService.FileReferenceData
        error:
          type: string
          description: Error
          nullable: true
          example: some text
        path:
          type: string
          description: Path
          nullable: true
          example: some text
        url:
          type: string
          description: URL
          format: uri
          nullable: true
          example: some text
        fileType:
          type: string
          description: File type
          nullable: true
          example: some text
        key:
          type: string
          description: Key
          nullable: true
          example: some text
        link:
          type: string
          description: Link
          nullable: true
          example: some text
        token:
          type: string
          description: Token
          nullable: true
          example: some text
      additionalProperties: false
    ASC.Web.Files.Services.DocumentService.FileReferenceData:
      type: object
      properties:
        fileKey:
          type: string
          description: File key
          nullable: true
          example: some text
        instanceId:
          type: string
          description: Instance ID
          nullable: true
          example: '9846'
      additionalProperties: false
    ASC.Web.Files.Services.DocumentService.GobackConfig:
      type: object
      properties:
        url:
          type: string
          description: Url
          nullable: true
          example: some text
      additionalProperties: false
    ASC.Web.Files.Services.DocumentService.Options:
      type: object
      properties:
        watermark_on_draw:
          $ref: >-
            #/components/schemas/ASC.Web.Files.Services.DocumentService.WatermarkOnDraw
      additionalProperties: false
    ASC.Web.Files.Services.DocumentService.Paragraph:
      type: object
      properties:
        align:
          type: integer
          format: int32
          example: 1234
        runs:
          type: array
          items:
            $ref: '#/components/schemas/ASC.Web.Files.Services.DocumentService.Run'
          nullable: true
      additionalProperties: false
    ASC.Web.Files.Services.DocumentService.PermissionsConfig:
      type: object
      properties:
        changeHistory:
          type: boolean
          description: Change history
          example: true
        comment:
          type: boolean
          description: Comment
          example: true
        chat:
          type: boolean
          description: Chat
          example: true
        download:
          type: boolean
          description: Download
          example: true
        edit:
          type: boolean
          description: Edit
          example: true
        fillForms:
          type: boolean
          description: FillForms
          example: true
        modifyFilter:
          type: boolean
          description: ModifyFilter
          example: true
        protect:
          type: boolean
          description: Protect
          example: true
        print:
          type: boolean
          description: Print
          example: true
        rename:
          type: boolean
          description: Rename
          example: true
        review:
          type: boolean
          description: Review
          example: true
        copy:
          type: boolean
          description: Copy
          example: true
      additionalProperties: false
    ASC.Web.Files.Services.DocumentService.PluginsConfig:
      type: object
      properties:
        pluginsData:
          type: array
          items:
            type: string
          nullable: true
          readOnly: true
          example:
            - some text
      additionalProperties: false
    ASC.Web.Files.Services.DocumentService.RecentConfig:
      type: object
      properties:
        folder:
          type: string
          description: Folder
          nullable: true
          example: some text
        title:
          type: string
          description: Title
          nullable: true
          example: legacy_1080p_small_wooden_mouse
        url:
          type: string
          description: Url
          format: uri
          nullable: true
          example: some text
      additionalProperties: false
    ASC.Web.Files.Services.DocumentService.Run:
      type: object
      properties:
        fill:
          type: array
          items:
            type: integer
            format: int32
          nullable: true
          example:
            - 1234
        text:
          type: string
          nullable: true
          example: some text
        font-size:
          type: string
          nullable: true
          example: some text
      additionalProperties: false
    ASC.Web.Files.Services.DocumentService.TemplatesConfig:
      type: object
      properties:
        image:
          type: string
          description: Image
          nullable: true
          example: some text
        title:
          type: string
          description: Title
          nullable: true
          example: legacy_1080p_small_wooden_mouse
        url:
          type: string
          description: Url
          format: uri
          nullable: true
          example: some text
      additionalProperties: false
    ASC.Web.Files.Services.DocumentService.UserConfig:
      type: object
      properties:
        id:
          type: string
          description: Id
          nullable: true
          example: '9846'
        name:
          type: string
          description: Name
          nullable: true
          example: Winfield Upton
        image:
          type: string
          description: Image
          nullable: true
          example: some text
      additionalProperties: false
    ASC.Web.Files.Services.DocumentService.WatermarkOnDraw:
      type: object
      properties:
        width:
          type: number
          description: Defines the watermark width measured in millimeters.
          format: double
          example: -8.5
        height:
          type: number
          description: Defines the watermark height measured in millimeters.
          format: double
          example: -8.5
        margins:
          type: array
          items:
            type: integer
            format: int32
          nullable: true
          example:
            - 1234
        fill:
          type: string
          nullable: true
          example: some text
        rotate:
          type: integer
          format: int32
          example: 1234
        transparent:
          type: number
          format: double
          example: -8.5
        paragraphs:
          type: array
          items:
            $ref: >-
              #/components/schemas/ASC.Web.Files.Services.DocumentService.Paragraph
          nullable: true
      additionalProperties: false
    ASC.Web.Files.Services.WCFService.AceShortWrapper:
      type: object
      properties:
        user:
          type: string
          description: User
          nullable: true
          example: some text
        permissions:
          type: string
          description: User access rights to the file
          nullable: true
          example: some text
        isLink:
          type: boolean
          description: Is link
          example: true
      additionalProperties: false
    ASC.Web.Files.Services.WCFService.FileOperations.FileConflictResolveType:
      oneOf:
        - enum:
            - Skip
            - Overwrite
            - Duplicate
          type: string
          description: '[Skip - Skip, Overwrite - Overwrite, Duplicate - Duplicate]'
          example: Skip
        - enum:
            - 0
            - 1
            - 2
          type: integer
          description: '[0 - Skip, 1 - Overwrite, 2 - Duplicate]'
          example: 0
    ASC.Web.Files.Services.WCFService.FileOperations.FileOperationType:
      oneOf:
        - enum:
            - Move
            - Copy
            - Delete
            - Download
            - MarkAsRead
            - Import
            - Convert
            - Duplicate
          type: string
          description: >-
            [Move - Move, Copy - Copy, Delete - Delete, Download - Download,
            MarkAsRead - MarkAsRead, Import - Import, Convert - Convert,
            Duplicate - Duplicate]
          example: Move
        - enum:
            - 0
            - 1
            - 2
            - 3
            - 4
            - 5
            - 6
            - 7
          type: integer
          description: >-
            [0 - Move, 1 - Copy, 2 - Delete, 3 - Download, 4 - MarkAsRead, 5 -
            Import, 6 - Convert, 7 - Duplicate]
          example: 0
    ASC.Web.Files.Services.WCFService.MentionWrapper:
      type: object
      properties:
        user:
          $ref: '#/components/schemas/ASC.Core.Users.UserInfo'
        email:
          type: string
          description: User email
          format: email
          nullable: true
          readOnly: true
          example: Sydney_Roberts4@hotmail.com
        id:
          type: string
          description: User ID
          nullable: true
          readOnly: true
          example: '9846'
        image:
          type: string
          description: User image
          nullable: true
          readOnly: true
          example: some text
        hasAccess:
          type: boolean
          description: Specifies if the user has the access to the file or not
          readOnly: true
          example: true
        name:
          type: string
          description: User display name
          nullable: true
          readOnly: true
          example: Winfield Upton
      additionalProperties: false
    ASC.Web.Files.Services.WCFService.ThirdPartyParams:
      type: object
      properties:
        auth_data:
          $ref: '#/components/schemas/ASC.Files.Core.AuthData'
        corporate:
          type: boolean
          description: Specifies if this is a corporate account or not
          example: true
        roomsStorage:
          type: boolean
          description: Specifies if this is a room storage or not
          example: true
        customer_title:
          type: string
          description: Customer title
          nullable: true
          example: some text
        provider_id:
          type: integer
          description: Provider ID
          format: int32
          nullable: true
          example: 1234
        provider_key:
          type: string
          description: Provider key
          nullable: true
          example: some text
      additionalProperties: false
    System.Collections.Generic.KeyValuePair.System.Boolean.System.String:
      type: object
      properties:
        key:
          type: boolean
          example: true
        value:
          type: string
          nullable: true
          example: some text
      additionalProperties: false
    System.Net.Mime.ContentDisposition:
      type: object
      properties:
        dispositionType:
          type: string
          nullable: true
          example: some text
        parameters:
          type: array
          items: {}
          nullable: true
          readOnly: true
        fileName:
          type: string
          nullable: true
          example: some text
        creationDate:
          type: string
          format: date-time
          example: '2008-04-10T06:30:00.0000000+04:00'
        modificationDate:
          type: string
          format: date-time
          example: '2008-04-10T06:30:00.0000000+04:00'
        inline:
          type: boolean
          example: true
        readDate:
          type: string
          format: date-time
          example: '2008-04-10T06:30:00.0000000+04:00'
        size:
          type: integer
          format: int64
          example: 1234
      additionalProperties: false
    System.Net.Mime.ContentType:
      type: object
      properties:
        boundary:
          type: string
          nullable: true
          example: some text
        charSet:
          type: string
          nullable: true
          example: some text
        mediaType:
          type: string
          nullable: true
          example: some text
        name:
          type: string
          nullable: true
          example: Winfield Upton
        parameters:
          type: array
          items: {}
          nullable: true
          readOnly: true
      additionalProperties: false
    ASC.Api.Collections.ItemKeyValuePair.System.Object.System.Object:
      type: object
      properties:
        key:
          nullable: true
          example:
            int: 1234
            string: some text
            boolean: true
        value:
          nullable: true
          example:
            int: 1234
            string: some text
            boolean: true
      additionalProperties: false
    ASC.Data.Backup.ApiModels.BackupDto:
      type: object
      properties:
        storageType:
          $ref: '#/components/schemas/ASC.Data.Backup.Contracts.BackupStorageType'
        storageParams:
          type: array
          items:
            $ref: >-
              #/components/schemas/ASC.Api.Collections.ItemKeyValuePair.System.Object.System.Object
          description: Storage parameters
          nullable: true
        dump:
          type: boolean
          description: Specifies if a dump will be created or not
          example: true
      additionalProperties: false
      description: Backup parameters
    ASC.Data.Backup.ApiModels.BackupRestoreDto:
      type: object
      properties:
        backupId:
          type: string
          description: Backup ID
          nullable: true
          example: some text
        storageType:
          $ref: '#/components/schemas/ASC.Data.Backup.Contracts.BackupStorageType'
        storageParams:
          type: array
          items:
            $ref: >-
              #/components/schemas/ASC.Api.Collections.ItemKeyValuePair.System.Object.System.Object
          description: Storage parameters
          nullable: true
        notify:
          type: boolean
          description: Notifies users about portal restoring process or not
          example: true
      additionalProperties: false
      description: Restoring parameters
    ASC.Data.Backup.ApiModels.BackupScheduleDto:
      type: object
      properties:
        storageType:
          $ref: '#/components/schemas/ASC.Data.Backup.Contracts.BackupStorageType'
        storageParams:
          type: array
          items:
            $ref: >-
              #/components/schemas/ASC.Api.Collections.ItemKeyValuePair.System.Object.System.Object
          description: Storage parameters
          nullable: true
        backupsStored:
          type: integer
          description: Maximum number of the stored backup copies
          format: int32
          nullable: true
          example: 1234
        cronParams:
          $ref: '#/components/schemas/ASC.Data.Backup.ApiModels.Cron'
        dump:
          type: boolean
          description: Specifies if a dump will be created or not
          example: true
      additionalProperties: false
      description: Backup schedule parameters
    ASC.Data.Backup.ApiModels.Cron:
      type: object
      properties:
        period:
          $ref: '#/components/schemas/ASC.Data.Backup.BackupAjaxHandler_BackupPeriod'
        hour:
          type: integer
          description: Hour
          format: int32
          example: 0
        day:
          type: integer
          description: Day
          format: int32
          nullable: true
          example: 0
      additionalProperties: false
      description: Cron parameters
    ASC.Data.Backup.BackupAjaxHandler_BackupPeriod:
      oneOf:
        - enum:
            - EveryDay
            - EveryWeek
            - EveryMonth
          type: string
          description: >-
            [EveryDay - Every day, EveryWeek - Every week, EveryMonth - Every
            month]
          example: EveryDay
        - enum:
            - 0
            - 1
            - 2
          type: integer
          description: '[0 - Every day, 1 - Every week, 2 - Every month]'
          example: 0
    ASC.Data.Backup.BackupAjaxHandler_CronParams:
      type: object
      properties:
        period:
          $ref: '#/components/schemas/ASC.Data.Backup.BackupAjaxHandler_BackupPeriod'
        hour:
          type: integer
          format: int32
          example: 1234
        day:
          type: integer
          format: int32
          example: 1234
      additionalProperties: false
    ASC.Data.Backup.BackupAjaxHandler_Schedule:
      type: object
      properties:
        storageType:
          $ref: '#/components/schemas/ASC.Data.Backup.Contracts.BackupStorageType'
        storageParams:
          type: object
          additionalProperties:
            type: string
            nullable: true
          nullable: true
          example:
            - key: some text
              value: some text
        cronParams:
          $ref: '#/components/schemas/ASC.Data.Backup.BackupAjaxHandler_CronParams'
        backupsStored:
          type: integer
          format: int32
          nullable: true
          example: 1234
        lastBackupTime:
          type: string
          format: date-time
          example: '2008-04-10T06:30:00.0000000+04:00'
        dump:
          type: boolean
          example: false
      additionalProperties: false
    ASC.Data.Backup.Contracts.BackupHistoryRecord:
      type: object
      properties:
        id:
          type: string
          format: uuid
          example: aae1e103-bca5-9fa1-ba8c-42058b4abf28
        fileName:
          type: string
          nullable: true
          example: some text
        storageType:
          $ref: '#/components/schemas/ASC.Data.Backup.Contracts.BackupStorageType'
        createdOn:
          type: string
          format: date-time
          example: '2008-04-10T06:30:00.0000000+04:00'
        expiresOn:
          type: string
          format: date-time
          example: '2008-04-10T06:30:00.0000000+04:00'
      additionalProperties: false
    ASC.Data.Backup.Contracts.BackupProgress:
      type: object
      properties:
        isCompleted:
          type: boolean
          example: true
        progress:
          type: integer
          format: int32
          example: 1234
        error:
          type: string
          nullable: true
          example: some text
        link:
          type: string
          nullable: true
          example: some text
        tenantId:
          type: integer
          format: int32
          example: 1234
        backupProgressEnum:
          $ref: '#/components/schemas/ASC.Data.Backup.Contracts.BackupProgressEnum'
        taskId:
          type: string
          nullable: true
          example: some text
      additionalProperties: false
    ASC.Data.Backup.Contracts.BackupProgressEnum:
      oneOf:
        - enum:
            - Backup
            - Restore
            - Transfer
          type: string
          description: '[Backup - Backup, Restore - Restore, Transfer - Transfer]'
          example: Backup
        - enum:
            - 0
            - 1
            - 2
          type: integer
          description: '[0 - Backup, 1 - Restore, 2 - Transfer]'
          example: 0
    ASC.Data.Backup.Contracts.BackupStorageType:
      oneOf:
        - enum:
            - Documents
            - ThridpartyDocuments
            - CustomCloud
            - Local
            - DataStore
            - ThirdPartyConsumer
          type: string
          description: >-
            [Documents - Documents, ThridpartyDocuments - Thridparty documents,
            CustomCloud - Custom cloud, Local - Local, DataStore - Data store,
            ThirdPartyConsumer - Thirdparty consumer]
          example: Documents
        - enum:
            - 0
            - 1
            - 2
            - 3
            - 4
            - 5
          type: integer
          description: >-
            [0 - Documents, 1 - Thridparty documents, 2 - Custom cloud, 3 -
            Local, 4 - Data store, 5 - Thirdparty consumer]
          example: 0
  securitySchemes:
    asc_auth_key:
      type: apiKey
      name: asc_auth_key
      in: cookie
x-tagGroups:
  - name: Api
    tags:
      - Authentication
      - Capabilities
      - Migration
      - Modules
      - Portal / Quota
      - Portal / Settings
      - Portal / Users
      - Security / Active connections
      - Security / Audit trail data
      - Security / CSP
      - Security / Firebase
      - Security / Login history
      - Security / SMTP settings
      - Settings / Authorization
      - Settings / Common settings
      - Settings / Cookies
      - Settings / Custom Navigation
      - Settings / Encryption
      - Settings / Greeting settings
      - Settings / IP restrictions
      - Settings / License
      - Settings / Login settings
      - Settings / Messages
      - Settings / Notifications
      - Settings / Owner
      - Settings / Quota
      - Settings / Rebranding
      - Settings / Security
      - Settings / SSO
      - Settings / Statistics
      - Settings / Storage
      - Settings / Team templates
      - Settings / TFA settings
      - Settings / Tips
      - Settings / Webhooks
      - Settings / Webplugins
  - name: People
    tags:
      - Group
      - Group / Rooms
      - People / Contacts
      - People / Guests
      - People / Password
      - People / Photos
      - People / Profiles
      - People / Quota
      - People / Search
      - People / Theme
      - People / Third-party accounts
      - People / User data
      - People / User status
      - People / User type
  - name: Files
    tags:
      - Files / Files
      - Files / Folders
      - Files / Operations
      - Files / Quota
      - Files / Rooms
      - Files / Settings
      - Files / Third-party integration
  - name: Backup
    tags:
      - Backup
