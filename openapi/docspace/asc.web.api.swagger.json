{
  "openapi": "3.0.1",
  "info": {
    "title": "ASC.Web.Api",
    "version": "v2"
  },
  "servers": [
    {
      "url": "http://localhost:8092/",
      "description": "Local server"
    }
  ],
  "paths": {
    "/api/2.0/authentication": {
      "get": {
        "tags": [
          "Authentication"
        ],
        "summary": "Check authentication",
        "operationId": "getIsAuthentificated",
        "responses": {
          "200": {
            "description": "Boolean value: true if the current user is authenticated",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "boolean"
                }
              },
              "application/json": {
                "schema": {
                  "type": "boolean"
                }
              },
              "text/json": {
                "schema": {
                  "type": "boolean"
                }
              }
            }
          }
        },
        "description": "Checks if the current user is authenticated or not."
      },
      "post": {
        "tags": [
          "Authentication"
        ],
        "summary": "Authenticate a user",
        "operationId": "authenticateMe",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ASC.Web.Api.ApiModel.RequestsDto.AuthRequestsDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ASC.Web.Api.ApiModel.RequestsDto.AuthRequestsDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/ASC.Web.Api.ApiModel.RequestsDto.AuthRequestsDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Authentication data",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.Web.Api.ApiModel.ResponseDto.AuthenticationTokenDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.Web.Api.ApiModel.ResponseDto.AuthenticationTokenDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.Web.Api.ApiModel.ResponseDto.AuthenticationTokenDto"
                }
              }
            }
          }
        },
        "description": "Authenticates the current user by SMS, authenticator app, or without two-factor authentication."
      }
    },
    "/api/2.0/authentication/{code}": {
      "post": {
        "tags": [
          "Authentication"
        ],
        "summary": "Authenticate a user by code",
        "operationId": "authenticateMeFromBodyWithCode",
        "parameters": [
          {
            "name": "code",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ASC.Web.Api.ApiModel.RequestsDto.AuthRequestsDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ASC.Web.Api.ApiModel.RequestsDto.AuthRequestsDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/ASC.Web.Api.ApiModel.RequestsDto.AuthRequestsDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Authentication data",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.Web.Api.ApiModel.ResponseDto.AuthenticationTokenDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.Web.Api.ApiModel.ResponseDto.AuthenticationTokenDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.Web.Api.ApiModel.ResponseDto.AuthenticationTokenDto"
                }
              }
            }
          }
        },
        "description": "Authenticates the current user by SMS or two-factor authentication code."
      }
    },
    "/api/2.0/authentication/logout": {
      "post": {
        "tags": [
          "Authentication"
        ],
        "summary": "Log out",
        "operationId": "logout",
        "responses": {
          "200": {
            "description": "Ok",
            "content": {
              "text/plain": {
                "schema": {}
              },
              "application/json": {
                "schema": {}
              },
              "text/json": {
                "schema": {}
              }
            }
          }
        },
        "description": "Logs out of the current user account."
      }
    },
    "/api/2.0/authentication/confirm": {
      "post": {
        "tags": [
          "Authentication"
        ],
        "summary": "Open confirmation email URL",
        "operationId": "checkConfirm",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ASC.Security.Cryptography.EmailValidationKeyModel"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ASC.Security.Cryptography.EmailValidationKeyModel"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/ASC.Security.Cryptography.EmailValidationKeyModel"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Validation result: Ok, Invalid, or Expired",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.Web.Api.ApiModels.ResponseDto.ConfirmDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.Web.Api.ApiModels.ResponseDto.ConfirmDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.Web.Api.ApiModels.ResponseDto.ConfirmDto"
                }
              }
            }
          }
        },
        "description": "Opens a confirmation email URL to validate a certain action (employee invitation, portal removal, phone activation, etc.)."
      }
    },
    "/api/2.0/authentication/setphone": {
      "post": {
        "tags": [
          "Authentication"
        ],
        "summary": "Set a mobile phone",
        "operationId": "saveMobilePhone",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ASC.Web.Api.ApiModel.RequestsDto.MobileRequestsDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ASC.Web.Api.ApiModel.RequestsDto.MobileRequestsDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/ASC.Web.Api.ApiModel.RequestsDto.MobileRequestsDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Authentication data",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.Web.Api.ApiModel.ResponseDto.AuthenticationTokenDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.Web.Api.ApiModel.ResponseDto.AuthenticationTokenDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.Web.Api.ApiModel.ResponseDto.AuthenticationTokenDto"
                }
              }
            }
          }
        },
        "description": "Sets a mobile phone for the current user."
      }
    },
    "/api/2.0/authentication/sendsms": {
      "post": {
        "tags": [
          "Authentication"
        ],
        "summary": "Send SMS code",
        "operationId": "sendSmsCode",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ASC.Web.Api.ApiModel.RequestsDto.AuthRequestsDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ASC.Web.Api.ApiModel.RequestsDto.AuthRequestsDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/ASC.Web.Api.ApiModel.RequestsDto.AuthRequestsDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Authentication data",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.Web.Api.ApiModel.ResponseDto.AuthenticationTokenDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.Web.Api.ApiModel.ResponseDto.AuthenticationTokenDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.Web.Api.ApiModel.ResponseDto.AuthenticationTokenDto"
                }
              }
            }
          }
        },
        "description": "Sends SMS with an authentication code."
      }
    },
    "/api/2.0/capabilities": {
      "get": {
        "tags": [
          "Capabilities"
        ],
        "summary": "Get portal capabilities",
        "operationId": "getPortalCapabilities",
        "responses": {
          "200": {
            "description": "Portal capabilities",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.Web.Api.ApiModel.ResponseDto.CapabilitiesDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.Web.Api.ApiModel.ResponseDto.CapabilitiesDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.Web.Api.ApiModel.ResponseDto.CapabilitiesDto"
                }
              }
            }
          }
        },
        "description": "Returns the information about portal capabilities."
      }
    },
    "/api/2.0/migration/list": {
      "get": {
        "tags": [
          "Migration"
        ],
        "summary": "Gets migration list",
        "operationId": "list",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "asc_auth_key": [
              "read",
              "write"
            ]
          }
        ],
        "description": "Gets migration list"
      }
    },
    "/api/2.0/migration/init/{migratorName}": {
      "post": {
        "tags": [
          "Migration"
        ],
        "summary": "Uploads and inits migration",
        "operationId": "uploadAndInit",
        "parameters": [
          {
            "name": "migratorName",
            "in": "path",
            "description": "Migrator name",
            "required": true,
            "schema": {
              "type": "string",
              "example": "some text"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "asc_auth_key": [
              "read",
              "write"
            ]
          }
        ],
        "description": "Uploads and inits migration"
      }
    },
    "/api/2.0/migration/status": {
      "get": {
        "tags": [
          "Migration"
        ],
        "summary": "Gets migration status",
        "operationId": "status",
        "responses": {
          "200": {
            "description": "Ok",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.Web.Api.ApiModels.ResponseDto.MigrationStatusDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.Web.Api.ApiModels.ResponseDto.MigrationStatusDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.Web.Api.ApiModels.ResponseDto.MigrationStatusDto"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "asc_auth_key": [
              "read",
              "write"
            ]
          }
        ],
        "description": "Gets migration status"
      }
    },
    "/api/2.0/migration/cancel": {
      "post": {
        "tags": [
          "Migration"
        ],
        "summary": "Cancels migration",
        "operationId": "cancel",
        "responses": {
          "200": {
            "description": "OK"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "asc_auth_key": [
              "read",
              "write"
            ]
          }
        ],
        "description": "Cancels migration"
      }
    },
    "/api/2.0/migration/clear": {
      "post": {
        "tags": [
          "Migration"
        ],
        "summary": "Clears migration",
        "operationId": "clear",
        "responses": {
          "200": {
            "description": "OK"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "asc_auth_key": [
              "read",
              "write"
            ]
          }
        ],
        "description": "Clears migration"
      }
    },
    "/api/2.0/migration/migrate": {
      "post": {
        "tags": [
          "Migration"
        ],
        "summary": "Migrates",
        "operationId": "migrate",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ASC.Migration.Core.Models.Api.MigrationApiInfo"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ASC.Migration.Core.Models.Api.MigrationApiInfo"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/ASC.Migration.Core.Models.Api.MigrationApiInfo"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "asc_auth_key": [
              "read",
              "write"
            ]
          }
        ],
        "description": "Migrates"
      }
    },
    "/api/2.0/migration/logs": {
      "get": {
        "tags": [
          "Migration"
        ],
        "summary": "Gets migration logs",
        "operationId": "logs",
        "responses": {
          "200": {
            "description": "OK"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "asc_auth_key": [
              "read",
              "write"
            ]
          }
        ],
        "description": "Gets migration logs"
      }
    },
    "/api/2.0/migration/finish": {
      "post": {
        "tags": [
          "Migration"
        ],
        "summary": "Finishes migration",
        "operationId": "finish",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ASC.Web.Api.ApiModels.RequestsDto.FinishDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ASC.Web.Api.ApiModels.RequestsDto.FinishDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/ASC.Web.Api.ApiModels.RequestsDto.FinishDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "asc_auth_key": [
              "read",
              "write"
            ]
          }
        ],
        "description": "Finishes migration"
      }
    },
    "/api/2.0/modules": {
      "get": {
        "tags": [
          "Modules"
        ],
        "summary": "Get modules",
        "operationId": "getAll",
        "responses": {
          "200": {
            "description": "List of modules",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string"
                }
              },
              "application/json": {
                "schema": {
                  "type": "string"
                }
              },
              "text/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "asc_auth_key": [
              "read",
              "write"
            ]
          }
        ],
        "description": "Returns a list of all the portal modules."
      }
    },
    "/api/2.0/modules/info": {
      "get": {
        "tags": [
          "Modules"
        ],
        "summary": "Get modules information",
        "operationId": "getAllWithInfo",
        "responses": {
          "200": {
            "description": "List of modules with their information",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.Api.Core.Module"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.Api.Core.Module"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.Api.Core.Module"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "asc_auth_key": [
              "read",
              "write"
            ]
          }
        ],
        "description": "Returns a list of all the portal modules with their information."
      }
    },
    "/api/2.0/portal/usedspace": {
      "get": {
        "tags": [
          "Portal / Quota"
        ],
        "summary": "Get the used portal space",
        "operationId": "getUsedSpace",
        "responses": {
          "200": {
            "description": "Used portal space",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "number",
                  "format": "double"
                }
              },
              "application/json": {
                "schema": {
                  "type": "number",
                  "format": "double"
                }
              },
              "text/json": {
                "schema": {
                  "type": "number",
                  "format": "double"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "asc_auth_key": [
              "read",
              "write"
            ]
          }
        ],
        "description": "Returns the used space of the current portal."
      }
    },
    "/api/2.0/portal/tariff": {
      "get": {
        "tags": [
          "Portal / Quota"
        ],
        "summary": "Get a portal tariff",
        "operationId": "getTariff",
        "parameters": [
          {
            "name": "refresh",
            "in": "query",
            "description": "Specifies whether the tariff will be refreshed",
            "schema": {
              "type": "boolean",
              "example": true
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Current portal tariff",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.Core.Billing.Tariff"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.Core.Billing.Tariff"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.Core.Billing.Tariff"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "asc_auth_key": [
              "read",
              "write"
            ]
          }
        ],
        "description": "Returns the current portal tariff."
      }
    },
    "/api/2.0/portal/quota": {
      "get": {
        "tags": [
          "Portal / Quota"
        ],
        "summary": "Get a portal quota",
        "operationId": "getQuota",
        "responses": {
          "200": {
            "description": "Current portal quota",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.Core.Tenants.TenantQuota"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.Core.Tenants.TenantQuota"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.Core.Tenants.TenantQuota"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "asc_auth_key": [
              "read",
              "write"
            ]
          }
        ],
        "description": "Returns the current portal quota."
      }
    },
    "/api/2.0/portal/quota/right": {
      "get": {
        "tags": [
          "Portal / Quota"
        ],
        "summary": "Get the recommended quota",
        "operationId": "getRightQuota",
        "responses": {
          "200": {
            "description": "Recommended portal quota",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.Core.Tenants.TenantQuota"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.Core.Tenants.TenantQuota"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.Core.Tenants.TenantQuota"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "asc_auth_key": [
              "read",
              "write"
            ]
          }
        ],
        "description": "Returns the recommended quota for the current portal."
      }
    },
    "/api/2.0/portal": {
      "get": {
        "tags": [
          "Portal / Settings"
        ],
        "summary": "Get a portal",
        "operationId": "get",
        "responses": {
          "200": {
            "description": "Current portal information",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.Web.Api.ApiModels.ResponseDto.TenantDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.Web.Api.ApiModels.ResponseDto.TenantDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.Web.Api.ApiModels.ResponseDto.TenantDto"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "asc_auth_key": [
              "read",
              "write"
            ]
          }
        ],
        "description": "Returns the current portal."
      }
    },
    "/api/2.0/portal/getshortenlink": {
      "put": {
        "tags": [
          "Portal / Settings"
        ],
        "summary": "Get a shortened link",
        "operationId": "getShortenLink",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ASC.Web.Api.ApiModel.RequestsDto.ShortenLinkRequestsDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ASC.Web.Api.ApiModel.RequestsDto.ShortenLinkRequestsDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/ASC.Web.Api.ApiModel.RequestsDto.ShortenLinkRequestsDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Shortened link",
            "content": {
              "text/plain": {
                "schema": {}
              },
              "application/json": {
                "schema": {}
              },
              "text/json": {
                "schema": {}
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "asc_auth_key": [
              "read",
              "write"
            ]
          }
        ],
        "description": "Returns a link specified in the request in the shortened format."
      }
    },
    "/api/2.0/portal/path": {
      "get": {
        "tags": [
          "Portal / Settings"
        ],
        "summary": "Get a path to the portal",
        "operationId": "getFullAbsolutePath",
        "parameters": [
          {
            "name": "virtualPath",
            "in": "query",
            "description": "Portal virtual path",
            "schema": {
              "type": "string",
              "example": "some text"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Portal path",
            "content": {
              "text/plain": {
                "schema": {}
              },
              "application/json": {
                "schema": {}
              },
              "text/json": {
                "schema": {}
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "asc_auth_key": [
              "read",
              "write"
            ]
          }
        ],
        "description": "Returns the full absolute path to the current portal."
      }
    },
    "/api/2.0/portal/suspend": {
      "post": {
        "tags": [
          "Portal / Settings"
        ],
        "summary": "Send suspension instructions",
        "operationId": "sendSuspendInstructions",
        "responses": {
          "200": {
            "description": "OK"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "asc_auth_key": [
              "read",
              "write"
            ]
          }
        ],
        "description": "Sends the instructions to suspend the current portal."
      },
      "put": {
        "tags": [
          "Portal / Settings"
        ],
        "summary": "Deactivate a portal",
        "operationId": "suspendPortal",
        "responses": {
          "200": {
            "description": "OK"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "asc_auth_key": [
              "read",
              "write"
            ]
          }
        ],
        "description": "Deactivates the current portal."
      }
    },
    "/api/2.0/portal/delete": {
      "post": {
        "tags": [
          "Portal / Settings"
        ],
        "summary": "Send removal instructions",
        "operationId": "sendDeleteInstructions",
        "responses": {
          "200": {
            "description": "OK"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "asc_auth_key": [
              "read",
              "write"
            ]
          }
        ],
        "description": "Sends the instructions to remove the current portal."
      },
      "delete": {
        "tags": [
          "Portal / Settings"
        ],
        "summary": "Delete a portal",
        "operationId": "deletePortal",
        "responses": {
          "200": {
            "description": "URL to the feedback form about removing a portal",
            "content": {
              "text/plain": {
                "schema": {}
              },
              "application/json": {
                "schema": {}
              },
              "text/json": {
                "schema": {}
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "asc_auth_key": [
              "read",
              "write"
            ]
          }
        ],
        "description": "Deletes the current portal."
      }
    },
    "/api/2.0/portal/continue": {
      "put": {
        "tags": [
          "Portal / Settings"
        ],
        "summary": "Restore a portal",
        "operationId": "continuePortal",
        "responses": {
          "200": {
            "description": "OK"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "asc_auth_key": [
              "read",
              "write"
            ]
          }
        ],
        "description": "Restores the current portal."
      }
    },
    "/api/2.0/portal/users/{userID}": {
      "get": {
        "tags": [
          "Portal / Users"
        ],
        "summary": "Get a user by ID",
        "operationId": "getUser",
        "parameters": [
          {
            "name": "userID",
            "in": "path",
            "description": "User ID",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "example": "603fac16-9750-498f-b82e-3aedc7f7af84"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "User information",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.Core.Users.UserInfo"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.Core.Users.UserInfo"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.Core.Users.UserInfo"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "asc_auth_key": [
              "read",
              "write"
            ]
          }
        ],
        "description": "Returns a user with the ID specified in the request from the current portal."
      }
    },
    "/api/2.0/portal/users/invite/{employeeType}": {
      "get": {
        "tags": [
          "Portal / Users"
        ],
        "summary": "Get an invitation link",
        "operationId": "geInviteLink",
        "parameters": [
          {
            "name": "employeeType",
            "in": "path",
            "description": "Employee type (All, RoomAdmin, User, DocSpaceAdmin)",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/ASC.Core.Users.EmployeeType"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Invitation link",
            "content": {
              "text/plain": {
                "schema": {}
              },
              "application/json": {
                "schema": {}
              },
              "text/json": {
                "schema": {}
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "asc_auth_key": [
              "read",
              "write"
            ]
          }
        ],
        "description": "Returns an invitation link for joining the portal."
      }
    },
    "/api/2.0/portal/userscount": {
      "get": {
        "tags": [
          "Portal / Users"
        ],
        "summary": "Get a number of portal users",
        "operationId": "getUsersCount",
        "responses": {
          "200": {
            "description": "Number of portal users",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "integer",
                  "format": "int64"
                }
              },
              "application/json": {
                "schema": {
                  "type": "integer",
                  "format": "int64"
                }
              },
              "text/json": {
                "schema": {
                  "type": "integer",
                  "format": "int64"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "asc_auth_key": [
              "read",
              "write"
            ]
          }
        ],
        "description": "Returns a number of portal users."
      }
    },
    "/api/2.0/portal/present/mark": {
      "post": {
        "tags": [
          "Portal / Users"
        ],
        "summary": "Mark a gift message as read",
        "operationId": "markPresentAsReaded",
        "responses": {
          "200": {
            "description": "OK"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "asc_auth_key": [
              "read",
              "write"
            ]
          }
        ],
        "description": "Marks a gift message as read."
      }
    },
    "/api/2.0/portal/sendcongratulations": {
      "post": {
        "tags": [
          "Portal / Users"
        ],
        "summary": "Send congratulations",
        "operationId": "sendCongratulations",
        "parameters": [
          {
            "name": "Userid",
            "in": "query",
            "description": "User ID",
            "schema": {
              "type": "string",
              "format": "uuid",
              "example": "75a5f745-f697-4418-b38d-0fe0d277e258"
            }
          },
          {
            "name": "Key",
            "in": "query",
            "description": "Email key",
            "schema": {
              "type": "string",
              "example": "some text"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        },
        "description": "Sends congratulations to the user after registering the portal."
      }
    },
    "/api/2.0/security/activeconnections": {
      "get": {
        "tags": [
          "Security / Active connections"
        ],
        "summary": "Get active connections",
        "operationId": "getAllActiveConnections",
        "responses": {
          "200": {
            "description": "Active portal connections",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.Web.Api.ApiModels.ResponseDto.ActiveConnectionsDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.Web.Api.ApiModels.ResponseDto.ActiveConnectionsDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.Web.Api.ApiModels.ResponseDto.ActiveConnectionsDto"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "asc_auth_key": [
              "read",
              "write"
            ]
          }
        ],
        "description": "Returns all the active connections to the portal."
      }
    },
    "/api/2.0/security/activeconnections/logoutallchangepassword": {
      "put": {
        "tags": [
          "Security / Active connections"
        ],
        "summary": "Log out and change password",
        "operationId": "logOutAllActiveConnectionsChangePassword",
        "responses": {
          "200": {
            "description": "URL to the confirmation message for changing a password",
            "content": {
              "text/plain": {
                "schema": {}
              },
              "application/json": {
                "schema": {}
              },
              "text/json": {
                "schema": {}
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "asc_auth_key": [
              "read",
              "write"
            ]
          }
        ],
        "description": "Logs out from all the active connections of the current user and changes their password."
      }
    },
    "/api/2.0/security/activeconnections/logoutall/{userId}": {
      "put": {
        "tags": [
          "Security / Active connections"
        ],
        "summary": "Log out for the user by ID",
        "operationId": "logOutAllActiveConnectionsForUser",
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "description": "User ID",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "example": "1e3ea815-8c7d-4e72-9d4a-2292de96e8dd"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "asc_auth_key": [
              "read",
              "write"
            ]
          }
        ],
        "description": "Logs out from all the active connections of the user with the ID specified in the request."
      }
    },
    "/api/2.0/security/activeconnections/logoutallexceptthis": {
      "put": {
        "tags": [
          "Security / Active connections"
        ],
        "summary": "Log out from all connections",
        "operationId": "logOutAllExceptThisConnection",
        "responses": {
          "200": {
            "description": "Current user name",
            "content": {
              "text/plain": {
                "schema": {}
              },
              "application/json": {
                "schema": {}
              },
              "text/json": {
                "schema": {}
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "asc_auth_key": [
              "read",
              "write"
            ]
          }
        ],
        "description": "Logs out from all the active connections except the current connection."
      }
    },
    "/api/2.0/security/activeconnections/logout/{loginEventId}": {
      "put": {
        "tags": [
          "Security / Active connections"
        ],
        "summary": "Log out from the connection",
        "operationId": "logOutActiveConnection",
        "parameters": [
          {
            "name": "loginEventId",
            "in": "path",
            "description": "Login event ID",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32",
              "example": 8870
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Boolean value: true if the operation is successful",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "boolean"
                }
              },
              "application/json": {
                "schema": {
                  "type": "boolean"
                }
              },
              "text/json": {
                "schema": {
                  "type": "boolean"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "asc_auth_key": [
              "read",
              "write"
            ]
          }
        ],
        "description": "Logs out from the connection with the ID specified in the request."
      }
    },
    "/api/2.0/security/audit/events/last": {
      "get": {
        "tags": [
          "Security / Audit trail data"
        ],
        "summary": "Get audit trail data",
        "operationId": "getLastAuditEvents",
        "responses": {
          "200": {
            "description": "List of audit trail data",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.Web.Api.ApiModel.ResponseDto.AuditEventDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.Web.Api.ApiModel.ResponseDto.AuditEventDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.Web.Api.ApiModel.ResponseDto.AuditEventDto"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "asc_auth_key": [
              "read",
              "write"
            ]
          }
        ],
        "description": "Returns a list of the latest changes (creation, modification, deletion, etc.) made by users to the entities (tasks, opportunities, files, etc.) on the portal."
      }
    },
    "/api/2.0/security/audit/events/filter": {
      "get": {
        "tags": [
          "Security / Audit trail data"
        ],
        "summary": "Get filtered audit trail data",
        "operationId": "getAuditEventsByFilter",
        "parameters": [
          {
            "name": "userId",
            "in": "query",
            "description": "User ID",
            "schema": {
              "type": "string",
              "format": "uuid",
              "example": "fbb85e19-bcc1-49ac-9442-9ca6e7536806"
            }
          },
          {
            "name": "productType",
            "in": "query",
            "description": "Product",
            "schema": {
              "$ref": "#/components/schemas/ASC.AuditTrail.Types.ProductType"
            }
          },
          {
            "name": "moduleType",
            "in": "query",
            "description": "Module",
            "schema": {
              "$ref": "#/components/schemas/ASC.AuditTrail.Types.ModuleType"
            }
          },
          {
            "name": "actionType",
            "in": "query",
            "description": "Action type",
            "schema": {
              "$ref": "#/components/schemas/ASC.AuditTrail.Types.ActionType"
            }
          },
          {
            "name": "action",
            "in": "query",
            "description": "Action",
            "schema": {
              "$ref": "#/components/schemas/ASC.MessagingSystem.Core.MessageAction"
            }
          },
          {
            "name": "entryType",
            "in": "query",
            "description": "Entry",
            "schema": {
              "$ref": "#/components/schemas/ASC.AuditTrail.Types.EntryType"
            }
          },
          {
            "name": "target",
            "in": "query",
            "description": "Target",
            "schema": {
              "type": "string",
              "example": "some text"
            }
          },
          {
            "name": "from",
            "in": "query",
            "description": "Start date",
            "schema": {
              "$ref": "#/components/schemas/ASC.Api.Core.ApiDateTime"
            }
          },
          {
            "name": "to",
            "in": "query",
            "description": "End date",
            "schema": {
              "$ref": "#/components/schemas/ASC.Api.Core.ApiDateTime"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "List of filtered audit trail data",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.Web.Api.ApiModel.ResponseDto.AuditEventDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.Web.Api.ApiModel.ResponseDto.AuditEventDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.Web.Api.ApiModel.ResponseDto.AuditEventDto"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "asc_auth_key": [
              "read",
              "write"
            ]
          }
        ],
        "description": "Returns a list of the audit events by the parameters specified in the request."
      }
    },
    "/api/2.0/security/audit/types": {
      "get": {
        "tags": [
          "Security / Audit trail data"
        ],
        "summary": "Get audit trail types",
        "operationId": "getTypes",
        "responses": {
          "200": {
            "description": "Audit trail types",
            "content": {
              "text/plain": {
                "schema": {}
              },
              "application/json": {
                "schema": {}
              },
              "text/json": {
                "schema": {}
              }
            }
          }
        },
        "description": "Returns all the available audit trail types."
      }
    },
    "/api/2.0/security/audit/mappers": {
      "get": {
        "tags": [
          "Security / Audit trail data"
        ],
        "summary": "Get audit trail mappers",
        "operationId": "getMappers",
        "parameters": [
          {
            "name": "productType",
            "in": "query",
            "description": "Product",
            "schema": {
              "$ref": "#/components/schemas/ASC.AuditTrail.Types.ProductType"
            }
          },
          {
            "name": "moduleType",
            "in": "query",
            "description": "Module",
            "schema": {
              "$ref": "#/components/schemas/ASC.AuditTrail.Types.ModuleType"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Audit trail mappers",
            "content": {
              "text/plain": {
                "schema": {}
              },
              "application/json": {
                "schema": {}
              },
              "text/json": {
                "schema": {}
              }
            }
          }
        },
        "description": "Returns the mappers for the audit trail types."
      }
    },
    "/api/2.0/security/audit/events/report": {
      "post": {
        "tags": [
          "Security / Audit trail data"
        ],
        "summary": "Generate the audit trail report",
        "operationId": "createAuditTrailReport",
        "responses": {
          "200": {
            "description": "URL to the xlsx report file",
            "content": {
              "text/plain": {
                "schema": {}
              },
              "application/json": {
                "schema": {}
              },
              "text/json": {
                "schema": {}
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "asc_auth_key": [
              "read",
              "write"
            ]
          }
        ],
        "description": "Generates the audit trail report."
      }
    },
    "/api/2.0/security/audit/settings/lifetime": {
      "get": {
        "tags": [
          "Security / Audit trail data"
        ],
        "summary": "Get the audit trail settings",
        "operationId": "getAuditSettings",
        "responses": {
          "200": {
            "description": "Audit settings",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.Core.Tenants.TenantAuditSettings"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.Core.Tenants.TenantAuditSettings"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.Core.Tenants.TenantAuditSettings"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "asc_auth_key": [
              "read",
              "write"
            ]
          }
        ],
        "description": "Returns the audit trail settings."
      },
      "post": {
        "tags": [
          "Security / Audit trail data"
        ],
        "summary": "Set the audit trail settings",
        "operationId": "setAuditSettings",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ASC.Core.Tenants.TenantAuditSettingsWrapper"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ASC.Core.Tenants.TenantAuditSettingsWrapper"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/ASC.Core.Tenants.TenantAuditSettingsWrapper"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Audit trail settings",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.Core.Tenants.TenantAuditSettings"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.Core.Tenants.TenantAuditSettings"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.Core.Tenants.TenantAuditSettings"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "asc_auth_key": [
              "read",
              "write"
            ]
          }
        ],
        "description": "Sets the audit trail settings for the current portal."
      }
    },
    "/api/2.0/security/csp": {
      "post": {
        "tags": [
          "Security / CSP"
        ],
        "operationId": "csp",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ASC.Web.Api.ApiModels.RequestsDto.CspRequestsDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ASC.Web.Api.ApiModels.RequestsDto.CspRequestsDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/ASC.Web.Api.ApiModels.RequestsDto.CspRequestsDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Ok",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.Web.Api.ApiModels.ResponseDto.CspDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.Web.Api.ApiModels.ResponseDto.CspDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.Web.Api.ApiModels.ResponseDto.CspDto"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "asc_auth_key": [
              "read",
              "write"
            ]
          }
        ]
      },
      "get": {
        "tags": [
          "Security / CSP"
        ],
        "summary": "Gets csp",
        "operationId": "getCsp",
        "responses": {
          "200": {
            "description": "Ok",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.Web.Api.ApiModels.ResponseDto.CspDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.Web.Api.ApiModels.ResponseDto.CspDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.Web.Api.ApiModels.ResponseDto.CspDto"
                }
              }
            }
          }
        },
        "description": "Gets csp"
      }
    },
    "/api/2.0/settings/push/docregisterdevice": {
      "post": {
        "tags": [
          "Security / Firebase"
        ],
        "summary": "Save the Documents Firebase device token",
        "operationId": "docRegisterPusnNotificationDevice",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ASC.Web.Api.ApiModels.RequestsDto.FirebaseRequestsDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ASC.Web.Api.ApiModels.RequestsDto.FirebaseRequestsDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/ASC.Web.Api.ApiModels.RequestsDto.FirebaseRequestsDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "FireBase user",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.Core.Common.EF.FireBaseUser"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.Core.Common.EF.FireBaseUser"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.Core.Common.EF.FireBaseUser"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "asc_auth_key": [
              "read",
              "write"
            ]
          }
        ],
        "description": "Saves the Firebase device token specified in the request for the Documents application."
      }
    },
    "/api/2.0/settings/push/docsubscribe": {
      "put": {
        "tags": [
          "Security / Firebase"
        ],
        "summary": "Subscribe to Documents push notification",
        "operationId": "subscribeDocumentsPushNotification",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ASC.Web.Api.ApiModels.RequestsDto.FirebaseRequestsDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ASC.Web.Api.ApiModels.RequestsDto.FirebaseRequestsDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/ASC.Web.Api.ApiModels.RequestsDto.FirebaseRequestsDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "FireBase user",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.Core.Common.EF.FireBaseUser"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.Core.Common.EF.FireBaseUser"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.Core.Common.EF.FireBaseUser"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "asc_auth_key": [
              "read",
              "write"
            ]
          }
        ],
        "description": "Subscribes to the Documents push notification."
      }
    },
    "/api/2.0/security/audit/login/last": {
      "get": {
        "tags": [
          "Security / Login history"
        ],
        "summary": "Get login history",
        "operationId": "getLastLoginEvents",
        "responses": {
          "200": {
            "description": "List of login events",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.Web.Api.ApiModel.ResponseDto.LoginEventDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.Web.Api.ApiModel.ResponseDto.LoginEventDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.Web.Api.ApiModel.ResponseDto.LoginEventDto"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "asc_auth_key": [
              "read",
              "write"
            ]
          }
        ],
        "description": "Returns all the latest user login activity, including successful logins and error logs."
      }
    },
    "/api/2.0/security/audit/login/filter": {
      "get": {
        "tags": [
          "Security / Login history"
        ],
        "summary": "Get filtered login events",
        "operationId": "getLoginEventsByFilter",
        "parameters": [
          {
            "name": "userId",
            "in": "query",
            "description": "User ID",
            "schema": {
              "type": "string",
              "format": "uuid",
              "example": "640f493d-b5f3-425a-8f95-cd3f8c1a4112"
            }
          },
          {
            "name": "action",
            "in": "query",
            "description": "Action",
            "schema": {
              "$ref": "#/components/schemas/ASC.MessagingSystem.Core.MessageAction"
            }
          },
          {
            "name": "from",
            "in": "query",
            "description": "Start date",
            "schema": {
              "$ref": "#/components/schemas/ASC.Api.Core.ApiDateTime"
            }
          },
          {
            "name": "to",
            "in": "query",
            "description": "End date",
            "schema": {
              "$ref": "#/components/schemas/ASC.Api.Core.ApiDateTime"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "List of filtered login events",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.Web.Api.ApiModel.ResponseDto.LoginEventDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.Web.Api.ApiModel.ResponseDto.LoginEventDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.Web.Api.ApiModel.ResponseDto.LoginEventDto"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "asc_auth_key": [
              "read",
              "write"
            ]
          }
        ],
        "description": "Returns a list of the login events by the parameters specified in the request."
      }
    },
    "/api/2.0/security/audit/login/report": {
      "post": {
        "tags": [
          "Security / Login history"
        ],
        "summary": "Generate the login history report",
        "operationId": "createLoginHistoryReport",
        "responses": {
          "200": {
            "description": "URL to the xlsx report file",
            "content": {
              "text/plain": {
                "schema": {}
              },
              "application/json": {
                "schema": {}
              },
              "text/json": {
                "schema": {}
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "asc_auth_key": [
              "read",
              "write"
            ]
          }
        ],
        "description": "Generates the login history report."
      }
    },
    "/api/2.0/smtpsettings/smtp": {
      "get": {
        "tags": [
          "Security / SMTP settings"
        ],
        "summary": "Get the SMTP settings",
        "operationId": "getSmtpSettings",
        "responses": {
          "200": {
            "description": "SMTP settings",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.Web.Api.ApiModel.ResponseDto.SmtpSettingsDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.Web.Api.ApiModel.ResponseDto.SmtpSettingsDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.Web.Api.ApiModel.ResponseDto.SmtpSettingsDto"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "asc_auth_key": [
              "read",
              "write"
            ]
          }
        ],
        "description": "Returns the current portal SMTP settings."
      },
      "post": {
        "tags": [
          "Security / SMTP settings"
        ],
        "summary": "Save the SMTP settings",
        "operationId": "saveSmtpSettings",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ASC.Web.Api.ApiModel.ResponseDto.SmtpSettingsDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ASC.Web.Api.ApiModel.ResponseDto.SmtpSettingsDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/ASC.Web.Api.ApiModel.ResponseDto.SmtpSettingsDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "SMTP settings",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.Web.Api.ApiModel.ResponseDto.SmtpSettingsDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.Web.Api.ApiModel.ResponseDto.SmtpSettingsDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.Web.Api.ApiModel.ResponseDto.SmtpSettingsDto"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "asc_auth_key": [
              "read",
              "write"
            ]
          }
        ],
        "description": "Saves the SMTP settings for the current portal."
      },
      "delete": {
        "tags": [
          "Security / SMTP settings"
        ],
        "summary": "Reset the SMTP settings",
        "operationId": "resetSmtpSettings",
        "responses": {
          "200": {
            "description": "Default SMTP settings",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.Web.Api.ApiModel.ResponseDto.SmtpSettingsDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.Web.Api.ApiModel.ResponseDto.SmtpSettingsDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.Web.Api.ApiModel.ResponseDto.SmtpSettingsDto"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "asc_auth_key": [
              "read",
              "write"
            ]
          }
        ],
        "description": "Resets the SMTP settings of the current portal."
      }
    },
    "/api/2.0/smtpsettings/smtp/test": {
      "get": {
        "tags": [
          "Security / SMTP settings"
        ],
        "summary": "Test the SMTP settings",
        "operationId": "testSmtpSettings",
        "responses": {
          "200": {
            "description": "SMTP operation status",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.Api.Settings.Smtp.SmtpOperationStatusRequestsDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.Api.Settings.Smtp.SmtpOperationStatusRequestsDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.Api.Settings.Smtp.SmtpOperationStatusRequestsDto"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "asc_auth_key": [
              "read",
              "write"
            ]
          }
        ],
        "description": "Tests the SMTP settings for the current portal (sends test message to the user email)."
      }
    },
    "/api/2.0/smtpsettings/smtp/test/status": {
      "get": {
        "tags": [
          "Security / SMTP settings"
        ],
        "summary": "Get the SMTP test process status",
        "operationId": "getSmtpOperationStatus",
        "responses": {
          "200": {
            "description": "SMTP operation status",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.Api.Settings.Smtp.SmtpOperationStatusRequestsDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.Api.Settings.Smtp.SmtpOperationStatusRequestsDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.Api.Settings.Smtp.SmtpOperationStatusRequestsDto"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "asc_auth_key": [
              "read",
              "write"
            ]
          }
        ],
        "description": "Returns the SMTP test process status."
      }
    },
    "/api/2.0/settings/authservice": {
      "get": {
        "tags": [
          "Settings / Authorization"
        ],
        "summary": "Get the authorization services",
        "operationId": "getAuthServices",
        "responses": {
          "200": {
            "description": "Authorization services",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.Web.Api.ApiModel.RequestsDto.AuthServiceRequestsDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.Web.Api.ApiModel.RequestsDto.AuthServiceRequestsDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.Web.Api.ApiModel.RequestsDto.AuthServiceRequestsDto"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "asc_auth_key": [
              "read",
              "write"
            ]
          }
        ],
        "description": "Returns the authorization services."
      },
      "post": {
        "tags": [
          "Settings / Authorization"
        ],
        "summary": "Save the authorization keys",
        "operationId": "saveAuthKeys",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ASC.Web.Api.ApiModel.RequestsDto.AuthServiceRequestsDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ASC.Web.Api.ApiModel.RequestsDto.AuthServiceRequestsDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/ASC.Web.Api.ApiModel.RequestsDto.AuthServiceRequestsDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Boolean value: true if the authorization keys are changed",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "boolean"
                }
              },
              "application/json": {
                "schema": {
                  "type": "boolean"
                }
              },
              "text/json": {
                "schema": {
                  "type": "boolean"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "asc_auth_key": [
              "read",
              "write"
            ]
          }
        ],
        "description": "Saves the authorization keys."
      }
    },
    "/api/2.0/settings": {
      "get": {
        "tags": [
          "Settings / Common settings"
        ],
        "summary": "Get the portal settings",
        "operationId": "getSettings",
        "parameters": [
          {
            "name": "withpassword",
            "in": "query",
            "description": "Specifies if the password hasher settings will be returned or not",
            "schema": {
              "type": "boolean",
              "example": true
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Settings",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.Web.Api.ApiModel.ResponseDto.SettingsDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.Web.Api.ApiModel.ResponseDto.SettingsDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.Web.Api.ApiModel.ResponseDto.SettingsDto"
                }
              }
            }
          }
        },
        "description": "Returns a list of all the available portal settings with the current values for each parameter."
      }
    },
    "/api/2.0/settings/maildomainsettings": {
      "post": {
        "tags": [
          "Settings / Common settings"
        ],
        "summary": "Save the mail domain settings",
        "operationId": "saveMailDomainSettings",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ASC.Web.Api.ApiModel.RequestsDto.MailDomainSettingsRequestsDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ASC.Web.Api.ApiModel.RequestsDto.MailDomainSettingsRequestsDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/ASC.Web.Api.ApiModel.RequestsDto.MailDomainSettingsRequestsDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Message about the result of saving the mail domain settings",
            "content": {
              "text/plain": {
                "schema": {}
              },
              "application/json": {
                "schema": {}
              },
              "text/json": {
                "schema": {}
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "asc_auth_key": [
              "read",
              "write"
            ]
          }
        ],
        "description": "Saves the mail domain settings specified in the request to the portal."
      }
    },
    "/api/2.0/settings/cultures": {
      "get": {
        "tags": [
          "Settings / Common settings"
        ],
        "summary": "Get supported languages",
        "operationId": "getSupportedCultures",
        "responses": {
          "200": {
            "description": "List of all the available portal languages",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string"
                }
              },
              "application/json": {
                "schema": {
                  "type": "string"
                }
              },
              "text/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        },
        "description": "Returns a list of all the available portal languages in the format of a two-letter or four-letter language code (e.g. \"de\", \"en-US\", etc.)."
      }
    },
    "/api/2.0/settings/timezones": {
      "get": {
        "tags": [
          "Settings / Common settings"
        ],
        "summary": "Get time zones",
        "operationId": "getTimeZonesAsync",
        "responses": {
          "200": {
            "description": "List of all the available time zones with their IDs and display names",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.Web.Api.ApiModel.RequestsDto.TimezonesRequestsDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.Web.Api.ApiModel.RequestsDto.TimezonesRequestsDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.Web.Api.ApiModel.RequestsDto.TimezonesRequestsDto"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "asc_auth_key": [
              "read",
              "write"
            ]
          }
        ],
        "description": "Returns a list of all the available portal time zones."
      }
    },
    "/api/2.0/settings/machine": {
      "get": {
        "tags": [
          "Settings / Common settings"
        ],
        "summary": "Get hostname",
        "operationId": "getMachineName",
        "responses": {
          "200": {
            "description": "Portal hostname",
            "content": {
              "text/plain": {
                "schema": {}
              },
              "application/json": {
                "schema": {}
              },
              "text/json": {
                "schema": {}
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "asc_auth_key": [
              "read",
              "write"
            ]
          }
        ],
        "description": "Returns the portal hostname."
      }
    },
    "/api/2.0/settings/dns": {
      "put": {
        "tags": [
          "Settings / Common settings"
        ],
        "summary": "Save the DNS settings",
        "operationId": "saveDnsSettings",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ASC.Web.Api.Models.DnsSettingsRequestsDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ASC.Web.Api.Models.DnsSettingsRequestsDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/ASC.Web.Api.Models.DnsSettingsRequestsDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Message about changing DNS",
            "content": {
              "text/plain": {
                "schema": {}
              },
              "application/json": {
                "schema": {}
              },
              "text/json": {
                "schema": {}
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "asc_auth_key": [
              "read",
              "write"
            ]
          }
        ],
        "description": "Saves the DNS settings specified in the request to the current portal."
      }
    },
    "/api/2.0/settings/logo": {
      "get": {
        "tags": [
          "Settings / Common settings"
        ],
        "summary": "Get a portal logo",
        "operationId": "getLogo",
        "responses": {
          "200": {
            "description": "Portal logo image URL",
            "content": {
              "text/plain": {
                "schema": {}
              },
              "application/json": {
                "schema": {}
              },
              "text/json": {
                "schema": {}
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "asc_auth_key": [
              "read",
              "write"
            ]
          }
        ],
        "description": "Returns the portal logo image URL."
      }
    },
    "/api/2.0/settings/wizard/complete": {
      "put": {
        "tags": [
          "Settings / Common settings"
        ],
        "summary": "Complete the Wizard settings",
        "operationId": "completeWizard",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ASC.Web.Api.ApiModel.RequestsDto.WizardRequestsDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ASC.Web.Api.ApiModel.RequestsDto.WizardRequestsDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/ASC.Web.Api.ApiModel.RequestsDto.WizardRequestsDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Wizard settings",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.Web.Core.Utility.Settings.WizardSettings"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.Web.Core.Utility.Settings.WizardSettings"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.Web.Core.Utility.Settings.WizardSettings"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "asc_auth_key": [
              "read",
              "write"
            ]
          }
        ],
        "description": "Completes the Wizard settings."
      }
    },
    "/api/2.0/settings/colortheme": {
      "get": {
        "tags": [
          "Settings / Common settings"
        ],
        "summary": "Get a color theme",
        "operationId": "getColorTheme",
        "responses": {
          "200": {
            "description": "Settings of the portal themes",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.Web.Api.ApiModels.ResponseDto.CustomColorThemesSettingsDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.Web.Api.ApiModels.ResponseDto.CustomColorThemesSettingsDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.Web.Api.ApiModels.ResponseDto.CustomColorThemesSettingsDto"
                }
              }
            }
          }
        },
        "description": "Returns the portal color theme."
      },
      "put": {
        "tags": [
          "Settings / Common settings"
        ],
        "summary": "Save a color theme",
        "operationId": "saveColorTheme",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ASC.Web.Api.ApiModels.RequestsDto.CustomColorThemesSettingsRequestsDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ASC.Web.Api.ApiModels.RequestsDto.CustomColorThemesSettingsRequestsDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/ASC.Web.Api.ApiModels.RequestsDto.CustomColorThemesSettingsRequestsDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Portal theme settings",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.Web.Api.ApiModels.ResponseDto.CustomColorThemesSettingsDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.Web.Api.ApiModels.ResponseDto.CustomColorThemesSettingsDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.Web.Api.ApiModels.ResponseDto.CustomColorThemesSettingsDto"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "asc_auth_key": [
              "read",
              "write"
            ]
          }
        ],
        "description": "Saves the portal color theme specified in the request."
      },
      "delete": {
        "tags": [
          "Settings / Common settings"
        ],
        "summary": "Delete a color theme",
        "operationId": "deleteColorTheme",
        "parameters": [
          {
            "name": "id",
            "in": "query",
            "description": "Portal theme ID",
            "schema": {
              "type": "integer",
              "format": "int32",
              "example": 473
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Portal theme settings: custom color theme settings, selected or not, limit",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.Web.Api.ApiModels.ResponseDto.CustomColorThemesSettingsDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.Web.Api.ApiModels.ResponseDto.CustomColorThemesSettingsDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.Web.Api.ApiModels.ResponseDto.CustomColorThemesSettingsDto"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "asc_auth_key": [
              "read",
              "write"
            ]
          }
        ],
        "description": "Deletes the portal color theme with the ID specified in the request."
      }
    },
    "/api/2.0/settings/closeadminhelper": {
      "put": {
        "tags": [
          "Settings / Common settings"
        ],
        "summary": "Close the admin helper notification",
        "operationId": "closeAdminHelper",
        "responses": {
          "200": {
            "description": "OK"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "asc_auth_key": [
              "read",
              "write"
            ]
          }
        ],
        "description": "Closes the admin helper notification."
      }
    },
    "/api/2.0/settings/emailactivation": {
      "put": {
        "tags": [
          "Settings / Common settings"
        ],
        "summary": "Update the email activation settings",
        "operationId": "updateEmailActivationSettings",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ASC.Web.Studio.Core.EmailActivationSettings"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ASC.Web.Studio.Core.EmailActivationSettings"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/ASC.Web.Studio.Core.EmailActivationSettings"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Updated email activation settings",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.Web.Studio.Core.EmailActivationSettings"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.Web.Studio.Core.EmailActivationSettings"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.Web.Studio.Core.EmailActivationSettings"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "asc_auth_key": [
              "read",
              "write"
            ]
          }
        ],
        "description": "Updates the email activation settings."
      }
    },
    "/api/2.0/settings/socket": {
      "get": {
        "tags": [
          "Settings / Common settings"
        ],
        "summary": "Get the socket settings",
        "operationId": "getSocketSettings",
        "responses": {
          "200": {
            "description": "Socket settings: hub URL",
            "content": {
              "text/plain": {
                "schema": {}
              },
              "application/json": {
                "schema": {}
              },
              "text/json": {
                "schema": {}
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "asc_auth_key": [
              "read",
              "write"
            ]
          }
        ],
        "description": "Returns the socket settings."
      }
    },
    "/api/2.0/settings/payment": {
      "get": {
        "tags": [
          "Settings / Common settings"
        ],
        "summary": "Get the payment settings",
        "operationId": "paymentSettings",
        "responses": {
          "200": {
            "description": "Payment settings: sales email, feedback and support URL, link to pay for a portal, Standalone or not, current license, maximum quota quantity",
            "content": {
              "text/plain": {
                "schema": {}
              },
              "application/json": {
                "schema": {}
              },
              "text/json": {
                "schema": {}
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "asc_auth_key": [
              "read",
              "write"
            ]
          }
        ],
        "description": "Returns the portal payment settings."
      }
    },
    "/api/2.0/settings/cookiesettings": {
      "get": {
        "tags": [
          "Settings / Cookies"
        ],
        "summary": "Get cookies lifetime",
        "operationId": "getCookieSettings",
        "responses": {
          "200": {
            "description": "Lifetime value in minutes",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.Web.Api.ApiModels.ResponseDto.CookieSettingsDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.Web.Api.ApiModels.ResponseDto.CookieSettingsDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.Web.Api.ApiModels.ResponseDto.CookieSettingsDto"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "asc_auth_key": [
              "read",
              "write"
            ]
          }
        ],
        "description": "Returns the cookies lifetime value in minutes."
      },
      "put": {
        "tags": [
          "Settings / Cookies"
        ],
        "summary": "Update cookies lifetime",
        "operationId": "updateCookieSettings",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ASC.Web.Api.Models.CookieSettingsRequestsDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ASC.Web.Api.Models.CookieSettingsRequestsDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/ASC.Web.Api.Models.CookieSettingsRequestsDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Message about the result of saving new settings",
            "content": {
              "text/plain": {
                "schema": {}
              },
              "application/json": {
                "schema": {}
              },
              "text/json": {
                "schema": {}
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "asc_auth_key": [
              "read",
              "write"
            ]
          }
        ],
        "description": "Updates the cookies lifetime value in minutes."
      }
    },
    "/api/2.0/settings/customnavigation/getall": {
      "get": {
        "tags": [
          "Settings / Custom Navigation"
        ],
        "summary": "Get the custom navigation items",
        "operationId": "getCustomNavigationItems",
        "responses": {
          "200": {
            "description": "List of the custom navigation items",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.Web.Studio.Core.CustomNavigationItem"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.Web.Studio.Core.CustomNavigationItem"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.Web.Studio.Core.CustomNavigationItem"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "asc_auth_key": [
              "read",
              "write"
            ]
          }
        ],
        "description": "Returns a list of the custom navigation items."
      }
    },
    "/api/2.0/settings/customnavigation/getsample": {
      "get": {
        "tags": [
          "Settings / Custom Navigation"
        ],
        "summary": "Get a custom navigation item sample",
        "operationId": "getCustomNavigationItemSample",
        "responses": {
          "200": {
            "description": "Custom navigation item",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.Web.Studio.Core.CustomNavigationItem"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.Web.Studio.Core.CustomNavigationItem"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.Web.Studio.Core.CustomNavigationItem"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "asc_auth_key": [
              "read",
              "write"
            ]
          }
        ],
        "description": "Returns a custom navigation item sample."
      }
    },
    "/api/2.0/settings/customnavigation/get/{id}": {
      "get": {
        "tags": [
          "Settings / Custom Navigation"
        ],
        "summary": "Get a custom navigation item by ID",
        "operationId": "getCustomNavigationItem",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Id",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "example": "3db2fa15-7c71-439e-a359-7d4eb874207b"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Custom navigation item",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.Web.Studio.Core.CustomNavigationItem"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.Web.Studio.Core.CustomNavigationItem"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.Web.Studio.Core.CustomNavigationItem"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "asc_auth_key": [
              "read",
              "write"
            ]
          }
        ],
        "description": "Returns a custom navigation item by the ID specified in the request."
      }
    },
    "/api/2.0/settings/customnavigation/create": {
      "post": {
        "tags": [
          "Settings / Custom Navigation"
        ],
        "summary": "Add a custom navigation item",
        "operationId": "createCustomNavigationItem",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ASC.Web.Studio.Core.CustomNavigationItem"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ASC.Web.Studio.Core.CustomNavigationItem"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/ASC.Web.Studio.Core.CustomNavigationItem"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Custom navigation item",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.Web.Studio.Core.CustomNavigationItem"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.Web.Studio.Core.CustomNavigationItem"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.Web.Studio.Core.CustomNavigationItem"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "asc_auth_key": [
              "read",
              "write"
            ]
          }
        ],
        "description": "Adds a custom navigation item with the parameters specified in the request."
      }
    },
    "/api/2.0/settings/customnavigation/delete/{id}": {
      "delete": {
        "tags": [
          "Settings / Custom Navigation"
        ],
        "summary": "Delete a custom navigation item",
        "operationId": "deleteCustomNavigationItem",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Id",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "example": "daacfbd0-1bbb-4fd0-ae8d-7677a6e3544f"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "asc_auth_key": [
              "read",
              "write"
            ]
          }
        ],
        "description": "Deletes a custom navigation item with the ID specified in the request."
      }
    },
    "/api/2.0/settings/encryption/start": {
      "post": {
        "tags": [
          "Settings / Encryption"
        ],
        "summary": "Start the storage encryption process",
        "operationId": "startStorageEncryption",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ASC.Web.Api.ApiModel.RequestsDto.StorageEncryptionRequestsDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ASC.Web.Api.ApiModel.RequestsDto.StorageEncryptionRequestsDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/ASC.Web.Api.ApiModel.RequestsDto.StorageEncryptionRequestsDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Boolean value: true if the operation is successful",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "boolean"
                }
              },
              "application/json": {
                "schema": {
                  "type": "boolean"
                }
              },
              "text/json": {
                "schema": {
                  "type": "boolean"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "asc_auth_key": [
              "read",
              "write"
            ]
          }
        ],
        "description": "Starts the storage encryption process."
      }
    },
    "/api/2.0/settings/encryption/progress": {
      "get": {
        "tags": [
          "Settings / Encryption"
        ],
        "summary": "Get the storage encryption progress",
        "operationId": "getStorageEncryptionProgress",
        "responses": {
          "200": {
            "description": "Storage encryption progress",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "number",
                  "format": "double"
                }
              },
              "application/json": {
                "schema": {
                  "type": "number",
                  "format": "double"
                }
              },
              "text/json": {
                "schema": {
                  "type": "number",
                  "format": "double"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "asc_auth_key": [
              "read",
              "write"
            ]
          }
        ],
        "description": "Returns the storage encryption progress."
      }
    },
    "/api/2.0/settings/greetingsettings": {
      "get": {
        "tags": [
          "Settings / Greeting settings"
        ],
        "summary": "Get greeting settings",
        "operationId": "getGreetingSettings",
        "responses": {
          "200": {
            "description": "Greeting settings: tenant name",
            "content": {
              "text/plain": {
                "schema": {}
              },
              "application/json": {
                "schema": {}
              },
              "text/json": {
                "schema": {}
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "asc_auth_key": [
              "read",
              "write"
            ]
          }
        ],
        "description": "Returns the greeting settings for the current portal."
      },
      "post": {
        "tags": [
          "Settings / Greeting settings"
        ],
        "summary": "Save the greeting settings",
        "operationId": "saveGreetingSettings",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ASC.Web.Api.ApiModel.RequestsDto.GreetingSettingsRequestsDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ASC.Web.Api.ApiModel.RequestsDto.GreetingSettingsRequestsDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/ASC.Web.Api.ApiModel.RequestsDto.GreetingSettingsRequestsDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Message about saving greeting settings successfully",
            "content": {
              "text/plain": {
                "schema": {}
              },
              "application/json": {
                "schema": {}
              },
              "text/json": {
                "schema": {}
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "asc_auth_key": [
              "read",
              "write"
            ]
          }
        ],
        "description": "Saves the greeting settings specified in the request to the current portal."
      }
    },
    "/api/2.0/settings/greetingsettings/isdefault": {
      "get": {
        "tags": [
          "Settings / Greeting settings"
        ],
        "summary": "Check the default greeting settings",
        "operationId": "isDefault",
        "responses": {
          "200": {
            "description": "Boolean value: true if the greeting settings of the current portal are set to default",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "boolean"
                }
              },
              "application/json": {
                "schema": {
                  "type": "boolean"
                }
              },
              "text/json": {
                "schema": {
                  "type": "boolean"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "asc_auth_key": [
              "read",
              "write"
            ]
          }
        ],
        "description": "Checks if the greeting settings of the current portal are set to default or not."
      }
    },
    "/api/2.0/settings/greetingsettings/restore": {
      "post": {
        "tags": [
          "Settings / Greeting settings"
        ],
        "summary": "Restore the greeting settings",
        "operationId": "restoreGreetingSettings",
        "responses": {
          "200": {
            "description": "Greeting settings: tenant name",
            "content": {
              "text/plain": {
                "schema": {}
              },
              "application/json": {
                "schema": {}
              },
              "text/json": {
                "schema": {}
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "asc_auth_key": [
              "read",
              "write"
            ]
          }
        ],
        "description": "Restores the current portal greeting settings."
      }
    },
    "/api/2.0/settings/iprestrictions": {
      "get": {
        "tags": [
          "Settings / IP restrictions"
        ],
        "summary": "Get the IP portal restrictions",
        "operationId": "getIpRestrictions",
        "responses": {
          "200": {
            "description": "List of IP restrictions parameters",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.IPSecurity.IPRestriction"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.IPSecurity.IPRestriction"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.IPSecurity.IPRestriction"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "asc_auth_key": [
              "read",
              "write"
            ]
          }
        ],
        "description": "Returns the IP portal restrictions."
      },
      "put": {
        "tags": [
          "Settings / IP restrictions"
        ],
        "summary": "Save the IP restrictions",
        "operationId": "saveIpRestrictions",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ASC.Web.Api.ApiModel.RequestsDto.IpRestrictionsBaseRequestsDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ASC.Web.Api.ApiModel.RequestsDto.IpRestrictionsBaseRequestsDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/ASC.Web.Api.ApiModel.RequestsDto.IpRestrictionsBaseRequestsDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "List of IP restrictions parameters",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.IPSecurity.IpRestrictionBase"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.IPSecurity.IpRestrictionBase"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.IPSecurity.IpRestrictionBase"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "asc_auth_key": [
              "read",
              "write"
            ]
          }
        ],
        "description": "Saves the new portal IP restrictions specified in the request."
      }
    },
    "/api/2.0/settings/iprestrictions/settings": {
      "get": {
        "tags": [
          "Settings / IP restrictions"
        ],
        "summary": "Get the IP restriction settings",
        "operationId": "readIpRestrictionsSettings",
        "responses": {
          "200": {
            "description": "IP restriction settings",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.IPSecurity.IPRestrictionsSettings"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.IPSecurity.IPRestrictionsSettings"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.IPSecurity.IPRestrictionsSettings"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "asc_auth_key": [
              "read",
              "write"
            ]
          }
        ],
        "description": "Returns the IP restriction settings."
      },
      "put": {
        "tags": [
          "Settings / IP restrictions"
        ],
        "summary": "Update the IP restriction settings",
        "operationId": "updateIpRestrictionsSettings",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ASC.Web.Api.ApiModel.RequestsDto.IpRestrictionsRequestsDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ASC.Web.Api.ApiModel.RequestsDto.IpRestrictionsRequestsDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/ASC.Web.Api.ApiModel.RequestsDto.IpRestrictionsRequestsDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Updated IP restriction settings",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.IPSecurity.IPRestrictionsSettings"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.IPSecurity.IPRestrictionsSettings"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.IPSecurity.IPRestrictionsSettings"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "asc_auth_key": [
              "read",
              "write"
            ]
          }
        ],
        "description": "Updates the IP restriction settings with a parameter specified in the request."
      }
    },
    "/api/2.0/settings/license/refresh": {
      "get": {
        "tags": [
          "Settings / License"
        ],
        "summary": "Refresh the license",
        "operationId": "refreshLicense",
        "responses": {
          "200": {
            "description": "Boolean value: true if the operation is successful",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "boolean"
                }
              },
              "application/json": {
                "schema": {
                  "type": "boolean"
                }
              },
              "text/json": {
                "schema": {
                  "type": "boolean"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "asc_auth_key": [
              "read",
              "write"
            ]
          }
        ],
        "description": "Refreshes the license."
      }
    },
    "/api/2.0/settings/license/accept": {
      "post": {
        "tags": [
          "Settings / License"
        ],
        "summary": "Activate a license",
        "operationId": "acceptLicense",
        "responses": {
          "200": {
            "description": "Message about the result of activating license",
            "content": {
              "text/plain": {
                "schema": {}
              },
              "application/json": {
                "schema": {}
              },
              "text/json": {
                "schema": {}
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "asc_auth_key": [
              "read",
              "write"
            ]
          }
        ],
        "description": "Activates a license for the portal."
      }
    },
    "/api/2.0/settings/license/required": {
      "get": {
        "tags": [
          "Settings / License"
        ],
        "summary": "Request a license",
        "operationId": "requestLicense",
        "responses": {
          "200": {
            "description": "Boolean value: true if the license is required",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "boolean"
                }
              },
              "application/json": {
                "schema": {
                  "type": "boolean"
                }
              },
              "text/json": {
                "schema": {
                  "type": "boolean"
                }
              }
            }
          }
        },
        "description": "Requests a portal license if necessary."
      }
    },
    "/api/2.0/settings/license": {
      "post": {
        "tags": [
          "Settings / License"
        ],
        "summary": "Upload a license",
        "operationId": "uploadLicense",
        "requestBody": {
          "description": "License attachments",
          "content": {
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "properties": {
                  "Files": {
                    "type": "array",
                    "items": {},
                    "description": "License attachments",
                    "example": [
                      {
                        "int": 1234,
                        "string": "some text",
                        "boolean": true
                      }
                    ]
                  }
                }
              },
              "encoding": {
                "Files": {
                  "style": "form"
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "License",
            "content": {
              "text/plain": {
                "schema": {}
              },
              "application/json": {
                "schema": {}
              },
              "text/json": {
                "schema": {}
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "asc_auth_key": [
              "read",
              "write"
            ]
          }
        ],
        "description": "Uploads a portal license specified in the request."
      }
    },
    "/api/2.0/settings/security/loginSettings": {
      "put": {
        "tags": [
          "Settings / Login settings"
        ],
        "summary": "Update login settings",
        "operationId": "updateLoginSettings",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ASC.Web.Api.ApiModels.RequestsDto.LoginSettingsRequestDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ASC.Web.Api.ApiModels.RequestsDto.LoginSettingsRequestDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/ASC.Web.Api.ApiModels.RequestsDto.LoginSettingsRequestDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Updated login settings",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.Web.Api.ApiModels.ResponseDto.LoginSettingsDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.Web.Api.ApiModels.ResponseDto.LoginSettingsDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.Web.Api.ApiModels.ResponseDto.LoginSettingsDto"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "asc_auth_key": [
              "read",
              "write"
            ]
          }
        ],
        "description": "Updates the login settings with the parameters specified in the request."
      },
      "get": {
        "tags": [
          "Settings / Login settings"
        ],
        "summary": "Get login settings",
        "operationId": "getLoginSettings",
        "responses": {
          "200": {
            "description": "Login settings",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.Web.Api.ApiModels.ResponseDto.LoginSettingsDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.Web.Api.ApiModels.ResponseDto.LoginSettingsDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.Web.Api.ApiModels.ResponseDto.LoginSettingsDto"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "asc_auth_key": [
              "read",
              "write"
            ]
          }
        ],
        "description": "Returns the portal login settings."
      }
    },
    "/api/2.0/settings/messagesettings": {
      "post": {
        "tags": [
          "Settings / Messages"
        ],
        "summary": "Enable the administrator message settings",
        "operationId": "enableAdminMessageSettings",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ASC.Web.Api.ApiModel.RequestsDto.TurnOnAdminMessageSettingsRequestDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ASC.Web.Api.ApiModel.RequestsDto.TurnOnAdminMessageSettingsRequestDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/ASC.Web.Api.ApiModel.RequestsDto.TurnOnAdminMessageSettingsRequestDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Message about the result of saving new settings",
            "content": {
              "text/plain": {
                "schema": {}
              },
              "application/json": {
                "schema": {}
              },
              "text/json": {
                "schema": {}
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "asc_auth_key": [
              "read",
              "write"
            ]
          }
        ],
        "description": "Displays the contact form on the \"Sign In\" page, allowing users to send a message to the DocSpace administrator in case they encounter any issues while accessing DocSpace."
      }
    },
    "/api/2.0/settings/sendadmmail": {
      "post": {
        "tags": [
          "Settings / Messages"
        ],
        "summary": "Send a message to the administrator",
        "operationId": "sendAdmMail",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ASC.Web.Api.ApiModel.RequestsDto.AdminMessageSettingsRequestsDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ASC.Web.Api.ApiModel.RequestsDto.AdminMessageSettingsRequestsDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/ASC.Web.Api.ApiModel.RequestsDto.AdminMessageSettingsRequestsDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Message about the result of sending a message",
            "content": {
              "text/plain": {
                "schema": {}
              },
              "application/json": {
                "schema": {}
              },
              "text/json": {
                "schema": {}
              }
            }
          }
        },
        "description": "Sends a message to the administrator email when unauthorized users encounter issues accessing DocSpace."
      }
    },
    "/api/2.0/settings/sendjoininvite": {
      "post": {
        "tags": [
          "Settings / Messages"
        ],
        "summary": "Sends an invitation email",
        "operationId": "sendJoinInviteMail",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ASC.Web.Api.ApiModel.RequestsDto.AdminMessageBaseSettingsRequestsDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ASC.Web.Api.ApiModel.RequestsDto.AdminMessageBaseSettingsRequestsDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/ASC.Web.Api.ApiModel.RequestsDto.AdminMessageBaseSettingsRequestsDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Message about sending a link to confirm joining the DocSpace",
            "content": {
              "text/plain": {
                "schema": {}
              },
              "application/json": {
                "schema": {}
              },
              "text/json": {
                "schema": {}
              }
            }
          }
        },
        "description": "Sends an invitation email with a link to the DocSpace."
      }
    },
    "/api/2.0/settings/notification/{type}": {
      "get": {
        "tags": [
          "Settings / Notifications"
        ],
        "summary": "Check notification availability",
        "operationId": "getNotificationSettings",
        "parameters": [
          {
            "name": "type",
            "in": "path",
            "description": "Notification type (Badges, RoomsActivity, DailyFeed, UsefullTips)",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/ASC.Web.Core.Notify.NotificationType"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Notification settings",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.Web.Api.ApiModels.ResponseDto.NotificationSettingsDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.Web.Api.ApiModels.ResponseDto.NotificationSettingsDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.Web.Api.ApiModels.ResponseDto.NotificationSettingsDto"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "asc_auth_key": [
              "read",
              "write"
            ]
          }
        ],
        "description": "Checks if the notification type specified in the request is enabled or not."
      }
    },
    "/api/2.0/settings/notification": {
      "post": {
        "tags": [
          "Settings / Notifications"
        ],
        "summary": "Enable notifications",
        "operationId": "setSettings",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ASC.Web.Api.ApiModels.RequestsDto.NotificationSettingsRequestsDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ASC.Web.Api.ApiModels.RequestsDto.NotificationSettingsRequestsDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/ASC.Web.Api.ApiModels.RequestsDto.NotificationSettingsRequestsDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Notification settings",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.Web.Api.ApiModels.ResponseDto.NotificationSettingsDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.Web.Api.ApiModels.ResponseDto.NotificationSettingsDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.Web.Api.ApiModels.ResponseDto.NotificationSettingsDto"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "asc_auth_key": [
              "read",
              "write"
            ]
          }
        ],
        "description": "Enables the notification type specified in the request."
      }
    },
    "/api/2.0/settings/notification/rooms": {
      "get": {
        "tags": [
          "Settings / Notifications"
        ],
        "summary": "Get room notification settings",
        "operationId": "getRoomsNotificationSettings",
        "responses": {
          "200": {
            "description": "Room notification settings",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.Web.Api.ApiModels.ResponseDto.RoomsNotificationSettingsDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.Web.Api.ApiModels.ResponseDto.RoomsNotificationSettingsDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.Web.Api.ApiModels.ResponseDto.RoomsNotificationSettingsDto"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "asc_auth_key": [
              "read",
              "write"
            ]
          }
        ],
        "description": "Returns a list of rooms with the disabled notifications"
      },
      "post": {
        "tags": [
          "Settings / Notifications"
        ],
        "summary": "Set room notification status",
        "operationId": "setRoomsNotificationStatus",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ASC.Web.Api.ApiModels.RequestsDto.RoomsNotificationsSettingsRequestDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ASC.Web.Api.ApiModels.RequestsDto.RoomsNotificationsSettingsRequestDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/ASC.Web.Api.ApiModels.RequestsDto.RoomsNotificationsSettingsRequestDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Room notification settings",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.Web.Api.ApiModels.ResponseDto.RoomsNotificationSettingsDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.Web.Api.ApiModels.ResponseDto.RoomsNotificationSettingsDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.Web.Api.ApiModels.ResponseDto.RoomsNotificationSettingsDto"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "asc_auth_key": [
              "read",
              "write"
            ]
          }
        ],
        "description": "Sets a notification status for a room with the ID specified in the request."
      }
    },
    "/api/2.0/settings/owner": {
      "post": {
        "tags": [
          "Settings / Owner"
        ],
        "summary": "Send the owner change instructions",
        "operationId": "sendOwnerChangeInstructions",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ASC.Web.Api.ApiModel.RequestsDto.OwnerIdSettingsRequestDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ASC.Web.Api.ApiModel.RequestsDto.OwnerIdSettingsRequestDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/ASC.Web.Api.ApiModel.RequestsDto.OwnerIdSettingsRequestDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Message about changing the portal owner",
            "content": {
              "text/plain": {
                "schema": {}
              },
              "application/json": {
                "schema": {}
              },
              "text/json": {
                "schema": {}
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "asc_auth_key": [
              "read",
              "write"
            ]
          }
        ],
        "description": "Sends the instructions to change the DocSpace owner."
      },
      "put": {
        "tags": [
          "Settings / Owner"
        ],
        "summary": "Update the portal owner",
        "operationId": "owner",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ASC.Web.Api.ApiModel.RequestsDto.OwnerIdSettingsRequestDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ASC.Web.Api.ApiModel.RequestsDto.OwnerIdSettingsRequestDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/ASC.Web.Api.ApiModel.RequestsDto.OwnerIdSettingsRequestDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "asc_auth_key": [
              "read",
              "write"
            ]
          }
        ],
        "description": "Updates the current portal owner with a new one specified in the request."
      }
    },
    "/api/2.0/settings/userquotasettings": {
      "get": {
        "tags": [
          "Settings / Quota"
        ],
        "summary": "Gets user quota",
        "operationId": "getUserQuotaSettings",
        "responses": {
          "200": {
            "description": "Ok",
            "content": {
              "text/plain": {
                "schema": {}
              },
              "application/json": {
                "schema": {}
              },
              "text/json": {
                "schema": {}
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "asc_auth_key": [
              "read",
              "write"
            ]
          }
        ],
        "description": "Gets user quota"
      }
    },
    "/api/2.0/settings/roomquotasettings": {
      "post": {
        "tags": [
          "Settings / Quota"
        ],
        "summary": "Save the room quota settings",
        "operationId": "saveRoomQuotaSettings",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ASC.Web.Api.ApiModel.RequestsDto.QuotaSettingsRequestsDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ASC.Web.Api.ApiModel.RequestsDto.QuotaSettingsRequestsDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/ASC.Web.Api.ApiModel.RequestsDto.QuotaSettingsRequestsDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Tenant room quota settings",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.Core.Tenants.TenantRoomQuotaSettings"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.Core.Tenants.TenantRoomQuotaSettings"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.Core.Tenants.TenantRoomQuotaSettings"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "asc_auth_key": [
              "read",
              "write"
            ]
          }
        ],
        "description": "Saves the room quota settings specified in the request to the current portal."
      }
    },
    "/api/2.0/settings/tenantquotasettings": {
      "put": {
        "tags": [
          "Settings / Quota"
        ],
        "summary": "Save the tenant quota settings",
        "operationId": "setTenantQuotaSettings",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ASC.Web.Api.ApiModel.RequestsDto.TenantQuotaSettingsRequestsDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ASC.Web.Api.ApiModel.RequestsDto.TenantQuotaSettingsRequestsDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/ASC.Web.Api.ApiModel.RequestsDto.TenantQuotaSettingsRequestsDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Tenant quota settings",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.Core.Tenants.TenantQuotaSettings"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.Core.Tenants.TenantQuotaSettings"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.Core.Tenants.TenantQuotaSettings"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "asc_auth_key": [
              "read",
              "write"
            ]
          }
        ],
        "description": "Saves the tenant quota settings specified in the request to the current portal."
      }
    },
    "/api/2.0/settings/whitelabel/save": {
      "post": {
        "tags": [
          "Settings / Rebranding"
        ],
        "summary": "Save the white label settings",
        "operationId": "saveWhiteLabelSettings",
        "parameters": [
          {
            "name": "IsDark",
            "in": "query",
            "description": "Specifies if the logo is for a dark theme or not",
            "schema": {
              "type": "boolean",
              "example": true
            }
          },
          {
            "name": "IsDefault",
            "in": "query",
            "description": "Specifies if the logo is for a default tenant or not",
            "schema": {
              "type": "boolean",
              "example": true
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ASC.Web.Api.ApiModel.RequestsDto.WhiteLabelRequestsDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ASC.Web.Api.ApiModel.RequestsDto.WhiteLabelRequestsDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/ASC.Web.Api.ApiModel.RequestsDto.WhiteLabelRequestsDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Boolean value: true if the operation is sucessful",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "boolean"
                }
              },
              "application/json": {
                "schema": {
                  "type": "boolean"
                }
              },
              "text/json": {
                "schema": {
                  "type": "boolean"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "asc_auth_key": [
              "read",
              "write"
            ]
          }
        ],
        "description": "Saves the white label settings specified in the request."
      }
    },
    "/api/2.0/settings/whitelabel/savefromfiles": {
      "post": {
        "tags": [
          "Settings / Rebranding"
        ],
        "summary": "Save the white label settings from files",
        "operationId": "saveWhiteLabelSettingsFromFiles",
        "parameters": [
          {
            "name": "IsDark",
            "in": "query",
            "description": "Specifies if the logo is for a dark theme or not",
            "schema": {
              "type": "boolean",
              "example": true
            }
          },
          {
            "name": "IsDefault",
            "in": "query",
            "description": "Specifies if the logo is for a default tenant or not",
            "schema": {
              "type": "boolean",
              "example": true
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Boolean value: true if the operation is sucessful",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "boolean"
                }
              },
              "application/json": {
                "schema": {
                  "type": "boolean"
                }
              },
              "text/json": {
                "schema": {
                  "type": "boolean"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "asc_auth_key": [
              "read",
              "write"
            ]
          }
        ],
        "description": "Saves the white label settings from files."
      }
    },
    "/api/2.0/settings/whitelabel/logos": {
      "get": {
        "tags": [
          "Settings / Rebranding"
        ],
        "summary": "Get the white label logos",
        "operationId": "getWhiteLabelLogos",
        "parameters": [
          {
            "name": "IsDark",
            "in": "query",
            "description": "Specifies if the logo is for a dark theme or not",
            "schema": {
              "type": "boolean",
              "example": true
            }
          },
          {
            "name": "IsDefault",
            "in": "query",
            "description": "Specifies if the logo is for a default tenant or not",
            "schema": {
              "type": "boolean",
              "example": true
            }
          }
        ],
        "responses": {
          "200": {
            "description": "White label logos",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.Web.Api.ApiModels.ResponseDto.WhiteLabelItemDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.Web.Api.ApiModels.ResponseDto.WhiteLabelItemDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.Web.Api.ApiModels.ResponseDto.WhiteLabelItemDto"
                }
              }
            }
          }
        },
        "description": "Returns the white label logos."
      }
    },
    "/api/2.0/settings/whitelabel/logos/isdefault": {
      "get": {
        "tags": [
          "Settings / Rebranding"
        ],
        "summary": "Check the default white label logos",
        "operationId": "getIsDefaultWhiteLabelLogos",
        "parameters": [
          {
            "name": "IsDark",
            "in": "query",
            "description": "Specifies if the logo is for a dark theme or not",
            "schema": {
              "type": "boolean",
              "example": true
            }
          },
          {
            "name": "IsDefault",
            "in": "query",
            "description": "Specifies if the logo is for a default tenant or not",
            "schema": {
              "type": "boolean",
              "example": true
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Request properties of white label logos",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.Web.Api.ApiModels.ResponseDto.IsDefaultWhiteLabelLogosDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.Web.Api.ApiModels.ResponseDto.IsDefaultWhiteLabelLogosDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.Web.Api.ApiModels.ResponseDto.IsDefaultWhiteLabelLogosDto"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "asc_auth_key": [
              "read",
              "write"
            ]
          }
        ],
        "description": "Specifies if the white label logos are default or not."
      }
    },
    "/api/2.0/settings/whitelabel/logotext": {
      "get": {
        "tags": [
          "Settings / Rebranding"
        ],
        "summary": "Get the white label logo text",
        "operationId": "getWhiteLabelLogoText",
        "parameters": [
          {
            "name": "IsDark",
            "in": "query",
            "description": "Specifies if the logo is for a dark theme or not",
            "schema": {
              "type": "boolean",
              "example": true
            }
          },
          {
            "name": "IsDefault",
            "in": "query",
            "description": "Specifies if the logo is for a default tenant or not",
            "schema": {
              "type": "boolean",
              "example": true
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Logo text",
            "content": {
              "text/plain": {
                "schema": {}
              },
              "application/json": {
                "schema": {}
              },
              "text/json": {
                "schema": {}
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "asc_auth_key": [
              "read",
              "write"
            ]
          }
        ],
        "description": "Returns the white label logo text."
      }
    },
    "/api/2.0/settings/whitelabel/restore": {
      "put": {
        "tags": [
          "Settings / Rebranding"
        ],
        "summary": "Restore the white label options",
        "operationId": "restoreWhiteLabelOptions",
        "parameters": [
          {
            "name": "IsDark",
            "in": "query",
            "description": "Specifies if the logo is for a dark theme or not",
            "schema": {
              "type": "boolean",
              "example": true
            }
          },
          {
            "name": "IsDefault",
            "in": "query",
            "description": "Specifies if the logo is for a default tenant or not",
            "schema": {
              "type": "boolean",
              "example": true
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Boolean value: true if the operation is successful",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "boolean"
                }
              },
              "application/json": {
                "schema": {
                  "type": "boolean"
                }
              },
              "text/json": {
                "schema": {
                  "type": "boolean"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "asc_auth_key": [
              "read",
              "write"
            ]
          }
        ],
        "description": "Restores the white label options."
      }
    },
    "/api/2.0/settings/companywhitelabel": {
      "get": {
        "tags": [
          "Settings / Rebranding"
        ],
        "summary": "Get the licensor data",
        "operationId": "getLicensorData",
        "responses": {
          "200": {
            "description": "List of company white label settings",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.Web.Core.WhiteLabel.CompanyWhiteLabelSettings"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.Web.Core.WhiteLabel.CompanyWhiteLabelSettings"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.Web.Core.WhiteLabel.CompanyWhiteLabelSettings"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "asc_auth_key": [
              "read",
              "write"
            ]
          }
        ],
        "description": "Returns the licensor data."
      }
    },
    "/api/2.0/settings/rebranding/company": {
      "post": {
        "tags": [
          "Settings / Rebranding"
        ],
        "summary": "Save the company white label settings",
        "operationId": "saveCompanyWhiteLabelSettings",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ASC.Web.Core.WhiteLabel.CompanyWhiteLabelSettingsWrapper"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ASC.Web.Core.WhiteLabel.CompanyWhiteLabelSettingsWrapper"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/ASC.Web.Core.WhiteLabel.CompanyWhiteLabelSettingsWrapper"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Boolean value: true if the operation is successful",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "boolean"
                }
              },
              "application/json": {
                "schema": {
                  "type": "boolean"
                }
              },
              "text/json": {
                "schema": {
                  "type": "boolean"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "asc_auth_key": [
              "read",
              "write"
            ]
          }
        ],
        "description": "Saves the company white label settings specified in the request."
      },
      "get": {
        "tags": [
          "Settings / Rebranding"
        ],
        "summary": "Get the company white label settings",
        "operationId": "getCompanyWhiteLabelSettings",
        "responses": {
          "200": {
            "description": "Company white label settings",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.Web.Api.ApiModels.ResponseDto.CompanyWhiteLabelSettingsDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.Web.Api.ApiModels.ResponseDto.CompanyWhiteLabelSettingsDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.Web.Api.ApiModels.ResponseDto.CompanyWhiteLabelSettingsDto"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "asc_auth_key": [
              "read",
              "write"
            ]
          }
        ],
        "description": "Returns the company white label settings."
      },
      "delete": {
        "tags": [
          "Settings / Rebranding"
        ],
        "summary": "Delete the company white label settings",
        "operationId": "deleteCompanyWhiteLabelSettings",
        "responses": {
          "200": {
            "description": "Default company white label settings",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.Web.Core.WhiteLabel.CompanyWhiteLabelSettings"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.Web.Core.WhiteLabel.CompanyWhiteLabelSettings"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.Web.Core.WhiteLabel.CompanyWhiteLabelSettings"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "asc_auth_key": [
              "read",
              "write"
            ]
          }
        ],
        "description": "Deletes the company white label settings."
      }
    },
    "/api/2.0/settings/rebranding/additional": {
      "post": {
        "tags": [
          "Settings / Rebranding"
        ],
        "summary": "Save the additional white label settings",
        "operationId": "saveAdditionalWhiteLabelSettings",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ASC.Web.Core.WhiteLabel.AdditionalWhiteLabelSettingsWrapper"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ASC.Web.Core.WhiteLabel.AdditionalWhiteLabelSettingsWrapper"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/ASC.Web.Core.WhiteLabel.AdditionalWhiteLabelSettingsWrapper"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Boolean value: true if the operation is successful",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "boolean"
                }
              },
              "application/json": {
                "schema": {
                  "type": "boolean"
                }
              },
              "text/json": {
                "schema": {
                  "type": "boolean"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "asc_auth_key": [
              "read",
              "write"
            ]
          }
        ],
        "description": "Saves the additional white label settings specified in the request."
      },
      "get": {
        "tags": [
          "Settings / Rebranding"
        ],
        "summary": "Get the additional white label settings",
        "operationId": "getAdditionalWhiteLabelSettings",
        "responses": {
          "200": {
            "description": "Additional white label settings",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.Web.Api.ApiModels.ResponseDto.AdditionalWhiteLabelSettingsDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.Web.Api.ApiModels.ResponseDto.AdditionalWhiteLabelSettingsDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.Web.Api.ApiModels.ResponseDto.AdditionalWhiteLabelSettingsDto"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "asc_auth_key": [
              "read",
              "write"
            ]
          }
        ],
        "description": "Returns the additional white label settings."
      },
      "delete": {
        "tags": [
          "Settings / Rebranding"
        ],
        "summary": "Delete the additional white label settings",
        "operationId": "deleteAdditionalWhiteLabelSettings",
        "responses": {
          "200": {
            "description": "Default additional white label settings",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.Web.Core.WhiteLabel.AdditionalWhiteLabelSettings"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.Web.Core.WhiteLabel.AdditionalWhiteLabelSettings"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.Web.Core.WhiteLabel.AdditionalWhiteLabelSettings"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "asc_auth_key": [
              "read",
              "write"
            ]
          }
        ],
        "description": "Deletes the additional white label settings."
      }
    },
    "/api/2.0/settings/enableWhitelabel": {
      "get": {
        "tags": [
          "Settings / Rebranding"
        ],
        "summary": "Check the white label availability",
        "operationId": "getEnableWhitelabel",
        "responses": {
          "200": {
            "description": "Boolean value: true if the white label is enabled",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "boolean"
                }
              },
              "application/json": {
                "schema": {
                  "type": "boolean"
                }
              },
              "text/json": {
                "schema": {
                  "type": "boolean"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "asc_auth_key": [
              "read",
              "write"
            ]
          }
        ],
        "description": "Checks if the white label is enabled or not."
      }
    },
    "/api/2.0/settings/security": {
      "get": {
        "tags": [
          "Settings / Security"
        ],
        "summary": "Get the security settings",
        "operationId": "getWebItemSettingsSecurityInfo",
        "parameters": [
          {
            "name": "ids",
            "in": "query",
            "description": "List of module IDs",
            "style": "deepObject",
            "schema": {
              "type": "array",
              "items": {},
              "example": [
                "some text"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Security settings",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.Web.Api.ApiModel.ResponseDto.SecurityDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.Web.Api.ApiModel.ResponseDto.SecurityDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.Web.Api.ApiModel.ResponseDto.SecurityDto"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "asc_auth_key": [
              "read",
              "write"
            ]
          }
        ],
        "description": "Returns the security settings for the modules specified in the request."
      },
      "put": {
        "tags": [
          "Settings / Security"
        ],
        "summary": "Set the module security settings",
        "operationId": "setWebItemSecurity",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ASC.Web.Api.ApiModel.RequestsDto.WebItemSecurityRequestsDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ASC.Web.Api.ApiModel.RequestsDto.WebItemSecurityRequestsDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/ASC.Web.Api.ApiModel.RequestsDto.WebItemSecurityRequestsDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Security settings",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.Web.Api.ApiModel.ResponseDto.SecurityDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.Web.Api.ApiModel.ResponseDto.SecurityDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.Web.Api.ApiModel.ResponseDto.SecurityDto"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "asc_auth_key": [
              "read",
              "write"
            ]
          }
        ],
        "description": "Sets the security settings to the module with the ID specified in the request."
      }
    },
    "/api/2.0/settings/security/{id}": {
      "get": {
        "tags": [
          "Settings / Security"
        ],
        "summary": "Get the module availability",
        "operationId": "getWebItemSecurityInfo",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Id",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "example": "58244b54-bf22-48b0-9c07-7c51807966ee"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Boolean value: true - module is enabled, false - module is disabled",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "boolean"
                }
              },
              "application/json": {
                "schema": {
                  "type": "boolean"
                }
              },
              "text/json": {
                "schema": {
                  "type": "boolean"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "asc_auth_key": [
              "read",
              "write"
            ]
          }
        ],
        "description": "Returns the availability of the module with the ID specified in the request."
      }
    },
    "/api/2.0/settings/security/modules": {
      "get": {
        "tags": [
          "Settings / Security"
        ],
        "summary": "Get the enabled modules",
        "operationId": "getEnabledModules",
        "responses": {
          "200": {
            "description": "List of enabled modules",
            "content": {
              "text/plain": {
                "schema": {}
              },
              "application/json": {
                "schema": {}
              },
              "text/json": {
                "schema": {}
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "asc_auth_key": [
              "read",
              "write"
            ]
          }
        ],
        "description": "Returns a list of all the enabled modules."
      }
    },
    "/api/2.0/settings/security/password": {
      "get": {
        "tags": [
          "Settings / Security"
        ],
        "summary": "Get the password settings",
        "operationId": "getPasswordSettings",
        "responses": {
          "200": {
            "description": "Password settings",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.Web.Api.ApiModels.ResponseDto.PasswordSettingsDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.Web.Api.ApiModels.ResponseDto.PasswordSettingsDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.Web.Api.ApiModels.ResponseDto.PasswordSettingsDto"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "asc_auth_key": [
              "read",
              "write"
            ]
          }
        ],
        "description": "Returns the portal password settings."
      },
      "put": {
        "tags": [
          "Settings / Security"
        ],
        "summary": "Set the password settings",
        "operationId": "updatePasswordSettings",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ASC.Web.Api.Models.PasswordSettingsRequestsDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ASC.Web.Api.Models.PasswordSettingsRequestsDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/ASC.Web.Api.Models.PasswordSettingsRequestsDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Password settings",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.Web.Api.ApiModels.ResponseDto.PasswordSettingsDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.Web.Api.ApiModels.ResponseDto.PasswordSettingsDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.Web.Api.ApiModels.ResponseDto.PasswordSettingsDto"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "asc_auth_key": [
              "read",
              "write"
            ]
          }
        ],
        "description": "Sets the portal password settings."
      }
    },
    "/api/2.0/settings/security/access": {
      "put": {
        "tags": [
          "Settings / Security"
        ],
        "summary": "Set the access settings to products",
        "operationId": "setAccessToWebItems",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ASC.Web.Api.ApiModel.RequestsDto.WebItemsSecurityRequestsDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ASC.Web.Api.ApiModel.RequestsDto.WebItemsSecurityRequestsDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/ASC.Web.Api.ApiModel.RequestsDto.WebItemsSecurityRequestsDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Security settings",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.Web.Api.ApiModel.ResponseDto.SecurityDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.Web.Api.ApiModel.ResponseDto.SecurityDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.Web.Api.ApiModel.ResponseDto.SecurityDto"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "asc_auth_key": [
              "read",
              "write"
            ]
          }
        ],
        "description": "Sets the access settings to the products with the IDs specified in the request."
      }
    },
    "/api/2.0/settings/security/administrator/{productid}": {
      "get": {
        "tags": [
          "Settings / Security"
        ],
        "summary": "Get the product administrators",
        "operationId": "getProductAdministrators",
        "parameters": [
          {
            "name": "productid",
            "in": "path",
            "description": "Product ID",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "example": "168b974c-7be2-4251-ab6b-89b1d9c322ee"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "List of product administrators with the following parameters",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.Web.Api.Models.EmployeeDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.Web.Api.Models.EmployeeDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.Web.Api.Models.EmployeeDto"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "asc_auth_key": [
              "read",
              "write"
            ]
          }
        ],
        "description": "Returns a list of all the product administrators with the ID specified in the request."
      }
    },
    "/api/2.0/settings/security/administrator": {
      "get": {
        "tags": [
          "Settings / Security"
        ],
        "summary": "Check a product administrator",
        "operationId": "isProductAdministrator",
        "parameters": [
          {
            "name": "productid",
            "in": "query",
            "description": "Product ID",
            "schema": {
              "type": "string",
              "format": "uuid",
              "example": "eb7fde7b-643e-4a12-acf2-dacb21fd2467"
            }
          },
          {
            "name": "userid",
            "in": "query",
            "description": "User ID",
            "schema": {
              "type": "string",
              "format": "uuid",
              "example": "ea22b2c7-8209-4155-8fab-0d1f64c01ea3"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Object with the user security information: product ID, user ID, administrator or not",
            "content": {
              "text/plain": {
                "schema": {}
              },
              "application/json": {
                "schema": {}
              },
              "text/json": {
                "schema": {}
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "asc_auth_key": [
              "read",
              "write"
            ]
          }
        ],
        "description": "Checks if the selected user is a product administrator with the ID specified in the request."
      },
      "put": {
        "tags": [
          "Settings / Security"
        ],
        "summary": "Set a product administrator",
        "operationId": "setProductAdministrator",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ASC.Web.Api.ApiModel.RequestsDto.SecurityRequestsDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ASC.Web.Api.ApiModel.RequestsDto.SecurityRequestsDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/ASC.Web.Api.ApiModel.RequestsDto.SecurityRequestsDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Object with the user security information: product ID, user ID, administrator or not",
            "content": {
              "text/plain": {
                "schema": {}
              },
              "application/json": {
                "schema": {}
              },
              "text/json": {
                "schema": {}
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "asc_auth_key": [
              "read",
              "write"
            ]
          }
        ],
        "description": "Sets the selected user as a product administrator with the ID specified in the request."
      }
    },
    "/api/2.0/settings/ssov2": {
      "get": {
        "tags": [
          "Settings / SSO"
        ],
        "summary": "Get the SSO settings",
        "operationId": "getSsoSettingsV2",
        "responses": {
          "200": {
            "description": "SSO settings",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.Web.Studio.UserControls.Management.SingleSignOnSettings.SsoSettingsV2"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.Web.Studio.UserControls.Management.SingleSignOnSettings.SsoSettingsV2"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.Web.Studio.UserControls.Management.SingleSignOnSettings.SsoSettingsV2"
                }
              }
            }
          }
        },
        "description": "Returns the current portal SSO settings."
      },
      "post": {
        "tags": [
          "Settings / SSO"
        ],
        "summary": "Save the SSO settings",
        "operationId": "saveSsoSettingsV2",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ASC.Web.Api.ApiModel.RequestsDto.SsoSettingsRequestsDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ASC.Web.Api.ApiModel.RequestsDto.SsoSettingsRequestsDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/ASC.Web.Api.ApiModel.RequestsDto.SsoSettingsRequestsDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "SSO settings",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.Web.Studio.UserControls.Management.SingleSignOnSettings.SsoSettingsV2"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.Web.Studio.UserControls.Management.SingleSignOnSettings.SsoSettingsV2"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.Web.Studio.UserControls.Management.SingleSignOnSettings.SsoSettingsV2"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "asc_auth_key": [
              "read",
              "write"
            ]
          }
        ],
        "description": "Saves the SSO settings for the current portal."
      },
      "delete": {
        "tags": [
          "Settings / SSO"
        ],
        "summary": "Reset the SSO settings",
        "operationId": "resetSsoSettingsV2",
        "responses": {
          "200": {
            "description": "Default SSO settings",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.Web.Studio.UserControls.Management.SingleSignOnSettings.SsoSettingsV2"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.Web.Studio.UserControls.Management.SingleSignOnSettings.SsoSettingsV2"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.Web.Studio.UserControls.Management.SingleSignOnSettings.SsoSettingsV2"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "asc_auth_key": [
              "read",
              "write"
            ]
          }
        ],
        "description": "Resets the SSO settings of the current portal."
      }
    },
    "/api/2.0/settings/ssov2/default": {
      "get": {
        "tags": [
          "Settings / SSO"
        ],
        "summary": "Get the default SSO settings",
        "operationId": "getDefaultSsoSettingsV2",
        "responses": {
          "200": {
            "description": "Default SSO settings",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.Web.Studio.UserControls.Management.SingleSignOnSettings.SsoSettingsV2"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.Web.Studio.UserControls.Management.SingleSignOnSettings.SsoSettingsV2"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.Web.Studio.UserControls.Management.SingleSignOnSettings.SsoSettingsV2"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "asc_auth_key": [
              "read",
              "write"
            ]
          }
        ],
        "description": "Returns the default portal SSO settings."
      }
    },
    "/api/2.0/settings/ssov2/constants": {
      "get": {
        "tags": [
          "Settings / SSO"
        ],
        "summary": "Get the SSO settings constants",
        "operationId": "getSsoSettingsV2Constants",
        "responses": {
          "200": {
            "description": "The SSO settings constants: SSO name ID format type, SSO binding type, SSO signing algorithm type, SSO SP certificate action type, SSO IDP certificate action type",
            "content": {
              "text/plain": {
                "schema": {}
              },
              "application/json": {
                "schema": {}
              },
              "text/json": {
                "schema": {}
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "asc_auth_key": [
              "read",
              "write"
            ]
          }
        ],
        "description": "Returns the SSO settings constants."
      }
    },
    "/api/2.0/settings/statistics/spaceusage/{id}": {
      "get": {
        "tags": [
          "Settings / Statistics"
        ],
        "summary": "Get the space usage statistics",
        "operationId": "getSpaceUsageStatistics",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Id",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "example": "a8cebffa-e878-486a-9f95-57b6671b531c"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Module space usage statistics",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.Web.Api.ApiModel.ResponseDto.UsageSpaceStatItemDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.Web.Api.ApiModel.ResponseDto.UsageSpaceStatItemDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.Web.Api.ApiModel.ResponseDto.UsageSpaceStatItemDto"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "asc_auth_key": [
              "read",
              "write"
            ]
          }
        ],
        "description": "Returns the space usage statistics of the module with the ID specified in the request."
      }
    },
    "/api/2.0/settings/statistics/visit": {
      "get": {
        "tags": [
          "Settings / Statistics"
        ],
        "summary": "Get the visit statistics",
        "operationId": "getVisitStatistics",
        "parameters": [
          {
            "name": "fromDate",
            "in": "query",
            "description": "Start period date",
            "schema": {
              "$ref": "#/components/schemas/ASC.Api.Core.ApiDateTime"
            }
          },
          {
            "name": "toDate",
            "in": "query",
            "description": "End period date",
            "schema": {
              "$ref": "#/components/schemas/ASC.Api.Core.ApiDateTime"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "List of point charts",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.Web.Api.ApiModel.ResponseDto.ChartPointDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.Web.Api.ApiModel.ResponseDto.ChartPointDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.Web.Api.ApiModel.ResponseDto.ChartPointDto"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "asc_auth_key": [
              "read",
              "write"
            ]
          }
        ],
        "description": "Returns the user visit statistics for the period specified in the request."
      }
    },
    "/api/2.0/settings/storage": {
      "get": {
        "tags": [
          "Settings / Storage"
        ],
        "summary": "Get storages",
        "operationId": "getAllStorages",
        "responses": {
          "200": {
            "description": "List of storages with the following parameters",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.Web.Api.ApiModel.ResponseDto.StorageDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.Web.Api.ApiModel.ResponseDto.StorageDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.Web.Api.ApiModel.ResponseDto.StorageDto"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "asc_auth_key": [
              "read",
              "write"
            ]
          }
        ],
        "description": "Returns a list of all the portal storages."
      },
      "put": {
        "tags": [
          "Settings / Storage"
        ],
        "summary": "Update a storage",
        "operationId": "updateStorage",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ASC.Web.Api.ApiModel.RequestsDto.StorageRequestsDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ASC.Web.Api.ApiModel.RequestsDto.StorageRequestsDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/ASC.Web.Api.ApiModel.RequestsDto.StorageRequestsDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Updated storage settings",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.Data.Storage.Configuration.StorageSettings"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.Data.Storage.Configuration.StorageSettings"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.Data.Storage.Configuration.StorageSettings"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "asc_auth_key": [
              "read",
              "write"
            ]
          }
        ],
        "description": "Updates a storage with the parameters specified in the request."
      },
      "delete": {
        "tags": [
          "Settings / Storage"
        ],
        "summary": "Reset the storage settings",
        "operationId": "resetStorageToDefault",
        "responses": {
          "200": {
            "description": "OK"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "asc_auth_key": [
              "read",
              "write"
            ]
          }
        ],
        "description": "Resets the storage settings to the default parameters."
      }
    },
    "/api/2.0/settings/storage/progress": {
      "get": {
        "tags": [
          "Settings / Storage"
        ],
        "summary": "Get the storage progress",
        "operationId": "getStorageProgress",
        "responses": {
          "200": {
            "description": "Storage progress",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "number",
                  "format": "double"
                }
              },
              "application/json": {
                "schema": {
                  "type": "number",
                  "format": "double"
                }
              },
              "text/json": {
                "schema": {
                  "type": "number",
                  "format": "double"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "asc_auth_key": [
              "read",
              "write"
            ]
          }
        ],
        "description": "Returns the storage progress."
      }
    },
    "/api/2.0/settings/storage/cdn": {
      "get": {
        "tags": [
          "Settings / Storage"
        ],
        "summary": "Get the CDN storages",
        "operationId": "getAllCdnStorages",
        "responses": {
          "200": {
            "description": "List of the CDN storages with the following parameters",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.Web.Api.ApiModel.ResponseDto.StorageDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.Web.Api.ApiModel.ResponseDto.StorageDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.Web.Api.ApiModel.ResponseDto.StorageDto"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "asc_auth_key": [
              "read",
              "write"
            ]
          }
        ],
        "description": "Returns a list of all the CDN storages."
      },
      "put": {
        "tags": [
          "Settings / Storage"
        ],
        "summary": "Update the CDN storage",
        "operationId": "updateCdn",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ASC.Web.Api.ApiModel.RequestsDto.StorageRequestsDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ASC.Web.Api.ApiModel.RequestsDto.StorageRequestsDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/ASC.Web.Api.ApiModel.RequestsDto.StorageRequestsDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Updated CDN storage",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.Data.Storage.Configuration.CdnStorageSettings"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.Data.Storage.Configuration.CdnStorageSettings"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.Data.Storage.Configuration.CdnStorageSettings"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "asc_auth_key": [
              "read",
              "write"
            ]
          }
        ],
        "description": "Updates the CDN storage with the parameters specified in the request."
      },
      "delete": {
        "tags": [
          "Settings / Storage"
        ],
        "summary": "Reset the CDN storage settings",
        "operationId": "resetCdnToDefault",
        "responses": {
          "200": {
            "description": "OK"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "asc_auth_key": [
              "read",
              "write"
            ]
          }
        ],
        "description": "Resets the CDN storage settings to the default parameters."
      }
    },
    "/api/2.0/settings/storage/backup": {
      "get": {
        "tags": [
          "Settings / Storage"
        ],
        "summary": "Get the backup storages",
        "operationId": "getAllBackupStorages",
        "responses": {
          "200": {
            "description": "List of the backup storages with the following parameters",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.Web.Api.ApiModel.ResponseDto.StorageDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.Web.Api.ApiModel.ResponseDto.StorageDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.Web.Api.ApiModel.ResponseDto.StorageDto"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "asc_auth_key": [
              "read",
              "write"
            ]
          }
        ],
        "description": "Returns a list of all the backup storages."
      }
    },
    "/api/2.0/settings/storage/s3/regions": {
      "get": {
        "tags": [
          "Settings / Storage"
        ],
        "summary": "Get Amazon regions",
        "operationId": "getAmazonS3Regions",
        "responses": {
          "200": {
            "description": "List of the Amazon regions",
            "content": {
              "text/plain": {
                "schema": {}
              },
              "application/json": {
                "schema": {}
              },
              "text/json": {
                "schema": {}
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "asc_auth_key": [
              "read",
              "write"
            ]
          }
        ],
        "description": "Returns a list of all Amazon regions."
      }
    },
    "/api/2.0/settings/customschemas": {
      "get": {
        "tags": [
          "Settings / Team templates"
        ],
        "summary": "Get team templates",
        "operationId": "peopleSchemas",
        "responses": {
          "200": {
            "description": "List of team templates with the following parameters",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.Web.Api.ApiModel.RequestsDto.SchemaRequestsDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.Web.Api.ApiModel.RequestsDto.SchemaRequestsDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.Web.Api.ApiModel.RequestsDto.SchemaRequestsDto"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "asc_auth_key": [
              "read",
              "write"
            ]
          }
        ],
        "description": "Returns all portal team templates that allow users to name their organization (or group), add members, and define their activities within the portal."
      },
      "post": {
        "tags": [
          "Settings / Team templates"
        ],
        "summary": "Save the naming settings",
        "operationId": "saveNamingSettings",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ASC.Web.Api.ApiModel.RequestsDto.SchemaBaseRequestsDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ASC.Web.Api.ApiModel.RequestsDto.SchemaBaseRequestsDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/ASC.Web.Api.ApiModel.RequestsDto.SchemaBaseRequestsDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Team template with the following parameters",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.Web.Api.ApiModel.RequestsDto.SchemaRequestsDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.Web.Api.ApiModel.RequestsDto.SchemaRequestsDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.Web.Api.ApiModel.RequestsDto.SchemaRequestsDto"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "asc_auth_key": [
              "read",
              "write"
            ]
          }
        ],
        "description": "Saves the names from the team template with the ID specified in the request."
      },
      "put": {
        "tags": [
          "Settings / Team templates"
        ],
        "summary": "Create a custom team template",
        "operationId": "saveCustomNamingSettings",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ASC.Web.Api.ApiModel.RequestsDto.SchemaRequestsDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ASC.Web.Api.ApiModel.RequestsDto.SchemaRequestsDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/ASC.Web.Api.ApiModel.RequestsDto.SchemaRequestsDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Custom team template with the following parameters",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.Web.Api.ApiModel.RequestsDto.SchemaRequestsDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.Web.Api.ApiModel.RequestsDto.SchemaRequestsDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.Web.Api.ApiModel.RequestsDto.SchemaRequestsDto"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "asc_auth_key": [
              "read",
              "write"
            ]
          }
        ],
        "description": "Creates a custom team template with the parameters specified in the request."
      }
    },
    "/api/2.0/settings/customschemas/{id}": {
      "get": {
        "tags": [
          "Settings / Team templates"
        ],
        "summary": "Get a team template by ID",
        "operationId": "peopleSchema",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Id",
            "required": true,
            "schema": {
              "type": "string",
              "example": "1627"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Team template with the following parameters",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.Web.Api.ApiModel.RequestsDto.SchemaRequestsDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.Web.Api.ApiModel.RequestsDto.SchemaRequestsDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.Web.Api.ApiModel.RequestsDto.SchemaRequestsDto"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "asc_auth_key": [
              "read",
              "write"
            ]
          }
        ],
        "description": "Returns a team template by the ID specified in the request."
      }
    },
    "/api/2.0/settings/tfaapp": {
      "get": {
        "tags": [
          "Settings / TFA settings"
        ],
        "summary": "Get the TFA settings",
        "operationId": "getTfaSettings",
        "responses": {
          "200": {
            "description": "TFA settings",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.Web.Api.ApiModel.RequestsDto.TfaSettingsDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.Web.Api.ApiModel.RequestsDto.TfaSettingsDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.Web.Api.ApiModel.RequestsDto.TfaSettingsDto"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "asc_auth_key": [
              "read",
              "write"
            ]
          }
        ],
        "description": "Returns the current two-factor authentication settings."
      },
      "put": {
        "tags": [
          "Settings / TFA settings"
        ],
        "summary": "Update the TFA settings",
        "operationId": "tfaSettings",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ASC.Web.Api.ApiModel.RequestsDto.TfaRequestsDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ASC.Web.Api.ApiModel.RequestsDto.TfaRequestsDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/ASC.Web.Api.ApiModel.RequestsDto.TfaRequestsDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "True if the operation is successful",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "boolean"
                }
              },
              "application/json": {
                "schema": {
                  "type": "boolean"
                }
              },
              "text/json": {
                "schema": {
                  "type": "boolean"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "asc_auth_key": [
              "read",
              "write"
            ]
          }
        ],
        "description": "Updates the two-factor authentication settings with the parameters specified in the request."
      }
    },
    "/api/2.0/settings/tfaapp/validate": {
      "post": {
        "tags": [
          "Settings / TFA settings"
        ],
        "summary": "Validate the TFA code",
        "operationId": "tfaValidateAuthCode",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ASC.Web.Api.ApiModel.RequestsDto.TfaValidateRequestsDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ASC.Web.Api.ApiModel.RequestsDto.TfaValidateRequestsDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/ASC.Web.Api.ApiModel.RequestsDto.TfaValidateRequestsDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "True if the code is valid",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "boolean"
                }
              },
              "application/json": {
                "schema": {
                  "type": "boolean"
                }
              },
              "text/json": {
                "schema": {
                  "type": "boolean"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "asc_auth_key": [
              "read",
              "write"
            ]
          }
        ],
        "description": "Validates the two-factor authentication code specified in the request."
      }
    },
    "/api/2.0/settings/tfaapp/confirm": {
      "get": {
        "tags": [
          "Settings / TFA settings"
        ],
        "summary": "Get confirmation email",
        "operationId": "tfaConfirmUrl",
        "responses": {
          "200": {
            "description": "Confirmation email URL",
            "content": {
              "text/plain": {
                "schema": {}
              },
              "application/json": {
                "schema": {}
              },
              "text/json": {
                "schema": {}
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "asc_auth_key": [
              "read",
              "write"
            ]
          }
        ],
        "description": "Returns the confirmation email URL for authorization via SMS or TFA application."
      }
    },
    "/api/2.0/settings/tfaappwithlink": {
      "put": {
        "tags": [
          "Settings / TFA settings"
        ],
        "summary": "Get confirmation email for updating TFA settings",
        "operationId": "tfaSettingsLink",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ASC.Web.Api.ApiModel.RequestsDto.TfaRequestsDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ASC.Web.Api.ApiModel.RequestsDto.TfaRequestsDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/ASC.Web.Api.ApiModel.RequestsDto.TfaRequestsDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Confirmation email URL",
            "content": {
              "text/plain": {
                "schema": {}
              },
              "application/json": {
                "schema": {}
              },
              "text/json": {
                "schema": {}
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "asc_auth_key": [
              "read",
              "write"
            ]
          }
        ],
        "description": "Returns the confirmation email URL for updating TFA settings."
      }
    },
    "/api/2.0/settings/tfaapp/setup": {
      "get": {
        "tags": [
          "Settings / TFA settings"
        ],
        "summary": "Generate setup code",
        "operationId": "tfaAppGenerateSetupCode",
        "responses": {
          "200": {
            "description": "Setup code",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Google.Authenticator.SetupCode"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Google.Authenticator.SetupCode"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Google.Authenticator.SetupCode"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "asc_auth_key": [
              "read",
              "write"
            ]
          }
        ],
        "description": "Generates the setup TFA code for the current user."
      }
    },
    "/api/2.0/settings/tfaappcodes": {
      "get": {
        "tags": [
          "Settings / TFA settings"
        ],
        "summary": "Get the TFA codes",
        "operationId": "tfaAppGetCodes",
        "responses": {
          "200": {
            "description": "List of TFA application codes",
            "content": {
              "text/plain": {
                "schema": {}
              },
              "application/json": {
                "schema": {}
              },
              "text/json": {
                "schema": {}
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "asc_auth_key": [
              "read",
              "write"
            ]
          }
        ],
        "description": "Returns the two-factor authentication application codes."
      }
    },
    "/api/2.0/settings/tfaappnewcodes": {
      "put": {
        "tags": [
          "Settings / TFA settings"
        ],
        "summary": "Update the TFA codes",
        "operationId": "tfaAppRequestNewCodes",
        "responses": {
          "200": {
            "description": "New backup codes",
            "content": {
              "text/plain": {
                "schema": {}
              },
              "application/json": {
                "schema": {}
              },
              "text/json": {
                "schema": {}
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "asc_auth_key": [
              "read",
              "write"
            ]
          }
        ],
        "description": "Requests the new backup codes for the two-factor authentication application."
      }
    },
    "/api/2.0/settings/tfaappnewapp": {
      "put": {
        "tags": [
          "Settings / TFA settings"
        ],
        "summary": "Unlink the TFA application",
        "operationId": "tfaAppNewApp",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ASC.Web.Api.ApiModel.RequestsDto.TfaRequestsDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ASC.Web.Api.ApiModel.RequestsDto.TfaRequestsDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/ASC.Web.Api.ApiModel.RequestsDto.TfaRequestsDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Login URL",
            "content": {
              "text/plain": {
                "schema": {}
              },
              "application/json": {
                "schema": {}
              },
              "text/json": {
                "schema": {}
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "asc_auth_key": [
              "read",
              "write"
            ]
          }
        ],
        "description": "Unlinks the current two-factor authentication application from the user account specified in the request."
      }
    },
    "/api/2.0/settings/tips": {
      "put": {
        "tags": [
          "Settings / Tips"
        ],
        "summary": "Update the tip settings",
        "operationId": "updateTipsSettings",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ASC.Web.Api.ApiModel.RequestsDto.TipsRequestDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ASC.Web.Api.ApiModel.RequestsDto.TipsRequestDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/ASC.Web.Api.ApiModel.RequestsDto.TipsRequestDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Updated tip settings",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.Web.Studio.Core.TipsSettings"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.Web.Studio.Core.TipsSettings"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.Web.Studio.Core.TipsSettings"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "asc_auth_key": [
              "read",
              "write"
            ]
          }
        ],
        "description": "Updates the tip settings with a parameter specified in the request."
      }
    },
    "/api/2.0/settings/tips/change/subscription": {
      "put": {
        "tags": [
          "Settings / Tips"
        ],
        "summary": "Update the tip subscription",
        "operationId": "updateTipsSubscription",
        "responses": {
          "200": {
            "description": "Boolean value: true if the user is subscribed to the tips",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "boolean"
                }
              },
              "application/json": {
                "schema": {
                  "type": "boolean"
                }
              },
              "text/json": {
                "schema": {
                  "type": "boolean"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "asc_auth_key": [
              "read",
              "write"
            ]
          }
        ],
        "description": "Updates the tip subscription."
      }
    },
    "/api/2.0/settings/tips/subscription": {
      "get": {
        "tags": [
          "Settings / Tips"
        ],
        "summary": "Check the tip subscription",
        "operationId": "getTipsSubscription",
        "responses": {
          "200": {
            "description": "Boolean value: true if the user is subscribed to the tips",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "boolean"
                }
              },
              "application/json": {
                "schema": {
                  "type": "boolean"
                }
              },
              "text/json": {
                "schema": {
                  "type": "boolean"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "asc_auth_key": [
              "read",
              "write"
            ]
          }
        ],
        "description": "Checks if the current user is subscribed to the tips or not."
      }
    },
    "/api/2.0/settings/webhook": {
      "get": {
        "tags": [
          "Settings / Webhooks"
        ],
        "summary": "Get webhooks",
        "operationId": "getTenantWebhooks",
        "responses": {
          "200": {
            "description": "List of tenant webhooks with their config parameters",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.Web.Api.ApiModels.ResponseDto.WebhooksConfigWithStatusDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.Web.Api.ApiModels.ResponseDto.WebhooksConfigWithStatusDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.Web.Api.ApiModels.ResponseDto.WebhooksConfigWithStatusDto"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "asc_auth_key": [
              "read",
              "write"
            ]
          }
        ],
        "description": "Returns a list of the tenant webhooks."
      },
      "post": {
        "tags": [
          "Settings / Webhooks"
        ],
        "summary": "Create a webhook",
        "operationId": "createWebhook",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ASC.Web.Api.ApiModels.RequestsDto.WebhooksConfigRequestsDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ASC.Web.Api.ApiModels.RequestsDto.WebhooksConfigRequestsDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/ASC.Web.Api.ApiModels.RequestsDto.WebhooksConfigRequestsDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Tenant webhook with its config parameters",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.Web.Api.ApiModels.ResponseDto.WebhooksConfigDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.Web.Api.ApiModels.ResponseDto.WebhooksConfigDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.Web.Api.ApiModels.ResponseDto.WebhooksConfigDto"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "asc_auth_key": [
              "read",
              "write"
            ]
          }
        ],
        "description": "Creates a new tenant webhook with the parameters specified in the request."
      },
      "put": {
        "tags": [
          "Settings / Webhooks"
        ],
        "summary": "Update a webhook",
        "operationId": "updateWebhook",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ASC.Web.Api.ApiModels.RequestsDto.WebhooksConfigRequestsDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ASC.Web.Api.ApiModels.RequestsDto.WebhooksConfigRequestsDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/ASC.Web.Api.ApiModels.RequestsDto.WebhooksConfigRequestsDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Updated tenant webhook with its config parameters",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.Web.Api.ApiModels.ResponseDto.WebhooksConfigDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.Web.Api.ApiModels.ResponseDto.WebhooksConfigDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.Web.Api.ApiModels.ResponseDto.WebhooksConfigDto"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "asc_auth_key": [
              "read",
              "write"
            ]
          }
        ],
        "description": "Updates the tenant webhook with the parameters specified in the request."
      }
    },
    "/api/2.0/settings/webhook/{id}": {
      "delete": {
        "tags": [
          "Settings / Webhooks"
        ],
        "summary": "Remove a webhook",
        "operationId": "removeWebhook",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Id",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32",
              "example": 8798
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Tenant webhook with its config parameters",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.Web.Api.ApiModels.ResponseDto.WebhooksConfigDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.Web.Api.ApiModels.ResponseDto.WebhooksConfigDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.Web.Api.ApiModels.ResponseDto.WebhooksConfigDto"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "asc_auth_key": [
              "read",
              "write"
            ]
          }
        ],
        "description": "Removes the tenant webhook with the ID specified in the request."
      },
      "put": {
        "tags": [
          "Settings / Webhooks"
        ],
        "summary": "Disable a webhook",
        "operationId": "disableWebHook",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Id",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32",
              "example": 4970
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Webhook settings",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.Webhooks.Core.Webhook"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.Webhooks.Core.Webhook"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.Webhooks.Core.Webhook"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "asc_auth_key": [
              "read",
              "write"
            ]
          }
        ],
        "description": "Disables a webhook with the ID specified in the request."
      }
    },
    "/api/2.0/settings/webhooks/log": {
      "get": {
        "tags": [
          "Settings / Webhooks"
        ],
        "summary": "Get webhook logs",
        "operationId": "getJournal",
        "parameters": [
          {
            "name": "deliveryFrom",
            "in": "query",
            "description": "Delivey start time",
            "schema": {
              "type": "string",
              "format": "date-time",
              "example": "2008-04-10T06:30:00.0000000+04:00"
            }
          },
          {
            "name": "deliveryTo",
            "in": "query",
            "description": "Delivey end time",
            "schema": {
              "type": "string",
              "format": "date-time",
              "example": "2008-04-10T06:30:00.0000000+04:00"
            }
          },
          {
            "name": "hookUri",
            "in": "query",
            "description": "Hook URI",
            "schema": {
              "type": "string",
              "example": "some text"
            }
          },
          {
            "name": "webhookId",
            "in": "query",
            "description": "Webhook ID",
            "schema": {
              "type": "integer",
              "format": "int32",
              "example": 1234
            }
          },
          {
            "name": "configId",
            "in": "query",
            "description": "Config ID",
            "schema": {
              "type": "integer",
              "format": "int32",
              "example": 1234
            }
          },
          {
            "name": "eventId",
            "in": "query",
            "description": "Event ID",
            "schema": {
              "type": "integer",
              "format": "int32",
              "example": 1234
            }
          },
          {
            "name": "groupStatus",
            "in": "query",
            "description": "Webhook group status",
            "schema": {
              "$ref": "#/components/schemas/ASC.Webhooks.Core.WebhookGroupStatus"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Logs of the webhook activities",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.Web.Api.ApiModels.ResponseDto.WebhooksLogDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.Web.Api.ApiModels.ResponseDto.WebhooksLogDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.Web.Api.ApiModels.ResponseDto.WebhooksLogDto"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "asc_auth_key": [
              "read",
              "write"
            ]
          }
        ],
        "description": "Returns the logs of the webhook activities."
      }
    },
    "/api/2.0/settings/webhook/{id}/retry": {
      "put": {
        "tags": [
          "Settings / Webhooks"
        ],
        "summary": "Retry a webhook",
        "operationId": "retryWebhook",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Id",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32",
              "example": 5990
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Logs of the webhook activities",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.Web.Api.ApiModels.ResponseDto.WebhooksLogDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.Web.Api.ApiModels.ResponseDto.WebhooksLogDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.Web.Api.ApiModels.ResponseDto.WebhooksLogDto"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "asc_auth_key": [
              "read",
              "write"
            ]
          }
        ],
        "description": "Retries a webhook with the ID specified in the request."
      }
    },
    "/api/2.0/settings/webhook/retry": {
      "put": {
        "tags": [
          "Settings / Webhooks"
        ],
        "summary": "Retry webhooks",
        "operationId": "retryWebhooks",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ASC.Web.Api.ApiModels.RequestsDto.WebhookRetryRequestsDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ASC.Web.Api.ApiModels.RequestsDto.WebhookRetryRequestsDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/ASC.Web.Api.ApiModels.RequestsDto.WebhookRetryRequestsDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Logs of the webhook activities",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.Web.Api.ApiModels.ResponseDto.WebhooksLogDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.Web.Api.ApiModels.ResponseDto.WebhooksLogDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.Web.Api.ApiModels.ResponseDto.WebhooksLogDto"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "asc_auth_key": [
              "read",
              "write"
            ]
          }
        ],
        "description": "Retries all the webhooks with the IDs specified in the request."
      }
    },
    "/api/2.0/settings/webhooks": {
      "get": {
        "tags": [
          "Settings / Webhooks"
        ],
        "summary": "Get webhook settings",
        "operationId": "settings",
        "responses": {
          "200": {
            "description": "List of webhook settings",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.Webhooks.Core.Webhook"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.Webhooks.Core.Webhook"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.Webhooks.Core.Webhook"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "asc_auth_key": [
              "read",
              "write"
            ]
          }
        ],
        "description": "Returns settings of all webhooks."
      }
    },
    "/api/2.0/settings/webplugins": {
      "post": {
        "tags": [
          "Settings / Webplugins"
        ],
        "summary": "Adds web plugins from file",
        "operationId": "addWebPluginFromFile",
        "parameters": [
          {
            "name": "system",
            "in": "query",
            "description": "System",
            "schema": {
              "type": "boolean",
              "example": true
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Web plugin",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.Web.Api.ApiModels.ResponseDto.WebPluginDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.Web.Api.ApiModels.ResponseDto.WebPluginDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.Web.Api.ApiModels.ResponseDto.WebPluginDto"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "asc_auth_key": [
              "read",
              "write"
            ]
          }
        ],
        "description": "Adds web plugins from file"
      },
      "get": {
        "tags": [
          "Settings / Webplugins"
        ],
        "summary": "Gets web plugins",
        "operationId": "getWebPlugins",
        "parameters": [
          {
            "name": "enabled",
            "in": "query",
            "description": "Enabled",
            "schema": {
              "type": "boolean",
              "example": true
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Web plugin",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.Web.Api.ApiModels.ResponseDto.WebPluginDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.Web.Api.ApiModels.ResponseDto.WebPluginDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.Web.Api.ApiModels.ResponseDto.WebPluginDto"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "asc_auth_key": [
              "read",
              "write"
            ]
          }
        ],
        "description": "Gets web plugins"
      }
    },
    "/api/2.0/settings/webplugins/{name}": {
      "get": {
        "tags": [
          "Settings / Webplugins"
        ],
        "summary": "Gets web plugins by name specified in request",
        "operationId": "getWebPlugin",
        "parameters": [
          {
            "name": "name",
            "in": "path",
            "description": "Name",
            "required": true,
            "schema": {
              "type": "string",
              "example": "D'angelo Tremblay"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Web plugin",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.Web.Api.ApiModels.ResponseDto.WebPluginDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.Web.Api.ApiModels.ResponseDto.WebPluginDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.Web.Api.ApiModels.ResponseDto.WebPluginDto"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "asc_auth_key": [
              "read",
              "write"
            ]
          }
        ],
        "description": "Gets web plugins by name specified in request"
      },
      "put": {
        "tags": [
          "Settings / Webplugins"
        ],
        "summary": "Updates web plugins",
        "operationId": "updateWebPlugin",
        "parameters": [
          {
            "name": "name",
            "in": "path",
            "description": "Name",
            "required": true,
            "schema": {
              "type": "string",
              "example": "Hanna Grant"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ASC.Web.Api.ApiModel.RequestsDto.WebPluginRequests"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ASC.Web.Api.ApiModel.RequestsDto.WebPluginRequests"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/ASC.Web.Api.ApiModel.RequestsDto.WebPluginRequests"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "asc_auth_key": [
              "read",
              "write"
            ]
          }
        ],
        "description": "Updates web plugins"
      },
      "delete": {
        "tags": [
          "Settings / Webplugins"
        ],
        "summary": "Deletes web plugins by name specified in request",
        "operationId": "deleteWebPlugin",
        "parameters": [
          {
            "name": "name",
            "in": "path",
            "description": "Name",
            "required": true,
            "schema": {
              "type": "string",
              "example": "Nicholas Collins"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "asc_auth_key": [
              "read",
              "write"
            ]
          }
        ],
        "description": "Deletes web plugins by name specified in request"
      }
    }
  },
  "components": {
    "schemas": {
      "ASC.Api.Core.ApiDateTime": {
        "type": "object",
        "properties": {
          "utcTime": {
            "type": "string",
            "format": "date-time",
            "readOnly": true,
            "example": "2008-04-10T06:30:00.0000000+04:00"
          },
          "timeZoneOffset": {
            "type": "string",
            "format": "date-span",
            "readOnly": true,
            "example": "00:00:00"
          }
        },
        "additionalProperties": false
      },
      "ASC.Api.Core.Module": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid",
            "example": "378a29c0-9cd9-476b-b79b-a0401d20ed8f"
          },
          "appName": {
            "type": "string",
            "nullable": true,
            "example": "some text"
          },
          "title": {
            "type": "string",
            "nullable": true,
            "example": "designer_tenge_copying"
          },
          "link": {
            "type": "string",
            "nullable": true,
            "example": "some text"
          },
          "iconUrl": {
            "type": "string",
            "nullable": true,
            "example": "some text"
          },
          "imageUrl": {
            "type": "string",
            "nullable": true,
            "example": "some text"
          },
          "helpUrl": {
            "type": "string",
            "nullable": true,
            "example": "some text"
          },
          "description": {
            "type": "string",
            "nullable": true,
            "example": "some text"
          },
          "isPrimary": {
            "type": "boolean",
            "example": true
          }
        },
        "additionalProperties": false
      },
      "ASC.Api.Settings.Smtp.SmtpOperationStatusRequestsDto": {
        "type": "object",
        "properties": {
          "completed": {
            "type": "boolean",
            "description": "Specifies if the SMTP operation is completed or not",
            "example": true
          },
          "id": {
            "type": "string",
            "description": "SMTP operation ID",
            "nullable": true,
            "example": "{some-random-guid}"
          },
          "error": {
            "type": "string",
            "description": "SMTP operation error",
            "nullable": true,
            "example": ""
          },
          "status": {
            "type": "string",
            "description": "SMTP operation status",
            "nullable": true,
            "example": ""
          },
          "percents": {
            "type": "integer",
            "description": "Percentage of SMTP operation completion",
            "format": "int32",
            "example": 0
          }
        },
        "additionalProperties": false
      },
      "ASC.AuditTrail.Types.ActionType": {
        "oneOf": [
          {
            "enum": [
              "None",
              "Create",
              "Update",
              "Delete",
              "Link",
              "Unlink",
              "Attach",
              "Detach",
              "Send",
              "Import",
              "Export",
              "UpdateAccess",
              "Download",
              "Upload",
              "Copy",
              "Move",
              "Reassigns",
              "Follow",
              "Unfollow",
              "Logout"
            ],
            "type": "string",
            "description": "[None - None, Create - Create, Update - Update, Delete - Delete, Link - Link, Unlink - Unlink, Attach - Attach, Detach - Detach, Send - Send, Import - Import, Export - Export, UpdateAccess - Update access, Download - Download, Upload - Upload, Copy - Copy, Move - Move, Reassigns - Reassigns, Follow - Follow, Unfollow - Unfollow, Logout - Logout]",
            "example": "None"
          },
          {
            "enum": [
              0,
              1,
              2,
              3,
              4,
              5,
              6,
              7,
              8,
              9,
              10,
              11,
              12,
              13,
              14,
              15,
              16,
              17,
              18,
              19
            ],
            "type": "integer",
            "description": "[0 - None, 1 - Create, 2 - Update, 3 - Delete, 4 - Link, 5 - Unlink, 6 - Attach, 7 - Detach, 8 - Send, 9 - Import, 10 - Export, 11 - Update access, 12 - Download, 13 - Upload, 14 - Copy, 15 - Move, 16 - Reassigns, 17 - Follow, 18 - Unfollow, 19 - Logout]",
            "example": 0
          }
        ]
      },
      "ASC.AuditTrail.Types.EntryType": {
        "oneOf": [
          {
            "enum": [
              "None",
              "File",
              "Folder",
              "User",
              "Group",
              "Room",
              "Tag"
            ],
            "type": "string",
            "description": "[None - None, File - File, Folder - Folder, User - User, Group - Group, Room - Room, Tag - Tag]",
            "example": "None"
          },
          {
            "enum": [
              0,
              1,
              2,
              23,
              24,
              25,
              26
            ],
            "type": "integer",
            "description": "[0 - None, 1 - File, 2 - Folder, 23 - User, 24 - Group, 25 - Room, 26 - Tag]",
            "example": 0
          }
        ]
      },
      "ASC.AuditTrail.Types.ModuleType": {
        "oneOf": [
          {
            "enum": [
              "None",
              "Files",
              "Folders",
              "DocumentsSettings",
              "Companies",
              "Persons",
              "Contacts",
              "CrmTasks",
              "Opportunities",
              "Invoices",
              "Cases",
              "CommonCrmSettings",
              "ContactsSettings",
              "ContactTypes",
              "InvoiceSettings",
              "OtherCrmSettings",
              "Users",
              "Groups",
              "Projects",
              "Milestones",
              "Tasks",
              "Discussions",
              "TimeTracking",
              "Reports",
              "ProjectsSettings",
              "General",
              "Products",
              "Rooms"
            ],
            "type": "string",
            "description": "[None - None, Files - Files, Folders - Folders, DocumentsSettings - Documents settings, Companies - Companies, Persons - Persons, Contacts - Contacts, CrmTasks - Crm tasks, Opportunities - Opportunities, Invoices - Invoices, Cases - Cases, CommonCrmSettings - Common crm settings, ContactsSettings - Contacts settings, ContactTypes - Contact types, InvoiceSettings - Invoice settings, OtherCrmSettings - Other crm settings, Users - Users, Groups - Groups, Projects - Projects, Milestones - Milestones, Tasks - Tasks, Discussions - Discussions, TimeTracking - Time tracking, Reports - Reports, ProjectsSettings - Projects settings, General - General, Products - Products, Rooms - Rooms]",
            "example": "None"
          },
          {
            "enum": [
              0,
              1,
              2,
              3,
              4,
              5,
              6,
              7,
              8,
              9,
              10,
              11,
              12,
              13,
              14,
              15,
              16,
              17,
              18,
              19,
              20,
              21,
              22,
              23,
              24,
              25,
              26,
              27
            ],
            "type": "integer",
            "description": "[0 - None, 1 - Files, 2 - Folders, 3 - Documents settings, 4 - Companies, 5 - Persons, 6 - Contacts, 7 - Crm tasks, 8 - Opportunities, 9 - Invoices, 10 - Cases, 11 - Common crm settings, 12 - Contacts settings, 13 - Contact types, 14 - Invoice settings, 15 - Other crm settings, 16 - Users, 17 - Groups, 18 - Projects, 19 - Milestones, 20 - Tasks, 21 - Discussions, 22 - Time tracking, 23 - Reports, 24 - Projects settings, 25 - General, 26 - Products, 27 - Rooms]",
            "example": 0
          }
        ]
      },
      "ASC.AuditTrail.Types.ProductType": {
        "oneOf": [
          {
            "enum": [
              "None",
              "Documents",
              "Login",
              "Others",
              "People",
              "Settings"
            ],
            "type": "string",
            "description": "[None - None, Documents - Documents, Login - Login, Others - Others, People - People, Settings - Settings]",
            "example": "None"
          },
          {
            "enum": [
              0,
              2,
              3,
              4,
              5,
              7
            ],
            "type": "integer",
            "description": "[0 - None, 2 - Documents, 3 - Login, 4 - Others, 5 - People, 7 - Settings]",
            "example": 0
          }
        ]
      },
      "ASC.Core.Billing.Quota": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32",
            "example": 1372
          },
          "quantity": {
            "type": "integer",
            "format": "int32",
            "example": 1234
          }
        },
        "additionalProperties": false
      },
      "ASC.Core.Billing.Tariff": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32",
            "example": 103
          },
          "state": {
            "$ref": "#/components/schemas/ASC.Core.Billing.TariffState"
          },
          "dueDate": {
            "type": "string",
            "format": "date-time",
            "example": "2008-04-10T06:30:00.0000000+04:00"
          },
          "delayDueDate": {
            "type": "string",
            "format": "date-time",
            "example": "2008-04-10T06:30:00.0000000+04:00"
          },
          "licenseDate": {
            "type": "string",
            "format": "date-time",
            "example": "2008-04-10T06:30:00.0000000+04:00"
          },
          "customerId": {
            "type": "string",
            "nullable": true,
            "example": "some text"
          },
          "quotas": {
            "type": "array",
            "items": {},
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ASC.Core.Billing.TariffState": {
        "oneOf": [
          {
            "enum": [
              "Trial",
              "Paid",
              "Delay",
              "NotPaid"
            ],
            "type": "string",
            "description": "[Trial - Trial, Paid - Paid, Delay - Delay, NotPaid - Not paid]",
            "example": "Trial"
          },
          {
            "enum": [
              0,
              1,
              2,
              3
            ],
            "type": "integer",
            "description": "[0 - Trial, 1 - Paid, 2 - Delay, 3 - Not paid]",
            "example": 0
          }
        ]
      },
      "ASC.Core.Common.EF.FireBaseUser": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32",
            "example": 2370
          },
          "userId": {
            "type": "string",
            "format": "uuid",
            "example": "3d039fe7-9cec-41f6-8793-569b351e7daf"
          },
          "tenantId": {
            "type": "integer",
            "format": "int32",
            "example": 1234
          },
          "firebaseDeviceToken": {
            "type": "string",
            "nullable": true,
            "example": "some text"
          },
          "application": {
            "type": "string",
            "nullable": true,
            "example": "some text"
          },
          "isSubscribed": {
            "type": "boolean",
            "nullable": true,
            "example": true
          },
          "tenant": {
            "$ref": "#/components/schemas/ASC.Core.Common.EF.Model.DbTenant"
          }
        },
        "additionalProperties": false
      },
      "ASC.Core.Common.EF.Model.DbTenant": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32",
            "example": 2727
          },
          "name": {
            "type": "string",
            "nullable": true,
            "example": "Gwen Wisoky"
          },
          "alias": {
            "type": "string",
            "nullable": true,
            "example": "some text"
          },
          "mappedDomain": {
            "type": "string",
            "nullable": true,
            "example": "some text"
          },
          "version": {
            "type": "integer",
            "format": "int32",
            "example": 1234
          },
          "version_Changed": {
            "type": "string",
            "format": "date-time",
            "nullable": true,
            "example": "2008-04-10T06:30:00.0000000+04:00"
          },
          "versionChanged": {
            "type": "string",
            "format": "date-time",
            "example": "2008-04-10T06:30:00.0000000+04:00"
          },
          "language": {
            "type": "string",
            "nullable": true,
            "example": "some text"
          },
          "timeZone": {
            "type": "string",
            "nullable": true,
            "example": "some text"
          },
          "trustedDomainsRaw": {
            "type": "string",
            "nullable": true,
            "example": "some text"
          },
          "trustedDomainsEnabled": {
            "$ref": "#/components/schemas/ASC.Core.Tenants.TenantTrustedDomainsType"
          },
          "status": {
            "$ref": "#/components/schemas/ASC.Core.Tenants.TenantStatus"
          },
          "statusChanged": {
            "type": "string",
            "format": "date-time",
            "nullable": true,
            "example": "2008-04-10T06:30:00.0000000+04:00"
          },
          "statusChangedHack": {
            "type": "string",
            "format": "date-time",
            "example": "2008-04-10T06:30:00.0000000+04:00"
          },
          "creationDateTime": {
            "type": "string",
            "format": "date-time",
            "example": "2008-04-10T06:30:00.0000000+04:00"
          },
          "ownerId": {
            "type": "string",
            "format": "uuid",
            "nullable": true,
            "example": "75a5f745-f697-4418-b38d-0fe0d277e258"
          },
          "paymentId": {
            "type": "string",
            "nullable": true,
            "example": "some text"
          },
          "industry": {
            "$ref": "#/components/schemas/ASC.Core.Tenants.TenantIndustry"
          },
          "lastModified": {
            "type": "string",
            "format": "date-time",
            "example": "2008-04-10T06:30:00.0000000+04:00"
          },
          "spam": {
            "type": "boolean",
            "example": true
          },
          "calls": {
            "type": "boolean",
            "example": true
          },
          "partner": {
            "$ref": "#/components/schemas/ASC.Core.Common.EF.Model.DbTenantPartner"
          }
        },
        "additionalProperties": false
      },
      "ASC.Core.Common.EF.Model.DbTenantPartner": {
        "type": "object",
        "properties": {
          "tenantId": {
            "type": "integer",
            "format": "int32",
            "example": 1234
          },
          "partnerId": {
            "type": "string",
            "nullable": true,
            "example": "some text"
          },
          "affiliateId": {
            "type": "string",
            "nullable": true,
            "example": "some text"
          },
          "campaign": {
            "type": "string",
            "nullable": true,
            "example": "some text"
          }
        },
        "additionalProperties": false
      },
      "ASC.Core.Tenants.TenantAuditSettings": {
        "type": "object",
        "properties": {
          "loginHistoryLifeTime": {
            "type": "integer",
            "format": "int32",
            "example": 1234
          },
          "auditTrailLifeTime": {
            "type": "integer",
            "format": "int32",
            "example": 1234
          }
        },
        "additionalProperties": false
      },
      "ASC.Core.Tenants.TenantAuditSettingsWrapper": {
        "type": "object",
        "properties": {
          "settings": {
            "$ref": "#/components/schemas/ASC.Core.Tenants.TenantAuditSettings"
          }
        },
        "additionalProperties": false
      },
      "ASC.Core.Tenants.TenantDomainValidator": {
        "type": "object",
        "properties": {
          "regex": {
            "type": "string",
            "nullable": true,
            "readOnly": true,
            "example": "some text"
          },
          "minLength": {
            "type": "integer",
            "format": "int32",
            "readOnly": true,
            "example": 1234
          },
          "maxLength": {
            "type": "integer",
            "format": "int32",
            "readOnly": true,
            "example": 63
          }
        },
        "additionalProperties": false
      },
      "ASC.Core.Tenants.TenantIndustry": {
        "oneOf": [
          {
            "enum": [
              "Other",
              "Accounting",
              "AdvertisingMarketingPR",
              "Banking",
              "Consulting",
              "Design",
              "Education",
              "Environment",
              "FinancialServices",
              "HealthCare",
              "IT",
              "Legal",
              "Manufacturing",
              "PublicSector",
              "Publishing",
              "RetailSales",
              "Telecommunications"
            ],
            "type": "string",
            "description": "[Other - Other, Accounting - Accounting, AdvertisingMarketingPR - Advertising marketing PR, Banking - Banking, Consulting - Consulting, Design - Design, Education - Education, Environment - Environment, FinancialServices - Financial services, HealthCare - Health care, IT - IT, Legal - Legal, Manufacturing - Manufacturing, PublicSector - Public sector, Publishing - Publishing, RetailSales - Retail sales, Telecommunications - Telecommunications]",
            "example": "Other"
          },
          {
            "enum": [
              0,
              1,
              2,
              3,
              4,
              5,
              6,
              7,
              8,
              9,
              10,
              11,
              12,
              13,
              14,
              15,
              16
            ],
            "type": "integer",
            "description": "[0 - Other, 1 - Accounting, 2 - Advertising marketing PR, 3 - Banking, 4 - Consulting, 5 - Design, 6 - Education, 7 - Environment, 8 - Financial services, 9 - Health care, 10 - IT, 11 - Legal, 12 - Manufacturing, 13 - Public sector, 14 - Publishing, 15 - Retail sales, 16 - Telecommunications]",
            "example": 0
          }
        ]
      },
      "ASC.Core.Tenants.TenantQuota": {
        "type": "object",
        "properties": {
          "tenantId": {
            "type": "integer",
            "format": "int32",
            "example": 1234
          },
          "name": {
            "type": "string",
            "nullable": true,
            "example": "Default"
          },
          "price": {
            "type": "number",
            "format": "double",
            "example": 10
          },
          "priceCurrencySymbol": {
            "type": "string",
            "nullable": true,
            "example": "some text"
          },
          "productId": {
            "type": "string",
            "nullable": true,
            "example": "3320"
          },
          "visible": {
            "type": "boolean",
            "example": true
          },
          "features": {
            "type": "string",
            "nullable": true,
            "example": "some text"
          },
          "maxFileSize": {
            "type": "integer",
            "format": "int64",
            "example": 26214400
          },
          "maxTotalSize": {
            "type": "integer",
            "format": "int64",
            "example": 9223372036854776000
          },
          "countUser": {
            "type": "integer",
            "format": "int32",
            "example": 1234
          },
          "countRoomAdmin": {
            "type": "integer",
            "format": "int32",
            "example": 1234
          },
          "usersInRoom": {
            "type": "integer",
            "format": "int32",
            "example": 1234
          },
          "countRoom": {
            "type": "integer",
            "format": "int32",
            "example": 1234
          },
          "nonProfit": {
            "type": "boolean",
            "example": true
          },
          "trial": {
            "type": "boolean",
            "example": true
          },
          "free": {
            "type": "boolean",
            "example": true
          },
          "update": {
            "type": "boolean",
            "example": true
          },
          "audit": {
            "type": "boolean",
            "example": true
          },
          "docsEdition": {
            "type": "boolean",
            "example": true
          },
          "ldap": {
            "type": "boolean",
            "example": true
          },
          "sso": {
            "type": "boolean",
            "example": true
          },
          "statistic": {
            "type": "boolean",
            "example": true
          },
          "whiteLabel": {
            "type": "boolean",
            "example": true
          },
          "customization": {
            "type": "boolean",
            "example": true
          },
          "custom": {
            "type": "boolean",
            "example": true
          },
          "autoBackupRestore": {
            "type": "boolean",
            "example": true
          },
          "oauth": {
            "type": "boolean",
            "example": true
          },
          "contentSearch": {
            "type": "boolean",
            "example": true
          },
          "thirdParty": {
            "type": "boolean",
            "example": true
          }
        },
        "additionalProperties": false
      },
      "ASC.Core.Tenants.TenantQuotaSettings": {
        "type": "object",
        "properties": {
          "enableQuota": {
            "type": "boolean",
            "example": true
          },
          "quota": {
            "type": "integer",
            "format": "int64",
            "example": 1234
          },
          "lastRecalculateDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true,
            "example": "2008-04-10T06:30:00.0000000+04:00"
          }
        },
        "additionalProperties": false
      },
      "ASC.Core.Tenants.TenantRoomQuotaSettings": {
        "type": "object",
        "properties": {
          "enableQuota": {
            "type": "boolean",
            "example": true
          },
          "defaultQuota": {
            "type": "integer",
            "format": "int64",
            "example": 1234
          },
          "lastRecalculateDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true,
            "example": "2008-04-10T06:30:00.0000000+04:00"
          }
        },
        "additionalProperties": false
      },
      "ASC.Core.Tenants.TenantStatus": {
        "oneOf": [
          {
            "enum": [
              "Active",
              "Suspended",
              "RemovePending",
              "Transfering",
              "Restoring",
              "Migrating",
              "Encryption"
            ],
            "type": "string",
            "description": "[Active - Active, Suspended - Suspended, RemovePending - Remove pending, Transfering - Transfering, Restoring - Restoring, Migrating - Migrating, Encryption - Encryption]",
            "example": "Active"
          },
          {
            "enum": [
              0,
              1,
              2,
              3,
              4,
              5,
              6
            ],
            "type": "integer",
            "description": "[0 - Active, 1 - Suspended, 2 - Remove pending, 3 - Transfering, 4 - Restoring, 5 - Migrating, 6 - Encryption]",
            "example": 0
          }
        ]
      },
      "ASC.Core.Tenants.TenantTrustedDomainsType": {
        "oneOf": [
          {
            "enum": [
              "None",
              "Custom",
              "All"
            ],
            "type": "string",
            "description": "[None - None, Custom - Custom, All - All]",
            "example": "None"
          },
          {
            "enum": [
              0,
              1,
              2
            ],
            "type": "integer",
            "description": "[0 - None, 1 - Custom, 2 - All]",
            "example": 0
          }
        ]
      },
      "ASC.Core.Users.EmployeeActivationStatus": {
        "oneOf": [
          {
            "enum": [
              "NotActivated",
              "Activated",
              "Pending",
              "AutoGenerated"
            ],
            "type": "string",
            "description": "[NotActivated - Not activated, Activated - Activated, Pending - Pending, AutoGenerated - Auto generated]",
            "example": "NotActivated"
          },
          {
            "enum": [
              0,
              1,
              2,
              4
            ],
            "type": "integer",
            "description": "[0 - Not activated, 1 - Activated, 2 - Pending, 4 - Auto generated]",
            "example": 0
          }
        ]
      },
      "ASC.Core.Users.EmployeeStatus": {
        "oneOf": [
          {
            "enum": [
              "Active",
              "Terminated",
              "Pending",
              "Default",
              "All"
            ],
            "type": "string",
            "description": "[Active - Active, Terminated - Terminated, Pending - Pending, Default - Default, All - All]",
            "example": "Active"
          },
          {
            "enum": [
              1,
              2,
              4,
              5,
              7
            ],
            "type": "integer",
            "description": "[1 - Active, 2 - Terminated, 4 - Pending, 5 - Default, 7 - All]",
            "example": 1
          }
        ]
      },
      "ASC.Core.Users.EmployeeType": {
        "oneOf": [
          {
            "enum": [
              "All",
              "RoomAdmin",
              "User",
              "DocSpaceAdmin",
              "Collaborator"
            ],
            "type": "string",
            "description": "[All - All, RoomAdmin - Room admin, User - User, DocSpaceAdmin - DocSpace admin, Collaborator - Collaborator]",
            "example": "All"
          },
          {
            "enum": [
              0,
              1,
              2,
              3,
              4
            ],
            "type": "integer",
            "description": "[0 - All, 1 - Room admin, 2 - User, 3 - DocSpace admin, 4 - Collaborator]",
            "example": 0
          }
        ]
      },
      "ASC.Core.Users.MobilePhoneActivationStatus": {
        "oneOf": [
          {
            "enum": [
              "NotActivated",
              "Activated"
            ],
            "type": "string",
            "description": "[NotActivated - Not activated, Activated - Activated]",
            "example": "NotActivated"
          },
          {
            "enum": [
              0,
              1
            ],
            "type": "integer",
            "description": "[0 - Not activated, 1 - Activated]",
            "example": 0
          }
        ]
      },
      "ASC.Core.Users.UserInfo": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid",
            "example": "f31553bd-6fa1-4f8c-9b02-b87aaa016642"
          },
          "firstName": {
            "type": "string",
            "nullable": true,
            "example": "Della"
          },
          "lastName": {
            "type": "string",
            "nullable": true,
            "example": "Parisian"
          },
          "userName": {
            "type": "string",
            "nullable": true,
            "example": "some text"
          },
          "birthDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true,
            "example": "2008-04-10T06:30:00.0000000+04:00"
          },
          "sex": {
            "type": "boolean",
            "nullable": true,
            "example": true
          },
          "status": {
            "$ref": "#/components/schemas/ASC.Core.Users.EmployeeStatus"
          },
          "activationStatus": {
            "$ref": "#/components/schemas/ASC.Core.Users.EmployeeActivationStatus"
          },
          "terminatedDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true,
            "example": "2008-04-10T06:30:00.0000000+04:00"
          },
          "title": {
            "type": "string",
            "nullable": true,
            "example": "task_force_refined_grey"
          },
          "workFromDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true,
            "example": "2008-04-10T06:30:00.0000000+04:00"
          },
          "email": {
            "type": "string",
            "format": "email",
            "nullable": true,
            "example": "Shawn_Schmitt10@yahoo.com"
          },
          "contacts": {
            "type": "string",
            "nullable": true,
            "example": "some text"
          },
          "contactsList": {
            "type": "array",
            "items": {},
            "nullable": true,
            "example": [
              "some text"
            ]
          },
          "location": {
            "type": "string",
            "nullable": true,
            "example": "3039 Stoltenberg Locks, Port Imani, Mozambique"
          },
          "notes": {
            "type": "string",
            "nullable": true,
            "example": "some text"
          },
          "removed": {
            "type": "boolean",
            "example": true
          },
          "lastModified": {
            "type": "string",
            "format": "date-time",
            "example": "2008-04-10T06:30:00.0000000+04:00"
          },
          "tenantId": {
            "type": "integer",
            "format": "int32",
            "example": 1234
          },
          "isActive": {
            "type": "boolean",
            "readOnly": true,
            "example": true
          },
          "cultureName": {
            "type": "string",
            "nullable": true,
            "example": "some text"
          },
          "mobilePhone": {
            "type": "string",
            "nullable": true,
            "example": "some text"
          },
          "mobilePhoneActivationStatus": {
            "$ref": "#/components/schemas/ASC.Core.Users.MobilePhoneActivationStatus"
          },
          "sid": {
            "type": "string",
            "nullable": true,
            "example": "some text"
          },
          "ldapQouta": {
            "type": "integer",
            "format": "int64",
            "example": 1234
          },
          "ssoNameId": {
            "type": "string",
            "nullable": true,
            "example": "some text"
          },
          "ssoSessionId": {
            "type": "string",
            "nullable": true,
            "example": "some text"
          },
          "createDate": {
            "type": "string",
            "format": "date-time",
            "example": "2008-04-10T06:30:00.0000000+04:00"
          },
          "checkActivation": {
            "type": "boolean",
            "readOnly": true,
            "example": true
          }
        },
        "additionalProperties": false
      },
      "ASC.Data.Storage.Configuration.CdnStorageSettings": {
        "type": "object",
        "properties": {
          "module": {
            "type": "string",
            "nullable": true,
            "example": "some text"
          },
          "props": {
            "type": "object",
            "additionalProperties": {
              "type": "string",
              "nullable": true
            },
            "nullable": true,
            "example": [
              {
                "key": "some text",
                "value": "some text"
              }
            ]
          },
          "switch": {
            "$ref": "#/components/schemas/System.Func.ASC.Core.Common.Configuration.DataStoreConsumer.ASC.Core.Common.Configuration.DataStoreConsumer"
          }
        },
        "additionalProperties": false
      },
      "ASC.Data.Storage.Configuration.StorageSettings": {
        "type": "object",
        "properties": {
          "module": {
            "type": "string",
            "nullable": true,
            "example": "some text"
          },
          "props": {
            "type": "object",
            "additionalProperties": {
              "type": "string",
              "nullable": true
            },
            "nullable": true,
            "example": [
              {
                "key": "some text",
                "value": "some text"
              }
            ]
          },
          "switch": {
            "$ref": "#/components/schemas/System.Func.ASC.Core.Common.Configuration.DataStoreConsumer.ASC.Core.Common.Configuration.DataStoreConsumer"
          }
        },
        "additionalProperties": false
      },
      "ASC.IPSecurity.IPRestriction": {
        "type": "object",
        "properties": {
          "ip": {
            "type": "string",
            "nullable": true,
            "example": "some text"
          },
          "forAdmin": {
            "type": "boolean",
            "example": true
          },
          "id": {
            "type": "integer",
            "format": "int32",
            "example": 8184
          },
          "tenantId": {
            "type": "integer",
            "format": "int32",
            "example": 1234
          }
        },
        "additionalProperties": false
      },
      "ASC.IPSecurity.IPRestrictionsSettings": {
        "type": "object",
        "properties": {
          "enable": {
            "type": "boolean",
            "example": true
          }
        },
        "additionalProperties": false
      },
      "ASC.IPSecurity.IpRestrictionBase": {
        "type": "object",
        "properties": {
          "ip": {
            "type": "string",
            "nullable": true,
            "example": "some text"
          },
          "forAdmin": {
            "type": "boolean",
            "example": true
          }
        },
        "additionalProperties": false
      },
      "ASC.MessagingSystem.Core.MessageAction": {
        "oneOf": [
          {
            "enum": [
              "LoginSuccess",
              "LoginSuccessViaSocialAccount",
              "LoginFailInvalidCombination",
              "LoginFailSocialAccountNotFound",
              "LoginFailDisabledProfile",
              "LoginFail",
              "Logout",
              "LoginSuccessViaSms",
              "LoginFailViaSms",
              "LoginFailIpSecurity",
              "LoginSuccessViaApi",
              "LoginSuccessViaSocialApp",
              "LoginSuccessViaApiSms",
              "LoginFailViaApi",
              "LoginFailViaApiSms",
              "LoginSuccessViaSSO",
              "SessionStarted",
              "SessionCompleted",
              "LoginFailViaSSO",
              "LoginSuccessViaApiSocialAccount",
              "LoginFailViaApiSocialAccount",
              "LoginSuccesViaTfaApp",
              "LoginFailViaTfaApp",
              "LoginFailBruteForce",
              "LoginSuccessViaApiTfa",
              "LoginFailViaApiTfa",
              "LoginFailRecaptcha",
              "UserCreated",
              "GuestCreated",
              "UserCreatedViaInvite",
              "GuestCreatedViaInvite",
              "UserActivated",
              "GuestActivated",
              "UserUpdated",
              "UserUpdatedLanguage",
              "UserAddedAvatar",
              "UserDeletedAvatar",
              "UserUpdatedAvatarThumbnails",
              "UserLinkedSocialAccount",
              "UserUnlinkedSocialAccount",
              "UserSentActivationInstructions",
              "UserSentEmailChangeInstructions",
              "UserSentPasswordChangeInstructions",
              "UserSentDeleteInstructions",
              "UserUpdatedPassword",
              "UserDeleted",
              "UsersUpdatedType",
              "UsersUpdatedStatus",
              "UsersSentActivationInstructions",
              "UsersDeleted",
              "SentInviteInstructions",
              "UserImported",
              "GuestImported",
              "GroupCreated",
              "GroupUpdated",
              "GroupDeleted",
              "UserUpdatedMobileNumber",
              "UserDataReassigns",
              "UserDataRemoving",
              "UserConnectedTfaApp",
              "UserDisconnectedTfaApp",
              "UserLogoutActiveConnections",
              "UserLogoutActiveConnection",
              "UserLogoutActiveConnectionsForUser",
              "SendJoinInvite",
              "FileCreated",
              "FileRenamed",
              "FileUpdated",
              "FileCreatedVersion",
              "FileDeletedVersion",
              "FileUpdatedRevisionComment",
              "FileLocked",
              "FileUnlocked",
              "FileUpdatedAccess",
              "FileDownloaded",
              "FileDownloadedAs",
              "FileUploaded",
              "FileImported",
              "FileCopied",
              "FileCopiedWithOverwriting",
              "FileMoved",
              "FileMovedWithOverwriting",
              "FileMovedToTrash",
              "FileDeleted",
              "FolderCreated",
              "FolderRenamed",
              "FolderUpdatedAccess",
              "FolderCopied",
              "FolderCopiedWithOverwriting",
              "FolderMoved",
              "FolderMovedWithOverwriting",
              "FolderMovedToTrash",
              "FolderDeleted",
              "ThirdPartyCreated",
              "ThirdPartyUpdated",
              "ThirdPartyDeleted",
              "DocumentsThirdPartySettingsUpdated",
              "DocumentsOverwritingSettingsUpdated",
              "DocumentsUploadingFormatsSettingsUpdated",
              "UserFileUpdated",
              "FileConverted",
              "FileSendAccessLink",
              "DocumentServiceLocationSetting",
              "AuthorizationKeysSetting",
              "FullTextSearchSetting",
              "StartTransferSetting",
              "StartBackupSetting",
              "LicenseKeyUploaded",
              "FileChangeOwner",
              "FileRestoreVersion",
              "DocumentSendToSign",
              "DocumentSignComplete",
              "UserUpdatedEmail",
              "DocumentsStoreForcesave",
              "DocumentsForcesave",
              "StartStorageEncryption",
              "PrivacyRoomEnable",
              "PrivacyRoomDisable",
              "StartStorageDecryption",
              "FileOpenedForChange",
              "FileMarkedAsFavorite",
              "FileRemovedFromFavorite",
              "FolderDownloaded",
              "FileRemovedFromList",
              "FolderRemovedFromList",
              "FileExternalLinkAccessUpdated",
              "TrashEmptied",
              "FileRevisionDownloaded",
              "FileMarkedAsRead",
              "FileReaded",
              "FolderMarkedAsRead",
              "FolderUpdatedAccessFor",
              "FileUpdatedAccessFor",
              "DocumentsExternalShareSettingsUpdated",
              "RoomCreated",
              "RoomRenamed",
              "RoomArchived",
              "RoomUnarchived",
              "RoomDeleted",
              "RoomUpdateAccessForUser",
              "TagCreated",
              "TagsDeleted",
              "AddedRoomTags",
              "DeletedRoomTags",
              "RoomLogoCreated",
              "RoomLogoDeleted",
              "RoomInvitationLinkUpdated",
              "DocumentsKeepNewFileNameSettingsUpdated",
              "RoomRemoveUser",
              "RoomCreateUser",
              "RoomInvitationLinkCreated",
              "RoomInvitationLinkDeleted",
              "RoomExternalLinkCreated",
              "RoomExternalLinkUpdated",
              "RoomExternalLinkDeleted",
              "FileExternalLinkCreated",
              "FileExternalLinkUpdated",
              "FileExternalLinkDeleted",
              "RoomGroupAdded",
              "RoomUpdateAccessForGroup",
              "RoomGroupRemove",
              "RoomExternalLinkRevoked",
              "RoomExternalLinkRenamed",
              "FileUploadedWithOverwriting",
              "RoomCopied",
              "LanguageSettingsUpdated",
              "TimeZoneSettingsUpdated",
              "DnsSettingsUpdated",
              "TrustedMailDomainSettingsUpdated",
              "PasswordStrengthSettingsUpdated",
              "TwoFactorAuthenticationSettingsUpdated",
              "AdministratorMessageSettingsUpdated",
              "DefaultStartPageSettingsUpdated",
              "ProductsListUpdated",
              "AdministratorAdded",
              "AdministratorOpenedFullAccess",
              "AdministratorDeleted",
              "UsersOpenedProductAccess",
              "GroupsOpenedProductAccess",
              "ProductAccessOpened",
              "ProductAccessRestricted",
              "ProductAddedAdministrator",
              "ProductDeletedAdministrator",
              "GreetingSettingsUpdated",
              "TeamTemplateChanged",
              "ColorThemeChanged",
              "OwnerSentChangeOwnerInstructions",
              "OwnerUpdated",
              "OwnerSentPortalDeactivationInstructions",
              "OwnerSentPortalDeleteInstructions",
              "PortalDeactivated",
              "PortalDeleted",
              "LoginHistoryReportDownloaded",
              "AuditTrailReportDownloaded",
              "SSOEnabled",
              "SSODisabled",
              "PortalAccessSettingsUpdated",
              "CookieSettingsUpdated",
              "MailServiceSettingsUpdated",
              "CustomNavigationSettingsUpdated",
              "AuditSettingsUpdated",
              "TwoFactorAuthenticationDisabled",
              "TwoFactorAuthenticationEnabledBySms",
              "TwoFactorAuthenticationEnabledByTfaApp",
              "PortalRenamed",
              "QuotaPerRoomChanged",
              "QuotaPerRoomDisabled",
              "QuotaPerUserChanged",
              "QuotaPerUserDisabled",
              "QuotaPerPortalChanged",
              "QuotaPerPortalDisabled",
              "FormSubmit",
              "FormOpenedForFilling",
              "CustomQuotaPerRoomDefault",
              "CustomQuotaPerRoomChanged",
              "CustomQuotaPerRoomDisabled",
              "CustomQuotaPerUserDefault",
              "CustomQuotaPerUserChanged",
              "CustomQuotaPerUserDisabled",
              "ContactAdminMailSent",
              "RoomInviteLinkUsed",
              "UserCreatedAndAddedToRoom",
              "GuestCreatedAndAddedToRoom",
              "ContactSalesMailSent",
              "None"
            ],
            "type": "string",
            "description": "[LoginSuccess - Login success, LoginSuccessViaSocialAccount - Login success via social account, LoginFailInvalidCombination - Login fail invalid combination, LoginFailSocialAccountNotFound - Login fail social account not found, LoginFailDisabledProfile - Login fail disabled profile, LoginFail - Login fail, Logout - Logout, LoginSuccessViaSms - Login success via sms, LoginFailViaSms - Login fail via sms, LoginFailIpSecurity - Login fail ip security, LoginSuccessViaApi - Login success via api, LoginSuccessViaSocialApp - Login success via social app, LoginSuccessViaApiSms - Login success via api sms, LoginFailViaApi - Login fail via api, LoginFailViaApiSms - Login fail via api sms, LoginSuccessViaSSO - Login success via SSO, SessionStarted - Session started, SessionCompleted - Session completed, LoginFailViaSSO - Login fail via SSO, LoginSuccessViaApiSocialAccount - Login success via api social account, LoginFailViaApiSocialAccount - Login fail via api social account, LoginSuccesViaTfaApp - Login succes via tfa app, LoginFailViaTfaApp - Login fail via Tfa app, LoginFailBruteForce - Login fail brute force, LoginSuccessViaApiTfa - Login success via api tfa, LoginFailViaApiTfa - Login fail via api tfa, LoginFailRecaptcha - Login fail recaptcha, UserCreated - User created, GuestCreated - Guest created, UserCreatedViaInvite - User created via invite, GuestCreatedViaInvite - Guest created via invite, UserActivated - User activated, GuestActivated - Guest activated, UserUpdated - User updated, UserUpdatedLanguage - User updated language, UserAddedAvatar - User added avatar, UserDeletedAvatar - User deleted avatar, UserUpdatedAvatarThumbnails - User updated avatar thumbnails, UserLinkedSocialAccount - User linked social account, UserUnlinkedSocialAccount - User unlinked social account, UserSentActivationInstructions - User sent activation instructions, UserSentEmailChangeInstructions - User sent email change instructions, UserSentPasswordChangeInstructions - User sent password change instructions, UserSentDeleteInstructions - User sent delete instructions, UserUpdatedPassword - User updated password, UserDeleted - User deleted, UsersUpdatedType - Users updated type, UsersUpdatedStatus - Users updated status, UsersSentActivationInstructions - Users sent activation instructions, UsersDeleted - Users deleted, SentInviteInstructions - Sent invite instructions, UserImported - User imported, GuestImported - Guest imported, GroupCreated - Group created, GroupUpdated - Group updated, GroupDeleted - Group deleted, UserUpdatedMobileNumber - User updated mobile number, UserDataReassigns - User data reassigns, UserDataRemoving - User data removing, UserConnectedTfaApp - User connected tfa app, UserDisconnectedTfaApp - User disconnected tfa app, UserLogoutActiveConnections - User logout active connections, UserLogoutActiveConnection - User logout active connection, UserLogoutActiveConnectionsForUser - User logout active connections for user, SendJoinInvite - Send join invite, FileCreated - File created, FileRenamed - File renamed, FileUpdated - File updated, FileCreatedVersion - File created version, FileDeletedVersion - File deleted version, FileUpdatedRevisionComment - File updated revision comment, FileLocked - File locked, FileUnlocked - File unlocked, FileUpdatedAccess - File updated access, FileDownloaded - File downloaded, FileDownloadedAs - File downloaded as, FileUploaded - File uploaded, FileImported - File imported, FileCopied - File copied, FileCopiedWithOverwriting - File copied with overwriting, FileMoved - File moved, FileMovedWithOverwriting - File moved with overwriting, FileMovedToTrash - File moved to trash, FileDeleted - File deleted, FolderCreated - Folder created, FolderRenamed - Folder renamed, FolderUpdatedAccess - Folder updated access, FolderCopied - Folder copied, FolderCopiedWithOverwriting - Folder copied with overwriting, FolderMoved - Folder moved, FolderMovedWithOverwriting - Folder moved with overwriting, FolderMovedToTrash - Folder moved to trash, FolderDeleted - Folder deleted, ThirdPartyCreated - ThirdParty created, ThirdPartyUpdated - ThirdParty updated, ThirdPartyDeleted - ThirdParty deleted, DocumentsThirdPartySettingsUpdated - Documents ThirdParty settings updated, DocumentsOverwritingSettingsUpdated - Documents overwriting settings updated, DocumentsUploadingFormatsSettingsUpdated - Documents uploading formats settings updated, UserFileUpdated - User file updated, FileConverted - File converted, FileSendAccessLink - File send access link, DocumentServiceLocationSetting - Document service location setting, AuthorizationKeysSetting - Authorization keys setting, FullTextSearchSetting - Full text search setting, StartTransferSetting - Start transfer setting, StartBackupSetting - Start backup setting, LicenseKeyUploaded - License key uploaded, FileChangeOwner - File change owner, FileRestoreVersion - File restore version, DocumentSendToSign - Document send to sign, DocumentSignComplete - Document sign complete, UserUpdatedEmail - User updated email, DocumentsStoreForcesave - Documents store forcesave, DocumentsForcesave - Documents forcesave, StartStorageEncryption - Start storage encryption, PrivacyRoomEnable - Privacy room enable, PrivacyRoomDisable - Privacy room disable, StartStorageDecryption - Start storage decryption, FileOpenedForChange - File opened for change, FileMarkedAsFavorite - File marked as favorite, FileRemovedFromFavorite - File removed from favorite, FolderDownloaded - Folder downloaded, FileRemovedFromList - File removed from list, FolderRemovedFromList - Folder removed from list, FileExternalLinkAccessUpdated - File external link access updated, TrashEmptied - Trash emptied, FileRevisionDownloaded - File revision downloaded, FileMarkedAsRead - File marked as read, FileReaded - File readed, FolderMarkedAsRead - Folder marked as read, FolderUpdatedAccessFor - Folder updated access for, FileUpdatedAccessFor - File updated access for, DocumentsExternalShareSettingsUpdated - Documents external share settings updated, RoomCreated - Room created, RoomRenamed - Room renamed, RoomArchived - Room archived, RoomUnarchived - Room unarchived, RoomDeleted - Room deleted, RoomUpdateAccessForUser - Room update access for user, TagCreated - Tag created, TagsDeleted - Tags deleted, AddedRoomTags - Added room tags, DeletedRoomTags - Deleted room tags, RoomLogoCreated - Room logo created, RoomLogoDeleted - Room logo deleted, RoomInvitationLinkUpdated - Room invitation link updated, DocumentsKeepNewFileNameSettingsUpdated - Documents keep new file name settings updated, RoomRemoveUser - Room remove user, RoomCreateUser - Room create user, RoomInvitationLinkCreated - Room invitation link created, RoomInvitationLinkDeleted - Room invitation link deleted, RoomExternalLinkCreated - Room external link created, RoomExternalLinkUpdated - Room external link updated, RoomExternalLinkDeleted - Room external link deleted, FileExternalLinkCreated - File external link created, FileExternalLinkUpdated - File external link updated, FileExternalLinkDeleted - File external link deleted, RoomGroupAdded - Room group added, RoomUpdateAccessForGroup - Room update access for group, RoomGroupRemove - Room group remove, RoomExternalLinkRevoked - Room external link revoked, RoomExternalLinkRenamed - Room external link renamed, FileUploadedWithOverwriting - File uploaded with overwriting, RoomCopied - Room copied, LanguageSettingsUpdated - Language settings updated, TimeZoneSettingsUpdated - Time zone settings updated, DnsSettingsUpdated - Dns settings updated, TrustedMailDomainSettingsUpdated - Trusted mail domain settings updated, PasswordStrengthSettingsUpdated - Password strength settings updated, TwoFactorAuthenticationSettingsUpdated - Two factor authentication settings updated, AdministratorMessageSettingsUpdated - Administrator message settings updated, DefaultStartPageSettingsUpdated - Default start page settings updated, ProductsListUpdated - Products list updated, AdministratorAdded - Administrator added, AdministratorOpenedFullAccess - Administrator opened full access, AdministratorDeleted - Administrator deleted, UsersOpenedProductAccess - Users opened product access, GroupsOpenedProductAccess - Groups opened product access, ProductAccessOpened - Product access opened, ProductAccessRestricted - Product access restricted, ProductAddedAdministrator - Product added administrator, ProductDeletedAdministrator - Product deleted administrator, GreetingSettingsUpdated - Greeting settings updated, TeamTemplateChanged - Team template changed, ColorThemeChanged - Color theme changed, OwnerSentChangeOwnerInstructions - Owner sent change owner instructions, OwnerUpdated - Owner updated, OwnerSentPortalDeactivationInstructions - Owner sent portal deactivation instructions, OwnerSentPortalDeleteInstructions - Owner sent portal delete instructions, PortalDeactivated - Portal deactivated, PortalDeleted - Portal deleted, LoginHistoryReportDownloaded - Login history report downloaded, AuditTrailReportDownloaded - Audit trail report downloaded, SSOEnabled - SSO enabled, SSODisabled - SSO disabled, PortalAccessSettingsUpdated - Portal access settings updated, CookieSettingsUpdated - Cookie settings updated, MailServiceSettingsUpdated - Mail service settings updated, CustomNavigationSettingsUpdated - Custom navigation settings updated, AuditSettingsUpdated - Audit settings updated, TwoFactorAuthenticationDisabled - Two factor authentication disabled, TwoFactorAuthenticationEnabledBySms - Two factor authentication enabled by sms, TwoFactorAuthenticationEnabledByTfaApp - Two factor authentication enabled by tfa app, PortalRenamed - Portal renamed, QuotaPerRoomChanged - Quota per room changed, QuotaPerRoomDisabled - Quota per room disabled, QuotaPerUserChanged - Quota per user changed, QuotaPerUserDisabled - Quota per user disabled, QuotaPerPortalChanged - Quota per portal changed, QuotaPerPortalDisabled - Quota per portal disabled, FormSubmit - Form submit, FormOpenedForFilling - Form opened for filling, CustomQuotaPerRoomDefault - Custom quota per room default, CustomQuotaPerRoomChanged - Custom quota per room changed, CustomQuotaPerRoomDisabled - Custom quota per room disabled, CustomQuotaPerUserDefault - Custom quota per user default, CustomQuotaPerUserChanged - Custom quota per user changed, CustomQuotaPerUserDisabled - Custom quota per user disabled, ContactAdminMailSent - Contact admin mail sent, RoomInviteLinkUsed - Room invite link used, UserCreatedAndAddedToRoom - User created and added to room, GuestCreatedAndAddedToRoom - Guest created and added to room, ContactSalesMailSent - Contact sales mail sent, None - None]",
            "example": "LoginSuccess"
          },
          {
            "enum": [
              1000,
              1001,
              1002,
              1003,
              1004,
              1005,
              1006,
              1007,
              1008,
              1009,
              1010,
              1011,
              1012,
              1013,
              1014,
              1015,
              1016,
              1017,
              1018,
              1019,
              1020,
              1021,
              1022,
              1023,
              1024,
              1025,
              1026,
              4000,
              4001,
              4002,
              4003,
              4004,
              4005,
              4006,
              4007,
              4008,
              4009,
              4010,
              4011,
              4012,
              4013,
              4014,
              4015,
              4016,
              4017,
              4018,
              4019,
              4020,
              4021,
              4022,
              4023,
              4024,
              4025,
              4026,
              4027,
              4028,
              4029,
              4030,
              4031,
              4032,
              4033,
              4034,
              4035,
              4036,
              4037,
              5000,
              5001,
              5002,
              5003,
              5004,
              5005,
              5006,
              5007,
              5008,
              5009,
              5010,
              5011,
              5012,
              5013,
              5014,
              5015,
              5016,
              5017,
              5018,
              5019,
              5020,
              5021,
              5022,
              5023,
              5024,
              5025,
              5026,
              5027,
              5028,
              5029,
              5030,
              5031,
              5032,
              5033,
              5034,
              5035,
              5036,
              5037,
              5038,
              5039,
              5040,
              5041,
              5042,
              5043,
              5044,
              5045,
              5046,
              5047,
              5048,
              5049,
              5050,
              5051,
              5052,
              5053,
              5054,
              5055,
              5056,
              5057,
              5058,
              5059,
              5060,
              5061,
              5062,
              5063,
              5064,
              5065,
              5066,
              5068,
              5069,
              5070,
              5071,
              5072,
              5073,
              5074,
              5075,
              5076,
              5077,
              5078,
              5079,
              5080,
              5081,
              5082,
              5083,
              5084,
              5085,
              5086,
              5087,
              5088,
              5089,
              5090,
              5091,
              5092,
              5093,
              5094,
              5095,
              5096,
              5097,
              5098,
              5099,
              5100,
              6000,
              6001,
              6002,
              6003,
              6004,
              6005,
              6006,
              6007,
              6008,
              6009,
              6010,
              6011,
              6012,
              6013,
              6014,
              6015,
              6016,
              6017,
              6018,
              6019,
              6020,
              6021,
              6022,
              6023,
              6024,
              6025,
              6026,
              6027,
              6028,
              6029,
              6030,
              6031,
              6032,
              6033,
              6034,
              6035,
              6036,
              6037,
              6038,
              6039,
              6040,
              6041,
              6042,
              6043,
              6044,
              6045,
              6046,
              6047,
              6048,
              6049,
              6050,
              6051,
              6052,
              6053,
              7000,
              7001,
              7002,
              7003,
              7004,
              -1
            ],
            "type": "integer",
            "description": "[1000 - Login success, 1001 - Login success via social account, 1002 - Login fail invalid combination, 1003 - Login fail social account not found, 1004 - Login fail disabled profile, 1005 - Login fail, 1006 - Logout, 1007 - Login success via sms, 1008 - Login fail via sms, 1009 - Login fail ip security, 1010 - Login success via api, 1011 - Login success via social app, 1012 - Login success via api sms, 1013 - Login fail via api, 1014 - Login fail via api sms, 1015 - Login success via SSO, 1016 - Session started, 1017 - Session completed, 1018 - Login fail via SSO, 1019 - Login success via api social account, 1020 - Login fail via api social account, 1021 - Login succes via tfa app, 1022 - Login fail via Tfa app, 1023 - Login fail brute force, 1024 - Login success via api tfa, 1025 - Login fail via api tfa, 1026 - Login fail recaptcha, 4000 - User created, 4001 - Guest created, 4002 - User created via invite, 4003 - Guest created via invite, 4004 - User activated, 4005 - Guest activated, 4006 - User updated, 4007 - User updated language, 4008 - User added avatar, 4009 - User deleted avatar, 4010 - User updated avatar thumbnails, 4011 - User linked social account, 4012 - User unlinked social account, 4013 - User sent activation instructions, 4014 - User sent email change instructions, 4015 - User sent password change instructions, 4016 - User sent delete instructions, 4017 - User updated password, 4018 - User deleted, 4019 - Users updated type, 4020 - Users updated status, 4021 - Users sent activation instructions, 4022 - Users deleted, 4023 - Sent invite instructions, 4024 - User imported, 4025 - Guest imported, 4026 - Group created, 4027 - Group updated, 4028 - Group deleted, 4029 - User updated mobile number, 4030 - User data reassigns, 4031 - User data removing, 4032 - User connected tfa app, 4033 - User disconnected tfa app, 4034 - User logout active connections, 4035 - User logout active connection, 4036 - User logout active connections for user, 4037 - Send join invite, 5000 - File created, 5001 - File renamed, 5002 - File updated, 5003 - File created version, 5004 - File deleted version, 5005 - File updated revision comment, 5006 - File locked, 5007 - File unlocked, 5008 - File updated access, 5009 - File downloaded, 5010 - File downloaded as, 5011 - File uploaded, 5012 - File imported, 5013 - File copied, 5014 - File copied with overwriting, 5015 - File moved, 5016 - File moved with overwriting, 5017 - File moved to trash, 5018 - File deleted, 5019 - Folder created, 5020 - Folder renamed, 5021 - Folder updated access, 5022 - Folder copied, 5023 - Folder copied with overwriting, 5024 - Folder moved, 5025 - Folder moved with overwriting, 5026 - Folder moved to trash, 5027 - Folder deleted, 5028 - ThirdParty created, 5029 - ThirdParty updated, 5030 - ThirdParty deleted, 5031 - Documents ThirdParty settings updated, 5032 - Documents overwriting settings updated, 5033 - Documents uploading formats settings updated, 5034 - User file updated, 5035 - File converted, 5036 - File send access link, 5037 - Document service location setting, 5038 - Authorization keys setting, 5039 - Full text search setting, 5040 - Start transfer setting, 5041 - Start backup setting, 5042 - License key uploaded, 5043 - File change owner, 5044 - File restore version, 5045 - Document send to sign, 5046 - Document sign complete, 5047 - User updated email, 5048 - Documents store forcesave, 5049 - Documents forcesave, 5050 - Start storage encryption, 5051 - Privacy room enable, 5052 - Privacy room disable, 5053 - Start storage decryption, 5054 - File opened for change, 5055 - File marked as favorite, 5056 - File removed from favorite, 5057 - Folder downloaded, 5058 - File removed from list, 5059 - Folder removed from list, 5060 - File external link access updated, 5061 - Trash emptied, 5062 - File revision downloaded, 5063 - File marked as read, 5064 - File readed, 5065 - Folder marked as read, 5066 - Folder updated access for, 5068 - File updated access for, 5069 - Documents external share settings updated, 5070 - Room created, 5071 - Room renamed, 5072 - Room archived, 5073 - Room unarchived, 5074 - Room deleted, 5075 - Room update access for user, 5076 - Tag created, 5077 - Tags deleted, 5078 - Added room tags, 5079 - Deleted room tags, 5080 - Room logo created, 5081 - Room logo deleted, 5082 - Room invitation link updated, 5083 - Documents keep new file name settings updated, 5084 - Room remove user, 5085 - Room create user, 5086 - Room invitation link created, 5087 - Room invitation link deleted, 5088 - Room external link created, 5089 - Room external link updated, 5090 - Room external link deleted, 5091 - File external link created, 5092 - File external link updated, 5093 - File external link deleted, 5094 - Room group added, 5095 - Room update access for group, 5096 - Room group remove, 5097 - Room external link revoked, 5098 - Room external link renamed, 5099 - File uploaded with overwriting, 5100 - Room copied, 6000 - Language settings updated, 6001 - Time zone settings updated, 6002 - Dns settings updated, 6003 - Trusted mail domain settings updated, 6004 - Password strength settings updated, 6005 - Two factor authentication settings updated, 6006 - Administrator message settings updated, 6007 - Default start page settings updated, 6008 - Products list updated, 6009 - Administrator added, 6010 - Administrator opened full access, 6011 - Administrator deleted, 6012 - Users opened product access, 6013 - Groups opened product access, 6014 - Product access opened, 6015 - Product access restricted, 6016 - Product added administrator, 6017 - Product deleted administrator, 6018 - Greeting settings updated, 6019 - Team template changed, 6020 - Color theme changed, 6021 - Owner sent change owner instructions, 6022 - Owner updated, 6023 - Owner sent portal deactivation instructions, 6024 - Owner sent portal delete instructions, 6025 - Portal deactivated, 6026 - Portal deleted, 6027 - Login history report downloaded, 6028 - Audit trail report downloaded, 6029 - SSO enabled, 6030 - SSO disabled, 6031 - Portal access settings updated, 6032 - Cookie settings updated, 6033 - Mail service settings updated, 6034 - Custom navigation settings updated, 6035 - Audit settings updated, 6036 - Two factor authentication disabled, 6037 - Two factor authentication enabled by sms, 6038 - Two factor authentication enabled by tfa app, 6039 - Portal renamed, 6040 - Quota per room changed, 6041 - Quota per room disabled, 6042 - Quota per user changed, 6043 - Quota per user disabled, 6044 - Quota per portal changed, 6045 - Quota per portal disabled, 6046 - Form submit, 6047 - Form opened for filling, 6048 - Custom quota per room default, 6049 - Custom quota per room changed, 6050 - Custom quota per room disabled, 6051 - Custom quota per user default, 6052 - Custom quota per user changed, 6053 - Custom quota per user disabled, 7000 - Contact admin mail sent, 7001 - Room invite link used, 7002 - User created and added to room, 7003 - Guest created and added to room, 7004 - Contact sales mail sent, -1 - None]",
            "example": 1000
          }
        ]
      },
      "ASC.Migration.Core.Models.Api.MigratingApiFiles": {
        "type": "object",
        "properties": {
          "foldersCount": {
            "type": "integer",
            "format": "int32",
            "example": 1234
          },
          "filesCount": {
            "type": "integer",
            "format": "int32",
            "example": 1234
          },
          "bytesTotal": {
            "type": "integer",
            "format": "int64",
            "example": 1234
          }
        },
        "additionalProperties": false
      },
      "ASC.Migration.Core.Models.Api.MigratingApiGroup": {
        "type": "object",
        "properties": {
          "shouldImport": {
            "type": "boolean",
            "example": true
          },
          "groupName": {
            "type": "string",
            "nullable": true,
            "example": "some text"
          },
          "moduleName": {
            "type": "string",
            "nullable": true,
            "example": "some text"
          },
          "userUidList": {
            "type": "array",
            "items": {},
            "nullable": true,
            "example": [
              "some text"
            ]
          }
        },
        "additionalProperties": false
      },
      "ASC.Migration.Core.Models.Api.MigratingApiUser": {
        "type": "object",
        "properties": {
          "shouldImport": {
            "type": "boolean",
            "example": true
          },
          "key": {
            "type": "string",
            "nullable": true,
            "example": "some text"
          },
          "email": {
            "type": "string",
            "format": "email",
            "nullable": true,
            "example": "Maximilian.Waters@gmail.com"
          },
          "displayName": {
            "type": "string",
            "nullable": true,
            "example": "some text"
          },
          "firstName": {
            "type": "string",
            "nullable": true,
            "example": "Amina"
          },
          "lastName": {
            "type": "string",
            "nullable": true,
            "example": "Schmidt"
          },
          "userType": {
            "$ref": "#/components/schemas/ASC.Core.Users.EmployeeType"
          },
          "migratingFiles": {
            "$ref": "#/components/schemas/ASC.Migration.Core.Models.Api.MigratingApiFiles"
          }
        },
        "additionalProperties": false
      },
      "ASC.Migration.Core.Models.Api.MigrationApiInfo": {
        "type": "object",
        "properties": {
          "migratorName": {
            "type": "string",
            "nullable": true,
            "example": "some text"
          },
          "operation": {
            "type": "string",
            "nullable": true,
            "example": "some text"
          },
          "failedArchives": {
            "type": "array",
            "items": {},
            "nullable": true,
            "example": [
              "some text"
            ]
          },
          "users": {
            "type": "array",
            "items": {},
            "nullable": true
          },
          "withoutEmailUsers": {
            "type": "array",
            "items": {},
            "nullable": true
          },
          "existUsers": {
            "type": "array",
            "items": {},
            "nullable": true
          },
          "groups": {
            "type": "array",
            "items": {},
            "nullable": true
          },
          "importPersonalFiles": {
            "type": "boolean",
            "example": true
          },
          "importSharedFiles": {
            "type": "boolean",
            "example": true
          },
          "importSharedFolders": {
            "type": "boolean",
            "example": true
          },
          "importCommonFiles": {
            "type": "boolean",
            "example": true
          },
          "importProjectFiles": {
            "type": "boolean",
            "example": true
          },
          "importGroups": {
            "type": "boolean",
            "example": true
          },
          "successedUsers": {
            "type": "integer",
            "format": "int32",
            "example": 1234
          },
          "failedUsers": {
            "type": "integer",
            "format": "int32",
            "example": 1234
          },
          "files": {
            "type": "array",
            "items": {},
            "nullable": true,
            "example": [
              "some text"
            ]
          },
          "errors": {
            "type": "array",
            "items": {},
            "nullable": true,
            "example": [
              "some text"
            ]
          }
        },
        "additionalProperties": false
      },
      "ASC.Security.Cryptography.EmailValidationKeyModel": {
        "type": "object",
        "properties": {
          "key": {
            "type": "string",
            "nullable": true,
            "example": "some text"
          },
          "emplType": {
            "$ref": "#/components/schemas/ASC.Core.Users.EmployeeType"
          },
          "email": {
            "type": "string",
            "format": "email",
            "nullable": true,
            "example": "Rosalinda7@gmail.com"
          },
          "uiD": {
            "type": "string",
            "format": "uuid",
            "nullable": true,
            "example": "75a5f745-f697-4418-b38d-0fe0d277e258"
          },
          "type": {
            "$ref": "#/components/schemas/ASC.Web.Studio.Utility.ConfirmType"
          },
          "first": {
            "type": "string",
            "nullable": true,
            "example": "some text"
          },
          "roomId": {
            "type": "string",
            "nullable": true,
            "example": "9814"
          }
        },
        "additionalProperties": false
      },
      "ASC.Security.Cryptography.EmailValidationKeyProvider_ValidationResult": {
        "oneOf": [
          {
            "enum": [
              "Ok",
              "Invalid",
              "Expired",
              "TariffLimit",
              "UserExisted",
              "UserExcluded",
              "QuotaFailed"
            ],
            "type": "string",
            "description": "[Ok - Ok, Invalid - Invalid, Expired - Expired, TariffLimit - Tariff limit, UserExisted - User existed, UserExcluded - User excluded, QuotaFailed - Quota failed]",
            "example": "Ok"
          },
          {
            "enum": [
              0,
              1,
              2,
              3,
              4,
              5,
              6
            ],
            "type": "integer",
            "description": "[0 - Ok, 1 - Invalid, 2 - Expired, 3 - Tariff limit, 4 - User existed, 5 - User excluded, 6 - Quota failed]",
            "example": 0
          }
        ]
      },
      "ASC.Security.Cryptography.PasswordHasher": {
        "type": "object",
        "properties": {
          "size": {
            "type": "integer",
            "format": "int32",
            "readOnly": true,
            "example": 1234
          },
          "iterations": {
            "type": "integer",
            "format": "int32",
            "readOnly": true,
            "example": 1234
          },
          "salt": {
            "type": "string",
            "nullable": true,
            "readOnly": true,
            "example": "some text"
          }
        },
        "additionalProperties": false
      },
      "ASC.Web.Api.ApiModel.RequestsDto.AdminMessageBaseSettingsRequestsDto": {
        "type": "object",
        "properties": {
          "email": {
            "type": "string",
            "description": "Email",
            "format": "email",
            "nullable": true,
            "example": "Audie70@yahoo.com"
          },
          "culture": {
            "type": "string",
            "description": "Culture",
            "nullable": true,
            "example": "some text"
          }
        },
        "additionalProperties": false,
        "description": "Request parameters for administrator message settings"
      },
      "ASC.Web.Api.ApiModel.RequestsDto.AdminMessageSettingsRequestsDto": {
        "type": "object",
        "properties": {
          "email": {
            "type": "string",
            "description": "Email",
            "format": "email",
            "nullable": true,
            "example": "Jaren81@gmail.com"
          },
          "culture": {
            "type": "string",
            "description": "Culture",
            "nullable": true,
            "example": "some text"
          },
          "message": {
            "type": "string",
            "description": "Message",
            "nullable": true,
            "example": "some text"
          }
        },
        "additionalProperties": false,
        "description": "Request parameters for administrator message settings"
      },
      "ASC.Web.Api.ApiModel.RequestsDto.AuthRequestsDto": {
        "type": "object",
        "properties": {
          "userName": {
            "type": "string",
            "description": "Username / email",
            "nullable": true,
            "example": "some text"
          },
          "password": {
            "type": "string",
            "description": "Password",
            "nullable": true,
            "example": "Hl45MhOpmu"
          },
          "passwordHash": {
            "type": "string",
            "description": "Password hash",
            "nullable": true,
            "example": "some text"
          },
          "provider": {
            "type": "string",
            "description": "Provider type",
            "nullable": true,
            "example": "some text"
          },
          "accessToken": {
            "type": "string",
            "description": "Provider access token",
            "nullable": true,
            "example": "some text"
          },
          "serializedProfile": {
            "type": "string",
            "description": "Serialized user profile",
            "nullable": true,
            "example": "some text"
          },
          "code": {
            "type": "string",
            "description": "Two-factor authentication code",
            "nullable": true,
            "example": "some text"
          },
          "codeOAuth": {
            "type": "string",
            "description": "Code for getting a token",
            "nullable": true,
            "example": "some text"
          },
          "session": {
            "type": "boolean",
            "description": "Session based authentication or not",
            "example": true
          },
          "confirmData": {
            "$ref": "#/components/schemas/ASC.Web.Api.ApiModel.RequestsDto.ConfirmData"
          },
          "recaptchaType": {
            "$ref": "#/components/schemas/ASC.Web.Core.RecaptchaType"
          },
          "recaptchaResponse": {
            "type": "string",
            "description": "reCAPTCHA response",
            "nullable": true,
            "example": "some text"
          },
          "culture": {
            "type": "string",
            "description": "Culture",
            "nullable": true,
            "example": "some text"
          }
        },
        "additionalProperties": false,
        "description": "Authentication request parameters"
      },
      "ASC.Web.Api.ApiModel.RequestsDto.AuthServiceRequestsDto": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "Name",
            "nullable": true,
            "example": "Jean Kassulke"
          },
          "title": {
            "type": "string",
            "description": "Title",
            "nullable": true,
            "example": "iowa"
          },
          "description": {
            "type": "string",
            "description": "Description",
            "nullable": true,
            "example": "some text"
          },
          "instruction": {
            "type": "string",
            "description": "Instruction",
            "nullable": true,
            "example": "some text"
          },
          "canSet": {
            "type": "boolean",
            "description": "Specifies if the authentication service can be set or not",
            "example": true
          },
          "props": {
            "type": "array",
            "items": {},
            "description": "List of authorization keys",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "Request parameters for authorization service"
      },
      "ASC.Web.Api.ApiModel.RequestsDto.ConfirmData": {
        "type": "object",
        "properties": {
          "email": {
            "type": "string",
            "description": "Email address",
            "format": "email",
            "nullable": true,
            "example": "Katarina.Cartwright44@yahoo.com"
          },
          "first": {
            "type": "boolean",
            "description": "Access an account for the first time or not",
            "nullable": true,
            "example": true
          },
          "key": {
            "type": "string",
            "description": "Key",
            "nullable": true,
            "example": "some text"
          }
        },
        "additionalProperties": false
      },
      "ASC.Web.Api.ApiModel.RequestsDto.GreetingSettingsRequestsDto": {
        "type": "object",
        "properties": {
          "title": {
            "type": "string",
            "description": "Tenant name",
            "nullable": true,
            "example": "designer_computers__shoes_&_tools_navigate"
          }
        },
        "additionalProperties": false,
        "description": "Greeting settings"
      },
      "ASC.Web.Api.ApiModel.RequestsDto.IpRestrictionsBaseRequestsDto": {
        "type": "object",
        "properties": {
          "ipRestrictions": {
            "type": "array",
            "items": {},
            "description": "List of IP addresses",
            "nullable": true,
            "example": [
              {
                "int": 1234,
                "string": "some text",
                "boolean": true
              }
            ]
          }
        },
        "additionalProperties": false,
        "description": "IP restrictions request parameters"
      },
      "ASC.Web.Api.ApiModel.RequestsDto.IpRestrictionsRequestsDto": {
        "type": "object",
        "properties": {
          "enable": {
            "type": "boolean",
            "description": "Enables IP restrictions or not",
            "example": true
          }
        },
        "additionalProperties": false,
        "description": "New IP restriction settings"
      },
      "ASC.Web.Api.ApiModel.RequestsDto.LogoRequestsDto": {
        "type": "object",
        "properties": {
          "light": {
            "type": "string",
            "description": "Light theme logo",
            "nullable": true,
            "example": "some text"
          },
          "dark": {
            "type": "string",
            "description": "Dark theme logo",
            "nullable": true,
            "example": "some text"
          }
        },
        "additionalProperties": false
      },
      "ASC.Web.Api.ApiModel.RequestsDto.MailDomainSettingsRequestsDto": {
        "type": "object",
        "properties": {
          "type": {
            "$ref": "#/components/schemas/ASC.Core.Tenants.TenantTrustedDomainsType"
          },
          "domains": {
            "type": "array",
            "items": {},
            "description": "List of trusted domains",
            "nullable": true,
            "example": [
              "some text"
            ]
          },
          "inviteUsersAsVisitors": {
            "type": "boolean",
            "description": "Invites as a user or not",
            "example": true
          }
        },
        "additionalProperties": false,
        "description": "Request parameters for mail domain settings"
      },
      "ASC.Web.Api.ApiModel.RequestsDto.MobileRequestsDto": {
        "type": "object",
        "properties": {
          "mobilePhone": {
            "type": "string",
            "description": "Mobile phone",
            "nullable": true,
            "example": "some text"
          }
        },
        "additionalProperties": false,
        "description": "Mobile phone request parameters"
      },
      "ASC.Web.Api.ApiModel.RequestsDto.OwnerIdSettingsRequestDto": {
        "type": "object",
        "properties": {
          "ownerId": {
            "type": "string",
            "description": "Owner ID",
            "format": "uuid",
            "example": "75a5f745-f697-4418-b38d-0fe0d277e258"
          }
        },
        "additionalProperties": false,
        "description": "Settings request parameters"
      },
      "ASC.Web.Api.ApiModel.RequestsDto.QuotaSettingsRequestsDto": {
        "type": "object",
        "properties": {
          "enableQuota": {
            "type": "boolean",
            "description": "Specifies if the quota settings are enabled or not",
            "example": true
          },
          "defaultQuota": {
            "oneOf": [
              {
                "type": "integer",
                "example": 1234
              },
              {
                "type": "string",
                "example": "some text"
              }
            ],
            "description": "Default quota value"
          }
        },
        "additionalProperties": false,
        "description": "Request parameters for the user quota settings"
      },
      "ASC.Web.Api.ApiModel.RequestsDto.SchemaBaseRequestsDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "Team template ID",
            "nullable": true,
            "example": "1835"
          }
        },
        "additionalProperties": false,
        "description": "Team template parameters"
      },
      "ASC.Web.Api.ApiModel.RequestsDto.SchemaRequestsDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "Team template ID",
            "nullable": true,
            "example": "1801"
          },
          "name": {
            "type": "string",
            "description": "Team template name",
            "nullable": true,
            "example": "Ike Kessler"
          },
          "userCaption": {
            "type": "string",
            "description": "User caption",
            "nullable": true,
            "example": "some text"
          },
          "usersCaption": {
            "type": "string",
            "description": "Users caption",
            "nullable": true,
            "example": "some text"
          },
          "groupCaption": {
            "type": "string",
            "description": "Group caption",
            "nullable": true,
            "example": "some text"
          },
          "groupsCaption": {
            "type": "string",
            "description": "Groups caption",
            "nullable": true,
            "example": "some text"
          },
          "userPostCaption": {
            "type": "string",
            "description": "User status caption",
            "nullable": true,
            "example": "some text"
          },
          "regDateCaption": {
            "type": "string",
            "description": "Registration date caption",
            "nullable": true,
            "example": "some text"
          },
          "groupHeadCaption": {
            "type": "string",
            "description": "Group lead caption",
            "nullable": true,
            "example": "some text"
          },
          "guestCaption": {
            "type": "string",
            "description": "Guest caption",
            "nullable": true,
            "example": "some text"
          },
          "guestsCaption": {
            "type": "string",
            "description": "Guests caption",
            "nullable": true,
            "example": "some text"
          }
        },
        "additionalProperties": false,
        "description": "Team template parameters"
      },
      "ASC.Web.Api.ApiModel.RequestsDto.SecurityRequestsDto": {
        "type": "object",
        "properties": {
          "productId": {
            "type": "string",
            "description": "Product ID",
            "format": "uuid",
            "example": "c3dfdf55-ce83-42c4-88d8-920e52df61f3"
          },
          "userId": {
            "type": "string",
            "description": "User ID",
            "format": "uuid",
            "example": "346a1d95-ae38-4822-af2b-7dade8a3f165"
          },
          "administrator": {
            "type": "boolean",
            "description": "Administrator or not",
            "example": true
          }
        },
        "additionalProperties": false,
        "description": "Security request parameters"
      },
      "ASC.Web.Api.ApiModel.RequestsDto.ShortenLinkRequestsDto": {
        "type": "object",
        "properties": {
          "link": {
            "type": "string",
            "description": "Link",
            "nullable": true,
            "example": "some text"
          }
        },
        "additionalProperties": false,
        "description": "Shortened link request parameters"
      },
      "ASC.Web.Api.ApiModel.RequestsDto.SsoSettingsRequestsDto": {
        "type": "object",
        "properties": {
          "serializeSettings": {
            "type": "string",
            "description": "Serialized SSO settings",
            "nullable": true,
            "example": "some text"
          }
        },
        "additionalProperties": false,
        "description": "SSO settings request parameters"
      },
      "ASC.Web.Api.ApiModel.RequestsDto.StorageEncryptionRequestsDto": {
        "type": "object",
        "properties": {
          "notifyUsers": {
            "type": "boolean",
            "description": "Specifies if the users will be notified about the encryption process or note",
            "example": true
          }
        },
        "additionalProperties": false,
        "description": "Storage encryption request parameters"
      },
      "ASC.Web.Api.ApiModel.RequestsDto.StorageRequestsDto": {
        "type": "object",
        "properties": {
          "module": {
            "type": "string",
            "description": "Storage name",
            "nullable": true,
            "example": "some text"
          },
          "props": {
            "type": "object",
            "additionalProperties": {
              "type": "string",
              "nullable": true
            },
            "description": "Storage properties",
            "nullable": true,
            "example": [
              {
                "key": "some text",
                "value": "some text"
              }
            ]
          }
        },
        "additionalProperties": false,
        "description": "Storage settings request parameters"
      },
      "ASC.Web.Api.ApiModel.RequestsDto.TenantQuotaSettingsRequestsDto": {
        "type": "object",
        "properties": {
          "tenantId": {
            "type": "integer",
            "description": "Tenant ID",
            "format": "int32",
            "example": 1234
          },
          "quota": {
            "type": "integer",
            "description": "Quota",
            "format": "int64",
            "example": 1234
          }
        },
        "additionalProperties": false,
        "description": "Request parameters for the tenant quota settings"
      },
      "ASC.Web.Api.ApiModel.RequestsDto.TfaRequestsDto": {
        "type": "object",
        "properties": {
          "type": {
            "$ref": "#/components/schemas/ASC.Web.Api.ApiModel.RequestsDto.TfaRequestsDtoType"
          },
          "id": {
            "type": "string",
            "description": "User ID",
            "format": "uuid",
            "nullable": true,
            "example": "04081989-444a-489f-a637-8381560f955f"
          },
          "trustedIps": {
            "type": "array",
            "items": {},
            "description": "List of trusted IP addresses",
            "nullable": true,
            "example": [
              "some text"
            ]
          },
          "mandatoryUsers": {
            "type": "array",
            "items": {},
            "description": "List of users who must use the TFA verification",
            "nullable": true,
            "example": [
              "75a5f745-f697-4418-b38d-0fe0d277e258"
            ]
          },
          "mandatoryGroups": {
            "type": "array",
            "items": {},
            "description": "List of groups who must use the TFA verification",
            "nullable": true,
            "example": [
              "75a5f745-f697-4418-b38d-0fe0d277e258"
            ]
          }
        },
        "additionalProperties": false,
        "description": "TFA settings request parameters"
      },
      "ASC.Web.Api.ApiModel.RequestsDto.TfaRequestsDtoType": {
        "oneOf": [
          {
            "enum": [
              "None",
              "Sms",
              "App"
            ],
            "type": "string",
            "description": "[None - None, Sms - Sms, App - App]",
            "example": "None"
          },
          {
            "enum": [
              0,
              1,
              2
            ],
            "type": "integer",
            "description": "[0 - None, 1 - Sms, 2 - App]",
            "example": 0
          }
        ]
      },
      "ASC.Web.Api.ApiModel.RequestsDto.TfaSettingsDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "ID",
            "nullable": true,
            "example": "7165"
          },
          "title": {
            "type": "string",
            "description": "Title",
            "nullable": true,
            "example": "withdrawal"
          },
          "enabled": {
            "type": "boolean",
            "description": "Specifies if the TFA settings are enabled or not",
            "example": true
          },
          "avaliable": {
            "type": "boolean",
            "description": "Specifies if the TFA settings are available or not",
            "example": true
          },
          "trustedIps": {
            "type": "array",
            "items": {},
            "description": "List of trusted IP addresses",
            "nullable": true,
            "example": [
              "some text"
            ]
          },
          "mandatoryUsers": {
            "type": "array",
            "items": {},
            "description": "List of users who must use the TFA verification",
            "nullable": true,
            "example": [
              "75a5f745-f697-4418-b38d-0fe0d277e258"
            ]
          },
          "mandatoryGroups": {
            "type": "array",
            "items": {},
            "description": "List of groups who must use the TFA verification",
            "nullable": true,
            "example": [
              "75a5f745-f697-4418-b38d-0fe0d277e258"
            ]
          }
        },
        "additionalProperties": false
      },
      "ASC.Web.Api.ApiModel.RequestsDto.TfaValidateRequestsDto": {
        "type": "object",
        "properties": {
          "code": {
            "type": "string",
            "description": "TFA code",
            "nullable": true,
            "example": "some text"
          }
        },
        "additionalProperties": false,
        "description": "TFA validation request parameters"
      },
      "ASC.Web.Api.ApiModel.RequestsDto.TimezonesRequestsDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "Time zone ID",
            "nullable": true,
            "example": "7452"
          },
          "displayName": {
            "type": "string",
            "description": "Time zone display name",
            "nullable": true,
            "example": "some text"
          }
        },
        "additionalProperties": false
      },
      "ASC.Web.Api.ApiModel.RequestsDto.TipsRequestDto": {
        "type": "object",
        "properties": {
          "show": {
            "type": "boolean",
            "description": "Specifies whether to show tips for the user or not",
            "example": true
          }
        },
        "additionalProperties": false,
        "description": "Settings request parameters"
      },
      "ASC.Web.Api.ApiModel.RequestsDto.TurnOnAdminMessageSettingsRequestDto": {
        "type": "object",
        "properties": {
          "turnOn": {
            "type": "boolean",
            "description": "Specifies if the administrator messages are enabled or not",
            "example": true
          }
        },
        "additionalProperties": false,
        "description": "Request parameters for administrator message settings"
      },
      "ASC.Web.Api.ApiModel.RequestsDto.WebItemSecurityRequestsDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "Module ID",
            "nullable": true,
            "example": "7736"
          },
          "enabled": {
            "type": "boolean",
            "description": "Specifies if the module security settings are enabled or not",
            "example": true
          },
          "subjects": {
            "type": "array",
            "items": {},
            "description": "List of user/group IDs with the access to the module",
            "nullable": true,
            "example": [
              "75a5f745-f697-4418-b38d-0fe0d277e258"
            ]
          }
        },
        "additionalProperties": false,
        "description": "Module request parameters"
      },
      "ASC.Web.Api.ApiModel.RequestsDto.WebItemsSecurityRequestsDto": {
        "type": "object",
        "properties": {
          "items": {
            "type": "object",
            "additionalProperties": {
              "type": "boolean",
              "nullable": true
            },
            "description": "Products with security information",
            "nullable": true,
            "example": [
              {
                "key": "some text",
                "value": true
              }
            ]
          }
        },
        "additionalProperties": false,
        "description": "Module request parameters"
      },
      "ASC.Web.Api.ApiModel.RequestsDto.WebPluginRequests": {
        "type": "object",
        "properties": {
          "enabled": {
            "type": "boolean",
            "description": "Enabled",
            "example": true
          },
          "settings": {
            "type": "string",
            "description": "Settings",
            "nullable": true,
            "example": "some text"
          }
        },
        "additionalProperties": false,
        "description": ""
      },
      "ASC.Web.Api.ApiModel.RequestsDto.WhiteLabelRequestsDto": {
        "type": "object",
        "properties": {
          "logoText": {
            "type": "string",
            "description": "Logo text",
            "nullable": true,
            "example": "some text"
          },
          "logo": {
            "type": "object",
            "additionalProperties": {
              "$ref": "#/components/schemas/ASC.Web.Api.ApiModel.RequestsDto.LogoRequestsDto"
            },
            "description": "Tenant IDs with their logos (light or dark)",
            "nullable": true,
            "example": [
              {
                "key": "some text"
              }
            ]
          }
        },
        "additionalProperties": false,
        "description": "Request parameters for white label settings"
      },
      "ASC.Web.Api.ApiModel.RequestsDto.WizardRequestsDto": {
        "type": "object",
        "properties": {
          "email": {
            "type": "string",
            "description": "Email",
            "format": "email",
            "nullable": true,
            "example": "Lorna_Simonis2@hotmail.com"
          },
          "passwordHash": {
            "type": "string",
            "description": "Password hash",
            "nullable": true,
            "example": "some text"
          },
          "lng": {
            "type": "string",
            "description": "Language",
            "nullable": true,
            "example": "some text"
          },
          "timeZone": {
            "type": "string",
            "description": "Time zone",
            "nullable": true,
            "example": "some text"
          },
          "amiId": {
            "type": "string",
            "description": "AMI ID",
            "nullable": true,
            "example": "some text"
          },
          "subscribeFromSite": {
            "type": "boolean",
            "description": "Subscribed from the site or not",
            "example": true
          }
        },
        "additionalProperties": false,
        "description": "Wizard settings request parameters"
      },
      "ASC.Web.Api.ApiModel.ResponseDto.AuditEventDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "description": "ID",
            "format": "int32",
            "example": 8744
          },
          "date": {
            "$ref": "#/components/schemas/ASC.Api.Core.ApiDateTime"
          },
          "user": {
            "type": "string",
            "description": "User",
            "nullable": true,
            "example": "some text"
          },
          "userId": {
            "type": "string",
            "description": "User ID",
            "format": "uuid",
            "example": "00197fc2-a0a3-4621-81f6-7bf0d6558e1a"
          },
          "action": {
            "type": "string",
            "description": "Action",
            "nullable": true,
            "example": "some text"
          },
          "actionId": {
            "$ref": "#/components/schemas/ASC.MessagingSystem.Core.MessageAction"
          },
          "ip": {
            "type": "string",
            "description": "IP",
            "nullable": true,
            "example": "some text"
          },
          "country": {
            "type": "string",
            "description": "Country",
            "nullable": true,
            "example": "some text"
          },
          "city": {
            "type": "string",
            "description": "City",
            "nullable": true,
            "example": "some text"
          },
          "browser": {
            "type": "string",
            "description": "Browser",
            "nullable": true,
            "example": "some text"
          },
          "platform": {
            "type": "string",
            "description": "Platform",
            "nullable": true,
            "example": "some text"
          },
          "page": {
            "type": "string",
            "description": "Page",
            "nullable": true,
            "example": "some text"
          },
          "actionType": {
            "$ref": "#/components/schemas/ASC.AuditTrail.Types.ActionType"
          },
          "product": {
            "$ref": "#/components/schemas/ASC.AuditTrail.Types.ProductType"
          },
          "module": {
            "$ref": "#/components/schemas/ASC.AuditTrail.Types.ModuleType"
          },
          "target": {
            "type": "array",
            "items": {},
            "description": "List of targets",
            "nullable": true,
            "example": [
              "some text"
            ]
          },
          "entries": {
            "type": "array",
            "items": {},
            "description": "List of entry types",
            "nullable": true,
            "example": [
              {
                "int": 1234,
                "string": "some text",
                "boolean": true
              }
            ]
          },
          "context": {
            "type": "string",
            "description": "Context",
            "nullable": true,
            "example": "some text"
          }
        },
        "additionalProperties": false
      },
      "ASC.Web.Api.ApiModel.ResponseDto.AuthenticationTokenDto": {
        "type": "object",
        "properties": {
          "token": {
            "type": "string",
            "description": "Authentication token",
            "nullable": true,
            "example": "abcde12345"
          },
          "expires": {
            "type": "string",
            "description": "Token expiration time",
            "format": "date-time",
            "example": "2008-04-10T06:30:00.0000000+04:00"
          },
          "sms": {
            "type": "boolean",
            "description": "Specifies if the authentication code is sent by SMS or not",
            "example": false
          },
          "phoneNoise": {
            "type": "string",
            "description": "Phone number",
            "nullable": true,
            "example": ""
          },
          "tfa": {
            "type": "boolean",
            "description": "Specifies if the two-factor application is used or not",
            "example": false
          },
          "tfaKey": {
            "type": "string",
            "description": "Two-factor authentication key",
            "nullable": true,
            "example": ""
          },
          "confirmUrl": {
            "type": "string",
            "description": "Confirmation email URL",
            "format": "uri",
            "nullable": true,
            "example": "some text"
          }
        },
        "additionalProperties": false
      },
      "ASC.Web.Api.ApiModel.ResponseDto.CapabilitiesDto": {
        "type": "object",
        "properties": {
          "ldapEnabled": {
            "type": "boolean",
            "description": "Specifies if the LDAP settings are enabled or not",
            "example": false
          },
          "ldapDomain": {
            "type": "string",
            "description": "Ldap domain",
            "nullable": true,
            "example": "some text"
          },
          "providers": {
            "type": "array",
            "items": {},
            "description": "List of providers",
            "nullable": true,
            "example": [
              "some text"
            ]
          },
          "ssoLabel": {
            "type": "string",
            "description": "SP login label",
            "nullable": true,
            "example": ""
          },
          "oauthEnabled": {
            "type": "boolean",
            "description": "Specifies if OAuth is enabled or not",
            "example": true
          },
          "ssoUrl": {
            "type": "string",
            "description": "SSO URL. If this parameter is empty, then the SSO settings are disabled",
            "format": "uri",
            "nullable": true,
            "example": ""
          }
        },
        "additionalProperties": false
      },
      "ASC.Web.Api.ApiModel.ResponseDto.ChartPointDto": {
        "type": "object",
        "properties": {
          "displayDate": {
            "type": "string",
            "description": "Display date",
            "nullable": true,
            "example": "6/1/2024"
          },
          "date": {
            "type": "string",
            "description": "Date",
            "format": "date-time",
            "example": "2008-04-10T06:30:00.0000000+04:00"
          },
          "hosts": {
            "type": "integer",
            "description": "Hosts",
            "format": "int32",
            "example": 0
          },
          "hits": {
            "type": "integer",
            "description": "Hits",
            "format": "int32",
            "example": 0
          }
        },
        "additionalProperties": false
      },
      "ASC.Web.Api.ApiModel.ResponseDto.DeepLinkDto": {
        "type": "object",
        "properties": {
          "androidPackageName": {
            "type": "string",
            "description": "Android package name",
            "nullable": true,
            "example": "some text"
          },
          "url": {
            "type": "string",
            "description": "Url",
            "nullable": true,
            "example": "some text"
          },
          "iosPackageId": {
            "type": "string",
            "description": "Ios package id",
            "nullable": true,
            "example": "some text"
          }
        },
        "additionalProperties": false
      },
      "ASC.Web.Api.ApiModel.ResponseDto.FirebaseDto": {
        "type": "object",
        "properties": {
          "apiKey": {
            "type": "string",
            "description": "API key",
            "nullable": true,
            "example": "some text"
          },
          "authDomain": {
            "type": "string",
            "description": "Authentication domain",
            "nullable": true,
            "example": "some text"
          },
          "projectId": {
            "type": "string",
            "description": "Project ID",
            "nullable": true,
            "example": "some text"
          },
          "storageBucket": {
            "type": "string",
            "description": "Storage bucket",
            "nullable": true,
            "example": "some text"
          },
          "messagingSenderId": {
            "type": "string",
            "description": "Message sender ID",
            "nullable": true,
            "example": "some text"
          },
          "appId": {
            "type": "string",
            "description": "Application ID",
            "nullable": true,
            "example": "some text"
          },
          "measurementId": {
            "type": "string",
            "description": "Measurement ID",
            "nullable": true,
            "example": "some text"
          },
          "databaseURL": {
            "type": "string",
            "description": "Database URL",
            "nullable": true,
            "example": "some text"
          }
        },
        "additionalProperties": false
      },
      "ASC.Web.Api.ApiModel.ResponseDto.FormGalleryDto": {
        "type": "object",
        "properties": {
          "path": {
            "type": "string",
            "description": "Path",
            "nullable": true,
            "example": "some text"
          },
          "domain": {
            "type": "string",
            "description": "Domain",
            "nullable": true,
            "example": "some text"
          },
          "ext": {
            "type": "string",
            "description": "Ext",
            "nullable": true,
            "example": ".txt"
          },
          "uploadPath": {
            "type": "string",
            "description": "Upload path",
            "nullable": true,
            "example": "some text"
          },
          "uploadDomain": {
            "type": "string",
            "description": "Upload domain",
            "nullable": true,
            "example": "some text"
          },
          "uploadExt": {
            "type": "string",
            "description": "Upload ext",
            "nullable": true,
            "example": "some text"
          },
          "uploadDashboard": {
            "type": "string",
            "description": "Upload dashboard",
            "nullable": true,
            "example": "some text"
          }
        },
        "additionalProperties": false
      },
      "ASC.Web.Api.ApiModel.ResponseDto.LoginEventDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "description": "ID",
            "format": "int32",
            "example": 5691
          },
          "date": {
            "$ref": "#/components/schemas/ASC.Api.Core.ApiDateTime"
          },
          "user": {
            "type": "string",
            "description": "User",
            "nullable": true,
            "example": "some text"
          },
          "userId": {
            "type": "string",
            "description": "User ID",
            "format": "uuid",
            "example": "a2ad12d7-54be-4f41-a26c-2403b1ae5277"
          },
          "login": {
            "type": "string",
            "description": "Login",
            "nullable": true,
            "example": "some text"
          },
          "action": {
            "type": "string",
            "description": "Action",
            "nullable": true,
            "example": "some text"
          },
          "actionId": {
            "$ref": "#/components/schemas/ASC.MessagingSystem.Core.MessageAction"
          },
          "ip": {
            "type": "string",
            "description": "IP",
            "nullable": true,
            "example": "some text"
          },
          "country": {
            "type": "string",
            "description": "Country",
            "nullable": true,
            "example": "some text"
          },
          "city": {
            "type": "string",
            "description": "City",
            "nullable": true,
            "example": "some text"
          },
          "browser": {
            "type": "string",
            "description": "Browser",
            "nullable": true,
            "example": "some text"
          },
          "platform": {
            "type": "string",
            "description": "Platform",
            "nullable": true,
            "example": "some text"
          },
          "page": {
            "type": "string",
            "description": "Page",
            "nullable": true,
            "example": "some text"
          }
        },
        "additionalProperties": false
      },
      "ASC.Web.Api.ApiModel.ResponseDto.PluginsDto": {
        "type": "object",
        "properties": {
          "enabled": {
            "type": "boolean",
            "description": "Specifies if the plugins are enabled or not",
            "example": true
          },
          "upload": {
            "type": "boolean",
            "description": "Specifies if the plugins can be uploaded or not",
            "example": true
          },
          "delete": {
            "type": "boolean",
            "description": "Specifies if the plugins can be deleted or not",
            "example": true
          }
        },
        "additionalProperties": false
      },
      "ASC.Web.Api.ApiModel.ResponseDto.SecurityDto": {
        "type": "object",
        "properties": {
          "webItemId": {
            "type": "string",
            "description": "Module ID",
            "nullable": true,
            "example": "{00000000-0000-0000-0000-000000000000}"
          },
          "users": {
            "type": "array",
            "items": {},
            "description": "List of users with the access to the module",
            "nullable": true
          },
          "groups": {
            "type": "array",
            "items": {},
            "description": "List of groups with the access to the module",
            "nullable": true
          },
          "enabled": {
            "type": "boolean",
            "description": "Specifies if the security settings are enabled or not",
            "example": true
          },
          "isSubItem": {
            "type": "boolean",
            "description": "Specifies if this module is a subitem or not",
            "example": false
          }
        },
        "additionalProperties": false
      },
      "ASC.Web.Api.ApiModel.ResponseDto.SettingsDto": {
        "type": "object",
        "properties": {
          "timezone": {
            "type": "string",
            "description": "Time zone",
            "nullable": true,
            "example": "UTC"
          },
          "trustedDomains": {
            "type": "array",
            "items": {},
            "description": "List of trusted domains",
            "nullable": true,
            "example": "mydomain.com"
          },
          "trustedDomainsType": {
            "$ref": "#/components/schemas/ASC.Core.Tenants.TenantTrustedDomainsType"
          },
          "culture": {
            "type": "string",
            "description": "Language",
            "nullable": true,
            "example": "en-US"
          },
          "utcOffset": {
            "type": "string",
            "description": "UTC offset",
            "format": "date-span",
            "example": "-8.5"
          },
          "utcHoursOffset": {
            "type": "number",
            "description": "UTC hours offset",
            "format": "double",
            "example": -8.5
          },
          "greetingSettings": {
            "type": "string",
            "description": "Greeting settings",
            "nullable": true,
            "example": "Web Office Applications"
          },
          "ownerId": {
            "type": "string",
            "description": "Owner ID",
            "format": "uuid",
            "example": "75a5f745-f697-4418-b38d-0fe0d277e258"
          },
          "nameSchemaId": {
            "type": "string",
            "description": "Team template ID",
            "nullable": true,
            "example": "some text"
          },
          "enabledJoin": {
            "type": "boolean",
            "description": "Specifies if a user can join to the portal or not",
            "nullable": true,
            "example": true
          },
          "enableAdmMess": {
            "type": "boolean",
            "description": "Specifies if a user can send a message to the administrator or not",
            "nullable": true,
            "example": true
          },
          "thirdpartyEnable": {
            "type": "boolean",
            "description": "Specifies if a user can connect third-party providers or not",
            "nullable": true,
            "example": true
          },
          "docSpace": {
            "type": "boolean",
            "description": "Specifies if this is a DocSpace portal or not",
            "example": true
          },
          "standalone": {
            "type": "boolean",
            "description": "Specifies if this is a standalone portal or not",
            "example": true
          },
          "baseDomain": {
            "type": "string",
            "description": "Base domain",
            "nullable": true,
            "example": "some text"
          },
          "wizardToken": {
            "type": "string",
            "description": "Wizard token",
            "nullable": true,
            "example": "some text"
          },
          "passwordHash": {
            "$ref": "#/components/schemas/ASC.Security.Cryptography.PasswordHasher"
          },
          "firebase": {
            "$ref": "#/components/schemas/ASC.Web.Api.ApiModel.ResponseDto.FirebaseDto"
          },
          "version": {
            "type": "string",
            "description": "Version",
            "nullable": true,
            "example": "some text"
          },
          "recaptchaType": {
            "$ref": "#/components/schemas/ASC.Web.Core.RecaptchaType"
          },
          "recaptchaPublicKey": {
            "type": "string",
            "description": "ReCAPTCHA public key",
            "nullable": true,
            "example": "some text"
          },
          "debugInfo": {
            "type": "boolean",
            "description": "Specifies if the debug information will be sent or not",
            "example": true
          },
          "socketUrl": {
            "type": "string",
            "description": "Socket URL",
            "nullable": true,
            "example": "some text"
          },
          "tenantStatus": {
            "$ref": "#/components/schemas/ASC.Core.Tenants.TenantStatus"
          },
          "tenantAlias": {
            "type": "string",
            "description": "Tenant alias",
            "nullable": true,
            "example": "some text"
          },
          "helpLink": {
            "type": "string",
            "description": "Link to the help",
            "nullable": true,
            "example": "some text"
          },
          "forumLink": {
            "type": "string",
            "description": "Link to the forum",
            "nullable": true,
            "example": "some text"
          },
          "apiDocsLink": {
            "type": "string",
            "description": "API documentation link",
            "nullable": true,
            "example": "some text"
          },
          "domainValidator": {
            "$ref": "#/components/schemas/ASC.Core.Tenants.TenantDomainValidator"
          },
          "zendeskKey": {
            "type": "string",
            "description": "Zendesk key",
            "nullable": true,
            "example": "some text"
          },
          "tagManagerId": {
            "type": "string",
            "description": "Tag manager ID",
            "nullable": true,
            "example": "some text"
          },
          "bookTrainingEmail": {
            "type": "string",
            "description": "Email for training booking",
            "nullable": true,
            "example": "some text"
          },
          "documentationEmail": {
            "type": "string",
            "description": "Documentation email",
            "nullable": true,
            "example": "some text"
          },
          "legalTerms": {
            "type": "string",
            "description": "Legal terms",
            "nullable": true,
            "example": "some text"
          },
          "licenseUrl": {
            "type": "string",
            "description": "License url",
            "nullable": true,
            "example": "some text"
          },
          "cookieSettingsEnabled": {
            "type": "boolean",
            "description": "Specifies whether the cookie settings are enabled",
            "example": true
          },
          "limitedAccessSpace": {
            "type": "boolean",
            "description": "Limited access space",
            "example": true
          },
          "userNameRegex": {
            "type": "string",
            "description": "User name validation regex",
            "nullable": true,
            "example": "some text"
          },
          "invitationLimit": {
            "type": "integer",
            "description": "Invitation limit",
            "format": "int32",
            "nullable": true,
            "example": 1234
          },
          "plugins": {
            "$ref": "#/components/schemas/ASC.Web.Api.ApiModel.ResponseDto.PluginsDto"
          },
          "deepLink": {
            "$ref": "#/components/schemas/ASC.Web.Api.ApiModel.ResponseDto.DeepLinkDto"
          },
          "formGallery": {
            "$ref": "#/components/schemas/ASC.Web.Api.ApiModel.ResponseDto.FormGalleryDto"
          },
          "maxImageUploadSize": {
            "type": "integer",
            "description": "Max image upload size",
            "format": "int64",
            "example": 1234
          }
        },
        "additionalProperties": false
      },
      "ASC.Web.Api.ApiModel.ResponseDto.SmtpSettingsDto": {
        "type": "object",
        "properties": {
          "host": {
            "type": "string",
            "description": "Host",
            "nullable": true,
            "example": "mail.example.com"
          },
          "port": {
            "type": "integer",
            "description": "Port",
            "format": "int32",
            "nullable": true,
            "example": 25
          },
          "senderAddress": {
            "type": "string",
            "description": "Sender address",
            "nullable": true,
            "example": "notify@example.com"
          },
          "senderDisplayName": {
            "type": "string",
            "description": "Sender display name",
            "nullable": true,
            "example": "Postman"
          },
          "credentialsUserName": {
            "type": "string",
            "description": "Credentials username",
            "nullable": true,
            "example": "notify@example.com"
          },
          "credentialsUserPassword": {
            "type": "string",
            "description": "Credentials user password",
            "nullable": true,
            "example": "{password}"
          },
          "enableSSL": {
            "type": "boolean",
            "description": "Enables SSL or not",
            "example": false
          },
          "enableAuth": {
            "type": "boolean",
            "description": "Enables authentication or not",
            "example": true
          },
          "useNtlm": {
            "type": "boolean",
            "description": "Specifies whether to use NTLM or not",
            "example": false
          },
          "isDefaultSettings": {
            "type": "boolean",
            "description": "Specifies if the current settings are default or not",
            "example": false
          }
        },
        "additionalProperties": false,
        "description": "SMTP settings"
      },
      "ASC.Web.Api.ApiModel.ResponseDto.StorageDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "ID",
            "nullable": true,
            "example": "7581"
          },
          "title": {
            "type": "string",
            "description": "Title",
            "nullable": true,
            "example": "alaska"
          },
          "properties": {
            "type": "array",
            "items": {},
            "description": "List of authentication keys",
            "nullable": true
          },
          "current": {
            "type": "boolean",
            "description": "Specifies if this is the current storage or not",
            "example": true
          },
          "isSet": {
            "type": "boolean",
            "description": "Specifies if this storage can be set or not",
            "example": true
          }
        },
        "additionalProperties": false
      },
      "ASC.Web.Api.ApiModel.ResponseDto.UsageSpaceStatItemDto": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "Name",
            "nullable": true,
            "example": "Item name"
          },
          "icon": {
            "type": "string",
            "description": "Icon",
            "nullable": true,
            "example": "Item icon path"
          },
          "disabled": {
            "type": "boolean",
            "description": "Specifies if the module space is disabled or not",
            "example": false
          },
          "size": {
            "type": "string",
            "description": "Size",
            "nullable": true,
            "example": "0 Byte"
          },
          "url": {
            "type": "string",
            "description": "URL",
            "nullable": true,
            "example": "Item url"
          }
        },
        "additionalProperties": false
      },
      "ASC.Web.Api.ApiModels.RequestsDto.CspRequestsDto": {
        "type": "object",
        "properties": {
          "domains": {
            "type": "array",
            "items": {},
            "description": "Domains",
            "nullable": true,
            "example": [
              "some text"
            ]
          }
        },
        "additionalProperties": false
      },
      "ASC.Web.Api.ApiModels.RequestsDto.CustomColorThemesSettingsRequestsDto": {
        "type": "object",
        "properties": {
          "theme": {
            "$ref": "#/components/schemas/ASC.Web.Core.Utility.Settings.CustomColorThemesSettingsItem"
          },
          "selected": {
            "type": "integer",
            "description": "Selected or not",
            "format": "int32",
            "nullable": true,
            "example": 1234
          }
        },
        "additionalProperties": false,
        "description": "Portal theme settings"
      },
      "ASC.Web.Api.ApiModels.RequestsDto.FinishDto": {
        "type": "object",
        "properties": {
          "isSendWelcomeEmail": {
            "type": "boolean",
            "description": "Is send welcome email",
            "example": true
          }
        },
        "additionalProperties": false
      },
      "ASC.Web.Api.ApiModels.RequestsDto.FirebaseRequestsDto": {
        "type": "object",
        "properties": {
          "firebaseDeviceToken": {
            "type": "string",
            "description": "Firebase device token",
            "nullable": true,
            "example": "some text"
          },
          "isSubscribed": {
            "type": "boolean",
            "description": "Specifies if the user is subscribed to the push notification or not",
            "example": true
          }
        },
        "additionalProperties": false,
        "description": "Firebase request parameters"
      },
      "ASC.Web.Api.ApiModels.RequestsDto.LoginSettingsRequestDto": {
        "type": "object",
        "properties": {
          "attemptCount": {
            "maximum": 9999,
            "minimum": 1,
            "type": "integer",
            "description": "Maximum number of the user attempts to log in",
            "format": "int32",
            "example": 1234
          },
          "blockTime": {
            "maximum": 9999,
            "minimum": 1,
            "type": "integer",
            "description": "The duration of the account suspension for unsuccessful login attempts",
            "format": "int32",
            "example": 1234
          },
          "checkPeriod": {
            "maximum": 9999,
            "minimum": 1,
            "type": "integer",
            "description": "Expected server response time",
            "format": "int32",
            "example": 1234
          }
        },
        "additionalProperties": false,
        "description": "Login settings request parameters"
      },
      "ASC.Web.Api.ApiModels.RequestsDto.NotificationSettingsRequestsDto": {
        "type": "object",
        "properties": {
          "type": {
            "$ref": "#/components/schemas/ASC.Web.Core.Notify.NotificationType"
          },
          "isEnabled": {
            "type": "boolean",
            "description": "Specifies if the notification type is enabled or not",
            "example": true
          }
        },
        "additionalProperties": false,
        "description": "Notification settings request parameters"
      },
      "ASC.Web.Api.ApiModels.RequestsDto.RoomsNotificationsSettingsRequestDto": {
        "type": "object",
        "properties": {
          "roomsId": {
            "description": "Room ID",
            "nullable": true,
            "example": {
              "int": 1234,
              "string": "some text",
              "boolean": true
            }
          },
          "mute": {
            "type": "boolean",
            "description": "Specifies if the room notifications are disabled or not",
            "example": true
          }
        },
        "additionalProperties": false,
        "description": "Request parameters for the room notification settings"
      },
      "ASC.Web.Api.ApiModels.RequestsDto.WebhookRetryRequestsDto": {
        "type": "object",
        "properties": {
          "ids": {
            "type": "array",
            "items": {},
            "description": "List of webhook IDs",
            "nullable": true,
            "example": [
              1234
            ]
          }
        },
        "additionalProperties": false,
        "description": "Request parameters to retry webhooks"
      },
      "ASC.Web.Api.ApiModels.RequestsDto.WebhooksConfigRequestsDto": {
        "required": [
          "name",
          "uri"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "description": "ID",
            "format": "int32",
            "example": 7063
          },
          "name": {
            "maxLength": 50,
            "minLength": 0,
            "type": "string",
            "description": "Name",
            "example": "Laverna Kub"
          },
          "uri": {
            "minLength": 1,
            "type": "string",
            "description": "URI",
            "format": "uri",
            "example": "some text"
          },
          "secretKey": {
            "type": "string",
            "description": "Secret key",
            "nullable": true,
            "example": "some text"
          },
          "enabled": {
            "type": "boolean",
            "description": "Enabled or not",
            "nullable": true,
            "example": true
          },
          "ssl": {
            "type": "boolean",
            "description": "SSL",
            "nullable": true,
            "example": true
          }
        },
        "additionalProperties": false,
        "description": "Webhook request parameters"
      },
      "ASC.Web.Api.ApiModels.ResponseDto.ActiveConnectionsDto": {
        "type": "object",
        "properties": {
          "loginEvent": {
            "type": "integer",
            "description": "Login event",
            "format": "int32",
            "example": 1234
          },
          "items": {
            "type": "array",
            "items": {},
            "description": "Items",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ASC.Web.Api.ApiModels.ResponseDto.ActiveConnectionsItemDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "description": "Id",
            "format": "int32",
            "example": 3735
          },
          "tenantId": {
            "type": "integer",
            "description": "Tenant id",
            "format": "int32",
            "example": 1234
          },
          "userId": {
            "type": "string",
            "description": "User id",
            "format": "uuid",
            "example": "64ce79e5-a86a-4ad2-a557-e2ac9b753d1b"
          },
          "mobile": {
            "type": "boolean",
            "description": "Mobile",
            "example": true
          },
          "ip": {
            "type": "string",
            "description": "Ip",
            "nullable": true,
            "example": "some text"
          },
          "country": {
            "type": "string",
            "description": "Country",
            "nullable": true,
            "example": "some text"
          },
          "city": {
            "type": "string",
            "description": "City",
            "nullable": true,
            "example": "some text"
          },
          "browser": {
            "type": "string",
            "description": "Browser",
            "nullable": true,
            "example": "some text"
          },
          "platform": {
            "type": "string",
            "description": "Platform",
            "nullable": true,
            "example": "some text"
          },
          "date": {
            "$ref": "#/components/schemas/ASC.Api.Core.ApiDateTime"
          },
          "page": {
            "type": "string",
            "description": "Page",
            "nullable": true,
            "example": "some text"
          }
        },
        "additionalProperties": false
      },
      "ASC.Web.Api.ApiModels.ResponseDto.AdditionalWhiteLabelSettingsDto": {
        "type": "object",
        "properties": {
          "startDocsEnabled": {
            "type": "boolean",
            "description": "Specifies if the start document is enabled or not",
            "example": true
          },
          "helpCenterEnabled": {
            "type": "boolean",
            "description": "Specifies if the help center is enabled or not",
            "example": true
          },
          "feedbackAndSupportEnabled": {
            "type": "boolean",
            "description": "Specifies if feedback and support are available or not",
            "example": true
          },
          "feedbackAndSupportUrl": {
            "type": "string",
            "description": "Feedback and support URL",
            "nullable": true,
            "example": "some text"
          },
          "userForumEnabled": {
            "type": "boolean",
            "description": "Specifies if the user forum is enabled or not",
            "example": true
          },
          "userForumUrl": {
            "type": "string",
            "description": "User forum URL",
            "nullable": true,
            "example": "some text"
          },
          "videoGuidesEnabled": {
            "type": "boolean",
            "description": "Specifies if the video guides are enabled or not",
            "example": true
          },
          "videoGuidesUrl": {
            "type": "string",
            "description": "Video guides URL",
            "nullable": true,
            "example": "some text"
          },
          "salesEmail": {
            "type": "string",
            "description": "Sales email",
            "format": "email",
            "nullable": true,
            "example": "some text"
          },
          "buyUrl": {
            "type": "string",
            "description": "URL to pay for the portal",
            "nullable": true,
            "example": "some text"
          },
          "licenseAgreementsEnabled": {
            "type": "boolean",
            "description": "Specifies if the license agreements are enabled or not",
            "example": true
          },
          "isDefault": {
            "type": "boolean",
            "description": "Specifies if these settings are default or not",
            "example": true
          },
          "licenseAgreementsUrl": {
            "type": "string",
            "description": "License agreements URL",
            "nullable": true,
            "example": "some text"
          }
        },
        "additionalProperties": false
      },
      "ASC.Web.Api.ApiModels.ResponseDto.CompanyWhiteLabelSettingsDto": {
        "type": "object",
        "properties": {
          "companyName": {
            "type": "string",
            "description": "Company name",
            "nullable": true,
            "example": "some text"
          },
          "site": {
            "type": "string",
            "description": "Site",
            "nullable": true,
            "example": "some text"
          },
          "email": {
            "type": "string",
            "description": "Email",
            "format": "email",
            "nullable": true,
            "example": "Vance_Smitham50@yahoo.com"
          },
          "address": {
            "type": "string",
            "description": "Address",
            "nullable": true,
            "example": "some text"
          },
          "phone": {
            "type": "string",
            "description": "Phone number",
            "nullable": true,
            "example": "some text"
          },
          "isLicensor": {
            "type": "boolean",
            "description": "Specifies if a company is a licensor or not",
            "example": true
          },
          "isDefault": {
            "type": "boolean",
            "description": "Specifies if these settings are default or not",
            "example": true
          }
        },
        "additionalProperties": false
      },
      "ASC.Web.Api.ApiModels.ResponseDto.ConfirmDto": {
        "type": "object",
        "properties": {
          "result": {
            "$ref": "#/components/schemas/ASC.Security.Cryptography.EmailValidationKeyProvider_ValidationResult"
          },
          "roomId": {
            "type": "string",
            "description": "Room id",
            "nullable": true,
            "example": "3297"
          },
          "title": {
            "type": "string",
            "description": "Title",
            "nullable": true,
            "example": "uae_dirham_senior"
          }
        },
        "additionalProperties": false
      },
      "ASC.Web.Api.ApiModels.ResponseDto.CookieSettingsDto": {
        "type": "object",
        "properties": {
          "lifeTime": {
            "type": "integer",
            "description": "Lifetime value in minutes",
            "format": "int32",
            "example": 1234
          },
          "enabled": {
            "type": "boolean",
            "description": "Specifies if the cookie settings are enabled or not",
            "example": true
          }
        },
        "additionalProperties": false
      },
      "ASC.Web.Api.ApiModels.ResponseDto.CspDto": {
        "type": "object",
        "properties": {
          "domains": {
            "type": "array",
            "items": {},
            "description": "Domains",
            "nullable": true,
            "example": [
              "some text"
            ]
          },
          "header": {
            "type": "string",
            "description": "Header",
            "nullable": true,
            "example": "some text"
          }
        },
        "additionalProperties": false
      },
      "ASC.Web.Api.ApiModels.ResponseDto.CustomColorThemesSettingsDto": {
        "type": "object",
        "properties": {
          "themes": {
            "type": "array",
            "items": {},
            "description": "Themes",
            "nullable": true,
            "example": [
              {
                "int": 1234,
                "string": "some text",
                "boolean": true
              }
            ]
          },
          "selected": {
            "type": "integer",
            "description": "Selected",
            "format": "int32",
            "example": 1234
          },
          "limit": {
            "type": "integer",
            "description": "Limit",
            "format": "int32",
            "example": 1234
          }
        },
        "additionalProperties": false
      },
      "ASC.Web.Api.ApiModels.ResponseDto.IsDefaultWhiteLabelLogosDto": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "White label logo name",
            "nullable": true,
            "example": "Joel Gutmann"
          },
          "default": {
            "type": "boolean",
            "description": "Specifies if the white label logo is default or not",
            "example": true
          }
        },
        "additionalProperties": false
      },
      "ASC.Web.Api.ApiModels.ResponseDto.LoginSettingsDto": {
        "type": "object",
        "properties": {
          "attemptCount": {
            "type": "integer",
            "description": "Maximum number of the user attempts to log in",
            "format": "int32",
            "example": 1234
          },
          "blockTime": {
            "type": "integer",
            "description": "The time for which the user will be blocked after unsuccessful login attempts",
            "format": "int32",
            "example": 1234
          },
          "checkPeriod": {
            "type": "integer",
            "description": "The time to wait for a response from the server",
            "format": "int32",
            "example": 1234
          }
        },
        "additionalProperties": false
      },
      "ASC.Web.Api.ApiModels.ResponseDto.MigrationStatusDto": {
        "type": "object",
        "properties": {
          "progress": {
            "type": "number",
            "description": "Migration progress",
            "format": "double",
            "example": 1
          },
          "error": {
            "type": "string",
            "description": "Migration error",
            "nullable": true,
            "example": "some text"
          },
          "parseResult": {
            "$ref": "#/components/schemas/ASC.Migration.Core.Models.Api.MigrationApiInfo"
          },
          "isCompleted": {
            "type": "boolean",
            "description": "Specifies whether the migration is completed",
            "example": true
          }
        },
        "additionalProperties": false
      },
      "ASC.Web.Api.ApiModels.ResponseDto.NotificationSettingsDto": {
        "type": "object",
        "properties": {
          "type": {
            "$ref": "#/components/schemas/ASC.Web.Core.Notify.NotificationType"
          },
          "isEnabled": {
            "type": "boolean",
            "description": "Specifies if the notification type is enabled or not",
            "example": true
          }
        },
        "additionalProperties": false
      },
      "ASC.Web.Api.ApiModels.ResponseDto.PasswordSettingsDto": {
        "type": "object",
        "properties": {
          "minLength": {
            "type": "integer",
            "description": "Min length",
            "format": "int32",
            "example": 1234
          },
          "upperCase": {
            "type": "boolean",
            "description": "Upper case",
            "example": true
          },
          "digits": {
            "type": "boolean",
            "description": "Digits",
            "example": true
          },
          "specSymbols": {
            "type": "boolean",
            "description": "Spec symbols",
            "example": true
          },
          "allowedCharactersRegexStr": {
            "type": "string",
            "description": "Allowed characters regex str",
            "nullable": true,
            "example": "some text"
          },
          "digitsRegexStr": {
            "type": "string",
            "description": "Digits regex str",
            "nullable": true,
            "example": "some text"
          },
          "upperCaseRegexStr": {
            "type": "string",
            "description": "Upper case regex str",
            "nullable": true,
            "example": "some text"
          },
          "specSymbolsRegexStr": {
            "type": "string",
            "description": "Spec symbols regex str",
            "nullable": true,
            "example": "some text"
          }
        },
        "additionalProperties": false
      },
      "ASC.Web.Api.ApiModels.ResponseDto.RoomsNotificationSettingsDto": {
        "type": "object",
        "properties": {
          "disabledRooms": {
            "type": "array",
            "items": {},
            "description": "List of rooms with the disabled notifications",
            "nullable": true,
            "example": [
              {
                "int": 1234,
                "string": "some text",
                "boolean": true
              }
            ]
          }
        },
        "additionalProperties": false
      },
      "ASC.Web.Api.ApiModels.ResponseDto.TenantDto": {
        "type": "object",
        "properties": {
          "affiliateId": {
            "type": "string",
            "description": "Affiliate ID",
            "nullable": true,
            "example": "some text"
          },
          "tenantAlias": {
            "type": "string",
            "description": "Tenant alias",
            "nullable": true,
            "example": "some text"
          },
          "calls": {
            "type": "boolean",
            "description": "Specifies if the calls are available for this tenant or not",
            "example": true
          },
          "campaign": {
            "type": "string",
            "description": "Campaign",
            "nullable": true,
            "example": "some text"
          },
          "creationDateTime": {
            "type": "string",
            "description": "Creation date and time",
            "format": "date-time",
            "readOnly": true,
            "example": "2008-04-10T06:30:00.0000000+04:00"
          },
          "hostedRegion": {
            "type": "string",
            "description": "Hosted region",
            "nullable": true,
            "example": "some text"
          },
          "tenantId": {
            "type": "integer",
            "description": "Tenant ID",
            "format": "int32",
            "readOnly": true,
            "example": 1234
          },
          "industry": {
            "$ref": "#/components/schemas/ASC.Core.Tenants.TenantIndustry"
          },
          "language": {
            "type": "string",
            "description": "Language",
            "nullable": true,
            "example": "some text"
          },
          "lastModified": {
            "type": "string",
            "description": "Last modified date",
            "format": "date-time",
            "example": "2008-04-10T06:30:00.0000000+04:00"
          },
          "mappedDomain": {
            "type": "string",
            "description": "Mapped domain",
            "nullable": true,
            "example": "some text"
          },
          "name": {
            "type": "string",
            "description": "Name",
            "nullable": true,
            "example": "Connie Kassulke"
          },
          "ownerId": {
            "type": "string",
            "description": "Owner ID",
            "format": "uuid",
            "example": "75a5f745-f697-4418-b38d-0fe0d277e258"
          },
          "paymentId": {
            "type": "string",
            "description": "Payment ID",
            "nullable": true,
            "example": "some text"
          },
          "spam": {
            "type": "boolean",
            "description": "Specifies if the ONLYOFFICE newsletter is allowed or not",
            "example": true
          },
          "status": {
            "$ref": "#/components/schemas/ASC.Core.Tenants.TenantStatus"
          },
          "statusChangeDate": {
            "type": "string",
            "description": "The date and time when the tenant status was changed",
            "format": "date-time",
            "readOnly": true,
            "example": "2008-04-10T06:30:00.0000000+04:00"
          },
          "timeZone": {
            "type": "string",
            "description": "Time zone",
            "nullable": true,
            "example": "some text"
          },
          "trustedDomains": {
            "type": "array",
            "items": {},
            "description": "List of trusted domains",
            "nullable": true,
            "example": [
              "some text"
            ]
          },
          "trustedDomainsRaw": {
            "type": "string",
            "description": "Trusted domains in the string format",
            "nullable": true,
            "example": "some text"
          },
          "trustedDomainsType": {
            "$ref": "#/components/schemas/ASC.Core.Tenants.TenantTrustedDomainsType"
          },
          "version": {
            "type": "integer",
            "description": "Version",
            "format": "int32",
            "example": 1234
          },
          "versionChanged": {
            "type": "string",
            "description": "The date and time when the tenant version was changed",
            "format": "date-time",
            "example": "2008-04-10T06:30:00.0000000+04:00"
          }
        },
        "additionalProperties": false
      },
      "ASC.Web.Api.ApiModels.ResponseDto.WebPluginDto": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "Name",
            "nullable": true,
            "example": "Royal Satterfield"
          },
          "version": {
            "type": "string",
            "description": "Version",
            "nullable": true,
            "example": "some text"
          },
          "description": {
            "type": "string",
            "description": "Description",
            "nullable": true,
            "example": "some text"
          },
          "license": {
            "type": "string",
            "description": "License",
            "nullable": true,
            "example": "some text"
          },
          "author": {
            "type": "string",
            "description": "Author",
            "nullable": true,
            "example": "some text"
          },
          "homePage": {
            "type": "string",
            "description": "Home page",
            "nullable": true,
            "example": "some text"
          },
          "pluginName": {
            "type": "string",
            "description": "PluginName",
            "nullable": true,
            "example": "some text"
          },
          "scopes": {
            "type": "string",
            "description": "Scopes",
            "nullable": true,
            "example": "some text"
          },
          "image": {
            "type": "string",
            "description": "Image",
            "nullable": true,
            "example": "some text"
          },
          "createBy": {
            "$ref": "#/components/schemas/ASC.Web.Api.Models.EmployeeDto"
          },
          "createOn": {
            "type": "string",
            "description": "Create on",
            "format": "date-time",
            "example": "2008-04-10T06:30:00.0000000+04:00"
          },
          "enabled": {
            "type": "boolean",
            "description": "Enabled",
            "example": true
          },
          "system": {
            "type": "boolean",
            "description": "System",
            "example": true
          },
          "url": {
            "type": "string",
            "description": "Url",
            "nullable": true,
            "example": "some text"
          },
          "settings": {
            "type": "string",
            "description": "Settings",
            "nullable": true,
            "example": "some text"
          }
        },
        "additionalProperties": false
      },
      "ASC.Web.Api.ApiModels.ResponseDto.WebhooksConfigDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "description": "ID",
            "format": "int32",
            "example": 4883
          },
          "name": {
            "type": "string",
            "description": "Name",
            "nullable": true,
            "example": "Beulah Schulist"
          },
          "uri": {
            "type": "string",
            "description": "URI",
            "nullable": true,
            "example": "some text"
          },
          "secretKey": {
            "type": "string",
            "description": "Secret key",
            "nullable": true,
            "example": "some text"
          },
          "enabled": {
            "type": "boolean",
            "description": "Specifies if the webhooks are enabled or not",
            "example": true
          },
          "ssl": {
            "type": "boolean",
            "description": "SSL",
            "example": true
          }
        },
        "additionalProperties": false
      },
      "ASC.Web.Api.ApiModels.ResponseDto.WebhooksConfigWithStatusDto": {
        "type": "object",
        "properties": {
          "configs": {
            "$ref": "#/components/schemas/ASC.Web.Api.ApiModels.ResponseDto.WebhooksConfigDto"
          },
          "status": {
            "type": "integer",
            "description": "Status",
            "format": "int32",
            "example": 1234
          }
        },
        "additionalProperties": false
      },
      "ASC.Web.Api.ApiModels.ResponseDto.WebhooksLogDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "description": "ID",
            "format": "int32",
            "example": 4011
          },
          "configName": {
            "type": "string",
            "description": "Config name",
            "nullable": true,
            "example": "some text"
          },
          "creationTime": {
            "type": "string",
            "description": "Creation time",
            "format": "date-time",
            "example": "2008-04-10T06:30:00.0000000+04:00"
          },
          "method": {
            "type": "string",
            "description": "Method",
            "nullable": true,
            "example": "some text"
          },
          "route": {
            "type": "string",
            "description": "Route",
            "nullable": true,
            "example": "some text"
          },
          "requestHeaders": {
            "type": "string",
            "description": "Request headers",
            "nullable": true,
            "example": "some text"
          },
          "requestPayload": {
            "type": "string",
            "description": "Request payload",
            "nullable": true,
            "example": "some text"
          },
          "responseHeaders": {
            "type": "string",
            "description": "Response headers",
            "nullable": true,
            "example": "some text"
          },
          "responsePayload": {
            "type": "string",
            "description": "Response payload",
            "nullable": true,
            "example": "some text"
          },
          "status": {
            "type": "integer",
            "description": "Status",
            "format": "int32",
            "example": 1234
          },
          "delivery": {
            "type": "string",
            "description": "Delivery time",
            "format": "date-time",
            "nullable": true,
            "example": "2008-04-10T06:30:00.0000000+04:00"
          }
        },
        "additionalProperties": false
      },
      "ASC.Web.Api.ApiModels.ResponseDto.WhiteLabelItemDto": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "File name",
            "nullable": true,
            "example": "Ressie Langosh"
          },
          "size": {
            "$ref": "#/components/schemas/SixLabors.ImageSharp.Size"
          },
          "path": {
            "$ref": "#/components/schemas/ASC.Web.Api.ApiModels.ResponseDto.WhiteLabelItemPathDto"
          }
        },
        "additionalProperties": false
      },
      "ASC.Web.Api.ApiModels.ResponseDto.WhiteLabelItemPathDto": {
        "type": "object",
        "properties": {
          "light": {
            "type": "string",
            "description": "Path to the light theme logo",
            "nullable": true,
            "example": "some text"
          },
          "dark": {
            "type": "string",
            "description": "Path to the dark theme logo",
            "nullable": true,
            "example": "some text"
          }
        },
        "additionalProperties": false
      },
      "ASC.Web.Api.Models.CookieSettingsRequestsDto": {
        "type": "object",
        "properties": {
          "lifeTime": {
            "type": "integer",
            "description": "Lifetime value in minutes",
            "format": "int32",
            "example": 1234
          },
          "enabled": {
            "type": "boolean",
            "description": "Specifies if the cookie settings are enabled or not",
            "example": true
          }
        },
        "additionalProperties": false,
        "description": "Cookies settings request parameters"
      },
      "ASC.Web.Api.Models.DnsSettingsRequestsDto": {
        "type": "object",
        "properties": {
          "dnsName": {
            "type": "string",
            "description": "DNS",
            "nullable": true,
            "example": "some text"
          },
          "enable": {
            "type": "boolean",
            "description": "Enabled or not",
            "example": true
          }
        },
        "additionalProperties": false,
        "description": "DNS settings request parameters"
      },
      "ASC.Web.Api.Models.EmployeeDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid",
            "example": "{00000000-0000-0000-0000-000000000000}"
          },
          "displayName": {
            "type": "string",
            "nullable": true,
            "example": "Mike Zanyatski"
          },
          "title": {
            "type": "string",
            "nullable": true,
            "example": "Manager"
          },
          "avatar": {
            "type": "string",
            "nullable": true,
            "example": "some text"
          },
          "avatarOriginal": {
            "type": "string",
            "nullable": true,
            "example": "some text"
          },
          "avatarMax": {
            "type": "string",
            "nullable": true,
            "example": "some text"
          },
          "avatarMedium": {
            "type": "string",
            "nullable": true,
            "example": "some text"
          },
          "avatarSmall": {
            "type": "string",
            "nullable": true,
            "example": "url to small avatar"
          },
          "profileUrl": {
            "type": "string",
            "nullable": true,
            "example": "some text"
          },
          "hasAvatar": {
            "type": "boolean",
            "example": true
          },
          "isAnonim": {
            "type": "boolean",
            "example": true
          }
        },
        "additionalProperties": false
      },
      "ASC.Web.Api.Models.GroupSummaryDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid",
            "example": "{00000000-0000-0000-0000-000000000000}"
          },
          "name": {
            "type": "string",
            "nullable": true,
            "example": "Group Name"
          },
          "manager": {
            "type": "string",
            "nullable": true,
            "example": "Jake.Zazhitski"
          }
        },
        "additionalProperties": false
      },
      "ASC.Web.Api.Models.PasswordSettingsRequestsDto": {
        "type": "object",
        "properties": {
          "minLength": {
            "type": "integer",
            "description": "Minimum password length",
            "format": "int32",
            "example": 1234
          },
          "upperCase": {
            "type": "boolean",
            "description": "Specifies if the password must include the uppercase letters or not",
            "example": true
          },
          "digits": {
            "type": "boolean",
            "description": "Specifies if the password must include the digits or not",
            "example": true
          },
          "specSymbols": {
            "type": "boolean",
            "description": "Specifies if the password must include the special symbols or not",
            "example": true
          }
        },
        "additionalProperties": false,
        "description": "Password settings"
      },
      "ASC.Web.Core.Notify.NotificationType": {
        "oneOf": [
          {
            "enum": [
              "Badges",
              "RoomsActivity",
              "DailyFeed",
              "UsefullTips"
            ],
            "type": "string",
            "description": "[Badges - Badges, RoomsActivity - Rooms activity, DailyFeed - Daily feed, UsefullTips - Usefull tips]",
            "example": "Badges"
          },
          {
            "enum": [
              0,
              1,
              2,
              3
            ],
            "type": "integer",
            "description": "[0 - Badges, 1 - Rooms activity, 2 - Daily feed, 3 - Usefull tips]",
            "example": 0
          }
        ]
      },
      "ASC.Web.Core.RecaptchaType": {
        "oneOf": [
          {
            "enum": [
              "Default",
              "AndroidV2",
              "iOSV2",
              "hCaptcha"
            ],
            "type": "string",
            "description": "[Default - Default, AndroidV2 - AndroidV2, iOSV2 - iOSV2, hCaptcha - hCaptcha]",
            "example": "Default"
          },
          {
            "enum": [
              0,
              1,
              2,
              3
            ],
            "type": "integer",
            "description": "[0 - Default, 1 - AndroidV2, 2 - iOSV2, 3 - hCaptcha]",
            "example": 0
          }
        ]
      },
      "ASC.Web.Core.Utility.Settings.CustomColorThemesSettingsColorItem": {
        "type": "object",
        "properties": {
          "accent": {
            "type": "string",
            "nullable": true,
            "example": "#4781D1"
          },
          "buttons": {
            "type": "string",
            "nullable": true,
            "example": "#5299E0"
          }
        },
        "additionalProperties": false
      },
      "ASC.Web.Core.Utility.Settings.CustomColorThemesSettingsItem": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32",
            "example": 1
          },
          "name": {
            "type": "string",
            "nullable": true,
            "example": "blue"
          },
          "main": {
            "$ref": "#/components/schemas/ASC.Web.Core.Utility.Settings.CustomColorThemesSettingsColorItem"
          },
          "text": {
            "$ref": "#/components/schemas/ASC.Web.Core.Utility.Settings.CustomColorThemesSettingsColorItem"
          }
        },
        "additionalProperties": false
      },
      "ASC.Web.Core.Utility.Settings.WizardSettings": {
        "type": "object",
        "properties": {
          "completed": {
            "type": "boolean",
            "example": true
          }
        },
        "additionalProperties": false
      },
      "ASC.Web.Core.WhiteLabel.AdditionalWhiteLabelSettings": {
        "type": "object",
        "properties": {
          "startDocsEnabled": {
            "type": "boolean",
            "example": true
          },
          "helpCenterEnabled": {
            "type": "boolean",
            "example": true
          },
          "feedbackAndSupportEnabled": {
            "type": "boolean",
            "example": true
          },
          "feedbackAndSupportUrl": {
            "type": "string",
            "nullable": true,
            "example": "some text"
          },
          "userForumEnabled": {
            "type": "boolean",
            "example": true
          },
          "userForumUrl": {
            "type": "string",
            "nullable": true,
            "example": "some text"
          },
          "videoGuidesEnabled": {
            "type": "boolean",
            "example": true
          },
          "videoGuidesUrl": {
            "type": "string",
            "nullable": true,
            "example": "some text"
          },
          "salesEmail": {
            "type": "string",
            "nullable": true,
            "example": "some text"
          },
          "buyUrl": {
            "type": "string",
            "nullable": true,
            "example": "some text"
          },
          "licenseAgreementsEnabled": {
            "type": "boolean",
            "example": true
          },
          "licenseAgreementsUrl": {
            "type": "string",
            "nullable": true,
            "example": "some text"
          }
        },
        "additionalProperties": false
      },
      "ASC.Web.Core.WhiteLabel.AdditionalWhiteLabelSettingsWrapper": {
        "type": "object",
        "properties": {
          "settings": {
            "$ref": "#/components/schemas/ASC.Web.Core.WhiteLabel.AdditionalWhiteLabelSettings"
          }
        },
        "additionalProperties": false
      },
      "ASC.Web.Core.WhiteLabel.CompanyWhiteLabelSettings": {
        "type": "object",
        "properties": {
          "companyName": {
            "type": "string",
            "nullable": true,
            "example": "some text"
          },
          "site": {
            "type": "string",
            "format": "uri",
            "nullable": true,
            "example": "some text"
          },
          "email": {
            "type": "string",
            "format": "email",
            "nullable": true,
            "example": "Rubie.Braun32@hotmail.com"
          },
          "address": {
            "type": "string",
            "nullable": true,
            "example": "some text"
          },
          "phone": {
            "type": "string",
            "format": "tel",
            "nullable": true,
            "example": "some text"
          },
          "IsLicensor": {
            "type": "boolean",
            "example": true
          }
        },
        "additionalProperties": false
      },
      "ASC.Web.Core.WhiteLabel.CompanyWhiteLabelSettingsWrapper": {
        "type": "object",
        "properties": {
          "settings": {
            "$ref": "#/components/schemas/ASC.Web.Core.WhiteLabel.CompanyWhiteLabelSettings"
          }
        },
        "additionalProperties": false
      },
      "ASC.Web.Studio.Core.CustomNavigationItem": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid",
            "example": "427b6374-a681-4089-b943-b62b700ab121"
          },
          "label": {
            "type": "string",
            "nullable": true,
            "example": "Label"
          },
          "url": {
            "type": "string",
            "nullable": true,
            "example": "Url"
          },
          "bigImg": {
            "type": "string",
            "nullable": true,
            "example": "data:image\\/png;base64,iVBORw0KGgoAAAANSUhEUgAAAGQAAABkAgMAAAANjH3HAAAADFBMVEUAAADJycnJycnJycmiuNtHAAAAA3RSTlMAf4C\\/aSLHAAAAyElEQVR4Xu3NsQ3CMBSE4YubFB4ilHQegdGSjWACvEpGoEyBYiL05AdnXUGHolx10lf82MmOpfLeo5UoJUhBlpKkRCnhUy7b9XCWkqQMUkYlXVHSf8kTvkHKqKQrSnopg5SRxTMklLmS1MwaSWpmCSQ1MyOzWGZCYrEMEFksA4QqlAFuJJYBcCKxjM3FMySeIfEMC2dMOONCGZZgmdr1ly3TSrJMK9EyJBaaGrHQikYstAiJZRYSyiQEdyg5S8Evckih\\/YPscsdej0H6dc0TYw4AAAAASUVORK5CYII="
          },
          "smallImg": {
            "type": "string",
            "nullable": true,
            "example": "data:image\\/png;base64,iVBORw0KGgoAAAANSUhEUgAAABAAAAAQCAYAAAAf8\\/9hAAAAUUlEQVR4AWMY\\/KC5o\\/cAEP9HxxgKcSpCGELYADyu2E6mAQjNxBlAWPNxkHdwGkBIM3KYYDUAr2ZCAE+oH8eujrAXDsA0k2EAAtDXAGLx4MpsADUgvkRKUlqfAAAAAElFTkSuQmCC"
          },
          "showInMenu": {
            "type": "boolean",
            "example": true
          },
          "showOnHomePage": {
            "type": "boolean",
            "example": true
          }
        },
        "additionalProperties": false
      },
      "ASC.Web.Studio.Core.EmailActivationSettings": {
        "type": "object",
        "properties": {
          "show": {
            "type": "boolean",
            "example": true
          }
        },
        "additionalProperties": false
      },
      "ASC.Web.Studio.Core.TipsSettings": {
        "type": "object",
        "properties": {
          "show": {
            "type": "boolean",
            "example": true
          }
        },
        "additionalProperties": false
      },
      "ASC.Web.Studio.UserControls.Management.AuthKey": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "nullable": true,
            "example": "Bernice Roob"
          },
          "value": {
            "type": "string",
            "nullable": true,
            "example": "some text"
          },
          "title": {
            "type": "string",
            "nullable": true,
            "example": "handcrafted"
          }
        },
        "additionalProperties": false
      },
      "ASC.Web.Studio.UserControls.Management.SingleSignOnSettings.SsoCertificate": {
        "type": "object",
        "properties": {
          "selfSigned": {
            "type": "boolean",
            "example": true
          },
          "crt": {
            "type": "string",
            "nullable": true,
            "example": "some text"
          },
          "key": {
            "type": "string",
            "nullable": true,
            "example": "some text"
          },
          "action": {
            "type": "string",
            "nullable": true,
            "example": "some text"
          },
          "domainName": {
            "type": "string",
            "nullable": true,
            "example": "some text"
          },
          "startDate": {
            "type": "string",
            "format": "date-time",
            "example": "2008-04-10T06:30:00.0000000+04:00"
          },
          "expiredDate": {
            "type": "string",
            "format": "date-time",
            "example": "2008-04-10T06:30:00.0000000+04:00"
          }
        },
        "additionalProperties": false
      },
      "ASC.Web.Studio.UserControls.Management.SingleSignOnSettings.SsoFieldMapping": {
        "type": "object",
        "properties": {
          "firstName": {
            "type": "string",
            "nullable": true,
            "example": "Magdalen"
          },
          "lastName": {
            "type": "string",
            "nullable": true,
            "example": "Beier"
          },
          "email": {
            "type": "string",
            "format": "email",
            "nullable": true,
            "example": "Alena_Ledner@gmail.com"
          },
          "title": {
            "type": "string",
            "nullable": true,
            "example": "parse_experiences"
          },
          "location": {
            "type": "string",
            "nullable": true,
            "example": "031 White Avenue, Ernserland, Senegal"
          },
          "phone": {
            "type": "string",
            "nullable": true,
            "example": "some text"
          }
        },
        "additionalProperties": false
      },
      "ASC.Web.Studio.UserControls.Management.SingleSignOnSettings.SsoIdpCertificateAdvanced": {
        "type": "object",
        "properties": {
          "verifyAlgorithm": {
            "type": "string",
            "nullable": true,
            "example": "some text"
          },
          "verifyAuthResponsesSign": {
            "type": "boolean",
            "example": true
          },
          "verifyLogoutRequestsSign": {
            "type": "boolean",
            "example": true
          },
          "verifyLogoutResponsesSign": {
            "type": "boolean",
            "example": true
          },
          "decryptAlgorithm": {
            "type": "string",
            "nullable": true,
            "example": "some text"
          },
          "decryptAssertions": {
            "type": "boolean",
            "example": true
          }
        },
        "additionalProperties": false
      },
      "ASC.Web.Studio.UserControls.Management.SingleSignOnSettings.SsoIdpSettings": {
        "type": "object",
        "properties": {
          "entityId": {
            "type": "string",
            "nullable": true,
            "example": "some text"
          },
          "ssoUrl": {
            "type": "string",
            "nullable": true,
            "example": "some text"
          },
          "ssoBinding": {
            "type": "string",
            "nullable": true,
            "example": "some text"
          },
          "sloUrl": {
            "type": "string",
            "nullable": true,
            "example": "some text"
          },
          "sloBinding": {
            "type": "string",
            "nullable": true,
            "example": "some text"
          },
          "nameIdFormat": {
            "type": "string",
            "nullable": true,
            "example": "some text"
          }
        },
        "additionalProperties": false
      },
      "ASC.Web.Studio.UserControls.Management.SingleSignOnSettings.SsoSettingsV2": {
        "type": "object",
        "properties": {
          "enableSso": {
            "type": "boolean",
            "nullable": true,
            "example": true
          },
          "idpSettings": {
            "$ref": "#/components/schemas/ASC.Web.Studio.UserControls.Management.SingleSignOnSettings.SsoIdpSettings"
          },
          "idpCertificates": {
            "type": "array",
            "items": {},
            "nullable": true
          },
          "idpCertificateAdvanced": {
            "$ref": "#/components/schemas/ASC.Web.Studio.UserControls.Management.SingleSignOnSettings.SsoIdpCertificateAdvanced"
          },
          "spLoginLabel": {
            "type": "string",
            "nullable": true,
            "example": "some text"
          },
          "spCertificates": {
            "type": "array",
            "items": {},
            "nullable": true
          },
          "spCertificateAdvanced": {
            "$ref": "#/components/schemas/ASC.Web.Studio.UserControls.Management.SingleSignOnSettings.SsoSpCertificateAdvanced"
          },
          "fieldMapping": {
            "$ref": "#/components/schemas/ASC.Web.Studio.UserControls.Management.SingleSignOnSettings.SsoFieldMapping"
          },
          "hideAuthPage": {
            "type": "boolean",
            "example": true
          }
        },
        "additionalProperties": false
      },
      "ASC.Web.Studio.UserControls.Management.SingleSignOnSettings.SsoSpCertificateAdvanced": {
        "type": "object",
        "properties": {
          "signingAlgorithm": {
            "type": "string",
            "nullable": true,
            "example": "some text"
          },
          "signAuthRequests": {
            "type": "boolean",
            "example": true
          },
          "signLogoutRequests": {
            "type": "boolean",
            "example": true
          },
          "signLogoutResponses": {
            "type": "boolean",
            "example": true
          },
          "encryptAlgorithm": {
            "type": "string",
            "nullable": true,
            "example": "some text"
          },
          "decryptAlgorithm": {
            "type": "string",
            "nullable": true,
            "example": "some text"
          },
          "encryptAssertions": {
            "type": "boolean",
            "example": true
          }
        },
        "additionalProperties": false
      },
      "ASC.Web.Studio.Utility.ConfirmType": {
        "oneOf": [
          {
            "enum": [
              "EmpInvite",
              "LinkInvite",
              "PortalSuspend",
              "PortalContinue",
              "PortalRemove",
              "DnsChange",
              "PortalOwnerChange",
              "Activation",
              "EmailChange",
              "EmailActivation",
              "PasswordChange",
              "ProfileRemove",
              "PhoneActivation",
              "PhoneAuth",
              "Auth",
              "TfaActivation",
              "TfaAuth",
              "Wizard"
            ],
            "type": "string",
            "description": "[EmpInvite - Emp invite, LinkInvite - Link invite, PortalSuspend - Portal suspend, PortalContinue - Portal continue, PortalRemove - Portal remove, DnsChange - Dns change, PortalOwnerChange - Portal owner change, Activation - Activation, EmailChange - Email change, EmailActivation - Email activation, PasswordChange - Password change, ProfileRemove - Profile remove, PhoneActivation - Phone activation, PhoneAuth - Phone auth, Auth - Auth, TfaActivation - Tfa activation, TfaAuth - Tfa auth, Wizard - Wizard]",
            "example": "EmpInvite"
          },
          {
            "enum": [
              0,
              1,
              2,
              3,
              4,
              5,
              6,
              7,
              8,
              9,
              10,
              11,
              12,
              13,
              14,
              15,
              16,
              17
            ],
            "type": "integer",
            "description": "[0 - Emp invite, 1 - Link invite, 2 - Portal suspend, 3 - Portal continue, 4 - Portal remove, 5 - Dns change, 6 - Portal owner change, 7 - Activation, 8 - Email change, 9 - Email activation, 10 - Password change, 11 - Profile remove, 12 - Phone activation, 13 - Phone auth, 14 - Auth, 15 - Tfa activation, 16 - Tfa auth, 17 - Wizard]",
            "example": 0
          }
        ]
      },
      "ASC.Webhooks.Core.Webhook": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32",
            "example": 5486
          },
          "route": {
            "type": "string",
            "nullable": true,
            "example": "some text"
          },
          "method": {
            "type": "string",
            "nullable": true,
            "example": "some text"
          },
          "disable": {
            "type": "boolean",
            "example": true
          },
          "name": {
            "type": "string",
            "nullable": true,
            "readOnly": true,
            "example": "Irwin Lehner"
          },
          "description": {
            "type": "string",
            "nullable": true,
            "readOnly": true,
            "example": "some text"
          }
        },
        "additionalProperties": false
      },
      "ASC.Webhooks.Core.WebhookGroupStatus": {
        "oneOf": [
          {
            "enum": [
              "None",
              "NotSent",
              "Status2xx",
              "Status3xx",
              "Status4xx",
              "Status5xx"
            ],
            "type": "string",
            "description": "[None - None, NotSent - Not sent, Status2xx - Status2xx, Status3xx - Status3xx, Status4xx - Status4xx, Status5xx - Status5xx]",
            "example": "None"
          },
          {
            "enum": [
              0,
              1,
              2,
              4,
              8,
              16
            ],
            "type": "integer",
            "description": "[0 - None, 1 - Not sent, 2 - Status2xx, 4 - Status3xx, 8 - Status4xx, 16 - Status5xx]",
            "example": 0
          }
        ]
      },
      "Google.Authenticator.SetupCode": {
        "type": "object",
        "properties": {
          "account": {
            "type": "string",
            "nullable": true,
            "readOnly": true,
            "example": "some text"
          },
          "manualEntryKey": {
            "type": "string",
            "nullable": true,
            "readOnly": true,
            "example": "some text"
          },
          "qrCodeSetupImageUrl": {
            "type": "string",
            "nullable": true,
            "readOnly": true,
            "example": "some text"
          }
        },
        "additionalProperties": false
      },
      "SixLabors.ImageSharp.Size": {
        "type": "object",
        "properties": {
          "width": {
            "type": "integer",
            "format": "int32",
            "example": 1234
          },
          "height": {
            "type": "integer",
            "format": "int32",
            "example": 1234
          },
          "isEmpty": {
            "type": "boolean",
            "readOnly": true,
            "example": true
          }
        },
        "additionalProperties": false
      },
      "System.Func.ASC.Core.Common.Configuration.DataStoreConsumer.ASC.Core.Common.Configuration.DataStoreConsumer": {
        "type": "object",
        "properties": {
          "target": {
            "nullable": true,
            "readOnly": true,
            "example": {
              "int": 1234,
              "string": "some text",
              "boolean": true
            }
          },
          "method": {
            "$ref": "#/components/schemas/System.Reflection.MethodInfo"
          }
        },
        "additionalProperties": false
      },
      "System.IntPtr": {
        "type": "object",
        "additionalProperties": false
      },
      "System.ModuleHandle": {
        "type": "object",
        "properties": {
          "mdStreamVersion": {
            "type": "integer",
            "format": "int32",
            "readOnly": true,
            "example": 1234
          }
        },
        "additionalProperties": false
      },
      "System.Reflection.Assembly": {
        "type": "object",
        "properties": {
          "definedTypes": {
            "type": "array",
            "items": {},
            "nullable": true,
            "readOnly": true,
            "example": [
              {
                "int": 1234,
                "string": "some text",
                "boolean": true
              }
            ]
          },
          "exportedTypes": {
            "type": "array",
            "items": {},
            "nullable": true,
            "readOnly": true,
            "example": [
              {
                "int": 1234,
                "string": "some text",
                "boolean": true
              }
            ]
          },
          "codeBase": {
            "type": "string",
            "nullable": true,
            "readOnly": true,
            "example": "some text",
            "deprecated": true
          },
          "entryPoint": {
            "$ref": "#/components/schemas/System.Reflection.MethodInfo"
          },
          "fullName": {
            "type": "string",
            "nullable": true,
            "readOnly": true,
            "example": "some text"
          },
          "imageRuntimeVersion": {
            "type": "string",
            "nullable": true,
            "readOnly": true,
            "example": "some text"
          },
          "isDynamic": {
            "type": "boolean",
            "readOnly": true,
            "example": true
          },
          "location": {
            "type": "string",
            "nullable": true,
            "readOnly": true,
            "example": "0794 Rebekah Streets, Funkland, Reunion"
          },
          "reflectionOnly": {
            "type": "boolean",
            "readOnly": true,
            "example": true
          },
          "isCollectible": {
            "type": "boolean",
            "readOnly": true,
            "example": true
          },
          "isFullyTrusted": {
            "type": "boolean",
            "readOnly": true,
            "example": true
          },
          "customAttributes": {
            "type": "array",
            "items": {},
            "nullable": true,
            "readOnly": true,
            "example": [
              {
                "int": 1234,
                "string": "some text",
                "boolean": true
              }
            ]
          },
          "escapedCodeBase": {
            "type": "string",
            "nullable": true,
            "readOnly": true,
            "example": "some text",
            "deprecated": true
          },
          "manifestModule": {
            "$ref": "#/components/schemas/System.Reflection.Module"
          },
          "modules": {
            "type": "array",
            "items": {},
            "nullable": true,
            "readOnly": true,
            "example": [
              {
                "int": 1234,
                "string": "some text",
                "boolean": true
              }
            ]
          },
          "globalAssemblyCache": {
            "type": "boolean",
            "readOnly": true,
            "example": true,
            "deprecated": true
          },
          "hostContext": {
            "type": "integer",
            "format": "int64",
            "readOnly": true,
            "example": 1234
          },
          "securityRuleSet": {
            "$ref": "#/components/schemas/System.Security.SecurityRuleSet"
          }
        },
        "additionalProperties": false
      },
      "System.Reflection.CallingConventions": {
        "enum": [
          1,
          2,
          3,
          32,
          64
        ],
        "type": "integer",
        "format": "int32"
      },
      "System.Reflection.ConstructorInfo": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "nullable": true,
            "readOnly": true,
            "example": "Alfred Hilll"
          },
          "declaringType": {
            "$ref": "#/components/schemas/System.Type"
          },
          "reflectedType": {
            "$ref": "#/components/schemas/System.Type"
          },
          "module": {
            "$ref": "#/components/schemas/System.Reflection.Module"
          },
          "customAttributes": {
            "type": "array",
            "items": {},
            "nullable": true,
            "readOnly": true,
            "example": [
              {
                "int": 1234,
                "string": "some text",
                "boolean": true
              }
            ]
          },
          "isCollectible": {
            "type": "boolean",
            "readOnly": true,
            "example": true
          },
          "metadataToken": {
            "type": "integer",
            "format": "int32",
            "readOnly": true,
            "example": 1234
          },
          "attributes": {
            "$ref": "#/components/schemas/System.Reflection.MethodAttributes"
          },
          "methodImplementationFlags": {
            "$ref": "#/components/schemas/System.Reflection.MethodImplAttributes"
          },
          "callingConvention": {
            "$ref": "#/components/schemas/System.Reflection.CallingConventions"
          },
          "isAbstract": {
            "type": "boolean",
            "readOnly": true,
            "example": true
          },
          "isConstructor": {
            "type": "boolean",
            "readOnly": true,
            "example": true
          },
          "isFinal": {
            "type": "boolean",
            "readOnly": true,
            "example": true
          },
          "isHideBySig": {
            "type": "boolean",
            "readOnly": true,
            "example": true
          },
          "isSpecialName": {
            "type": "boolean",
            "readOnly": true,
            "example": true
          },
          "isStatic": {
            "type": "boolean",
            "readOnly": true,
            "example": true
          },
          "isVirtual": {
            "type": "boolean",
            "readOnly": true,
            "example": true
          },
          "isAssembly": {
            "type": "boolean",
            "readOnly": true,
            "example": true
          },
          "isFamily": {
            "type": "boolean",
            "readOnly": true,
            "example": true
          },
          "isFamilyAndAssembly": {
            "type": "boolean",
            "readOnly": true,
            "example": true
          },
          "isFamilyOrAssembly": {
            "type": "boolean",
            "readOnly": true,
            "example": true
          },
          "isPrivate": {
            "type": "boolean",
            "readOnly": true,
            "example": true
          },
          "isPublic": {
            "type": "boolean",
            "readOnly": true,
            "example": true
          },
          "isConstructedGenericMethod": {
            "type": "boolean",
            "readOnly": true,
            "example": true
          },
          "isGenericMethod": {
            "type": "boolean",
            "readOnly": true,
            "example": true
          },
          "isGenericMethodDefinition": {
            "type": "boolean",
            "readOnly": true,
            "example": true
          },
          "containsGenericParameters": {
            "type": "boolean",
            "readOnly": true,
            "example": true
          },
          "methodHandle": {
            "$ref": "#/components/schemas/System.RuntimeMethodHandle"
          },
          "isSecurityCritical": {
            "type": "boolean",
            "readOnly": true,
            "example": true
          },
          "isSecuritySafeCritical": {
            "type": "boolean",
            "readOnly": true,
            "example": true
          },
          "isSecurityTransparent": {
            "type": "boolean",
            "readOnly": true,
            "example": true
          },
          "memberType": {
            "$ref": "#/components/schemas/System.Reflection.MemberTypes"
          }
        },
        "additionalProperties": false
      },
      "System.Reflection.CustomAttributeData": {
        "type": "object",
        "properties": {
          "attributeType": {
            "$ref": "#/components/schemas/System.Type"
          },
          "constructor": {
            "$ref": "#/components/schemas/System.Reflection.ConstructorInfo"
          },
          "constructorArguments": {
            "type": "array",
            "items": {},
            "nullable": true,
            "readOnly": true
          },
          "namedArguments": {
            "type": "array",
            "items": {},
            "nullable": true,
            "readOnly": true
          }
        },
        "additionalProperties": false
      },
      "System.Reflection.CustomAttributeNamedArgument": {
        "type": "object",
        "properties": {
          "memberInfo": {
            "$ref": "#/components/schemas/System.Reflection.MemberInfo"
          },
          "typedValue": {
            "$ref": "#/components/schemas/System.Reflection.CustomAttributeTypedArgument"
          },
          "memberName": {
            "type": "string",
            "nullable": true,
            "readOnly": true,
            "example": "some text"
          },
          "isField": {
            "type": "boolean",
            "readOnly": true,
            "example": true
          }
        },
        "additionalProperties": false
      },
      "System.Reflection.CustomAttributeTypedArgument": {
        "type": "object",
        "properties": {
          "argumentType": {
            "$ref": "#/components/schemas/System.Type"
          },
          "value": {
            "nullable": true,
            "example": {
              "int": 1234,
              "string": "some text",
              "boolean": true
            }
          }
        },
        "additionalProperties": false
      },
      "System.Reflection.EventAttributes": {
        "enum": [
          0,
          512,
          1024
        ],
        "type": "integer",
        "format": "int32"
      },
      "System.Reflection.EventInfo": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "nullable": true,
            "readOnly": true,
            "example": "Darby Grimes"
          },
          "declaringType": {
            "$ref": "#/components/schemas/System.Type"
          },
          "reflectedType": {
            "$ref": "#/components/schemas/System.Type"
          },
          "module": {
            "$ref": "#/components/schemas/System.Reflection.Module"
          },
          "customAttributes": {
            "type": "array",
            "items": {},
            "nullable": true,
            "readOnly": true,
            "example": [
              {
                "int": 1234,
                "string": "some text",
                "boolean": true
              }
            ]
          },
          "isCollectible": {
            "type": "boolean",
            "readOnly": true,
            "example": true
          },
          "metadataToken": {
            "type": "integer",
            "format": "int32",
            "readOnly": true,
            "example": 1234
          },
          "memberType": {
            "$ref": "#/components/schemas/System.Reflection.MemberTypes"
          },
          "attributes": {
            "$ref": "#/components/schemas/System.Reflection.EventAttributes"
          },
          "isSpecialName": {
            "type": "boolean",
            "readOnly": true,
            "example": true
          },
          "addMethod": {
            "$ref": "#/components/schemas/System.Reflection.MethodInfo"
          },
          "removeMethod": {
            "$ref": "#/components/schemas/System.Reflection.MethodInfo"
          },
          "raiseMethod": {
            "$ref": "#/components/schemas/System.Reflection.MethodInfo"
          },
          "isMulticast": {
            "type": "boolean",
            "readOnly": true,
            "example": true
          },
          "eventHandlerType": {
            "$ref": "#/components/schemas/System.Type"
          }
        },
        "additionalProperties": false
      },
      "System.Reflection.FieldAttributes": {
        "enum": [
          0,
          1,
          2,
          3,
          4,
          5,
          6,
          7,
          16,
          32,
          64,
          128,
          256,
          512,
          1024,
          4096,
          8192,
          32768,
          38144
        ],
        "type": "integer",
        "format": "int32"
      },
      "System.Reflection.FieldInfo": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "nullable": true,
            "readOnly": true,
            "example": "Beth Schmitt"
          },
          "declaringType": {
            "$ref": "#/components/schemas/System.Type"
          },
          "reflectedType": {
            "$ref": "#/components/schemas/System.Type"
          },
          "module": {
            "$ref": "#/components/schemas/System.Reflection.Module"
          },
          "customAttributes": {
            "type": "array",
            "items": {},
            "nullable": true,
            "readOnly": true,
            "example": [
              {
                "int": 1234,
                "string": "some text",
                "boolean": true
              }
            ]
          },
          "isCollectible": {
            "type": "boolean",
            "readOnly": true,
            "example": true
          },
          "metadataToken": {
            "type": "integer",
            "format": "int32",
            "readOnly": true,
            "example": 1234
          },
          "memberType": {
            "$ref": "#/components/schemas/System.Reflection.MemberTypes"
          },
          "attributes": {
            "$ref": "#/components/schemas/System.Reflection.FieldAttributes"
          },
          "fieldType": {
            "$ref": "#/components/schemas/System.Type"
          },
          "isInitOnly": {
            "type": "boolean",
            "readOnly": true,
            "example": true
          },
          "isLiteral": {
            "type": "boolean",
            "readOnly": true,
            "example": true
          },
          "isNotSerialized": {
            "type": "boolean",
            "readOnly": true,
            "example": true,
            "deprecated": true
          },
          "isPinvokeImpl": {
            "type": "boolean",
            "readOnly": true,
            "example": true
          },
          "isSpecialName": {
            "type": "boolean",
            "readOnly": true,
            "example": true
          },
          "isStatic": {
            "type": "boolean",
            "readOnly": true,
            "example": true
          },
          "isAssembly": {
            "type": "boolean",
            "readOnly": true,
            "example": true
          },
          "isFamily": {
            "type": "boolean",
            "readOnly": true,
            "example": true
          },
          "isFamilyAndAssembly": {
            "type": "boolean",
            "readOnly": true,
            "example": true
          },
          "isFamilyOrAssembly": {
            "type": "boolean",
            "readOnly": true,
            "example": true
          },
          "isPrivate": {
            "type": "boolean",
            "readOnly": true,
            "example": true
          },
          "isPublic": {
            "type": "boolean",
            "readOnly": true,
            "example": true
          },
          "isSecurityCritical": {
            "type": "boolean",
            "readOnly": true,
            "example": true
          },
          "isSecuritySafeCritical": {
            "type": "boolean",
            "readOnly": true,
            "example": true
          },
          "isSecurityTransparent": {
            "type": "boolean",
            "readOnly": true,
            "example": true
          },
          "fieldHandle": {
            "$ref": "#/components/schemas/System.RuntimeFieldHandle"
          }
        },
        "additionalProperties": false
      },
      "System.Reflection.GenericParameterAttributes": {
        "enum": [
          0,
          1,
          2,
          3,
          4,
          8,
          16,
          28
        ],
        "type": "integer",
        "format": "int32"
      },
      "System.Reflection.ICustomAttributeProvider": {
        "type": "object",
        "additionalProperties": false
      },
      "System.Reflection.MemberInfo": {
        "type": "object",
        "properties": {
          "memberType": {
            "$ref": "#/components/schemas/System.Reflection.MemberTypes"
          },
          "name": {
            "type": "string",
            "nullable": true,
            "readOnly": true,
            "example": "Howard Pacocha"
          },
          "declaringType": {
            "$ref": "#/components/schemas/System.Type"
          },
          "reflectedType": {
            "$ref": "#/components/schemas/System.Type"
          },
          "module": {
            "$ref": "#/components/schemas/System.Reflection.Module"
          },
          "customAttributes": {
            "type": "array",
            "items": {},
            "nullable": true,
            "readOnly": true,
            "example": [
              {
                "int": 1234,
                "string": "some text",
                "boolean": true
              }
            ]
          },
          "isCollectible": {
            "type": "boolean",
            "readOnly": true,
            "example": true
          },
          "metadataToken": {
            "type": "integer",
            "format": "int32",
            "readOnly": true,
            "example": 1234
          }
        },
        "additionalProperties": false
      },
      "System.Reflection.MemberTypes": {
        "enum": [
          1,
          2,
          4,
          8,
          16,
          32,
          64,
          128,
          191
        ],
        "type": "integer",
        "format": "int32"
      },
      "System.Reflection.MethodAttributes": {
        "enum": [
          0,
          1,
          2,
          3,
          4,
          5,
          6,
          7,
          8,
          16,
          32,
          64,
          128,
          256,
          512,
          1024,
          2048,
          4096,
          8192,
          16384,
          32768,
          53248
        ],
        "type": "integer",
        "format": "int32"
      },
      "System.Reflection.MethodBase": {
        "type": "object",
        "properties": {
          "memberType": {
            "$ref": "#/components/schemas/System.Reflection.MemberTypes"
          },
          "name": {
            "type": "string",
            "nullable": true,
            "readOnly": true,
            "example": "Angel Farrell"
          },
          "declaringType": {
            "$ref": "#/components/schemas/System.Type"
          },
          "reflectedType": {
            "$ref": "#/components/schemas/System.Type"
          },
          "module": {
            "$ref": "#/components/schemas/System.Reflection.Module"
          },
          "customAttributes": {
            "type": "array",
            "items": {},
            "nullable": true,
            "readOnly": true,
            "example": [
              {
                "int": 1234,
                "string": "some text",
                "boolean": true
              }
            ]
          },
          "isCollectible": {
            "type": "boolean",
            "readOnly": true,
            "example": true
          },
          "metadataToken": {
            "type": "integer",
            "format": "int32",
            "readOnly": true,
            "example": 1234
          },
          "attributes": {
            "$ref": "#/components/schemas/System.Reflection.MethodAttributes"
          },
          "methodImplementationFlags": {
            "$ref": "#/components/schemas/System.Reflection.MethodImplAttributes"
          },
          "callingConvention": {
            "$ref": "#/components/schemas/System.Reflection.CallingConventions"
          },
          "isAbstract": {
            "type": "boolean",
            "readOnly": true,
            "example": true
          },
          "isConstructor": {
            "type": "boolean",
            "readOnly": true,
            "example": true
          },
          "isFinal": {
            "type": "boolean",
            "readOnly": true,
            "example": true
          },
          "isHideBySig": {
            "type": "boolean",
            "readOnly": true,
            "example": true
          },
          "isSpecialName": {
            "type": "boolean",
            "readOnly": true,
            "example": true
          },
          "isStatic": {
            "type": "boolean",
            "readOnly": true,
            "example": true
          },
          "isVirtual": {
            "type": "boolean",
            "readOnly": true,
            "example": true
          },
          "isAssembly": {
            "type": "boolean",
            "readOnly": true,
            "example": true
          },
          "isFamily": {
            "type": "boolean",
            "readOnly": true,
            "example": true
          },
          "isFamilyAndAssembly": {
            "type": "boolean",
            "readOnly": true,
            "example": true
          },
          "isFamilyOrAssembly": {
            "type": "boolean",
            "readOnly": true,
            "example": true
          },
          "isPrivate": {
            "type": "boolean",
            "readOnly": true,
            "example": true
          },
          "isPublic": {
            "type": "boolean",
            "readOnly": true,
            "example": true
          },
          "isConstructedGenericMethod": {
            "type": "boolean",
            "readOnly": true,
            "example": true
          },
          "isGenericMethod": {
            "type": "boolean",
            "readOnly": true,
            "example": true
          },
          "isGenericMethodDefinition": {
            "type": "boolean",
            "readOnly": true,
            "example": true
          },
          "containsGenericParameters": {
            "type": "boolean",
            "readOnly": true,
            "example": true
          },
          "methodHandle": {
            "$ref": "#/components/schemas/System.RuntimeMethodHandle"
          },
          "isSecurityCritical": {
            "type": "boolean",
            "readOnly": true,
            "example": true
          },
          "isSecuritySafeCritical": {
            "type": "boolean",
            "readOnly": true,
            "example": true
          },
          "isSecurityTransparent": {
            "type": "boolean",
            "readOnly": true,
            "example": true
          }
        },
        "additionalProperties": false
      },
      "System.Reflection.MethodImplAttributes": {
        "enum": [
          0,
          1,
          2,
          3,
          4,
          8,
          16,
          32,
          64,
          128,
          256,
          512,
          4096,
          65535
        ],
        "type": "integer",
        "format": "int32"
      },
      "System.Reflection.MethodInfo": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "nullable": true,
            "readOnly": true,
            "example": "Alverta Hettinger"
          },
          "declaringType": {
            "$ref": "#/components/schemas/System.Type"
          },
          "reflectedType": {
            "$ref": "#/components/schemas/System.Type"
          },
          "module": {
            "$ref": "#/components/schemas/System.Reflection.Module"
          },
          "customAttributes": {
            "type": "array",
            "items": {},
            "nullable": true,
            "readOnly": true,
            "example": [
              {
                "int": 1234,
                "string": "some text",
                "boolean": true
              }
            ]
          },
          "isCollectible": {
            "type": "boolean",
            "readOnly": true,
            "example": true
          },
          "metadataToken": {
            "type": "integer",
            "format": "int32",
            "readOnly": true,
            "example": 1234
          },
          "attributes": {
            "$ref": "#/components/schemas/System.Reflection.MethodAttributes"
          },
          "methodImplementationFlags": {
            "$ref": "#/components/schemas/System.Reflection.MethodImplAttributes"
          },
          "callingConvention": {
            "$ref": "#/components/schemas/System.Reflection.CallingConventions"
          },
          "isAbstract": {
            "type": "boolean",
            "readOnly": true,
            "example": true
          },
          "isConstructor": {
            "type": "boolean",
            "readOnly": true,
            "example": true
          },
          "isFinal": {
            "type": "boolean",
            "readOnly": true,
            "example": true
          },
          "isHideBySig": {
            "type": "boolean",
            "readOnly": true,
            "example": true
          },
          "isSpecialName": {
            "type": "boolean",
            "readOnly": true,
            "example": true
          },
          "isStatic": {
            "type": "boolean",
            "readOnly": true,
            "example": true
          },
          "isVirtual": {
            "type": "boolean",
            "readOnly": true,
            "example": true
          },
          "isAssembly": {
            "type": "boolean",
            "readOnly": true,
            "example": true
          },
          "isFamily": {
            "type": "boolean",
            "readOnly": true,
            "example": true
          },
          "isFamilyAndAssembly": {
            "type": "boolean",
            "readOnly": true,
            "example": true
          },
          "isFamilyOrAssembly": {
            "type": "boolean",
            "readOnly": true,
            "example": true
          },
          "isPrivate": {
            "type": "boolean",
            "readOnly": true,
            "example": true
          },
          "isPublic": {
            "type": "boolean",
            "readOnly": true,
            "example": true
          },
          "isConstructedGenericMethod": {
            "type": "boolean",
            "readOnly": true,
            "example": true
          },
          "isGenericMethod": {
            "type": "boolean",
            "readOnly": true,
            "example": true
          },
          "isGenericMethodDefinition": {
            "type": "boolean",
            "readOnly": true,
            "example": true
          },
          "containsGenericParameters": {
            "type": "boolean",
            "readOnly": true,
            "example": true
          },
          "methodHandle": {
            "$ref": "#/components/schemas/System.RuntimeMethodHandle"
          },
          "isSecurityCritical": {
            "type": "boolean",
            "readOnly": true,
            "example": true
          },
          "isSecuritySafeCritical": {
            "type": "boolean",
            "readOnly": true,
            "example": true
          },
          "isSecurityTransparent": {
            "type": "boolean",
            "readOnly": true,
            "example": true
          },
          "memberType": {
            "$ref": "#/components/schemas/System.Reflection.MemberTypes"
          },
          "returnParameter": {
            "$ref": "#/components/schemas/System.Reflection.ParameterInfo"
          },
          "returnType": {
            "$ref": "#/components/schemas/System.Type"
          },
          "returnTypeCustomAttributes": {
            "$ref": "#/components/schemas/System.Reflection.ICustomAttributeProvider"
          }
        },
        "additionalProperties": false
      },
      "System.Reflection.Module": {
        "type": "object",
        "properties": {
          "assembly": {
            "$ref": "#/components/schemas/System.Reflection.Assembly"
          },
          "fullyQualifiedName": {
            "type": "string",
            "nullable": true,
            "readOnly": true,
            "example": "some text"
          },
          "name": {
            "type": "string",
            "nullable": true,
            "readOnly": true,
            "example": "Rebecca Ritchie"
          },
          "mdStreamVersion": {
            "type": "integer",
            "format": "int32",
            "readOnly": true,
            "example": 1234
          },
          "moduleVersionId": {
            "type": "string",
            "format": "uuid",
            "readOnly": true,
            "example": "75a5f745-f697-4418-b38d-0fe0d277e258"
          },
          "scopeName": {
            "type": "string",
            "nullable": true,
            "readOnly": true,
            "example": "some text"
          },
          "moduleHandle": {
            "$ref": "#/components/schemas/System.ModuleHandle"
          },
          "customAttributes": {
            "type": "array",
            "items": {},
            "nullable": true,
            "readOnly": true,
            "example": [
              {
                "int": 1234,
                "string": "some text",
                "boolean": true
              }
            ]
          },
          "metadataToken": {
            "type": "integer",
            "format": "int32",
            "readOnly": true,
            "example": 1234
          }
        },
        "additionalProperties": false
      },
      "System.Reflection.ParameterAttributes": {
        "enum": [
          0,
          1,
          2,
          4,
          8,
          16,
          4096,
          8192,
          16384,
          32768,
          61440
        ],
        "type": "integer",
        "format": "int32"
      },
      "System.Reflection.ParameterInfo": {
        "type": "object",
        "properties": {
          "attributes": {
            "$ref": "#/components/schemas/System.Reflection.ParameterAttributes"
          },
          "member": {
            "$ref": "#/components/schemas/System.Reflection.MemberInfo"
          },
          "name": {
            "type": "string",
            "nullable": true,
            "readOnly": true,
            "example": "Roger Hilpert"
          },
          "parameterType": {
            "$ref": "#/components/schemas/System.Type"
          },
          "position": {
            "type": "integer",
            "format": "int32",
            "readOnly": true,
            "example": 1234
          },
          "isIn": {
            "type": "boolean",
            "readOnly": true,
            "example": true
          },
          "isLcid": {
            "type": "boolean",
            "readOnly": true,
            "example": true
          },
          "isOptional": {
            "type": "boolean",
            "readOnly": true,
            "example": true
          },
          "isOut": {
            "type": "boolean",
            "readOnly": true,
            "example": true
          },
          "isRetval": {
            "type": "boolean",
            "readOnly": true,
            "example": true
          },
          "defaultValue": {
            "nullable": true,
            "readOnly": true,
            "example": {
              "int": 1234,
              "string": "some text",
              "boolean": true
            }
          },
          "rawDefaultValue": {
            "nullable": true,
            "readOnly": true,
            "example": {
              "int": 1234,
              "string": "some text",
              "boolean": true
            }
          },
          "hasDefaultValue": {
            "type": "boolean",
            "readOnly": true,
            "example": true
          },
          "customAttributes": {
            "type": "array",
            "items": {},
            "nullable": true,
            "readOnly": true,
            "example": [
              {
                "int": 1234,
                "string": "some text",
                "boolean": true
              }
            ]
          },
          "metadataToken": {
            "type": "integer",
            "format": "int32",
            "readOnly": true,
            "example": 1234
          }
        },
        "additionalProperties": false
      },
      "System.Reflection.PropertyAttributes": {
        "enum": [
          0,
          512,
          1024,
          4096,
          8192,
          16384,
          32768,
          62464
        ],
        "type": "integer",
        "format": "int32"
      },
      "System.Reflection.PropertyInfo": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "nullable": true,
            "readOnly": true,
            "example": "Chester Baumbach"
          },
          "declaringType": {
            "$ref": "#/components/schemas/System.Type"
          },
          "reflectedType": {
            "$ref": "#/components/schemas/System.Type"
          },
          "module": {
            "$ref": "#/components/schemas/System.Reflection.Module"
          },
          "customAttributes": {
            "type": "array",
            "items": {},
            "nullable": true,
            "readOnly": true,
            "example": [
              {
                "int": 1234,
                "string": "some text",
                "boolean": true
              }
            ]
          },
          "isCollectible": {
            "type": "boolean",
            "readOnly": true,
            "example": true
          },
          "metadataToken": {
            "type": "integer",
            "format": "int32",
            "readOnly": true,
            "example": 1234
          },
          "memberType": {
            "$ref": "#/components/schemas/System.Reflection.MemberTypes"
          },
          "propertyType": {
            "$ref": "#/components/schemas/System.Type"
          },
          "attributes": {
            "$ref": "#/components/schemas/System.Reflection.PropertyAttributes"
          },
          "isSpecialName": {
            "type": "boolean",
            "readOnly": true,
            "example": true
          },
          "canRead": {
            "type": "boolean",
            "readOnly": true,
            "example": true
          },
          "canWrite": {
            "type": "boolean",
            "readOnly": true,
            "example": true
          },
          "getMethod": {
            "$ref": "#/components/schemas/System.Reflection.MethodInfo"
          },
          "setMethod": {
            "$ref": "#/components/schemas/System.Reflection.MethodInfo"
          }
        },
        "additionalProperties": false
      },
      "System.Reflection.TypeAttributes": {
        "enum": [
          0,
          1,
          2,
          3,
          4,
          5,
          6,
          7,
          8,
          16,
          24,
          32,
          128,
          256,
          1024,
          2048,
          4096,
          8192,
          16384,
          65536,
          131072,
          196608,
          262144,
          264192,
          1048576,
          12582912
        ],
        "type": "integer",
        "format": "int32"
      },
      "System.Reflection.TypeInfo": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "nullable": true,
            "readOnly": true,
            "example": "Marianne Collier"
          },
          "customAttributes": {
            "type": "array",
            "items": {},
            "nullable": true,
            "readOnly": true,
            "example": [
              {
                "int": 1234,
                "string": "some text",
                "boolean": true
              }
            ]
          },
          "isCollectible": {
            "type": "boolean",
            "readOnly": true,
            "example": true
          },
          "metadataToken": {
            "type": "integer",
            "format": "int32",
            "readOnly": true,
            "example": 1234
          },
          "isInterface": {
            "type": "boolean",
            "readOnly": true,
            "example": true
          },
          "memberType": {
            "$ref": "#/components/schemas/System.Reflection.MemberTypes"
          },
          "namespace": {
            "type": "string",
            "nullable": true,
            "readOnly": true,
            "example": "some text"
          },
          "assemblyQualifiedName": {
            "type": "string",
            "nullable": true,
            "readOnly": true,
            "example": "some text"
          },
          "fullName": {
            "type": "string",
            "nullable": true,
            "readOnly": true,
            "example": "some text"
          },
          "assembly": {
            "$ref": "#/components/schemas/System.Reflection.Assembly"
          },
          "module": {
            "$ref": "#/components/schemas/System.Reflection.Module"
          },
          "isNested": {
            "type": "boolean",
            "readOnly": true,
            "example": true
          },
          "declaringType": {
            "$ref": "#/components/schemas/System.Type"
          },
          "declaringMethod": {
            "$ref": "#/components/schemas/System.Reflection.MethodBase"
          },
          "reflectedType": {
            "$ref": "#/components/schemas/System.Type"
          },
          "underlyingSystemType": {
            "$ref": "#/components/schemas/System.Type"
          },
          "isTypeDefinition": {
            "type": "boolean",
            "readOnly": true,
            "example": true
          },
          "isArray": {
            "type": "boolean",
            "readOnly": true,
            "example": true
          },
          "isByRef": {
            "type": "boolean",
            "readOnly": true,
            "example": true
          },
          "isPointer": {
            "type": "boolean",
            "readOnly": true,
            "example": true
          },
          "isConstructedGenericType": {
            "type": "boolean",
            "readOnly": true,
            "example": true
          },
          "isGenericParameter": {
            "type": "boolean",
            "readOnly": true,
            "example": true
          },
          "isGenericTypeParameter": {
            "type": "boolean",
            "readOnly": true,
            "example": true
          },
          "isGenericMethodParameter": {
            "type": "boolean",
            "readOnly": true,
            "example": true
          },
          "isGenericType": {
            "type": "boolean",
            "readOnly": true,
            "example": true
          },
          "isGenericTypeDefinition": {
            "type": "boolean",
            "readOnly": true,
            "example": true
          },
          "isSZArray": {
            "type": "boolean",
            "readOnly": true,
            "example": true
          },
          "isVariableBoundArray": {
            "type": "boolean",
            "readOnly": true,
            "example": true
          },
          "isByRefLike": {
            "type": "boolean",
            "readOnly": true,
            "example": true
          },
          "isFunctionPointer": {
            "type": "boolean",
            "readOnly": true,
            "example": true
          },
          "isUnmanagedFunctionPointer": {
            "type": "boolean",
            "readOnly": true,
            "example": true
          },
          "hasElementType": {
            "type": "boolean",
            "readOnly": true,
            "example": true
          },
          "genericTypeArguments": {
            "type": "array",
            "items": {},
            "nullable": true,
            "readOnly": true
          },
          "genericParameterPosition": {
            "type": "integer",
            "format": "int32",
            "readOnly": true,
            "example": 1234
          },
          "genericParameterAttributes": {
            "$ref": "#/components/schemas/System.Reflection.GenericParameterAttributes"
          },
          "attributes": {
            "$ref": "#/components/schemas/System.Reflection.TypeAttributes"
          },
          "isAbstract": {
            "type": "boolean",
            "readOnly": true,
            "example": true
          },
          "isImport": {
            "type": "boolean",
            "readOnly": true,
            "example": true
          },
          "isSealed": {
            "type": "boolean",
            "readOnly": true,
            "example": true
          },
          "isSpecialName": {
            "type": "boolean",
            "readOnly": true,
            "example": true
          },
          "isClass": {
            "type": "boolean",
            "readOnly": true,
            "example": true
          },
          "isNestedAssembly": {
            "type": "boolean",
            "readOnly": true,
            "example": true
          },
          "isNestedFamANDAssem": {
            "type": "boolean",
            "readOnly": true,
            "example": true
          },
          "isNestedFamily": {
            "type": "boolean",
            "readOnly": true,
            "example": true
          },
          "isNestedFamORAssem": {
            "type": "boolean",
            "readOnly": true,
            "example": true
          },
          "isNestedPrivate": {
            "type": "boolean",
            "readOnly": true,
            "example": true
          },
          "isNestedPublic": {
            "type": "boolean",
            "readOnly": true,
            "example": true
          },
          "isNotPublic": {
            "type": "boolean",
            "readOnly": true,
            "example": true
          },
          "isPublic": {
            "type": "boolean",
            "readOnly": true,
            "example": true
          },
          "isAutoLayout": {
            "type": "boolean",
            "readOnly": true,
            "example": true
          },
          "isExplicitLayout": {
            "type": "boolean",
            "readOnly": true,
            "example": true
          },
          "isLayoutSequential": {
            "type": "boolean",
            "readOnly": true,
            "example": true
          },
          "isAnsiClass": {
            "type": "boolean",
            "readOnly": true,
            "example": true
          },
          "isAutoClass": {
            "type": "boolean",
            "readOnly": true,
            "example": true
          },
          "isUnicodeClass": {
            "type": "boolean",
            "readOnly": true,
            "example": true
          },
          "isCOMObject": {
            "type": "boolean",
            "readOnly": true,
            "example": true
          },
          "isContextful": {
            "type": "boolean",
            "readOnly": true,
            "example": true
          },
          "isEnum": {
            "type": "boolean",
            "readOnly": true,
            "example": true
          },
          "isMarshalByRef": {
            "type": "boolean",
            "readOnly": true,
            "example": true
          },
          "isPrimitive": {
            "type": "boolean",
            "readOnly": true,
            "example": true
          },
          "isValueType": {
            "type": "boolean",
            "readOnly": true,
            "example": true
          },
          "isSignatureType": {
            "type": "boolean",
            "readOnly": true,
            "example": true
          },
          "isSecurityCritical": {
            "type": "boolean",
            "readOnly": true,
            "example": true
          },
          "isSecuritySafeCritical": {
            "type": "boolean",
            "readOnly": true,
            "example": true
          },
          "isSecurityTransparent": {
            "type": "boolean",
            "readOnly": true,
            "example": true
          },
          "structLayoutAttribute": {
            "$ref": "#/components/schemas/System.Runtime.InteropServices.StructLayoutAttribute"
          },
          "typeInitializer": {
            "$ref": "#/components/schemas/System.Reflection.ConstructorInfo"
          },
          "typeHandle": {
            "$ref": "#/components/schemas/System.RuntimeTypeHandle"
          },
          "guid": {
            "type": "string",
            "format": "uuid",
            "readOnly": true,
            "example": "75a5f745-f697-4418-b38d-0fe0d277e258"
          },
          "baseType": {
            "$ref": "#/components/schemas/System.Type"
          },
          "isSerializable": {
            "type": "boolean",
            "readOnly": true,
            "example": true,
            "deprecated": true
          },
          "containsGenericParameters": {
            "type": "boolean",
            "readOnly": true,
            "example": true
          },
          "isVisible": {
            "type": "boolean",
            "readOnly": true,
            "example": true
          },
          "genericTypeParameters": {
            "type": "array",
            "items": {},
            "nullable": true,
            "readOnly": true
          },
          "declaredConstructors": {
            "type": "array",
            "items": {},
            "nullable": true,
            "readOnly": true,
            "example": [
              {
                "int": 1234,
                "string": "some text",
                "boolean": true
              }
            ]
          },
          "declaredEvents": {
            "type": "array",
            "items": {},
            "nullable": true,
            "readOnly": true,
            "example": [
              {
                "int": 1234,
                "string": "some text",
                "boolean": true
              }
            ]
          },
          "declaredFields": {
            "type": "array",
            "items": {},
            "nullable": true,
            "readOnly": true,
            "example": [
              {
                "int": 1234,
                "string": "some text",
                "boolean": true
              }
            ]
          },
          "declaredMembers": {
            "type": "array",
            "items": {},
            "nullable": true,
            "readOnly": true,
            "example": [
              {
                "int": 1234,
                "string": "some text",
                "boolean": true
              }
            ]
          },
          "declaredMethods": {
            "type": "array",
            "items": {},
            "nullable": true,
            "readOnly": true,
            "example": [
              {
                "int": 1234,
                "string": "some text",
                "boolean": true
              }
            ]
          },
          "declaredNestedTypes": {
            "type": "array",
            "items": {},
            "nullable": true,
            "readOnly": true,
            "example": [
              {
                "int": 1234,
                "string": "some text",
                "boolean": true
              }
            ]
          },
          "declaredProperties": {
            "type": "array",
            "items": {},
            "nullable": true,
            "readOnly": true,
            "example": [
              {
                "int": 1234,
                "string": "some text",
                "boolean": true
              }
            ]
          },
          "implementedInterfaces": {
            "type": "array",
            "items": {},
            "nullable": true,
            "readOnly": true,
            "example": [
              {
                "int": 1234,
                "string": "some text",
                "boolean": true
              }
            ]
          }
        },
        "additionalProperties": false
      },
      "System.Runtime.InteropServices.LayoutKind": {
        "enum": [
          0,
          2,
          3
        ],
        "type": "integer",
        "format": "int32"
      },
      "System.Runtime.InteropServices.StructLayoutAttribute": {
        "type": "object",
        "properties": {
          "typeId": {
            "nullable": true,
            "readOnly": true,
            "example": {
              "int": 1234,
              "string": "some text",
              "boolean": true
            }
          },
          "value": {
            "$ref": "#/components/schemas/System.Runtime.InteropServices.LayoutKind"
          }
        },
        "additionalProperties": false
      },
      "System.RuntimeFieldHandle": {
        "type": "object",
        "properties": {
          "value": {
            "$ref": "#/components/schemas/System.IntPtr"
          }
        },
        "additionalProperties": false
      },
      "System.RuntimeMethodHandle": {
        "type": "object",
        "properties": {
          "value": {
            "$ref": "#/components/schemas/System.IntPtr"
          }
        },
        "additionalProperties": false
      },
      "System.RuntimeTypeHandle": {
        "type": "object",
        "properties": {
          "value": {
            "$ref": "#/components/schemas/System.IntPtr"
          }
        },
        "additionalProperties": false
      },
      "System.Security.SecurityRuleSet": {
        "enum": [
          0,
          1,
          2
        ],
        "type": "integer",
        "format": "int32"
      },
      "System.Type": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "nullable": true,
            "readOnly": true,
            "example": "Clark Mills"
          },
          "customAttributes": {
            "type": "array",
            "items": {},
            "nullable": true,
            "readOnly": true,
            "example": [
              {
                "int": 1234,
                "string": "some text",
                "boolean": true
              }
            ]
          },
          "isCollectible": {
            "type": "boolean",
            "readOnly": true,
            "example": true
          },
          "metadataToken": {
            "type": "integer",
            "format": "int32",
            "readOnly": true,
            "example": 1234
          },
          "isInterface": {
            "type": "boolean",
            "readOnly": true,
            "example": true
          },
          "memberType": {
            "$ref": "#/components/schemas/System.Reflection.MemberTypes"
          },
          "namespace": {
            "type": "string",
            "nullable": true,
            "readOnly": true,
            "example": "some text"
          },
          "assemblyQualifiedName": {
            "type": "string",
            "nullable": true,
            "readOnly": true,
            "example": "some text"
          },
          "fullName": {
            "type": "string",
            "nullable": true,
            "readOnly": true,
            "example": "some text"
          },
          "assembly": {
            "$ref": "#/components/schemas/System.Reflection.Assembly"
          },
          "module": {
            "$ref": "#/components/schemas/System.Reflection.Module"
          },
          "isNested": {
            "type": "boolean",
            "readOnly": true,
            "example": true
          },
          "declaringType": {
            "$ref": "#/components/schemas/System.Type"
          },
          "declaringMethod": {
            "$ref": "#/components/schemas/System.Reflection.MethodBase"
          },
          "reflectedType": {
            "$ref": "#/components/schemas/System.Type"
          },
          "underlyingSystemType": {
            "$ref": "#/components/schemas/System.Type"
          },
          "isTypeDefinition": {
            "type": "boolean",
            "readOnly": true,
            "example": true
          },
          "isArray": {
            "type": "boolean",
            "readOnly": true,
            "example": true
          },
          "isByRef": {
            "type": "boolean",
            "readOnly": true,
            "example": true
          },
          "isPointer": {
            "type": "boolean",
            "readOnly": true,
            "example": true
          },
          "isConstructedGenericType": {
            "type": "boolean",
            "readOnly": true,
            "example": true
          },
          "isGenericParameter": {
            "type": "boolean",
            "readOnly": true,
            "example": true
          },
          "isGenericTypeParameter": {
            "type": "boolean",
            "readOnly": true,
            "example": true
          },
          "isGenericMethodParameter": {
            "type": "boolean",
            "readOnly": true,
            "example": true
          },
          "isGenericType": {
            "type": "boolean",
            "readOnly": true,
            "example": true
          },
          "isGenericTypeDefinition": {
            "type": "boolean",
            "readOnly": true,
            "example": true
          },
          "isSZArray": {
            "type": "boolean",
            "readOnly": true,
            "example": true
          },
          "isVariableBoundArray": {
            "type": "boolean",
            "readOnly": true,
            "example": true
          },
          "isByRefLike": {
            "type": "boolean",
            "readOnly": true,
            "example": true
          },
          "isFunctionPointer": {
            "type": "boolean",
            "readOnly": true,
            "example": true
          },
          "isUnmanagedFunctionPointer": {
            "type": "boolean",
            "readOnly": true,
            "example": true
          },
          "hasElementType": {
            "type": "boolean",
            "readOnly": true,
            "example": true
          },
          "genericTypeArguments": {
            "type": "array",
            "items": {},
            "nullable": true,
            "readOnly": true
          },
          "genericParameterPosition": {
            "type": "integer",
            "format": "int32",
            "readOnly": true,
            "example": 1234
          },
          "genericParameterAttributes": {
            "$ref": "#/components/schemas/System.Reflection.GenericParameterAttributes"
          },
          "attributes": {
            "$ref": "#/components/schemas/System.Reflection.TypeAttributes"
          },
          "isAbstract": {
            "type": "boolean",
            "readOnly": true,
            "example": true
          },
          "isImport": {
            "type": "boolean",
            "readOnly": true,
            "example": true
          },
          "isSealed": {
            "type": "boolean",
            "readOnly": true,
            "example": true
          },
          "isSpecialName": {
            "type": "boolean",
            "readOnly": true,
            "example": true
          },
          "isClass": {
            "type": "boolean",
            "readOnly": true,
            "example": true
          },
          "isNestedAssembly": {
            "type": "boolean",
            "readOnly": true,
            "example": true
          },
          "isNestedFamANDAssem": {
            "type": "boolean",
            "readOnly": true,
            "example": true
          },
          "isNestedFamily": {
            "type": "boolean",
            "readOnly": true,
            "example": true
          },
          "isNestedFamORAssem": {
            "type": "boolean",
            "readOnly": true,
            "example": true
          },
          "isNestedPrivate": {
            "type": "boolean",
            "readOnly": true,
            "example": true
          },
          "isNestedPublic": {
            "type": "boolean",
            "readOnly": true,
            "example": true
          },
          "isNotPublic": {
            "type": "boolean",
            "readOnly": true,
            "example": true
          },
          "isPublic": {
            "type": "boolean",
            "readOnly": true,
            "example": true
          },
          "isAutoLayout": {
            "type": "boolean",
            "readOnly": true,
            "example": true
          },
          "isExplicitLayout": {
            "type": "boolean",
            "readOnly": true,
            "example": true
          },
          "isLayoutSequential": {
            "type": "boolean",
            "readOnly": true,
            "example": true
          },
          "isAnsiClass": {
            "type": "boolean",
            "readOnly": true,
            "example": true
          },
          "isAutoClass": {
            "type": "boolean",
            "readOnly": true,
            "example": true
          },
          "isUnicodeClass": {
            "type": "boolean",
            "readOnly": true,
            "example": true
          },
          "isCOMObject": {
            "type": "boolean",
            "readOnly": true,
            "example": true
          },
          "isContextful": {
            "type": "boolean",
            "readOnly": true,
            "example": true
          },
          "isEnum": {
            "type": "boolean",
            "readOnly": true,
            "example": true
          },
          "isMarshalByRef": {
            "type": "boolean",
            "readOnly": true,
            "example": true
          },
          "isPrimitive": {
            "type": "boolean",
            "readOnly": true,
            "example": true
          },
          "isValueType": {
            "type": "boolean",
            "readOnly": true,
            "example": true
          },
          "isSignatureType": {
            "type": "boolean",
            "readOnly": true,
            "example": true
          },
          "isSecurityCritical": {
            "type": "boolean",
            "readOnly": true,
            "example": true
          },
          "isSecuritySafeCritical": {
            "type": "boolean",
            "readOnly": true,
            "example": true
          },
          "isSecurityTransparent": {
            "type": "boolean",
            "readOnly": true,
            "example": true
          },
          "structLayoutAttribute": {
            "$ref": "#/components/schemas/System.Runtime.InteropServices.StructLayoutAttribute"
          },
          "typeInitializer": {
            "$ref": "#/components/schemas/System.Reflection.ConstructorInfo"
          },
          "typeHandle": {
            "$ref": "#/components/schemas/System.RuntimeTypeHandle"
          },
          "guid": {
            "type": "string",
            "format": "uuid",
            "readOnly": true,
            "example": "75a5f745-f697-4418-b38d-0fe0d277e258"
          },
          "baseType": {
            "$ref": "#/components/schemas/System.Type"
          },
          "isSerializable": {
            "type": "boolean",
            "readOnly": true,
            "example": true,
            "deprecated": true
          },
          "containsGenericParameters": {
            "type": "boolean",
            "readOnly": true,
            "example": true
          },
          "isVisible": {
            "type": "boolean",
            "readOnly": true,
            "example": true
          }
        },
        "additionalProperties": false
      }
    },
    "securitySchemes": {
      "asc_auth_key": {
        "type": "apiKey",
        "name": "asc_auth_key",
        "in": "cookie"
      }
    }
  },
  "tags": [
    {
      "name": "Authentication",
      "description": "Operations for authenticating users."
    },
    {
      "name": "Capabilities",
      "description": "Operations for getting information about portal capabilities."
    },
    {
      "name": "Migration",
      "description": "Operations for performing migration."
    },
    {
      "name": "Modules",
      "description": "Operations for getting information about portal modules."
    },
    {
      "name": "Portal / Quota",
      "description": "Operations for getting information about portal quota."
    },
    {
      "name": "Portal / Settings",
      "description": "Operations for getting information about portal settings."
    },
    {
      "name": "Portal / Users",
      "description": "Operations for getting information about portal users."
    },
    {
      "name": "Security / Active connections",
      "description": "Operations for working with active connections."
    },
    {
      "name": "Security / Audit trail data",
      "description": "Operations for working with audit trail data."
    },
    {
      "name": "Security / CSP",
      "description": "Operations for working with CSP."
    },
    {
      "name": "Security / Firebase",
      "description": "Operations for working with Firebase."
    },
    {
      "name": "Security / Login history",
      "description": "Operations for getting login history."
    },
    {
      "name": "Security / SMTP settings",
      "description": "Operations for working with SMTP settings."
    },
    {
      "name": "Settings / Authorization",
      "description": "Operations for working with authorization settings."
    },
    {
      "name": "Settings / Common settings",
      "description": "Operations for working with common settings."
    },
    {
      "name": "Settings / Cookies",
      "description": "Operations for working with cookies settings."
    },
    {
      "name": "Settings / Custom Navigation",
      "description": "Operations for working with custom navigation settings."
    },
    {
      "name": "Settings / Encryption",
      "description": "Operations for working with encryption settings."
    },
    {
      "name": "Settings / Greeting settings",
      "description": "Operations for working with greeting settings."
    },
    {
      "name": "Settings / IP restrictions",
      "description": "Operations for working with IP restriction settings."
    },
    {
      "name": "Settings / License",
      "description": "Operations for working with license settings."
    },
    {
      "name": "Settings / Login settings",
      "description": "Operations for working with login settings."
    },
    {
      "name": "Settings / Messages",
      "description": "Operations for working with message settings."
    },
    {
      "name": "Settings / Notifications",
      "description": "Operations for working with notification settings."
    },
    {
      "name": "Settings / Owner",
      "description": "Operations for working with owner settings."
    },
    {
      "name": "Settings / Quota",
      "description": "Operations for working with quota settings."
    },
    {
      "name": "Settings / Rebranding",
      "description": "Operations for working with rebranding settings."
    },
    {
      "name": "Settings / Security",
      "description": "Operations for working with security settings."
    },
    {
      "name": "Settings / SSO",
      "description": "Operations for working with SSO settings."
    },
    {
      "name": "Settings / Statistics",
      "description": "Operations for working with statistics settings."
    },
    {
      "name": "Settings / Storage",
      "description": "Operations for working with storage settings."
    },
    {
      "name": "Settings / Team templates",
      "description": "Operations for working with team template settings."
    },
    {
      "name": "Settings / TFA settings",
      "description": "Operations for working with TFA settings."
    },
    {
      "name": "Settings / Tips",
      "description": "Operations for working with tip settings."
    },
    {
      "name": "Settings / Webhooks",
      "description": "Operations for working with webhook settings."
    },
    {
      "name": "Settings / Webplugins",
      "description": "Operations for working with webplugin settings."
    }
  ]
}